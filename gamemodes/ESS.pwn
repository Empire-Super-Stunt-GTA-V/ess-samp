#if defined Header
--------------------------------------------------------------------------------
================================================================================
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ HEADER \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
================================================================================
--------------------------------------------------------------------------------
|--------   |--------|   |--------| - Empire Super Stunt - V2
|           |            |
|           |            |
|--------   |--------|   |--------| - Developed by Johnny & Ghost
|                    |            |
|                    |            |
|--------   |--------|   |--------| - And scripted by Johnny & Ghost
--------------------------------------------------------------------------------
================================================================================
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ END \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
================================================================================
--------------------------------------------------------------------------------
#endif
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//-> Includes
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#include												 	<a_samp>
#include												 	<a_http>
#include                                                 	<a_actor>
#include 												 	<a_mysql>
#include 												 	<dini>
#include 												 	<foreach>
#include 												 	<sscanf2>
#include 												 	<streamer>
#include 												 	<zcmd>
#include                                                 	<mSelection>
#include                                                 	<CPLoader>
#include                                                 	<rvm>
#include 											     	<gvar>
#include                                                 	<mapandreas>
#include                                                    <md5>
#include                                                    <AntiCleo>
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#undef 	MAX_PLAYERS
#define MAX_PLAYERS     50
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
main() { }
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#pragma dynamic 145000
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Server Info's
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define SERVER_GM               						"Stunt/Drift/Race/DM/Fun"
#define SERVER_MAP										"San Andreas"
#define SERVER_RCON                                     "xYanPhsTyaBF@123!@2915D"
#define SERVER_PASSWORD                                 "revenim123"
#define SERVER_LANGUAGE                                 "Romana/English"
#define SERVER_WEBSITE             						"ess-ro.com"
#define SERVER_NAME             						"{0072FF}Empire {FFFF00}Super {FF0000}Stunt"
#define SERVER_NAME2                                    "Empire Super Stunt"
#define SERVER_IP                                       "93.114.82.236:7777"
#define SAMP_VERSION                                    "0.3.7-R4"
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Server HostName's
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define SV_HOSTNAME1            						"Empire Super Stunt - Join Us!"
#define SV_HOSTNAME2            						"Empire Super Stunt - Let's Play!"
#define SV_HOSTNAME3            						"Empire Super Stunt - www.ess-ro.com!"
#define SV_HOSTNAME4            						"Empire Super Stunt - New Updates!"
#define SV_HOSTNAME5            						"Empire Super Stunt - Check /News!"
#define SV_HOSTNAME6            						"Empire Super Stunt - /Jobs - Win VIP GOLD"
#define SV_HOSTNAME7                                    "Empire Super Stunt - VIP Free /BuyVIP!"
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define DATABASE 1 // (Types: 1 = Get data from Gamemode | 2 = Get data from Webhost
new SV_DATABASE_TYPE = DATABASE;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new hostname[128];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define BulletCrasher -5.5
#define InvalidSeat1 -1000000.0
#define InvalidSeat2 1000000.0
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> FallOut Minigame
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define FALLOUT_PLATFORMS 64
new PlatformObject[FALLOUT_PLATFORMS];
new FalloutStatusPlatform[FALLOUT_PLATFORMS];
new FalloutStarted = 0, FalloutPlayers = 0, FalloutTimer[3];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new GangInfoEdit[MAX_PLAYERS];
new EditingSpawnZoneID[MAX_PLAYERS], EditingSpawnCP[MAX_PLAYERS], EditingSpawnCPA[MAX_PLAYERS], EditingSpawnZone[MAX_PLAYERS];
new EditingAdminName[MAX_PLAYERS][24], EditingAdminLevel[MAX_PLAYERS];
new Text3D:PlayerRank[MAX_PLAYERS];
new RconTextAll[3][] = { "Manager", "Support", "Rcon" };
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new TeleportCmd[MAX_PLAYERS][20], TeleportName[MAX_PLAYERS][20];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Player Clan Variables
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new pClanName[MAX_PLAYERS][30];
new pClanSkin[MAX_PLAYERS];
new pClanColor[MAX_PLAYERS];
new pClanWeapon[MAX_PLAYERS][6];
new pClanSince[MAX_PLAYERS][30];
new PlayerText:Terry1, PlayerText:Terry2, PlayerText:Terry3, PlayerText:Terry4;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Skate System
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define INDEX_SKATE (0)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Jizzy Jump Position (Prize)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define JJ_1 -2839.7666,1368.5054,143.4078
#define JJ_2 -2839.8774,1380.5231,143.3887
#define JJ_3 -2840.1768,1392.5098,143.3372
#define JJ_4 -2840.6516,1403.8955,143.2554
#define JJ_5 -2841.4790,1415.3534,143.2263
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Server Protection
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new ServerProtection; // Protectie
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new Float:TerryData[MAX_PLAYERS][4], OnTerryEdit[MAX_PLAYERS], TerryEditStage[MAX_PLAYERS];
new TerryEditTimer[MAX_PLAYERS], Float:NewTerryPos[MAX_PLAYERS][4];
new GangBaseEdit[MAX_PLAYERS], GangCameraEdit[MAX_PLAYERS], Float:GangCameraEditPos[MAX_PLAYERS][6];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new Float:CPPos[MAX_PLAYERS][3], Float:CPPosTo[MAX_PLAYERS][3], CPPosText[MAX_PLAYERS][30];
new InCheckPointEdit[MAX_PLAYERS], OnGangEdit[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new SelectBug[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new DJArtist[MAX_PLAYERS][50], DJLink[MAX_PLAYERS][100];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new TextVehicleCase[MAX_PLAYERS], VehicleCaseForText[MAX_PLAYERS], EditingObject[MAX_PLAYERS];
new VehicleIDEdit[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new IsPlayerLogged[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> For Santaland
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define MAX_SLOTS           1000
#define MAX_SNOW_OBJECTS    8
#define UPDATE_INTERVAL     750
#define ploop(%0)           for(new %0 = 0; %0 < MAX_SLOTS; %0++) if(IsPlayerConnected(%0))
#define CB:%0(%1)           forward %0(%1); public %0(%1)
new bool:snowOn[MAX_SLOTS char], snowObject[MAX_SLOTS][MAX_SNOW_OBJECTS], updateTimer[MAX_SLOTS char];
new oldskin[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Exit from rc vehicles santaland
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define MAX_GRINCH_OBJECTS                                                  31
#define MAX_SANTALOTTERY                                                    10
#define COLOR_SANTALAND                                             (0xFFEE00AA)
new SantaIce, SantaToyCars, Text3D:SantaToyCarText, SantaToyCarPickup, SantaLottery,
	SantaLotteryGift, SantaLotteryPickups[10], SantaHousePickups, SantaHouseInfo[3],
	SantaGrinchInfo, SantaGrinchWeapon[3], GrinchObj[31], GrinchHealth, Text3D:GrinchText,
    CrinchColor[7], Float:SantaToyCarPos[3]
;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Santa Land Houses
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define SANTA_HOUSE1                                -509.5902,3578.5178,6.4381
#define SANTA_HOUSE2                                -528.7824,3593.0024,6.8722
#define SANTA_HOUSE3                                -544.0605,3596.6458,5.7700
#define SANTA_HOUSE4                                -568.9117,3599.6052,6.4052
#define SANTA_HOUSE5                                -576.4744,3581.4839,5.9948
#define SANTA_HOUSE6                                -577.8287,3561.1792,6.8723
#define SANTA_HOUSE7                                -576.0687,3537.8560,5.9948
#define SANTA_HOUSE8                                -569.1118,3521.6868,6.4381
#define SANTA_HOUSE9                                -546.7175,3523.9180,6.2567
#define SANTA_HOUSE10                               -531.0844,3526.4502,6.8724
#define SANTA_HOUSE11                               -509.2415,3542.4097,6.4381
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Spring Quest
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define SPRING_QUEST_TELEPORT              			3767.8530,2245.2712,10.1792,183.4237
#define START_QUEST_ZONE                            3765.3206,2236.4067,10.6476
#define SELL_QUEST_APPLE                            3326.5000,2015.0963,10.9352
#define QUEST_WOOD_1                                3811.0366,2284.2422,10.1792
#define QUEST_WOOD_2                                3830.8616,2283.8716,10.1792
#define QUEST_WOOD_3                                3847.0322,2283.5662,10.1792
#define QUEST_WOOD_4                                3866.0691,2283.2095,10.1792
#define QUEST_WOOD_5                                3812.8792,2258.3896,10.1792
#define QUEST_WOOD_6                                3833.8301,2257.9932,10.1792
#define QUEST_WOOD_7                                3850.9377,2257.6731,10.1792
#define QUEST_WOOD_8                                3866.9375,2257.3733,10.1792
#define QUEST_WOOD_9                                3814.5603,2234.1152,10.1792
#define QUEST_WOOD_10                               3825.8770,2234.2410,10.1792
#define QUEST_WOOD_11                               3837.8511,2234.3752,10.1792
#define QUEST_WOOD_12                               3851.0977,2234.5215,10.1792
#define QUEST_WOOD_13                               3866.3767,2235.0237,10.1792
#define QUEST_SELLER_SHOP_1                         3329.9326,2015.9865,10.9352
#define QUEST_SELLER_SHOP_2                         2865.8782,2430.1072,11.0690
#define QUEST_SELLER_SHOP_3                         2780.7715,2448.2600,11.0625
#define QUEST_SELLER_SHOP_4                         2467.3762,2038.4017,10.8081
#define QUEST_SELLER_SHOP_5                         2078.4006,2040.0078,10.8108
#define QUEST_SELLER_SHOP_6                         1313.8263,-910.7866,38.2858
#define QUEST_SELLER_SHOP_7                         1490.7156,-1565.6250,13.5408
#define QUEST_SELLER_SHOP_8                         1356.0298,-1755.3800,13.4204
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define WORLD_BOUND_DEFAULT        		20000.0000,-20000.0000,20000.0000,-20000.0000
#define WORLD_BOUND_HNS             	5442.1816,5207.5293,-1331.8228,-1557.3551
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> For Jobs
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define MAX_JOBS 10
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Random Server Announcement's
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new RandomMSG[][] =
{
    "~y~~h~Do you like DM ?~n~~r~~h~/OS, /MG, /MRF ~b~~h~/DM!",
    "~y~~h~You think you are a Racer ?~n~~r~~h~/Race!",
    "~y~~h~You need a vehicle ?~n~~r~~h~/v, /car!",
    "~y~~h~Do you want to be a special player ?~n~~r~~h~/BuyVIP!",
    "~y~~h~Do you want a clan to create your team ?~n~~r~~h~/CreateClan!",
    "~y~~h~Do you want to see the top players ?~n~~r~~h~/Top!",
    "~y~~h~Have you seen any player who is cheating ?~n~~r~~h~/Report!",
    "~y~~h~Do not know the commands on the server ?~n~~r~~h~/Help!",
	"~w~~h~www.~r~~h~ess-ro~w~~h~.com"
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Server Colors for "SCM" function
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define LIME     													(0x00FF00AA)
#define GREY2                       								(0xD1D1D1AA)
#define INDIGO                      								(0xFF00FFAA)
#define GREY 														(0xAFAFAFAA)
#define ABLUE						 								(0x375FFFAA)
#define YELLOW 														(0xFFFF00AA)
#define RED 													    (0xFF0000AA)
#define BLUE 														(0x0000BBAA)
#define ORANGE 														(0xFF9900AA)
#define PURPLE 														(0x9900FFAA)
#define PINK 														(0xFFC0CBAA)
#define GREEN                										(0x00FF00AA)
#define GRAY               											(0xC0C0C0AA)
#define WHITE              											(0xFFFFFFAA)
#define BLACK 		 												(0x2C2727AA)
#define BROWN	 													(0xA52A2AAA)
#define GREEN2                      								(0x05C81FAA)
#define GREEN3                                                      (0x33AA33AA)
#define USAGE                                                       (0x49FFFFAA)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Jobs
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new JobVehicle[MAX_PLAYERS], JobVehicle2[MAX_PLAYERS], JobTrailer[MAX_PLAYERS], FarmerCP[MAX_PLAYERS],
	TruckerCP[MAX_PLAYERS], TruckerStep[MAX_PLAYERS], TruckerRoute[MAX_PLAYERS], CarToTheft[MAX_PLAYERS],
	RobberCP[MAX_PLAYERS], CarTheftID[MAX_PLAYERS], Savant[MAX_PLAYERS], HitmanCP[MAX_PLAYERS],
	QuarryCP[MAX_PLAYERS], TaxiCP[MAX_PLAYERS], Dealer, DealerCP[MAX_PLAYERS], GlovoCP[MAX_PLAYERS],
	DBuyer[MAX_PLAYERS][7];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new StartedRainbow[MAX_PLAYERS], VehicleRainbow[MAX_PLAYERS];
new RequestClassMap[25];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new TreeHouseLift, Text3D:TreeHouseText[2], LiftState;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new Float:TruckerPos[15][3] =
{
	{2881.4380, 2423.8945, 10.8605},
	{1477.2136, 2366.1448, 10.8537},
	{-2637.3337, 1359.4601, 7.0420},
	{2557.0935, -2407.1753, 13.7271},
	{-573.4742, -1063.7534, 23.5106},
	{-1010.4310, -605.2584, 31.9820},
	{-1990.8043, 142.1562, 27.5177},
	{-2794.5281, 787.3508, 49.4126},
	{-2465.8809, 2233.2749, 4.8305},
	{1701.0950, -1514.9611, 13.3433},
	{-314.3062, 2679.7949, 62.5505},
	{1712.6136, 1454.0483, 10.7662},
	{2223.4377, -1338.4004, 23.9100},
	{2822.0254, 910.9764, 10.7594},
	{-2076.6067, -2540.0500, 30.4246}
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Jobs Locations Working
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
static const LocationsName[][256] =
{
	{"Creek (LV)"},
	{"Pilson Intersection (LV)"},
	{"Battery Point (SF)"},
	{"Ocean Docks (LS)"},
	{"Whetstone (SF)"},
	{"Flint County (SF)"},
	{"Doherty (SF)"},
	{"Palisades (SF)"},
	{"Bayside (SF)"},
	{"Commerce (LS)"},
	{"Las Payasadas (LV)"},
	{"Las Venturas Airport (LV)"},
	{"East Los Santos (LS)"},
	{"Linden Side (LV)"},
	{"Angel Pine (SF)"}
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new CountPlayersInWar, WarVeh[7];
new CountPlayersInNascar, NascarVeh[MAX_PLAYERS], NascarWinner, CPNascar[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new DuelPlayerInvite, DuelInviter;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Derby
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new Float:DerbyCars[15][4] =
{
	{-1362.9799,932.8219,1036.0580,9.0890}, 	// 0
	{-1346.4526,935.4996,1036.0889,13.6811}, 	// 1
	{-1335.6995,938.2600,1036.1177,16.8043}, 	// 2
	{-1320.8756,944.9904,1036.2062,27.0307}, 	// 3
	{-1306.8385,953.5919,1036.3212,37.8366}, 	// 4
	{-1353.9670,934.0486,1036.2421,11.5836}, 	// 5
	{-1328.6377,941.0197,1036.3208,18.9670}, 	// 6
	{-1313.9012,948.6513,1036.4198,29.5596}, 	// 7
	{-1501.0956,960.3203,1036.9474,313.0457},	// 8
	{-1506.8105,968.1082,1037.0840,304.3027}, 	// 9
	{-1513.0317,976.8713,1037.2457,301.9500}, 	// 10
	{-1516.0858,988.2343,1037.4362,274.5044}, 	// 11
	{-1517.6569,995.6628,1037.5626,272.2782}, 	// 12
	{-1515.1127,1004.8807,1037.6969,262.3869}, 	// 13
	{-1510.7020,1014.6202,1037.8568,249.1825} 	// 14
};
new DerbyOn, DerbyPlaying, BloodringFull[15], Bloodring[15], DerbyCount,
	CheckDerby, CountPlayersInDerby;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Sky Climb
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new PlayerText3D:skyclimb3Dtext[13], SkyClimbPickup, SkyClimbTimer[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//-> Events Dialogs | /Event
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define Question_D                											1100
#define WhoSayFirst_D               										2200
#define WhoMakeMostKills_D              									3300
#define SkyClimbEvent_D              										4400
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Others Dialogs
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define BUYVIP_D                                                            2000
#define Holds_D                                                             3000
#define PCar_D                                                              4000
#define DIALOG_GSETTINGS                                                    5000
#define DUEL_D                                                              6000
#define DIALOG_CMDS                                                         7000
#define D_NEWS                                                              8000
#define DIALOG_EDITPLAYER                                                   9000
#define DIALOG_BUY_CAR                                                      9600
#define DIALOG_HELP_SELECTION                                               9900
#define DIALOG_CLAN_SETTINGS                                               10000
#define DIALOG_VEHICLES                									   10090
#define DIALOG_SPECIAL_VEHICLES              							   10100
#define DIALOG_CLAN_MEMBERS                                                10200
#define DIALOG_UPGRADE_VEHICLE                                             10300
#define DIALOG_HOUSE_OPTIONS                                               10400
#define DIALOG_HOUSE_INTERIOR_CHANGE2                                      10500
#define DIALOG_PROPERTY                                                    10600
#define DIALOG_VEHICLE_SETTINGS                                            10700
#define DIALOG_UPGRADE_RAINBOW_VEHICLE                                     10800
#define DIALOG_BUYCAR                                                      10900
#define DIALOG_SELECT_VEHICLE                                              11000
#define DIALOG_BUYVEHICLE                                                  11100
#define DIALOG_CONFIG                                                      11200
#define DIALOG_SKIN                                                        11300
#define DIALOG_DJ_STUDIO                                                   11400
#define DIALOG_TOP_CLANS                                                   11500
#define DIALOG_EDITGANG                                                    11600
#define DIALOG_TOP_GANGS                                                   11700
#define DIALOG_FIX_BUG                                                     11800
#define DIALOG_GWAR                                                        11900
#define DIALOG_XMAS                                                        12000
#define DIALOG_SANTALAND                                                   12100
#define DIALOG_LOTTERY                                                     12200
#define DIALOG_GANG                                                        12300
#define DIALOG_CRATE                                                       12400
#define DIALOG_BASE_TELEPORT                                               12500
#define DIALOG_QUESTS                                                      12600
#define Race_D 															   12700
#define DIALOG_MANAGE_ADMINS                                               12800
#define TELEPORT_CREATE_D                                                  12900
#define DIALOG_LOGIN_TWO_AUTH                                              13000
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new Pont[MAX_PLAYERS], Pont2[MAX_PLAYERS], PlayerNeon[MAX_PLAYERS], GiveProtection[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new Cars[12] = mS_INVALID_LISTID;
new v_bycikles = mS_INVALID_LISTID;
new	v_bikes = mS_INVALID_LISTID;
new	v_mtrucks = mS_INVALID_LISTID;
new	v_boats = mS_INVALID_LISTID;
new	v_helicopters = mS_INVALID_LISTID;
new	v_planes = mS_INVALID_LISTID;
new	v_rcs = mS_INVALID_LISTID;
new InfernusTuning[MAX_PLAYERS][7];
new	Elegy[MAX_PLAYERS][3];
new	MacheteTunning[MAX_PLAYERS][7];
new	HummerTunning[MAX_PLAYERS][6];
new	BMWTunning[MAX_PLAYERS][9];
new	SunrisePol[MAX_PLAYERS][4];
new	VBObj[MAX_PLAYERS][6];
new	VTObj[MAX_PLAYERS][8];
new	VHObj[MAX_PLAYERS][8];
new	bpcar[MAX_PLAYERS][16];
new	VCObj[MAX_PLAYERS][6];
new	ABObj[MAX_PLAYERS][10];
new	ACObj[MAX_PLAYERS][14];
new	Saddler[MAX_PLAYERS][8];
new	BurritoTuning[MAX_PLAYERS][6];
new	SultanTaxi[MAX_PLAYERS][4];
new	StratumTuning[MAX_PLAYERS][7];
new c_weapons[6] = mS_INVALID_LISTID;
new mskinlist = mS_INVALID_LISTID;
new skinss = mS_INVALID_LISTID;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new bool:SpecialCar[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new Float:S_Position[MAX_PLAYERS][4];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define Trade                               44
#define MAX_HOLDS                           10
#define CONTEST_MATH 						(0)
#define CONTEST_TYPE 						(1)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define ESS playerid, params[]
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define SCM SendClientMessage
#define SPD ShowPlayerDialog
#define SCMALL SendClientMessageToAll
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define LIST DIALOG_STYLE_LIST
#define MSGBOX DIALOG_STYLE_MSGBOX
#define INPUT DIALOG_STYLE_INPUT
#define PASS DIALOG_STYLE_PASSWORD
#define HEADERS DIALOG_STYLE_TABLIST_HEADERS
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define CACHE cache_get_value_int
#define FLOAT cache_get_value_float
#define CONTENT cache_get_value_name
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define MSG(%0,%1,%2,%3) do{ eString[0] = EOS; format(eString, sizeof(eString), (%2), %3); SCM((%0),(%1), eString); }while(False)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Trade
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define MAX_TRADE 10
#define MAX_TRADE_STRING 256
#define DIALOG_TRADE 1024
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new SellName[MAX_PLAYERS][MAX_TRADE][MAX_TRADE_STRING];
new BuyName[MAX_PLAYERS][MAX_TRADE][MAX_TRADE_STRING];
new SellOption[MAX_PLAYERS][MAX_TRADE];
new BuyOption[MAX_PLAYERS][MAX_TRADE];
new SellAmount[MAX_PLAYERS][MAX_TRADE];
new BuyAmount[MAX_PLAYERS][MAX_TRADE];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new HideTag[MAX_PLAYERS];
new shotTime[MAX_PLAYERS];
new shot[MAX_PLAYERS];
new PlayerText:InfosTD;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Gold Pot
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new Float:GPPos[3], GoldPotFound=1, GoldPotLocation[50];
new GOLDPOTTIMER, 	GPRIZE[3], 		SGoldP[128];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum GoldpotInfo
{
    Float:GPXPOS,
    Float:GPYPOS,
    Float:GPZPOS,
    GPPosition[100]
};
new Float:GPSPAWN[][GoldpotInfo] =
{
	{1937.4636,-2361.4460,21.1369, "Los Santos Airport"},
	{1359.9862,1505.4540,45.2797, "Las Venturas Airport"},
	{-1278.3353,49.4676,13.8755, "San Fierro Airport"},
	{-2025.9376,83.8682,28.0160, "Fire Dept - San Fierro"},
	{-1753.7069,885.7668,295.8750, "Big Pointy Building - San Fierro"},
	{1835.5208,-1682.6647,12.9617, "Alhambra - Los Santos"},
	{1918.9445,-1414.3654,13.1268, "Skate Park - Los Santos"},
	{1881.8644,-1314.9628,14.0652, "Unfinished Building Near Skate Park - Los Santos"},
	{2029.4133,-1404.1167,16.8243, "County General Hospital - Los Santos"},
	{1971.5345,-1196.0419,17.4500, "Lake In A Park - Los Santos"},
	{1415.4343,-810.5200,74.9087, "VINEWOOD - Los Santos"},
	{1298.2969,-798.1028,83.7033, "Maddog's - Los Santos"},
	{1285.6399,-1156.3510,23.8281, "Movie Stars - Los Santos"},
	{811.2444,-1098.5168,25.9063, "Graveyard - Los Santos"},
	{1087.9865,-922.7635,42.9619, "Sex Shop - Los Santos"},
	{1058.5283,-941.3829,42.5121, "Quite Humourous Comedy Club - Los Santos"},
	{756.0792,-1261.4366,13.1194, "Tennis Court - Los Santos"},
	{542.5836,-1292.3295,16.8007, "Grotti's - Los Santos"},
	{475.5581,-1279.2805,16.0575, "Vinyl Countdown - Los Santos"},
	{461.6343,-1500.9377,30.6217, "Victim To Die For - Los Santos"},
	{488.1684,-1733.6770,10.7457, "Verona Beach Pay 'n' Spray - Los Santos"},
	{674.3853,-1867.1614,5.0312, "Beach GYM - Los Santos"},
	{431.7024,-1751.3900,8.3387, "Son Of A Beach T-Shirts 'n' Shits - Los Santos"},
	{386.9139,-2028.4971,7.3997, "Ferris Wheel - Los Santos"},
	{1554.5275,-1675.6545,15.7660, "LSPD - Los Santos"},
	{1786.7144,-1304.6896,13.1746, "Flats - Los Santos"},
	{2354.6982,-648.9710,127.6280, "Abandoned Wooden Shack - Los Santos"},
	{2695.6931,-1704.7502,11.8438, "Forum - Los Santos"},
	{2231.4314,-2284.2407,14.3751, "Trailer Park - Los Santos"},
	{2195.9836,-1969.6073,13.33861, "Junkyard - Los Santos"},
	{2495.3130,-1690.4086,14.2556, "CJ isn't Home! - Los Santos"},
	{2309.6592,-1643.4934,14.3873, "Ten Green Bottles - Los Santos"},
	{2071.0059,-1793.2654,13.1151, "First Barber Salon - Los Santos"},
	{1786.2906,-1917.4558,12.9513, "Unity Station - Los Santos"},
	{1842.2286,-1856.7734,12.9402, "Bomb Shop - Los Santos"},
	{1691.3992,-1972.1062,8.3836, "Tunnel Under Unity Station - Los Santos"},
	{2421.6812,-1219.7576,25.0916, "The Pig Pen - Los Santos"},
	{2454.4668,-1461.2080,23.5723, "Car Wash - Los Santos"},
	{2409.7075,-1490.5160,23.5188, "Drive-Thru Cluckin' Bell - Los Santos"},
	{2290.9382,-1527.8555,26.4476, "Basketball Court - Los Santos"},
	{1544.4298,-1352.9421,329.4749, "Great View Over - Los Santos"},
	{1172.7122,-1323.3519,15.3758, "All Saints General Hospital - Los Santos"},
	{1368.4368,-1279.1364,13.0646, "Ammu-Nation - Los Santos"},
	{655.4813,-565.3996,15.8988, "We Have Gas! - Los Santos"},
	{701.6240,-520.7927,15.9082, "Mr. Grant's Bike Shed - Los Santos"},
	{-62.1287,-1122.0255,0.8941, "We'll Dump Your Load - Los Santos"},
	{-88.9836,-1565.2668,2.5977, "Camper Park - Los Santos"},
	{-365.8894,-1428.4794,25.2871, "Helena Wankstein's Farm - Los Santos"},
	{-89.1678,1378.1990,9.9968, "UFO Bar - Las Venturas"},
	{419.8001,1415.0613,8.5656, "Extraction Of Petroleum - Las Venturas"},
	{234.6878,1857.9501,16.9258, "Area 69 - Las Venturas"},
	{219.9395,1822.8466,7.5225, "GTA SA Map - Las Venturas"},
	{393.7918,2477.1445,17.6411, "Abandoned Airport - Las Venturas"},
	{966.7471,2160.5139,10.3815, "Meat Factory - Las Venturas"},
	{1099.3290,1601.9183,12.1066, "DirtRing - Las Venturas"},
	{1171.6813,1350.9072,10.4971, "Bike School - Las Venturas"},
	{2096.2563,1285.9447,10.3773, "Obelisk - Las Venturas"},
	{2179.3452,1285.6652,42.0967, "Sphinx - Las Venturas"},
	{2325.0559,1283.3019,95.8557, "Pyramid - Las Venturas"},
	{2098.5833,1159.6077,11.2070, "Castle - Las Venturas"},
	{2027.2952,1008.4667,10.3953, "The Four Dragons - Las Venturas"},
	{1998.7495,1544.1276,13.8540, "Pirate Ship - Las Venturas"},
	{2192.3992,1676.6183,12.3672, "Caligula's - Las Venturas"},
	{2226.8938,1838.2239,10.3801, "Clowns Pocket - Las Venturas"},
	{2470.8655,1905.8854,9.4165, "Unfinished Casino Construction - Las Venturas"},
	{2634.0325,1824.1997,10.5797, "Chinese Stores - Las Venturas"},
	{2369.0376,1983.5864,10.3735, "Venturas Steaks - Las Venturas"},
	{2320.2668,2124.4951,32.3841, "Candy Suxx - Las Venturas"},
	{2506.2283,2121.0957,10.4144, "World Class Topless Girls - Las Venturas"},
	{2517.8235,2334.6921,10.3902, "Dick's Sounds - Las Venturas"},
	{2577.8293,2381.8379,17.8559, "Guitar Pool - Las Venturas"},
	{2932.8455,2119.3911,17.9667, "Oil Pipe (Sea) - Las Venturas"},
	{2017.6084,1917.1071,11.9014, "The Visage - Las Venturas"},
	{2086.3899,2074.8425,10.6182, "Sex Shop - Las Venturas"},
	{2127.4353,2379.3999,10.3837, "Emerald Isle - Las Venturas"},
	{2006.0173,2301.4419,10.3823, "Bomb Shop - Las Venturas"},
	{1693.8899,2221.5574,19.9481, "Steakhouse - Las Venturas"},
	{1657.6414,2189.8066,19.8165, "Four Big Wheels - Las Venturas"},
	{1383.0128,2184.5913,10.5971, "Home of The Bandits Stadium - Las Venturas"},
	{2090.1895,1515.5844,10.3757, "Royal Casino - Las Venturas"},
	{2451.4629,1299.5242,10.5688, "Weeding Chapel 24HR - Las Venturas"},
	{2200.8569,1394.8051,11.0625, "Auto Bahn - Las Venturas"},
	{-426.4739,2505.0479,124.3047, "Huge Cock - Las Venturas"},
	{-230.3798,2663.1609,62.1808, "Desert Chicken - Las Venturas"},
	{-844.3906,2745.9275,45.5455, "Tee Tee Motel - Las Venturas"},
	{-1305.1088,2491.9995,86.6352, "Aldea Malvada - The Lost Pueblo - Las Venturas"},
	{-1353.4595,2057.5054,52.8379, "Desert Bait Shop - Las Venturas"},
	{-595.0970,2018.1423,60.1794, "DAM - Las Venturas"},
	{-868.2958,2308.5347,160.6376, "San Andreas Biggest Ramp - Las Venturas"},
	{-127.6189,2258.2041,27.9226, "Body Bags - Las Venturas"},
	{-347.1075,1607.5189,75.8579, "Huge Dish - Las Venturas"},
	{-420.5294,1369.4535,12.5537, "Cave - Las Venturas"},
	{-92.1433,1188.4261,19.3069, "Desert Bowling - Las Venturas"},
	{110.4773,1105.7754,13.1785, "Drive-in Cinema - Las Venturas"},
	{589.9595,873.0225,-42.9249, "Quarry - Las Venturas"},
	{-792.6751,1627.5806,26.7337, "DAM Camper Park - Las Venturas"},
	{-795.1779,1557.0668,26.7001, "Desert Castle - Las Venturas"},
	{-734.2950,1546.2085,38.5811, "Desert Ruins - Las Venturas"},
	{-860.3210,1530.1660,34.1077, "The Smokin' Beef Grill - Las Venturas"},
	{-1465.8965,2637.4116,76.3252, "El Quebrados Water Deposit - Las Venturas"},
	{-1514.8104,2519.5940,55.5796, "El Quebrados Medical Center - Las Venturas"},
	{-1392.6355,2643.5117,55.4078, "El Quebrados Sheriff - Las Venturas"},
	{-2184.9448,2413.0676,4.9013, "Captain School - Las Venturas"},
	{-2495.9158,2363.1543,13.6891, "Because We Care...Phat Clothing - Las Venturas"},
	{-2665.1262,1594.9802,217.2739, "No Easter Eggs - San Fierro"},
	{-2544.1926,1227.8944,36.9986, "Actual Piece Of Cable - San Fierro"},
	{-2624.8486,1412.3381,6.6632, "Jizzy's - San Fierro"},
	{-1680.7772,1362.7539,7.8828, "Pier 69 - San Fierro"},
	{-1644.8544,1205.3395,32.4771, "Otto's - San Fierro"},
	{-1385.7150,672.0509,2.6315, "Under A Bridge - San Fierro"},
	{-1959.4122,700.1752,46.1319, "Zombotech - San Fierro"},
	{-2243.5339,739.3001,49.0057, "Chinatown - San Fierro"},
	{-2442.5469,754.7700,34.7334, "Supa Save - San Fierro"},
	{-2438.4993,495.3089,29.9260, "San Andreas Federal Mint - San Fierro"},
	{-2314.4526,101.2893,34.9486, "Baseball Field - San Fierro"},
	{-2242.1243,128.9496,34.8966, "Zero RC Shop - San Fierro"},
	{-2270.1965,-155.6732,34.8827, "Cobra Marital Arts - San Fierro"},
	{-2184.3953,-264.4480,40.2779, "San Fierro Warehouse - San Fierro"},
	{-2026.4893,-101.9039,34.7350, "Learn How To Drive - San Fierro"},
	{-2157.6765,-400.2065,35.0290, "Corvin Stadium - San Fierro"},
	{-1790.8474,567.7253,332.3959, "Highest San Fierro Building - San Fierro"},
	{-1286.4249,507.4871,17.8079, "Military Ship - San Fierro"},
	{-2471.6221,1549.7582,33.2273, "Ship Cabin - San Fierro"},
	{-2482.6108,-286.3192,40.0976, "Golf Court - San Fierro"},
	{-2082.2151,-862.9426,66.4372, "Five Identical Buildings - San Fierro"},
	{-1846.8195,-1708.4432,41.1139, "Angel Pine Junkyard - San Fierro"},
	{-2258.4678,-1742.6514,487.0852, "Chilliad - San Fierro"},
	{-2815.8674,-1521.6892,140.8438, "Chilliad Hill Hous - San Fierroe"},
	{-1995.9794,-1558.0986,84.9481, "Chilliad Hole - San Fierro"},
	{-2050.0474,-2338.9712,40.4652, "Angel Pine Sawmill - San Fierro"},
	{-2165.3091,-2416.9666,30.3205, "Lovin' A Loan - San Fierro"},
	{-2293.9902,-2448.8823,25.2630, "Angel Pine Hobostack - San Fierro"},
	{-799.8579,-2259.4114,39.4541, "Horse Shoes - San Fierro"},
	{-739.4749,-1990.4443,9.5690, "Shitty Lake - San Fierro"},
	{2224.4690,-1262.5192,23.4685, "CJ's First Spawn - San Fierro"},
	{2101.6265,-1649.0497,12.9783, "CJ's First Tag Mission - San Fierro"},
	{-2406.6223,326.0979,34.7434, "Vank Hoff In The Park - San Fierro"},
	{154.2135,-1945.2555,4.2731, "Lighthouse - San Fierro"},
	{421.0309,-1314.9159,32.3516, "Candy Suxx Billboard - San Fierro"},
	{-1989.8995,1117.8409,54.4688, "Where's The Priest? - San Fierro"},
	{-1809.6421,-210.5458,24.5313, "Harry Plums Wholesale Fruit - San Fierro"},
	{-2767.1743,786.2155,52.3440, "Tuff Nut Donuts - San Fierro"},
	{2498.2488,2773.4836,10.3855, "Military Fuels - Las Venturas"},
	{732.8908,-1341.5129,14.4291, "Interglobal TV - Los Santos"},
	{823.0460,-1365.3257,-0.9459, "Market Station - Los Santos"},
	{1128.8400,-1488.6097,22.3362, "Verona Mall - Los Santos"},
	{2441.0557,-1653.7570,26.2929, "Breakable Bridge - Los Santos"},
	{2834.6379,-2434.8826,14.1733, "Ship Docked - Los Santos"},
	{2851.5535,-1532.3398,10.6553, "Sprunk Incorporated - Los Santos"},
	{2808.4189,-1176.2007,24.9234, "Cannon In A House - Los Santos"},
	{2644.7964,-1459.2537,15.8071, "Sewer Tunnel - Los Santos"},
	{1117.8289,-2036.8716,78.1645, "Observatory - Los Santos"},
	{-1605.3304,711.0455,13.4393, "SFPD - San Fierro"},
	{-1942.0330,277.1327,35.4739, "Wang Cars - San Fierro"},
	{-2026.4648,156.5116,28.5871, "Doherty Garage - San Fierro"},
	{-1968.7589,110.6265,27.4519, "Station - San Fierro"},
	{-1827.2380,42.3856,14.6888, "Solarin Industries - San Fierro"},
	{-1536.7402,483.1094,7.1797, "Easter Basin Naval Station - San Fierro"},
	{-338.4648,2218.3623,42.0909, "DAM Cemetery - Las Venturas"},
	{-35.7158,2349.9453,23.9113, "Snake Farm - Las Venturas"},
	{1288.8795,271.3768,19.1206, "Inside Track - Los Santos"},
	{103.0110,-294.1638,1.1473, "Fleichberg - Los Santos"},
	{1271.8375,295.0602,20.6563, "BIOWASTE - Los Santos"},
	{1040.0636,-1343.0978,22.1932, "Donut Ring - Los Santos"},
	{1277.5110,370.6000,19.1218, "PAPERCUTS - Let Us Fill Your Office - Los Santos"},
	{1351.2240,349.2023,19.9189, "BIOENGINEERING - Getting OUR hands in YOUR genes - Los Santos"}
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum t_Functions
{
	Tele_Name[30],
	Tele_Adress[50]
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Strings
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new StrH[4096], StrH2[4096], GetPlayerPassword[128];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new GhostRiderObj[MAX_PLAYERS][3];
new CaptureTimer[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new Act[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new PlayerText:PONT[3];
new PlayerText:PONT2[3];
new AFK[MAX_PLAYERS];
new Float:AFKPos[MAX_PLAYERS][6];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new False = false;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new HideTextDraw[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define IsOdd(%1) ((%1) & 1)
#define Loop(%0,%1) for(new %0 = 0; %0 != %1; %0++)
#define function%0(%1) %0(%1); public%0(%1)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define FormatMSG(%0,%1,%2,%3) do{ eBigString[0] = EOS; format(eBigString, sizeof(eBigString), (%2), %3); SCM((%0),(%1), eBigString); }while(False)
#define FormatSQL(%0,%1) do{ eQuery[0] = EOS; format(eQuery, sizeof(eQuery), (%0), %1); mysql_tquery(SQL, eQuery, "", ""); }while(False)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Time Convert
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define ConvertTime(%0,%1,%2,%3,%4) new Float: %0 = floatdiv(%1, 60000); \
%2 = floatround(%0, floatround_tozero); \
%3 = floatround(floatmul(%0 - %2, 60), floatround_tozero); \
%4 = floatround(floatmul(floatmul(%0 - %2, 60) - %3, 1000), floatround_tozero)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define MAX_PROPS                                                           1000
#define MAX_HOUSES                                          				1600
#define MAX_VEH                                                             500
#define MAX_FIREWORK                                                        1000
#define MAX_REPORTS                                                         15
#define MAX_CARS                                                            200
#define SPECIAL_ACTION_PISSING 											68
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define MAX_CP 		  														120
#define MAX_RACES                                                           22
#define COUNT_RACE  	                                                    30
#define MAX_RACE_CP 	                                                    150
#define	MAX_COUNT     														30
#define MAX_RACE_TIME 														300
#define RACECP_SIZE 	                                                    12.0
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> For Hold
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#undef  MAX_OBJECTS
#define MAX_OBJECTS 10
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Admin & VIP Spec Function
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define ADMIN_SPEC_TYPE_NONE											 	0
#define ADMIN_SPEC_TYPE_PLAYER 											 	1
#define ADMIN_SPEC_TYPE_VEHICLE 										 	2
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Others Dialogs
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define Car_D                                                               201
#define Stunt_D     														300
#define DIALOG_CREATECLAN                                                   400
#define Teles_D     														500
#define Int_D       														600
#define Drifts_D														    700
#define Walks_D                                                             430
#define Radio_D                                                             788
#define MP3_D                                                               800
#define Premium_Account                                                     2400
#define MAX_RANDOM_CUFAR                                                    25
#define MAX_CONNECTIONS_FROM_IP                                            (20)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define ALARM_TIME 															10000
#define DEFAULT_NUMBER_PLATE 												"{0072FF}E{FFFF00}S{FF0000}S"
#define VEHICLE_PLAYER 														2
#define MAX_PLAYER_VEHICLES                                                 3
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define TreeHouseLift1                              -2139.367187, 7117.292480, 11.08323
#define TreeHouseLift2                              -2139.36719, 7117.29248, 41.54702
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define DJSTATE                                     200.7302,-1832.8682,7.8947
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define CAMERA_AA                                   270.6967
#define CAMERA_SFAIR                                124.0327
#define CAMERA_LVAIR                                266.5587
#define CAMERA_CHILLIAD                             216.7274
#define CAMERA_GOLF                                 91.4942
#define CAMERA_JIZZY                                274.9922
#define CAMERA_LSAIR                                359.0095
#define CAMERA_BEACH                                0.6969
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Colors for Commands/Systems
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define BANBLUE                                               		(0x3399FFAA)
#define CBLUE                                                 		(0x00A6FFAA)
#define DUEL                                                  		(0x3B83FFAA)
#define ASAY                                                  		(0xFF6BFFAA)
#define PM                                                    		(0xCCFF00AA)
#define CHANGENAME                                            		(0xFFF1AFAA)
#define AKA                                                   		(0x66ff00AA)
#define SPASSWORD                                             		(0xFFD800AA)
#define REPORT                                                		(0x33CC00AA)
#define ANTISPAM                                              		(0xFF6F00AA)
#define CARCOLOR                                              		(0x0066FFAA)
#define SPAWNCAR                                              		(0x0099CCAA)
#define SETRANK                                               		(0x66FF66AA)
#define SANTALAND                                             		(0xFFEE00AA)
#define REPORT2                                               		(0xFF6600AA)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Date TextDraw
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new Text:HClock;
new Text:HClock2;
new Text:HClock3;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new Text3D:housei[MAX_HOUSES], 		HousePickup[MAX_HOUSES];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new	Text3D:Prop3D[MAX_PROPS],       PropPickUP[MAX_PROPS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new PlayerText:TD_ADs;
new Text:TD_Death[2];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Timer's & Server TextDraw's
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new TDString[3][500*3], 			Text:TeleTD,					PlayerText:ReportTD;
new PlayerText:Random_TD_Texts, 	PlayerText:Random_TD_Texts_RO,  CInvite[MAX_PLAYERS];
new	PlayerText:BRB[4], 				PlayerText:RaceTD[7], 			PlayerText:Car_Textdraw[3];
new	PlayerText:KSpree[2], 			Text:Logo[4],                   liPlayerJail;
new	PlayerText:Spec_Player1, 		PlayerText:Spec_Player2, 		PlayerText:Spec_Player3;
new	rldtime[MAX_PLAYERS], 			PlayerText:Spec_Spawn1;
new	PlayerText:Spec_Spawn2, 		PlayerText:Targets1, 			PlayerText:Targets2;
new PlayerText:gWarText[2],			PlayerText:EventKills,          Text:ChristmasTree[23];
new PlayerText:CaptureTD[4];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Race System
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new	Joined[MAX_RACES][MAX_PLAYERS], CPProgress[MAX_RACES][MAX_PLAYERS];
new Float:CPCoords[MAX_RACES][MAX_RACE_CP][4], CreatedRaceVeh[MAX_RACES][MAX_PLAYERS];
new Float:RaceVehCoords[MAX_RACES][2][4], PlayersCount[MAX_RACES][2], rTime[MAX_RACES][3];
new CheckRacesOnlinePTimer;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Vehicle Define
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new vNames[212][] =
{
	"Landstalker", "Bravura", "Buffalo", "Linerunner", "Perennial", "Sentinel", "Dumper", "Firetruck", "Trashmaster", "Stretch",
	"Manana", "Infernus", "Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam", "Esperanto", "Taxi",
	"Washington", "Bobcat", "Mr Whoopee", "BF Injection", "Hunter", "Premier", "Enforcer", "Securicar", "Banshee", "Predator",
	"Bus", "Rhino", "Barracks", "Hotknife", "Trailer", "Previon", "Coach", "Cabbie", "Stallion", "Rumpo", "RC Bandit", "Romero",
	"Packer", "Monster", "Admiral", "Squalo", "Seasparrow", "Pizzaboy", "Tram", "Trailer", "Turismo", "Speeder", "Reefer", "Tropic", "Flatbed",
	"Yankee", "Caddy", "Solair", "Berkley's RC Van", "Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider",
	"Glendale", "Oceanic", "Sanchez", "Sparrow", "Patriot", "Quad", "Coastguard", "Dinghy", "Hermes", "Sabre", "Rustler",
	"ZR-350", "Walton", "Regina", "Comet", "BMX", "Burrito", "Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper",
	"Rancher", "FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring Racer", "Sandking", "Blista Compact", "Police Maverick",
	"Boxville", "Benson", "Mesa", "RC Goblin", "Hotring Racer A", "Hotring Racer B", "Bloodring Banger", "Rancher", "Super GT",
	"Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster", "Stuntplane", "Tanker", "Road Train", "Nebula", "Majestic",
	"Buccaneer", "Shamal", "Hydra", "FCR-900", "NRG-500", "HPV-1000", "Cement Truck", "Tow Truck", "Fortune", "Cadrona", "FBI Truck",
	"Willard", "Forklift", "Tractor", "Combine", "Feltzer", "Remington", "Slamvan", "Blade", "Freight", "Streak", "Vortex", "Vincent",
	"Bullet", "Clover", "Sadler", "Firetruck", "Hustler", "Intruder", "Primo", "Cargobob", "Tampa", "Sunrise", "Merit", "Utility",
	"Nevada", "Yosemite", "Windsor", "Monster A", "Monster B", "Uranus", "Jester", "Sultan", "Stratum", "Elegy", "Raindance", "RC Tiger",
	"Flash", "Tahoma", "Savanna", "Bandito", "Freight", "Trailer", "Kart", "Mower", "Duneride", "Sweeper", "Broadway",
	"Tornado", "AT-400", "DFT-30", "Huntley", "Stafford", "BF-400", "Newsvan", "Tug", "Trailer", "Emperor", "Wayfarer",
	"Euros", "Hotdog", "Club", "Trailer", "Trailer", "Andromada", "Dodo", "RCCam", "Launch", "Police Car (LSPD)", "Police Car (SFPD)",
	"Police Car (LVPD)", "Police Ranger", "Picador", "S.W.A.T. Van", "Alpha", "Phoenix", "Glendale", "Sadler", "Luggage Trailer A",
	"Luggage Trailer B", "Stair Trailer", "Boxville", "Farm Plow", "Utility Trailer"
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Reaction & Math test
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new bool:StartedM, StartedR;
new Characters[][] =
{
    "A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M",
	"N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y",
	"Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k",
	"m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x",
	"y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"
};
new Chars[17] = "";
new MathsResult;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new TD_InfoTimer[MAX_PLAYERS],	Text:ShowInfo[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Spawn Zones System
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define MAX_SPAWN_ZONES                                                     12
new Text3D:SpawnZone3D[MAX_SPAWN_ZONES];
new Text3D:SpawnCP3D[MAX_SPAWN_ZONES];
new SpawnCheckPoint[MAX_SPAWN_ZONES];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum SpawnZData
{
	SpawnName[50], Float:sPosX, Float:sPosY, Float:sPosZ, Float:sPosA,
	Float:CPX, Float:CPY, Float:CPZ, TeleportTo
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Personal Car System
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum VehicleData
{
    bool:vehStatus,			vehID,							vehModel,       		Float:vehPos[4],
    vehColor[2],        	vehOwner,      					vehicleData,    		vehPlate[16],
    vehPersonal,        	vehLevel,                       vehMod[14],     		vehPaint,
    vehRainbow,         	vehKM,          				vehDays,        		vehText1[200],
    vehText2[200],      	vehText3[200],                  vehText4[200],  		vehText5[200],
	vehObject[6],			Float:VehObjectP1[6],			Float:VehObjectP2[6],	Float:VehObjectP3[6],
	Float:VehObjectP4[6],	Float:VehObjectP5[6],			Float:VehObjectP6[6],   VehTextSize[6]
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum HoldsData
{
    bool:HoldUsed,			HoldIndex,			HoldModel,			HoldBone,
	Float:fOffsetX1,    	Float:fOffsetY1,    Float:fOffsetZ1,    Float:fRotX1,
	Float:fRotY1,       	Float:fRotZ1,       Float:fScaleX1,     Float:fScaleY1,
	Float:fScaleZ1
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new HoldIndex1[MAX_PLAYERS], HoldModel1[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new objectlist = mS_INVALID_LISTID;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum FireworkData
{
    FOwner,         	Float:FPos[4],		Float:FHeight,
    Float:FRadius,  	FAmount,           	FRocketsReleased,
    FTimer,             FBox
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum RaportData
{
	RBans,      RKicks,     RWarns,     RJails,     	RMutes,
	REvents,    RReports,   RMax,       RMaxRaport, 	GetTotal
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new Raport[RaportData];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Gang Variable
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define MAX_GANGS                   										 999
#define MAX_GANGCHECKPOINTS 												 999
#define MAX_GANGCARS 														 999
#define MAX_GANGPICKUPS 													 999
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define GANG_GATE_DESC "If you are in member this gang or in it's allied\n\
use {EFFC00}/og{FFFFFF} to open the gate and {EFFC00}/cg {FFFFFF}to close the gate!\n\
use {EFFC00}/g{FFFFFF} to open and automatically close the gate!\n\
{FF0000}/blow|/repair"
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new GangCount[MAX_PLAYERS],		GangPickups[MAX_GANGPICKUPS],	GangCheckpoints[MAX_GANGCHECKPOINTS];
new GangGate[MAX_GANGS], 		GangHouse[MAX_GANGS],        	Text3D:GangHouse3D[MAX_GANGS];
new GangLift[MAX_GANGS], 		GangCar[MAX_GANGCARS], 			PlayerText:GangWait[5];
new liPlayerSetRank, 			GInvite[MAX_PLAYERS],           GangPickUP[MAX_GANGS];
new	Text3D:Gang3D[MAX_GANGS],	GangBlowPickup[MAX_GANGS],		Text3D:Gang3DGate[MAX_GANGS];
new Text3D:GangCheckpoints3D[MAX_GANGCHECKPOINTS], TotalGangs;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Gang Data
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum GangData
{
	GangName[30],	GangKills, 	     GangDeaths, 	 Gate_Status,
	Float:GangX, 	Float:GangY,	 Float:GangZ,    Float:GangA, 	  Points,
	GangWeapon1,	GangWeapon2,	 GangWeapon3,    GangWeapon4,	  GangWeapon5,
	GangWeapon6,    CapturingGang,   JoinedToCapture,AllianceID,      AttackBy,
	GmInCapture,    DeathsInCapture, GangCoolDown,   GangInt,         CapturesJoins,
	pGangSkin,      pGangColor,      Captures,       GangWorld,
	c_Deaths,       CaptureTimeTurf, g_Money, 		 g_Coins,         g_Gems,
	g_GPoints,      Float:lPosX,     Float:lPosY,    Float:lPosZ,	  AllianceInv,
	GangTurfe,     	AreaidTurf,      CaptureTimeRestriction,
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Gang Pickups Data
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum PickupData { PickupGangID, PickupType, ModelID, PickupWeaponID, Float:PickupPos[4] };
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Gang Checkpoints Data
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum gCheckpointData
{
	CheckpointGang,		CheckpointText[30],	Float:CheckpointX,
	Float:CheckpointY,	Float:CheckpointZ, 	Float:ToX,
	Float:ToY,			Float:ToZ
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Gang Gate Data
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum GateData { GateGang, GateObject, Float:GatePos[4], Float:rGatePos[4] };
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Gang Lift Data
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum LiftData { LiftGang, LiftObject, Float:LiftPos[4], Float:rLiftPos[4], Float:LiftPosTo[4] };
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Gang Car Data
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum gCarData { CarGang, vehModel, Float:gCarPos[5] };
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Gang Camera Pos Data
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum gCameraPosData { CameraGang, Float:gCamPos[4], Float:gCamPosTo[4] };
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Gang House Data
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum gHouseData { HouseGang, Float:gHousePos[4], Float:gHouseInt[4], HouseInterior };
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Gangs Territory Data
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum TersData { TersGang, Float:minx,	Float:miny,	Float:maxx,	Float:maxy,	owner, ID, turfingby };
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new GangInfo[MAX_GANGS][GangData];
new PickupInfo[MAX_GANGPICKUPS][PickupData];
new	gCheckpointInfo[MAX_GANGCHECKPOINTS][gCheckpointData];
new	GateInfo[MAX_GANGS][GateData];
new	LiftInfo[MAX_GANGS][LiftData];
new	gCarInfo[MAX_GANGCARS][gCarData];
new	gCameraPos[MAX_GANGS][gCameraPosData];
new	Teritories[7][TersData];
new	gHouseInfo[MAX_GANGS][gHouseData];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new SpawnZones[MAX_SPAWN_ZONES][SpawnZData];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum PlayerData
{
    AccID,				Level,				pVIP,				LoggedIn,			C4,				Language,
	LastOn[21],			Property,			House,          	GPS,            	GPST,           Quests,
	InHouse,			VCC,				pColor[20],			pCar,				TotalTime,      ConnectTime,
    hours,			    mins,				secs,			    Kills,				KillerRank[25],
	Deaths,				KillingSpree,		BestKillingSpree,	Headshots,			Muted,			Frozen,
	Jailed,				SpecType,			Spectating,			SpecID,         	AFKBRB,     	FailLogin,
	DriftPoints,		RacePoints,			StuntPoints,		DriftRank[35],  	RaceRank[35], 	StuntRank[35],
	Ignore_PM,			Ignore_Spec,		Ignore_Get,			Ignore_Goto,		Ignore_All, 	Coins,
	JumpSize,			SpeedSize,			VUP,				SpeedB,             NRGMaze,        InMaze2,
	PKicks,				PMaths,				PWarns,				PBans,				PReactions,		PClearCH,
	PJails,				PMutes,				PGoted,             StatsN, 		    UseSkin,        VAC,
	TVip,				VIPTime,			IsVipFree,			vehicleId,			InJob,			InStunt,
	PosRespect, 		NegRespect,         DLine1[300],		DLine2[300],		DLine3[300],    pSkins[10],
	KickW,				DingOnShot,     	Hidden,				HideTDS,            God,            InCar,
   	Warnings, 			WhatCar,            AdmW,           	VIPW,               SDriftT,        pChar,
	GodCar,             LastKicker,     	HTag[2],            AdminBlacklist, 	AccLocked,
	InRepair,       	BlowTime,		    RepairTime,
	Capturing,          DriftCP[7],         InDrift,            Inviter[2],         GotoInvite,     GetInvite,
	PMID,               JobStarted[6], 		JobCP[3],           Bait,				Rod,            Fishing,
	InMG[7],            InDM,				Float:SPosX[4],     Float:SPosY[4],     Float:SPosZ[4], ClanName[30],
	ClanWeap1,  		ClanWeap2, 			ClanWeap3, 			ClanWeap4,			ClanWeap5,		ClanWeap6,
	Invite,             ClickedP,           VBike,              VCar,               CarID,          CarOwner,
	CarCHRs,            CarCoins,			EMail[100],         ChatColor,          SPrizeAmount,   EnTrade,
	ATrade, 	        BuyerID,            SellerID,           Age,   		        ShowPMs,
	Gifts,              Tag,                STagOn,             ActionID,		    ColorTag,       rAdmin,
	NameTag,            MusicPlay,          AWarings,           Read[3],            neonid,         InMaze,
	FLogin[3],          RecentlyRobbed,     Gems,               gemsMonth,
	HG,                 Activity,           Shopkey,            ClanArena,          respectMonth[2],
	RaceMonth,          DriftMonth,         StuntMonth,         KillsMonth,         MySkin,         SPassword[42],
	Blacklist,          hoursMonth,			minsMonth,			secsMonth,      	Money,          PointsMonth,
	invisible,          afob,               reports,            RCON,               inlogging,      PointsX2Month,
	Spawned,            o_index,            Use_Attach,         VipChat,            Premium,
	InDerby,            PlayerInBloodring,  RadioFav,           RPreference,        PlayerInVortexCar, InVortex,
	StatsNote,          JobID,              JobQuest,           InWar,              InNascar,       Crate[6],
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	VIP,                AWP,                NotAccess,          SpecSpawn,          Reported,       SavedSkin,
	InBusiness,         InJJ,               AdminAccesfor1,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	MinigunKills,       M4Kills,            RocketKills,        SniperKills,        MRFKills,       DEKills,    PRODMKills,
	InMinigun,          InM4,               InRocket,           InSniper,           InMRF,          InDE,       InPRODM,
	InOH,               InGG,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Drift0, Drift1, Drift2, Drift3, Drift4, Drift5, Drift6,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	InLastCar, LastCarCP, InRec, FW, Reported1, Reporter, TeamKill, MonthTime, DataSet,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ReportedID, g_Time[6], StageWeaponGG,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// For Duel
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DuelID, DuelWeapon, DuelMiza, InDuel,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	InTargets, TargetPoints, TargetsKills, LiveDate,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	MRFWeaponSelected, MRFWeapon, JobCar, LastShopkey,
	InRace,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	MutedByAdmin[100],      JailedByAdmin[100],       FrozedByAdmin[100],
	VipWeapons,             OwnerAcces,               PersonalCar,
	ShopkeyOwner,           HexColor[100],            boost,
	boost_timer,            boost_timer2,             boost_timer3,
	ReportedByPlayer[100],  ReportedPlayer,           ReportedByPlayerReason[100],
	SessionTime,            hours_session,            minutes_session,
    seconds_session,        UseHolds,                 HoldInCar,
	HoldCID,                CarVCP,                   c_Members,
	BeingCaptured,          gCapturing,               InCapture,
	InTerry,                EventsMaded,              ClanRank,
    GangPickupTimer[1000],  DuelLocation[5],          DuelWeapon1,
    DuelWeapon2,            GangColorForPlayer,       GangRank[35],
    RaceTextdraw,           RPG2,                     g_Total,
	MyTime,                 MyTimeHave,               GangPickup,
	EditingGang,            AimcheckActivated,        AimCheckActivatedForID,
	AnnForAim,              ARClosed,                 AdminTime,
	hoursADMIN,             minutesADMIN,             secondsADMIN,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Clan Player Variables
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ClanID,                 c_Kills,                  c_Deaths,
	c_Captures,             c_Points,                 c_Rank,
	c_EXP,                  c_Skin,                   c_Total,
	c_Capturing,            turftime,                 clanturfe,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	InStealCar,             GangTimerSet,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Variable
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Variable, Registered, DJ, JobFinished[MAX_JOBS], JobsFinishedCount, GoldVIPTaken,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Raport
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	r_Warns, r_Kicks, r_Bans, r_Jails, r_Mutes, r_Events, r_Reports, r_Total,
	r_Check,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Sumo & Skyclimb
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	InSumo,	InSkyClimb,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Gang
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GangID, g_Captures, g_Kills, g_Points, g_Deaths, g_Rank, g_Skin,
	gWarnInGang[MAX_GANGS], GangTank, gHouse, gWarPlayer, gWarWeapons[5], gWarLocation[3],
	Float:GwarLocPos[6], GangWarRank, gWarPoints, gWarUpdateTimer, InGangWar,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Orhers
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bool:SkateActive, Skate, RconType, InGarena, GarenaTimer, CratePickupTimer,
	SpawnedBySV, InFallOut, SLand_H[11], InSantaLand, Snow, InSantaLottery,
	InSantaToyCar, DJSpam, TimesOnline, InSpringQuest[3], SpringQuestVehicle,
	QuestAppleAvailable, QuestAppleSold, QuestObjectInVehicle[14], GangMemberSince[24],
	AdminTimeConnect, Float:LastPos[4], InPersGarage, VehSelect, CameraViewRequest,
	CaptureStarter, GangCaptureTimer, InHNS, HNSTimer, SumoSeat, AdminSince[24],
	RadioListen, temprcontype, TaxiReuquested, TaxiAcceptedFor, TaxiUnderTimer,
	TaxiCheckPointSeted, GoingToFinishTaxi, TaxiLiber, RankHeadEnabled, PersonalTagString[24],
	PersonalTagColor, IPCountry[50], IPCity[50], LoggedWithAuth
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Clan Variabiles
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define MAX_CLANS 999
#define CAPTURE_TIME 90
#define LOCKED_MINUTES 5
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum ClanData
{
	ID, ClanName[30],	ClanCaptures, 		ClanPoints,		ClanDeaths,
	ClanColor, 			ClanLevel,          ClanKills,   	Skin,
    Rank, 				Float:ClanPos[4], 	Weapon[7], 		EXP,
	Losts, 				Wins, 				Since[30],    	Capturing,
    MaxDeaths, 			TurfingClan, 		CaptureTime, 	IsAttacked,
	c_CaptureJoins,		CapturingClan,      MapIcon,        CaptureLock,
	ZoneLocked
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new Clan[MAX_CLANS][ClanData], ClanPickUp[MAX_CLANS], SetPlayerClanRank, Text3D:ClanPickUp3D[MAX_CLANS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Clans Territory Data
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum CTersData
{
	Float:minx,			Float:miny,			Float:maxx,			Float:maxy,
	owner, 				ID, 				bool:turfing, 		turfingby,
	level
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Attached object data (/hold)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum attached_object_data
{
	ao_model,   	ao_bone,    	Float:ao_x,     Float:ao_y,     Float:ao_z,
	Float:ao_rx,    Float:ao_ry,    Float:ao_rz,    Float:ao_sx,    Float:ao_sy,
	Float:ao_sz
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> House Data
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum HouseData
{
	Name[24], 			Rent, 				Cost, 				CostM,
	Sell, 				Interior, 			Locked,				HTime,
	Float:InteriorX, 	Float:InteriorY, 	Float:InteriorZ, 	Float:HX,
	Float:HY, 			Float:HZ, 			hID,            	h_Level
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Business Data
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum PropData
{
    PropName[24], 		Cost, 				CostM, 				Earning,
	EarningM,           Float:PropX, 		Float:PropY, 		Float:PropZ,
	PropOwner[24], 		IntID,          	PropMapIcon, 		pID,
	Float:InteriorX,	Float:InteriorY, 	Float:InteriorZ,    PTime,
	p_Level
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Server Data
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum ServerData
{
	ServerHNC,            	StarEventStarted,       PrizeID,
    PrizeAmount, 	   		StarID,               	SPrizeID,
    Question[129],    		QReward[129],    		QStarted,
	QAnswer[129],           QAdmin,                 AntiSwear,
    WhoSayFirst[129],     	WStarted,            	WReward[129],
    MathTest,        		CountReports,           WhoMakeMostKillsStarted,
    StarEventAdmin,         TargetPlayers,          TargetObject,
	WAdmin,                 ReactionTest,           XMas,
    StealcarStarted,        StealCarOwner,          StealCarTimes,
    StealCarID,           	InactivityReports,   	SumoStarted,
    SumoPlayers,            SumoCount,            	SumoTimer,
	SumoTimerStarted,       WaterDetectTimer,    	NascarTimer,
	NascarCount,            NascarStarted,         	WhoMakeMostKillsAdmin,
    WhoMakeMostKillsType,   SkyClimbEventStarted,	WhoMakesMostKillsAmmount[9],
    SkyClimbAdmin,          AntiCheat,              HostNameChangedBy[24],
    GoldPotStarted,         GoldPotPK,              HNSStatus,
    HNSTime,                HNSStarter,             HNSTimerCFG[2],
    SumoSeatOcuped[8],      AntiVersionOutData,     Database_Host[50],
    Database_User[50],		Database_Password[50],	Database_Database[50],
	DatabaseConnected
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Race Enum
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum RaceData
{
	ID, Vehicle, Name[30], Position, FinishCount, JoinCount, CountAmount, RaceTime,
	CountTimer, rCounter, RaceStarted, RaceTick, RaceTimeStamp, TotalRaceTime,
	RaceBusy, Index, TotalCP, RaceStarted2, Record[10]
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new SumoCar[MAX_PLAYERS], StealerCar[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Dialogs
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum
{
    DIALOG_LOGIN,       		DIALOG_LANG,            	DIALOG_AREGISTER,
    DIALOG_CHANGENAME,          DIALOG_LOGIN_SPASSWORD, 	DIALOG_ADD_SPASSWORD,
    DIALOG_REGISTER,            DIALOG_NEWNAME,         	DIALOG_SELECT_AGE,
    DIALOG_SELECT_EMAIL,        DIALOG_SUCCES_REGISTER,     SPECIAL_VEHICLE,
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DIALOG_TUNE,				DIALOG_COLORS,				DIALOG_PAINTJOBS,
	DIALOG_FRONT,				DIALOG_STEREO,				DIALOG_REAR,
	DIALOG_ROOFS,				DIALOG_SPOILERS,			DIALOG_BULBARS,
	DIALOG_EXHAUSTS,           	DIALOG_SIDE,            	DIALOG_WHEELS,
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DIALOG_MRF,         	  	DIALOG_C4,              	DIALOG_HOUSE_INTERIOR_CHANGE,
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DIALOG_FUNNYWEAPONS,		DIALOG_BIGWEAPONS,  		DIALOG_WEAPONS,
	DIALOG_STATS,	         	DIALOG_DESCRIPTION_D,   	DIALOG_TOP,
	DIALOG_STYLE_FIGHT,     	DIALOG_TOP2,            	DIALOG_MINIGAMES,
	DIALOG_DESCRIPTION, 		DIALOG_DESCRIPTION1,		DIALOG_DESCRIPTION2,
	DIALOG_DESCRIPTION3,      	DIALOG_SPEEDBOOST2,     	DIALOG_VUP2,
    DIALOG_STAREVENT,           DIALOG_PM,              	DIALOG_ADMIN_PM,
    DIALOG_REPLY_ADMIN_PM,      DIALOG_FISH,             	DIALOG_JOBS,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    DIALOG_DUEL,                DIALOG_DUEL2,           	DIALOG_DUEL3,
    DIALOG_EMPTY,               DIALOG_FW,              	DIALOG_NEON,
    DIALOG_JUMPS,               DIALOG_VISITHOUSE,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DIALOG_BLOCK,               DIALOG_TRUCKER,
    DIALOG_TEAMKILL,        	DIALOG_FORUM,
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DIALOG_CARS,            	DIALOG_CAR1,
	DIALOG_CAR2,               	DIALOG_CAR3,            	DIALOG_CAR4,
	DIALOG_CAR5,               	DIALOG_CAR6,            	DIALOG_CAR7,
	DIALOG_CAR8,               	DIALOG_CAR9,            	DIALOG_CAR10,
    DIALOG_CAR11,               DIALOG_CAR12,           	DIALOG_CAR13,
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DIALOG_JAIL,               	DIALOG_JAIL_OTHER,      	DIALOG_BOOST,
    DIALOG_EVENTS,          	DIALOG_LGANG,           	DIALOG_CHECK_ACCOUNT_PASSWORD,
    DIALOG_CLAN_SPAWN,      	DIALOG_ADMINS,
    DIALOG_LEAVE_CLAN,          DIALOG_CLAN_RANK,       	DIALOG_TELES_PARTY,
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	DIALOG_SETRANK,             DIALOG_GANGSLOT1,       	DIALOG_GANGSLOT2,
	DIALOG_GANGSLOT3,           DIALOG_GANGSLOT4,			DIALOG_GANGSLOT5,
    DIALOG_GANGSLOT6,           DIALOG_RESET,           	DIALOG_RESET2,
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	DIALOG_BUG,  				DIALOG_RAPORT_CONFIG,
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> All Data
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new PlayerInfo[MAX_PLAYERS][PlayerData];
new	HouseInfo[MAX_HOUSES][HouseData];
new	PropInfo[MAX_PROPS][PropData];
new	ClanTers[MAX_CLANS][CTersData];
new	ServerInfo[ServerData];
new	HoldsInfo[MAX_PLAYERS][MAX_OBJECTS][HoldsData];
new	Vehicles[MAX_VEH][VehicleData];
new	FireworkInfo[MAX_FIREWORK][FireworkData];
new Races[MAX_RACES][RaceData];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Santa House Pickups random
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new Float:RandomPickupSanta[][] =
{
    {-1564.9143, 3308.3179, 836.9696},
	{-1527.4485, 3333.9697, 838.6530},
	{-1527.7539, 3371.8757, 838.6329},
	{-1505.0854, 3358.7576, 838.6341},
	{-1505.3950, 3347.1643, 838.6341},
	{-1613.1510, 3353.6458, 836.2759},
	{-1562.9429, 3326.4185, 836.9696},
	{-1591.4434, 3329.9333, 835.4988}
};
new RandomGiftsPickups[][] =
{
	{19054},
	{19055},
	{19056},
	{19057},
	{19058}
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Player Timer
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new SpamCheck[MAX_PLAYERS],	  		MgTime[MAX_PLAYERS],            aString[4096];
new	ReportTime[MAX_PLAYERS],  		RocketTime[MAX_PLAYERS],  		vTankTimer[MAX_PLAYERS];
new	ChatTime[MAX_PLAYERS],    		SpeedLimit[MAX_PLAYERS],  		VUPLimit[MAX_PLAYERS];
new	OldName[MAX_PLAYER_NAME], 		Planted[MAX_PLAYERS],			Float:bx[MAX_PLAYERS];
new	Float:bz[MAX_PLAYERS],	  		BanName[MAX_PLAYER_NAME],       pmtime[MAX_PLAYERS];
new	RPG,                        	SoccerBall;
new	Float:Pos[MAX_PLAYERS][5],  	Reports[MAX_REPORTS][1024], 	IsLocked[MAX_VEHICLES];
new	eString[4096], 					eBigString[1024],				eQuery[1024];
new eLog[1024],                 	vmtime[MAX_PLAYERS],        	AntiSadSpam[MAX_PLAYERS];
new rockettime[MAX_PLAYERS],        RandomWeaponTimer[MAX_PLAYERS], helptime[MAX_PLAYERS];
new	bantime[MAX_PLAYERS],       	kicktime[MAX_PLAYERS],          Float:by[MAX_PLAYERS];
new ReacReward,                     MySQL:SQL,                      AntiFlood[MAX_PLAYERS][5];
new	StuntTime[MAX_PLAYERS],         SpeedTime[MAX_PLAYERS],         VupTime[MAX_PLAYERS];
new ADTimer[MAX_PLAYERS][2],        RconWeaponRestriction[MAX_PLAYERS];
new PlantC4Spam[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Count | /Count
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new GMCount = 3;
new CountText[3][5] =
{
   "~w~1",
   "~r~2",
   "~w~3"
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Count | /Duel
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
new DuelCount = 3;
new DuelCountText[3][5] =
{
   "~w~1",
   "~r~2",
   "~w~3"
};
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
static pmodelid[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
static iPlayerNickTime[MAX_PLAYERS];
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Race System Publics Forwards
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
forward StartRace(rID);
forward StopRace(rID);
forward LoadRaceDetails();
forward LoadRaceCheckpoints(rID);
forward LoadRaceCheckpoints2();
forward SetupRace(playerid, rID);
forward CountTillRace(rID);
forward RaceCounter(rID);
forward ShowRaceList(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerCleoDetected(playerid, cleoid)
{
	switch(cleoid)
	{
	    case 1: SendBuster(playerid, 1, "Fake-Kills");
	    case 2: SendBuster(playerid, 1, "Vehicle-Warp");
	    case 3: SendBuster(playerid, 1, "Player-Bugger");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Advanced Database Connect (WEBPAGE INCLUDE)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ConnectToDatabase(playerid, type)
{
	switch(type)
	{
		case 1: HTTP(playerid, HTTP_GET, "ess-ro.com/includes/sampfunctions?function=detailsdb&param=host", "", "GetDatabase_Host");
		case 2: HTTP(playerid, HTTP_GET, "ess-ro.com/includes/sampfunctions?function=detailsdb&param=user", "", "GetDatabase_User");
		case 3: HTTP(playerid, HTTP_GET, "ess-ro.com/includes/sampfunctions?function=detailsdb&param=password", "", "GetDatabase_Password");
		case 4: HTTP(playerid, HTTP_GET, "ess-ro.com/includes/sampfunctions?function=detailsdb&param=database", "", "GetDatabase_Database");
		case 5: FinishDatabaseConnect(playerid);
	}
}
function ShowPlayerSelectLanguage(playerid)
{
	new String[256];
	format(String, sizeof(String), "{FFFF00}Welcome to "SERVER_NAME", {00BBF6}%s{FFFF00}!\n{FFFF00}Please select your language to continue!", PN(playerid));
	SPD(playerid, DIALOG_LANG, MSGBOX, "{00BBF6}Language {FF0000}/ {00BBF6}Limba", String, "Romana", "English");
}
function FinishDatabaseConnect(playerid)
{
	ServerInfo[DatabaseConnected] = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new MySQLOpt: option_id = mysql_init_options();
	mysql_set_option(option_id, AUTO_RECONNECT, true);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SQL = mysql_connect(ServerInfo[Database_Host], ServerInfo[Database_User], ServerInfo[Database_Password], ServerInfo[Database_Database], option_id);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(SQL != MYSQL_INVALID_HANDLE && mysql_errno() == 0 )
    {
        new string[100], string2[100];
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        format(string, sizeof(string), "\nMySQL: Connection to '%s' established.", ServerInfo[Database_Host]);
        format(string2, sizeof(string2), "MySQL: Database '%s' selected.\n", ServerInfo[Database_Database]);
        print(string), print(string2);
  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  		eQuery[0] = EOS;
  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  		mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `LoggedIn` = '0' WHERE `LoggedIn` = '1'");
    	mysql_tquery(SQL, eQuery, "", "");
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Races` SET `Status` = '0' WHERE `Status` = '1' OR `Status` = '2'");
    	mysql_tquery(SQL, eQuery, "", "");
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	UpdateAllPlayerAccount("Status", 0);
    	UpdateAllPlayerAccount("PlayerIDConnect", -1);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		LoadFromDB();
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        ShowPlayerSelectLanguage(playerid);
    }
    else
	{
	    new string[100];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(string, sizeof(string), "MySQL: Connection to '%s' failed.", ServerInfo[Database_Host]);
		print(string);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SendRconCommand("password "SERVER_PASSWORD"");
	    SendRconCommand("hostname "SERVER_NAME2" - We'll be back!");
	}
}
function GetDatabase_Host(playerid, response_code, data[]) { if(response_code == 200) format(ServerInfo[Database_Host], 50, "%s", data), ConnectToDatabase(playerid, 2); }
function GetDatabase_User(playerid, response_code, data[]) { if(response_code == 200) format(ServerInfo[Database_User], 50, "%s", data), ConnectToDatabase(playerid, 3); }
function GetDatabase_Password(playerid, response_code, data[]) { if(response_code == 200) format(ServerInfo[Database_Password], 50, "%s", data), ConnectToDatabase(playerid, 4); }
function GetDatabase_Database(playerid, response_code, data[]) { if(response_code == 200) format(ServerInfo[Database_Database], 50, "%s", data), ConnectToDatabase(playerid, 5); }
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerConnect(playerid)
{
    new IP[16]; eQuery[0] = EOS; eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(ServerInfo[DatabaseConnected] == 0 && SV_DATABASE_TYPE == 2) ConnectToDatabase(playerid, 1);
	else ShowPlayerSelectLanguage(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][SpawnedBySV] = 0;
	PlayAudioStreamForPlayerEx(playerid, "https://"SERVER_WEBSITE"/sounds/intro.mp3");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player)
    {
        if(PlayerInfo[i][Level] >= 3)
        {
	        mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Akas` WHERE `IP` = '%s' ORDER BY `ID` DESC", GetPlayerIPEx(playerid));
	        mysql_tquery(SQL, eQuery, "ShowConnectPlayerAka", "ii", i, playerid);
	    }
    }
	new Sound = random(8);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][ConnectTime] = gettime();
	PlayerInfo[playerid][CratePickupTimer] = gettime();
	PlayerInfo[playerid][PersonalTagColor]  = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerLocation(playerid, 1);
	SetPlayerLocation(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(Sound)
	{
         case 0: PlayerPlaySound(playerid, 1185,0.0,0.0,0.0);
         case 1: PlayerPlaySound(playerid, 1097,0.0,0.0,0.0);
         case 2: PlayerPlaySound(playerid, 1183,0.0,0.0,0.0);
         case 3: PlayerPlaySound(playerid, 1062,0.0,0.0,0.0);
         case 4: PlayerPlaySound(playerid, 1185,0.0,0.0,0.0);
         case 5: PlayerPlaySound(playerid, 1097,0.0,0.0,0.0);
         case 6: PlayerPlaySound(playerid, 1183,0.0,0.0,0.0);
         case 7: PlayerPlaySound(playerid, 1062,0.0,0.0,0.0);
	}
	GetTodayPeak();
	GetAvaragePlayers();
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Checking Account
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	LoadRequestSpawn(playerid);
    IsPlayerLogged[playerid] = 0;
    GiveProtection[playerid] = 0;
    shotTime[playerid] = 0;
	shot[playerid] = 0;
	PlayerInfo[playerid][TaxiAcceptedFor] = -1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // Get IP Adress
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GetPlayerIp(playerid, IP, 16); strdel(IP, strlen(IP) - 4, strlen(IP)); format(IP, sizeof(IP), "%s", IP);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Load Aka's
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Akas` WHERE `IP` = '%s' ORDER BY `ID` DESC", GetPlayerIPEx(playerid));
    mysql_tquery(SQL, eQuery, "LoadPlayerAKA", "i", playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Load Ban's
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Bans` WHERE `Name` = '%s' OR `IP` = '%s' ORDER BY `ID` DESC", PN(playerid), GetPlayerIPEx(playerid));
	mysql_tquery(SQL, eQuery, "CheckBan", "d", playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    UpdatePlayer(PN(playerid), "Status", 1);
    UpdatePlayer(PN(playerid), "PlayerIDConnect", playerid);
   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `TimePlayed` = 'Loading...' WHERE `Name` = '%s' LIMIT 1", PN(playerid));
	mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Connect To Server TD
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	OnConnect(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Jobs
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TruckerRoute[playerid] = 15,	TruckerStep[playerid] = -1,		JobVehicle[playerid] = 0;
	JobTrailer[playerid] = 0, 		FarmerCP[playerid] = -1,		RobberCP[playerid] = -1;
	CarTheftID[playerid] = 0, 		CarToTheft[playerid] = 0, 		HitmanCP[playerid] = -1;
	Savant[playerid] = 0, 			QuarryCP[playerid] = -1, 		TaxiCP[playerid] = -1;
	DealerCP[playerid] = -1,        GlovoCP[playerid] = -1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < 7; i++) DBuyer[playerid][i] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CountPlayersInNascar = 0, CPNascar[playerid] = -1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // Reset Variabiles
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GiveRandomColor(playerid),		DestroyVehObject(playerid);
    HideTag[playerid] = 0, 			HideTextDraw[playerid] = 0;
    Pont[playerid] = 0, 			PlayerNeon[playerid] = 0;
	StealerCar[playerid] = 0,       Pont2[playerid] = 0;
    SumoCar[playerid] = 0, 			NascarVeh[playerid] = 0;
    StartedRainbow[playerid] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // Check Player AFK
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AFK[playerid] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < 6; i++) AFKPos[playerid][i] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // Trade Reset
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_TRADE; i++)
	{
	    BuyOption[playerid][i] = EOS, SellOption[playerid][i] = EOS;
 		BuyName[playerid][i] = "", SellName[playerid][i] = "";
	    SellOption[playerid][i] = 0, BuyOption[playerid][i] = 0;
	    BuyAmount[playerid][i] = 0, SellAmount[playerid][i] = 0;
   	}
	PlayerInfo[playerid][ATrade] = -1, PlayerInfo[playerid][BuyerID] = -1, PlayerInfo[playerid][SellerID] = -1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // Protect Connection / Max Allowed Adress IP it's 2!
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AntiFlood[playerid][0] = GetTickCount(), AntiFlood[playerid][2] = GetTickCount();
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(ConnectedIPs(GetPlayerIPEx(playerid)) > 2) KickPlayer(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if((GetTickCount() - AntiFlood[playerid][0]) < 50)
	{
	    AntiFlood[playerid][1]++;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(AntiFlood[playerid][1] > 3) KickPlayer(playerid);
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DestroyObject(GetPVarInt(playerid, "neon")); DestroyObject(GetPVarInt(playerid, "neon1")); DestroyObject(GetPVarInt(playerid, "neon2")); DestroyObject(GetPVarInt(playerid, "neon3"));
    DestroyObject(GetPVarInt(playerid, "neon4")); DestroyObject(GetPVarInt(playerid, "neon5")); DestroyObject(GetPVarInt(playerid, "neon6")); DestroyObject(GetPVarInt(playerid, "neon7"));
	DestroyObject(GetPVarInt(playerid, "neon8")); DestroyObject(GetPVarInt(playerid, "neon9")); DestroyObject(GetPVarInt(playerid, "neon10")); DestroyObject(GetPVarInt(playerid, "neon11"));
    DestroyObject(GetPVarInt(playerid, "neon12")); DestroyObject(GetPVarInt(playerid, "neon13")); DestroyObject(GetPVarInt(playerid, "neon14")); DestroyObject(GetPVarInt(playerid, "neon15"));
    DestroyObject(GetPVarInt(playerid, "neon16")); DestroyObject(GetPVarInt(playerid, "neon17")); DestroyObject(GetPVarInt(playerid, "neon18")); DestroyObject(GetPVarInt(playerid, "neon19"));
    DestroyObject(GetPVarInt(playerid, "neon20")); DestroyObject(GetPVarInt(playerid, "neon21")); DestroyObject(GetPVarInt(playerid, "neon22")); DestroyObject(GetPVarInt(playerid, "neon23"));
	DestroyObject(GetPVarInt(playerid, "neon24")); DestroyObject(GetPVarInt(playerid, "neon25")); DestroyObject(GetPVarInt(playerid, "neon26")); DestroyObject(GetPVarInt(playerid, "neon27"));
    DestroyObject(GetPVarInt(playerid, "neon28")); DestroyObject(GetPVarInt(playerid, "neon29")); DestroyObject(GetPVarInt(playerid, "neon30")); DestroyObject(GetPVarInt(playerid, "neon31"));
    DestroyObject(GetPVarInt(playerid, "neon32")); DestroyObject(GetPVarInt(playerid, "neon33")); DestroyObject(GetPVarInt(playerid, "neon34")); DestroyObject(GetPVarInt(playerid, "neon35"));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//Reseting Timers
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	SpamCheck[playerid] 	= 0, 	ChatTime[playerid] 		= 0;
 	StuntTime[playerid] 	= 0, 	vTankTimer[playerid] 	= 0;
	vmtime[playerid]    	= 0, 	ReportTime[playerid] 	= 0;
    SpeedTime[playerid] 	= 0, 	VupTime[playerid] 		= 0;
	VUPLimit[playerid] 		= 10, 	MgTime[playerid]     	= 0;
	rockettime[playerid]	= 0,  	CaptureTimer[playerid] 	= 0;
	RocketTime[playerid]	= 0,    RconWeaponRestriction[playerid] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Timer for | CMD:rweap(ESS) - Random Weapon
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	RandomWeaponTimer[playerid] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new s = 0; s < MAX_GANGS; s++) PlayerInfo[playerid][gWarnInGang][s] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // Raport
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][r_Bans] = 0;
    PlayerInfo[playerid][r_Kicks] = 0;
    PlayerInfo[playerid][r_Warns] = 0;
    PlayerInfo[playerid][r_Mutes] = 0;
    PlayerInfo[playerid][r_Jails] = 0;
    PlayerInfo[playerid][r_Reports] = 0;
    PlayerInfo[playerid][r_Events] = 0;
    PlayerInfo[playerid][r_Check] = 0;
    PlayerInfo[playerid][r_Total] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][c_Rank] 		= 0, PlayerInfo[playerid][c_Kills] 	= 0;
	PlayerInfo[playerid][c_Deaths] 		= 0, PlayerInfo[playerid][c_Points] = 0;
	PlayerInfo[playerid][c_EXP]			= 0, PlayerInfo[playerid][c_Skin] 	= 0;
	PlayerInfo[playerid][c_Captures] 	= 0, PlayerInfo[playerid][c_Total] 	= 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][turftime] = 600, PlayerInfo[playerid][clanturfe] = 0;
	PlayerInfo[playerid][c_Capturing] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    //Reseting Another Variabiles
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	PlayerInfo[playerid][VBike]		  = 0, 	  PlayerInfo[playerid][VCar] 		= 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Fromating String Variabiles
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(PlayerInfo[playerid][StuntRank], 35, "{FF0000}Noob");
	format(PlayerInfo[playerid][RaceRank], 35, "{FF0000}Noob");
	format(PlayerInfo[playerid][DriftRank], 35, "{FF0000}Noob");
	format(PlayerInfo[playerid][KillerRank], 35, "{FF0000}Noob");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(PlayerInfo[playerid][ClanRank], 35, "Newbie");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Random TD AD's
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TD_ADs = CreatePlayerTextDraw(playerid, 249.000000, 409.000000, " ");
	PlayerTextDrawBackgroundColor(playerid, TD_ADs, 84215160);
	PlayerTextDrawFont(playerid, TD_ADs, 1);
	PlayerTextDrawLetterSize(playerid, TD_ADs, 0.200000, 1.000000);
	PlayerTextDrawColor(playerid, TD_ADs, -1);
	PlayerTextDrawSetOutline(playerid, TD_ADs, 0);
	PlayerTextDrawSetProportional(playerid, TD_ADs, 1);
	PlayerTextDrawSetShadow(playerid, TD_ADs, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Clan TD Territory
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Terry1 = CreatePlayerTextDraw(playerid, 468.000244, 311.774414, "[]");
    PlayerTextDrawLetterSize(playerid, Terry1, 0.786800, 3.645860);
    PlayerTextDrawAlignment(playerid, Terry1, 1);
    PlayerTextDrawColor(playerid, Terry1, -5963521);
    PlayerTextDrawSetShadow(playerid, Terry1, 0);
    PlayerTextDrawSetOutline(playerid, Terry1, 1);
    PlayerTextDrawBackgroundColor(playerid, Terry1, 51);
    PlayerTextDrawFont(playerid, Terry1, 2);
    PlayerTextDrawSetProportional(playerid, Terry1, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Terry2 = CreatePlayerTextDraw(playerid, 507.600006, 341.233337, "usebox");
    PlayerTextDrawLetterSize(playerid, Terry2, 0.000000, -3.469260);
    PlayerTextDrawTextSize(playerid, Terry2, 637.199951, 0.000000);
    PlayerTextDrawAlignment(playerid, Terry2, 1);
    PlayerTextDrawColor(playerid, Terry2, 0);
    PlayerTextDrawUseBox(playerid, Terry2, true);
    PlayerTextDrawBoxColor(playerid, Terry2, 102);
    PlayerTextDrawSetShadow(playerid, Terry2, 0);
    PlayerTextDrawSetOutline(playerid, Terry2, 0);
    PlayerTextDrawFont(playerid, Terry2, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Terry3 = CreatePlayerTextDraw(playerid, 520.000183, 314.346435, "_");
    PlayerTextDrawLetterSize(playerid, Terry3, 0.226798, 1.069865);
    PlayerTextDrawAlignment(playerid, Terry3, 1);
    PlayerTextDrawColor(playerid, Terry3, -5963521);
    PlayerTextDrawSetShadow(playerid, Terry3, 0);
    PlayerTextDrawSetOutline(playerid, Terry3, 1);
    PlayerTextDrawBackgroundColor(playerid, Terry3, 51);
    PlayerTextDrawFont(playerid, Terry3, 1);
    PlayerTextDrawSetProportional(playerid, Terry3, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Terry4 = CreatePlayerTextDraw(playerid, 520.799804, 324.053375, "_");
    PlayerTextDrawLetterSize(playerid, Terry4, 0.222799, 1.137066);
    PlayerTextDrawAlignment(playerid, Terry4, 1);
    PlayerTextDrawColor(playerid, Terry4, -1);
    PlayerTextDrawSetShadow(playerid, Terry4, 0);
    PlayerTextDrawSetOutline(playerid, Terry4, 1);
    PlayerTextDrawBackgroundColor(playerid, Terry4, 51);
    PlayerTextDrawFont(playerid, Terry4, 1);
    PlayerTextDrawSetProportional(playerid, Terry4, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Gang Protection
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GangWait[0] = CreatePlayerTextDraw(playerid, 491.000000, 262.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, GangWait[0], 255);
	PlayerTextDrawFont(playerid, GangWait[0], 1);
	PlayerTextDrawLetterSize(playerid, GangWait[0], 0.710000, 8.099996);
	PlayerTextDrawColor(playerid, GangWait[0], -1);
	PlayerTextDrawSetOutline(playerid, GangWait[0], 0);
	PlayerTextDrawSetProportional(playerid, GangWait[0], 1);
	PlayerTextDrawSetShadow(playerid, GangWait[0], 1);
	PlayerTextDrawUseBox(playerid, GangWait[0], 1);
	PlayerTextDrawBoxColor(playerid, GangWait[0], 842150600);
	PlayerTextDrawTextSize(playerid, GangWait[0], 130.000000, 30.000000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GangWait[1] = CreatePlayerTextDraw(playerid, 486.000000, 267.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, GangWait[1], 255);
	PlayerTextDrawFont(playerid, GangWait[1], 1);
	PlayerTextDrawLetterSize(playerid, GangWait[1], 0.710000, 6.999997);
	PlayerTextDrawColor(playerid, GangWait[1], -1);
	PlayerTextDrawSetOutline(playerid, GangWait[1], 0);
	PlayerTextDrawSetProportional(playerid, GangWait[1], 1);
	PlayerTextDrawSetShadow(playerid, GangWait[1], 1);
	PlayerTextDrawUseBox(playerid, GangWait[1], 1);
	PlayerTextDrawBoxColor(playerid, GangWait[1], 1263225800);
	PlayerTextDrawTextSize(playerid, GangWait[1], 134.000000, 56.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GangWait[2] = CreatePlayerTextDraw(playerid, 313.000000, 268.000000, "Gang Name");
	PlayerTextDrawAlignment(playerid, GangWait[2], 2);
	PlayerTextDrawBackgroundColor(playerid, GangWait[2], 255);
	PlayerTextDrawFont(playerid, GangWait[2], 3);
	PlayerTextDrawLetterSize(playerid, GangWait[2], 0.659999, 2.300000);
	PlayerTextDrawColor(playerid, GangWait[2], -11534081);
	PlayerTextDrawSetOutline(playerid, GangWait[2], 0);
	PlayerTextDrawSetProportional(playerid, GangWait[2], 1);
	PlayerTextDrawSetShadow(playerid, GangWait[2], 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GangWait[3] = CreatePlayerTextDraw(playerid, 140.000000, 295.000000, "~b~~h~~h~Te rugam sa astepti ~g~~h~X ~b~~h~~h~secunde pentru a putea juca iar!");
	PlayerTextDrawBackgroundColor(playerid, GangWait[3], 255);
	PlayerTextDrawFont(playerid, GangWait[3], 1);
	PlayerTextDrawLetterSize(playerid, GangWait[3], 0.350000, 1.300000);
	PlayerTextDrawColor(playerid, GangWait[3], 1635114495);
	PlayerTextDrawSetOutline(playerid, GangWait[3], 1);
	PlayerTextDrawSetProportional(playerid, GangWait[3], 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GangWait[4] = CreatePlayerTextDraw(playerid, 211.000000, 314.000000, "~y~~h~Daca vrei sa astepti mai putin, upgradeaza-te la VIP Gold!");
	PlayerTextDrawBackgroundColor(playerid, GangWait[4], 255);
	PlayerTextDrawFont(playerid, GangWait[4], 1);
	PlayerTextDrawLetterSize(playerid, GangWait[4], 0.220000, 1.000000);
	PlayerTextDrawColor(playerid, GangWait[4], -1);
	PlayerTextDrawSetOutline(playerid, GangWait[4], 0);
	PlayerTextDrawSetProportional(playerid, GangWait[4], 1);
	PlayerTextDrawSetShadow(playerid, GangWait[4], 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Race
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PONT2[0] = CreatePlayerTextDraw(playerid, 414.000000, 401.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, PONT2[0], 255);
	PlayerTextDrawFont(playerid, PONT2[0], 1);
	PlayerTextDrawLetterSize(playerid, PONT2[0], 0.720000, 6.199978);
	PlayerTextDrawColor(playerid, PONT2[0], -1);
	PlayerTextDrawSetOutline(playerid, PONT2[0], 0);
	PlayerTextDrawSetProportional(playerid, PONT2[0], 1);
	PlayerTextDrawSetShadow(playerid, PONT2[0], 1);
	PlayerTextDrawUseBox(playerid, PONT2[0], 1);
	PlayerTextDrawBoxColor(playerid, PONT2[0], 120);
	PlayerTextDrawTextSize(playerid, PONT2[0], 230.000000, 19.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PONT2[1] = CreatePlayerTextDraw(playerid, 238.000000, 402.000000, "PONT:");
	PlayerTextDrawBackgroundColor(playerid, PONT2[1], 255);
	PlayerTextDrawFont(playerid, PONT2[1], 1);
	PlayerTextDrawLetterSize(playerid, PONT2[1], 0.289999, 0.899999);
	PlayerTextDrawColor(playerid, PONT2[1], 16711935);
	PlayerTextDrawSetOutline(playerid, PONT2[1], 0);
	PlayerTextDrawSetProportional(playerid, PONT2[1], 1);
	PlayerTextDrawSetShadow(playerid, PONT2[1], 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PONT2[2] = CreatePlayerTextDraw(playerid, 237.000000, 412.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, PONT2[2], 255);
	PlayerTextDrawFont(playerid, PONT2[2], 1);
	PlayerTextDrawLetterSize(playerid, PONT2[2], 0.260000, 0.899999);
	PlayerTextDrawColor(playerid, PONT2[2], 16711935);
	PlayerTextDrawSetOutline(playerid, PONT2[2], 0);
	PlayerTextDrawSetProportional(playerid, PONT2[2], 1);
	PlayerTextDrawSetShadow(playerid, PONT2[2], 1);
   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Pont
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PONT[0] = CreatePlayerTextDraw(playerid, 415.000000, 417.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, PONT[0], 255);
	PlayerTextDrawFont(playerid, PONT[0], 1);
	PlayerTextDrawLetterSize(playerid, PONT[0], 0.809998, 3.700000);
	PlayerTextDrawColor(playerid, PONT[0], -1);
	PlayerTextDrawSetOutline(playerid, PONT[0], 0);
	PlayerTextDrawSetProportional(playerid, PONT[0], 1);
	PlayerTextDrawSetShadow(playerid, PONT[0], 1);
	PlayerTextDrawUseBox(playerid, PONT[0], 1);
	PlayerTextDrawBoxColor(playerid, PONT[0], 16843138);
	PlayerTextDrawTextSize(playerid, PONT[0], 245.000000, 5.000000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PONT[1] = CreatePlayerTextDraw(playerid, 250.000000, 416.000000, "PONT:");
	PlayerTextDrawBackgroundColor(playerid, PONT[1], 255);
	PlayerTextDrawFont(playerid, PONT[1], 1);
	PlayerTextDrawLetterSize(playerid, PONT[1], 0.250000, 0.899999);
	PlayerTextDrawColor(playerid, PONT[1], 16711935);
	PlayerTextDrawSetOutline(playerid, PONT[1], 0);
	PlayerTextDrawSetProportional(playerid, PONT[1], 1);
	PlayerTextDrawSetShadow(playerid, PONT[1], 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PONT[2] = CreatePlayerTextDraw(playerid, 250.000000, 425.000000, " ");
	PlayerTextDrawBackgroundColor(playerid, PONT[2], 255);
	PlayerTextDrawFont(playerid, PONT[2], 1);
	PlayerTextDrawLetterSize(playerid, PONT[2], 0.240000, 1.000000);
	PlayerTextDrawColor(playerid, PONT[2], -1);
	PlayerTextDrawSetOutline(playerid, PONT[2], 0);
	PlayerTextDrawSetProportional(playerid, PONT[2], 1);
	PlayerTextDrawSetShadow(playerid, PONT[2], 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Random_TD_Texts = CreatePlayerTextDraw(playerid, 247.000000, 410.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, Random_TD_Texts, 255);
	PlayerTextDrawFont(playerid, Random_TD_Texts, 1);
	PlayerTextDrawLetterSize(playerid, Random_TD_Texts, 0.200000, 1.000000);
	PlayerTextDrawColor(playerid, Random_TD_Texts, -1);
	PlayerTextDrawSetOutline(playerid, Random_TD_Texts, 0);
	PlayerTextDrawSetProportional(playerid, Random_TD_Texts, 1);
	PlayerTextDrawSetShadow(playerid, Random_TD_Texts, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Random_TD_Texts_RO = CreatePlayerTextDraw(playerid, 247.000000, 410.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, Random_TD_Texts_RO, 255);
	PlayerTextDrawFont(playerid, Random_TD_Texts_RO, 1);
	PlayerTextDrawLetterSize(playerid, Random_TD_Texts_RO, 0.200000, 1.000000);
	PlayerTextDrawColor(playerid, Random_TD_Texts_RO, -1);
	PlayerTextDrawSetOutline(playerid, Random_TD_Texts_RO, 0);
	PlayerTextDrawSetProportional(playerid, Random_TD_Texts_RO, 1);
	PlayerTextDrawSetShadow(playerid, Random_TD_Texts_RO, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Spec_Player1 = CreatePlayerTextDraw(playerid, 325.000000, 326.000000, "_");
	PlayerTextDrawAlignment(playerid, Spec_Player1, 2);
	PlayerTextDrawBackgroundColor(playerid, Spec_Player1, 255);
	PlayerTextDrawFont(playerid, Spec_Player1, 1);
	PlayerTextDrawLetterSize(playerid, Spec_Player1, 0.430000, 1.499999);
	PlayerTextDrawColor(playerid, Spec_Player1, -1);
	PlayerTextDrawSetOutline(playerid, Spec_Player1, 1);
	PlayerTextDrawSetProportional(playerid, Spec_Player1, 1);
	PlayerTextDrawSetSelectable(playerid, Spec_Player1, 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Spec_Player2 = CreatePlayerTextDraw(playerid, 325.000000, 342.000000, "_");
	PlayerTextDrawAlignment(playerid, Spec_Player2, 2);
	PlayerTextDrawBackgroundColor(playerid, Spec_Player2, 255);
	PlayerTextDrawFont(playerid, Spec_Player2, 1);
	PlayerTextDrawLetterSize(playerid, Spec_Player2, 0.430000, 1.499999);
	PlayerTextDrawColor(playerid, Spec_Player2, -1);
	PlayerTextDrawSetOutline(playerid, Spec_Player2, 1);
	PlayerTextDrawSetProportional(playerid, Spec_Player2, 1);
	PlayerTextDrawSetSelectable(playerid, Spec_Player2, 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Spec_Player3 = CreatePlayerTextDraw(playerid, 325.000000, 357.000000, "_");
	PlayerTextDrawAlignment(playerid, Spec_Player3, 2);
	PlayerTextDrawBackgroundColor(playerid, Spec_Player3, 255);
	PlayerTextDrawFont(playerid, Spec_Player3, 1);
	PlayerTextDrawLetterSize(playerid, Spec_Player3, 0.430000, 1.499999);
	PlayerTextDrawColor(playerid, Spec_Player3, -1);
	PlayerTextDrawSetOutline(playerid, Spec_Player3, 1);
	PlayerTextDrawSetProportional(playerid, Spec_Player3, 1);
	PlayerTextDrawSetSelectable(playerid, Spec_Player3, 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    ReportTD = CreatePlayerTextDraw(playerid, 546.000000, 24.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, ReportTD, 255);
	PlayerTextDrawFont(playerid, ReportTD, 3);
	PlayerTextDrawLetterSize(playerid, ReportTD, 0.400000, 2.000000);
	PlayerTextDrawColor(playerid, ReportTD, -10092289);
	PlayerTextDrawSetOutline(playerid, ReportTD, 1);
	PlayerTextDrawSetProportional(playerid, ReportTD, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Spec_Spawn1 = CreatePlayerTextDraw(playerid, 260.799926, 347.946838, "_");
    PlayerTextDrawBackgroundColor(playerid, Spec_Spawn1, 51);
    PlayerTextDrawAlignment(playerid, Spec_Spawn1, 1);
    PlayerTextDrawLetterSize(playerid, Spec_Spawn1, 0.449999, 1.600000);
    PlayerTextDrawColor(playerid, Spec_Spawn1, -1);
    PlayerTextDrawFont(playerid, Spec_Spawn1, 1);
    PlayerTextDrawSetOutline(playerid, Spec_Spawn1, 1);
	PlayerTextDrawSetProportional(playerid, Spec_Spawn1, 1);
	PlayerTextDrawSetShadow(playerid, Spec_Spawn1, 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Spec_Spawn2 = CreatePlayerTextDraw(playerid, 275.200012, 349.439880, "_");
    PlayerTextDrawBackgroundColor(playerid, Spec_Spawn2, 51);
    PlayerTextDrawAlignment(playerid, Spec_Spawn2, 1);
    PlayerTextDrawLetterSize(playerid, Spec_Spawn2, 0.449999, 1.600000);
    PlayerTextDrawColor(playerid, Spec_Spawn2, -1);
    PlayerTextDrawFont(playerid, Spec_Spawn2, 1);
    PlayerTextDrawSetOutline(playerid, Spec_Spawn2, 1);
	PlayerTextDrawSetProportional(playerid, Spec_Spawn2, 1);
	PlayerTextDrawSetShadow(playerid, Spec_Spawn2, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    gWarText[0] = CreatePlayerTextDraw(playerid, 635.000000, 422.000000, "_");
    PlayerTextDrawAlignment(playerid, gWarText[0], 3);
	PlayerTextDrawBackgroundColor(playerid, gWarText[0], 255);
	PlayerTextDrawFont(playerid, gWarText[0], 1);
	PlayerTextDrawLetterSize(playerid, gWarText[0], 0.349999, 1.200000);
	PlayerTextDrawColor(playerid, gWarText[0], -1);
	PlayerTextDrawSetOutline(playerid, gWarText[0], 0);
	PlayerTextDrawSetProportional(playerid, gWarText[0], 1);
	PlayerTextDrawSetShadow(playerid, gWarText[0], 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	gWarText[1] = CreatePlayerTextDraw(playerid, 635.000000, 433.000000, "_");
	PlayerTextDrawAlignment(playerid, gWarText[1], 3);
	PlayerTextDrawBackgroundColor(playerid, gWarText[1], 255);
	PlayerTextDrawFont(playerid, gWarText[1], 1);
	PlayerTextDrawLetterSize(playerid, gWarText[1], 0.349999, 1.200000);
 	PlayerTextDrawColor(playerid, gWarText[1], -1);
	PlayerTextDrawSetOutline(playerid, gWarText[1], 0);
	PlayerTextDrawSetProportional(playerid, gWarText[1], 1);
	PlayerTextDrawSetShadow(playerid, gWarText[1], 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	EventKills = CreatePlayerTextDraw(playerid, 635.000000, 433.000000, "_");
	PlayerTextDrawAlignment(playerid, EventKills, 3);
	PlayerTextDrawBackgroundColor(playerid, EventKills, 255);
	PlayerTextDrawFont(playerid, EventKills, 1);
	PlayerTextDrawLetterSize(playerid, EventKills, 0.349999, 1.200000);
 	PlayerTextDrawColor(playerid, EventKills, -1);
	PlayerTextDrawSetOutline(playerid, EventKills, 0);
	PlayerTextDrawSetProportional(playerid, EventKills, 1);
	PlayerTextDrawSetShadow(playerid, EventKills, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Targets1 = CreatePlayerTextDraw(playerid, 564.800109, 417.386749, "/targets");
    PlayerTextDrawLetterSize(playerid, Targets1, 0.449999, 1.600000);
    PlayerTextDrawAlignment(playerid, Targets1, 1);
    PlayerTextDrawColor(playerid, Targets1, -1);
    PlayerTextDrawSetShadow(playerid, Targets1, 0);
    PlayerTextDrawSetOutline(playerid, Targets1, 1);
    PlayerTextDrawBackgroundColor(playerid, Targets1, 51);
    PlayerTextDrawFont(playerid, Targets1, 3);
    PlayerTextDrawSetProportional(playerid, Targets1, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Targets2 = CreatePlayerTextDraw(playerid, 556.000000, 433.066680, "_");
    PlayerTextDrawLetterSize(playerid, Targets2, 0.449999, 1.600000);
    PlayerTextDrawAlignment(playerid, Targets2, 1);
    PlayerTextDrawColor(playerid, Targets2, -1);
    PlayerTextDrawSetShadow(playerid, Targets2, 0);
    PlayerTextDrawSetOutline(playerid, Targets2, 1);
    PlayerTextDrawBackgroundColor(playerid, Targets2, 51);
    PlayerTextDrawFont(playerid, Targets2, 3);
    PlayerTextDrawSetProportional(playerid, Targets2, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Capture TD
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CaptureTD[1] = CreatePlayerTextDraw(playerid,462.000000, 410.000000, "Your gang attack a territory!");
	PlayerTextDrawBackgroundColor(playerid,CaptureTD[1], 255);
	PlayerTextDrawFont(playerid,CaptureTD[1], 1);
	PlayerTextDrawLetterSize(playerid,CaptureTD[1], 0.340000, 1.600000);
	PlayerTextDrawColor(playerid,CaptureTD[1], 16711935);
	PlayerTextDrawSetOutline(playerid,CaptureTD[1], 0);
	PlayerTextDrawSetProportional(playerid,CaptureTD[1], 1);
	PlayerTextDrawSetShadow(playerid,CaptureTD[1], 1);
	PlayerTextDrawSetSelectable(playerid,CaptureTD[1], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CaptureTD[2] = CreatePlayerTextDraw(playerid,466.000000, 409.000000, "Your territory is under attacked!");
	PlayerTextDrawBackgroundColor(playerid,CaptureTD[2], 255);
	PlayerTextDrawFont(playerid,CaptureTD[2], 1);
	PlayerTextDrawLetterSize(playerid,CaptureTD[2], 0.300000, 1.900000);
	PlayerTextDrawColor(playerid,CaptureTD[2], -16776961);
	PlayerTextDrawSetOutline(playerid,CaptureTD[2], 0);
	PlayerTextDrawSetProportional(playerid,CaptureTD[2], 1);
	PlayerTextDrawSetShadow(playerid,CaptureTD[2], 1);
	PlayerTextDrawSetSelectable(playerid,CaptureTD[2], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CaptureTD[3] = CreatePlayerTextDraw(playerid,545.000000, 424.000000, "/capture info");
	PlayerTextDrawBackgroundColor(playerid,CaptureTD[3], 255);
	PlayerTextDrawFont(playerid,CaptureTD[3], 1);
	PlayerTextDrawLetterSize(playerid,CaptureTD[3], 0.370000, 1.400000);
	PlayerTextDrawColor(playerid,CaptureTD[3], -1);
	PlayerTextDrawSetOutline(playerid,CaptureTD[3], 0);
	PlayerTextDrawSetProportional(playerid,CaptureTD[3], 1);
	PlayerTextDrawSetShadow(playerid,CaptureTD[3], 1);
	PlayerTextDrawSetSelectable(playerid,CaptureTD[3], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Race TD
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    RaceTD[1] = CreatePlayerTextDraw(playerid,576.000000, 337.000000, "Races");
    PlayerTextDrawBackgroundColor(playerid, RaceTD[1], 255);
    PlayerTextDrawFont(playerid, RaceTD[1], 1);
    PlayerTextDrawLetterSize(playerid, RaceTD[1], 0.330000, 0.899999);
    PlayerTextDrawColor(playerid, RaceTD[1], 16711935);
    PlayerTextDrawSetOutline(playerid, RaceTD[1], 1);
    PlayerTextDrawSetProportional(playerid, RaceTD[1], 1);
    PlayerTextDrawSetSelectable(playerid, RaceTD[1], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    RaceTD[2] = CreatePlayerTextDraw(playerid,561.000000, 349.000000, "_");
    PlayerTextDrawBackgroundColor(playerid, RaceTD[2], 255);
    PlayerTextDrawFont(playerid, RaceTD[2], 1);
    PlayerTextDrawLetterSize(playerid, RaceTD[2], 0.210000, 0.799999);
    PlayerTextDrawColor(playerid, RaceTD[2], -1);
    PlayerTextDrawSetOutline(playerid, RaceTD[2], 1);
    PlayerTextDrawSetProportional(playerid, RaceTD[2], 1);
    PlayerTextDrawSetSelectable(playerid, RaceTD[2], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	RaceTD[3] = CreatePlayerTextDraw(playerid,561.000000, 358.000000, "_");
    PlayerTextDrawBackgroundColor(playerid, RaceTD[3], 255);
    PlayerTextDrawFont(playerid, RaceTD[3], 1);
    PlayerTextDrawLetterSize(playerid, RaceTD[3], 0.210000, 0.799999);
    PlayerTextDrawColor(playerid, RaceTD[3], -1);
    PlayerTextDrawSetOutline(playerid, RaceTD[3], 1);
    PlayerTextDrawSetProportional(playerid, RaceTD[3], 1);
    PlayerTextDrawSetSelectable(playerid, RaceTD[3], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	RaceTD[4] = CreatePlayerTextDraw(playerid,561.000000, 376.000000, "_");
    PlayerTextDrawBackgroundColor(playerid, RaceTD[4], 255);
    PlayerTextDrawFont(playerid, RaceTD[4], 1);
    PlayerTextDrawLetterSize(playerid, RaceTD[4], 0.210000, 0.799999);
    PlayerTextDrawColor(playerid, RaceTD[4], -1);
    PlayerTextDrawSetOutline(playerid, RaceTD[4], 1);
    PlayerTextDrawSetProportional(playerid, RaceTD[4], 1);
    PlayerTextDrawSetSelectable(playerid, RaceTD[4], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    RaceTD[5] = CreatePlayerTextDraw(playerid,561.000000, 385.000000, "_");
    PlayerTextDrawBackgroundColor(playerid, RaceTD[5], 255);
    PlayerTextDrawFont(playerid, RaceTD[5], 1);
    PlayerTextDrawLetterSize(playerid, RaceTD[5], 0.210000, 0.799999);
    PlayerTextDrawColor(playerid, RaceTD[5], -1);
    PlayerTextDrawSetOutline(playerid, RaceTD[5], 1);
    PlayerTextDrawSetProportional(playerid, RaceTD[5], 1);
    PlayerTextDrawSetSelectable(playerid, RaceTD[5], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    RaceTD[6] = CreatePlayerTextDraw(playerid,561.000000, 367.000000, "_");
    PlayerTextDrawBackgroundColor(playerid, RaceTD[6], 255);
    PlayerTextDrawFont(playerid, RaceTD[6], 1);
    PlayerTextDrawLetterSize(playerid, RaceTD[6], 0.210000, 0.799999);
    PlayerTextDrawColor(playerid, RaceTD[6], -1);
    PlayerTextDrawSetOutline(playerid, RaceTD[6], 1);
    PlayerTextDrawSetProportional(playerid, RaceTD[6], 1);
    PlayerTextDrawSetSelectable(playerid, RaceTD[6], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> AFK TextDraw
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	BRB[0] = CreatePlayerTextDraw(playerid,250.000000, 312.000000, "You are AFK");
    PlayerTextDrawBackgroundColor(playerid, BRB[0], 255);
    PlayerTextDrawFont(playerid, BRB[0], 2);
    PlayerTextDrawLetterSize(playerid, BRB[0], 0.500000, 2.300000);
    PlayerTextDrawColor(playerid, BRB[0], -14737409);
    PlayerTextDrawSetOutline(playerid, BRB[0], 1);
    PlayerTextDrawSetProportional(playerid, BRB[0], 1);
    PlayerTextDrawSetSelectable(playerid, BRB[0], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	BRB[1] = CreatePlayerTextDraw(playerid,255.000000, 334.000000, "[]");
    PlayerTextDrawBackgroundColor(playerid, BRB[1], 255);
    PlayerTextDrawFont(playerid, BRB[1], 2);
    PlayerTextDrawLetterSize(playerid, BRB[1], 0.500000, 2.300000);
    PlayerTextDrawColor(playerid, BRB[1], -14737409);
    PlayerTextDrawSetOutline(playerid, BRB[1], 1);
    PlayerTextDrawSetProportional(playerid, BRB[1], 1);
    PlayerTextDrawSetSelectable(playerid, BRB[1], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    BRB[2] = CreatePlayerTextDraw(playerid,286.000000, 333.000000, "/BACK");
    PlayerTextDrawBackgroundColor(playerid, BRB[2], 255);
    PlayerTextDrawFont(playerid, BRB[2], 2);
    PlayerTextDrawLetterSize(playerid, BRB[2], 0.500000, 2.300000);
    PlayerTextDrawColor(playerid, BRB[2], -1);
    PlayerTextDrawSetOutline(playerid, BRB[2], 1);
    PlayerTextDrawSetProportional(playerid, BRB[2], 1);
    PlayerTextDrawSetSelectable(playerid, BRB[2], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	BRB[3] = CreatePlayerTextDraw(playerid,339.000000, 334.000000, "[]");
    PlayerTextDrawBackgroundColor(playerid, BRB[3], 255);
    PlayerTextDrawFont(playerid, BRB[3], 2);
    PlayerTextDrawLetterSize(playerid, BRB[3], 0.500000, 2.300000);
    PlayerTextDrawColor(playerid, BRB[3], -14737409);
    PlayerTextDrawSetOutline(playerid, BRB[3], 1);
    PlayerTextDrawSetProportional(playerid, BRB[3], 1);
    PlayerTextDrawSetSelectable(playerid, BRB[3], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	// -> Killing Spree TD
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	KSpree[1] = CreatePlayerTextDraw(playerid, 358.000000, 325.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, KSpree[1], 255);
	PlayerTextDrawFont(playerid, KSpree[1], 2);
	PlayerTextDrawLetterSize(playerid, KSpree[1], 0.610000, 1.900000);
	PlayerTextDrawColor(playerid, KSpree[1], -1);
	PlayerTextDrawSetOutline(playerid, KSpree[1], 1);
	PlayerTextDrawSetProportional(playerid, KSpree[1], 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // Car View Textdraw
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	Car_Textdraw[0] = CreatePlayerTextDraw(playerid, 620.000000, 110.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, Car_Textdraw[0], 255);
	PlayerTextDrawFont(playerid, Car_Textdraw[0], 1);
	PlayerTextDrawLetterSize(playerid, Car_Textdraw[0], 0.600000, 1.900000);
	PlayerTextDrawColor(playerid, Car_Textdraw[0], -1);
	PlayerTextDrawSetOutline(playerid, Car_Textdraw[0], 0);
	PlayerTextDrawSetProportional(playerid, Car_Textdraw[0], 1);
	PlayerTextDrawSetShadow(playerid, Car_Textdraw[0], 1);
	PlayerTextDrawUseBox(playerid, Car_Textdraw[0], 1);
	PlayerTextDrawBoxColor(playerid, Car_Textdraw[0], 84215190);
	PlayerTextDrawTextSize(playerid, Car_Textdraw[0], 497.000000, 20.000000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Car_Textdraw[1] = CreatePlayerTextDraw(playerid, 502.000000, 111.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, Car_Textdraw[1], 255);
	PlayerTextDrawFont(playerid, Car_Textdraw[1], 2);
	PlayerTextDrawLetterSize(playerid, Car_Textdraw[1], 0.159999, 0.799999);
	PlayerTextDrawColor(playerid, Car_Textdraw[1], -1);
	PlayerTextDrawSetOutline(playerid, Car_Textdraw[1], 1);
	PlayerTextDrawSetProportional(playerid, Car_Textdraw[1], 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Car_Textdraw[2] = CreatePlayerTextDraw(playerid, 502.000000, 119.000000, "~g~~h~PONT: ~r~~h~~h~/tune /speed /KM /neon");
	PlayerTextDrawBackgroundColor(playerid, Car_Textdraw[2], 255);
	PlayerTextDrawFont(playerid, Car_Textdraw[2], 2);
	PlayerTextDrawLetterSize(playerid, Car_Textdraw[2], 0.159999, 0.799999);
	PlayerTextDrawColor(playerid, Car_Textdraw[2], -1);
	PlayerTextDrawSetOutline(playerid, Car_Textdraw[2], 1);
	PlayerTextDrawSetProportional(playerid, Car_Textdraw[2], 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Jobs
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	InfosTD = CreatePlayerTextDraw(playerid, 533.000000, 115.000000, "");
	PlayerTextDrawLetterSize(playerid, InfosTD, 0.240234, 1.110000);
	PlayerTextDrawTextSize(playerid, InfosTD, 0.000000, 303.000000);
	PlayerTextDrawAlignment(playerid, InfosTD, 2);
	PlayerTextDrawColor(playerid, InfosTD, -1);
	PlayerTextDrawSetShadow(playerid, InfosTD, 0);
	PlayerTextDrawSetOutline(playerid, InfosTD, 1);
	PlayerTextDrawBackgroundColor(playerid, InfosTD, 248);
	PlayerTextDrawFont(playerid, InfosTD, 1);
	PlayerTextDrawSetProportional(playerid, InfosTD, 1);
	PlayerTextDrawSetShadow(playerid, InfosTD, 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i, j = MAX_OBJECTS; i < j; i++) HoldsInfo[playerid][i][HoldUsed] = false;
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	SCM(playerid, WHITE, "");
   	SCM(playerid, WHITE, "");
   	SCM(playerid, WHITE, "");
   	SCM(playerid, WHITE, "");
   	SCM(playerid, WHITE, "");
   	SCM(playerid, WHITE, "");
   	SCM(playerid, WHITE, "");
   	SCM(playerid, WHITE, "");
   	SCM(playerid, WHITE, "");
   	SCM(playerid, WHITE, "");
   	SCM(playerid, WHITE, "");
   	SCM(playerid, WHITE, "");
   	SCM(playerid, WHITE, "");
  	SCM(playerid, WHITE, "");
	SCM(playerid, WHITE, "");
	SCM(playerid, WHITE, "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Special Zone
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	RemoveBuildingForPlayer(playerid, 13855, 1100.7578, -825.1719, 103.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 617, 1080.8125, -809.5781, 94.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 13725, 1100.7578, -825.1719, 103.4688, 0.25);
	return true;
}
public OnPlayerDisconnect(playerid, reason)
{
    eQuery[0] = EOS; eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][LoggedIn] == 1) SavePlayer(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][pCar] != -1) DestroyVehicle(PlayerInfo[playerid][pCar]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DestroyPersonalCars(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	OnDisconnect(playerid, reason);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `LoggedIn` = '0' WHERE `ID` = '%d'", PlayerInfo[playerid][AccID]);
    mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    UpdatePlayer(PN(playerid), "Status", 0);
    UpdatePlayer(PN(playerid), "PlayerIDConnect", -1);
    UpdatePlayer(PN(playerid), "TimesOnline", PlayerInfo[playerid][TimesOnline] += 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `TimePlayed` = 'Disconnected' WHERE `Name` = '%s'", PN(playerid));
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `AFK` = '-1' WHERE `Name` = '%s'", PN(playerid));
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Destroy Player 3D Head
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][RankHeadEnabled] = 0;
	DestroyDynamic3DTextLabel(PlayerRank[playerid]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Taxi Request Sistem
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][TaxiReuquested] == 1)
    {
        for(new i; i < MAX_PLAYERS; i++) if(PlayerInfo[i][TaxiAcceptedFor] == playerid)
        {
            PlayerInfo[i][TaxiLiber] = 0;
            FormatMSG(i, RED, "%s{FFFFFF} a iesit de la taxi, asadar nu mai esti in taxi request!", PN(playerid));
            PlayerInfo[i][TaxiAcceptedFor] = -1;
            DeleteVehicle(i);
        }
        PlayerInfo[playerid][TaxiReuquested] = 0;
    }
    if(PlayerInfo[playerid][TaxiAcceptedFor] != -1)
    {
        PlayerInfo[PlayerInfo[playerid][TaxiAcceptedFor]][TaxiLiber] = 0;
        PlayerInfo[PlayerInfo[playerid][TaxiAcceptedFor]][TaxiReuquested] = 0;
        FormatMSG(PlayerInfo[playerid][TaxiAcceptedFor], RED, "%s{FFFFFF} a anulat cererea ta de {FFFF00}TAXI.{FFFFFF} Foloseste{FF0000} /taxi call{FFFFFF} pentru a chema un nou taxi!", PN(playerid));
        PlayerInfo[playerid][TaxiAcceptedFor] = -1;
		KillTimer(PlayerInfo[playerid][TaxiUnderTimer]);
		DisablePlayerCheckpoint(playerid);
    }
    PlayerInfo[playerid][TaxiCheckPointSeted] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> FallOut Minigame
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InFallOut] == 1)
	{
	    PlayerInfo[playerid][InFallOut] = 0;
		FalloutPlayers--;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> HNS Minigame
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(ServerInfo[HNSStarter] == playerid)
    {
        SetOFFPonts();
    	RemovePlayerFromHNS(playerid);
    	KillTimer(PlayerInfo[playerid][HNSTimer]);
    	KillTimer(ServerInfo[HNSTimerCFG][0]);
    	KillTimer(ServerInfo[HNSTimerCFG][1]);
    	ResetHNSDefault();
    	TogglePlayerControllable(playerid, true);
    	SCMALL(RED, "Hide'n Seek{00FBFF} s-a terminat. Foloseste{38AD21} /hns{00FBFF} pentru a incepe din nou!");
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        foreach(new i: Player) if(PlayerInfo[i][InHNS] == 1 && ServerInfo[HNSStarter] == i)
        {
            RemovePlayerFromHNS(i);
			Announce(i, "~R~~H~Ai castigat~N~~Y~50 coins & $1000", 6000, 3);
			PlayerInfo[i][Coins] += 50;
			PlayerInfo[i][Money] += 1000;
			GivePlayerMoney(i, 1000);
        }
    }
    else RemovePlayerFromHNS(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerWorldBounds(playerid, WORLD_BOUND_DEFAULT);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Race System
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InRace] != 0)
	{
	    if(Races[PlayerInfo[playerid][InRace]][JoinCount] == 1) StopRace(PlayerInfo[playerid][InRace]);
		Races[PlayerInfo[playerid][InRace]][JoinCount]--;
		DestroyVehicle(CreatedRaceVeh[PlayerInfo[playerid][InRace]][playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
		Joined[PlayerInfo[playerid][InRace]][playerid] = 0;
		PlayerInfo[playerid][InRace] = 0;
		KillTimer(PlayerInfo[playerid][RaceTextdraw]);
		RaceTDHide(playerid);
    }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Personal Vehicle exit from Garage
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InPersGarage] == 1)
	{
        new i = PlayerInfo[playerid][CarVCP];
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetVehiclePos(Vehicles[i][vehicleData], PlayerInfo[playerid][LastPos][1], PlayerInfo[playerid][LastPos][2], PlayerInfo[playerid][LastPos][3]);
		SetVehicleVirtualWorld(Vehicles[i][vehicleData], 0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][InPersGarage] = 0;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> EditGang #Territory
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(TerryEditStage[playerid] >= 1)
    {
        KillTimer(TerryEditTimer[playerid]);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        Teritories[OnTerryEdit[playerid]][minx] = TerryData[playerid][0];
		Teritories[OnTerryEdit[playerid]][miny] = TerryData[playerid][1];
		Teritories[OnTerryEdit[playerid]][maxx] = TerryData[playerid][2];
		Teritories[OnTerryEdit[playerid]][maxy] = TerryData[playerid][3];
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GangZoneHideForAll(Teritories[OnTerryEdit[playerid]][ID]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GangZoneShowForAll(Teritories[OnTerryEdit[playerid]][ID], GangInfo[Teritories[OnTerryEdit[playerid]][owner]][pGangColor]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Gang War - /gwar
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InGangWar] == 1)
	{
	    new Player = PlayerInfo[playerid][gWarPlayer];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SpawnPlayer(playerid);
		SpawnPlayer(Player);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[playerid][InGangWar] = 0;
		PlayerInfo[Player][InGangWar] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		HidePlayerGangTextDraw(playerid);
		HidePlayerGangTextDraw(Player);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Announce(Player, "~G~~H~Gang war cancelled~N~~R~~H~The player has been left!", 3000, 3);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    ResetGwarVariables(playerid);
		ResetGwarVariables(Player);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		KillTimer(PlayerInfo[playerid][gWarUpdateTimer]);
		KillTimer(PlayerInfo[Player][gWarUpdateTimer]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Skate
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][SkateActive] == true)
    {
	    PlayerInfo[playerid][SkateActive] = false;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    DestroyObject(PlayerInfo[playerid][Skate]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    RemovePlayerAttachedObject(playerid, INDEX_SKATE);
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Death Matches Reset
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][InMinigun] = 0;
    PlayerInfo[playerid][InDE] = 0;
	PlayerInfo[playerid][InM4] = 0;
	PlayerInfo[playerid][InSniper] = 0;
	PlayerInfo[playerid][InMRF] = 0;
	PlayerInfo[playerid][InOH] = 0;
	PlayerInfo[playerid][InPRODM] = 0;
	PlayerInfo[playerid][InRocket] = 0;
	PlayerInfo[playerid][ClanArena] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][Registered] = 0;
    VehicleCaseForText[playerid] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> For Capture System
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Capturing] == 1)
    {
     	PlayerInfo[playerid][Capturing] = 0;
      	GangInfo[PlayerInfo[playerid][GangID]][CapturesJoins]--;
      	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      	if(PlayerInfo[playerid][CaptureStarter] == 1)
      	{
	      	foreach(new i: Player)
		    {
			    if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID])
				{
			  		Announce(i, "~R~~H~Capture failed!~N~~Y~unknown error!", 8000, 3);
			  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			  		PlayerTextDrawHide(i, PlayerText:CaptureTD[1]);
			  		PlayerTextDrawHide(i, PlayerText:CaptureTD[3]);
			  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[i][Capturing] = 0;
				}
				else if(PlayerInfo[i][GangID] == GangInfo[PlayerInfo[playerid][GangID]][GangTurfe])
				{
					Announce(i, "~G~~H~Your gang defense~N~~Y~was successfully!", 8000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerTextDrawHide(i, PlayerText:CaptureTD[2]);
					PlayerTextDrawHide(i, PlayerText:CaptureTD[3]);
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				KillTimer(PlayerInfo[playerid][GangCaptureTimer]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				GangInfo[GangInfo[PlayerInfo[playerid][GangID]][GangTurfe]][AttackBy] = 0;
				Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][owner] = GangInfo[PlayerInfo[playerid][GangID]][GangTurfe];
				GangZoneStopFlashForAll(Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][ID]);
		  		GangZoneHideForAll(Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][ID]);
				GangZoneShowForAll(Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][ID], GangInfo[GangInfo[PlayerInfo[playerid][GangID]][GangTurfe]][pGangColor]);
				Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][turfingby] = 0;
				GangInfo[PlayerInfo[playerid][GangID]][CapturesJoins] = 0;
				GangInfo[PlayerInfo[playerid][GangID]][CaptureTimeTurf] = 300;
				GangInfo[PlayerInfo[playerid][GangID]][c_Deaths] = 0;
				GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf] = 0;
				GangInfo[PlayerInfo[playerid][GangID]][CapturingGang] = 0;
				GangInfo[PlayerInfo[playerid][GangID]][GangTurfe] = 0;
				PlayerInfo[playerid][CaptureStarter] = 0;
				OnUpdate(2);
			}
		}
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // Sky Climb
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InSkyClimb] == 1)
	{
	    PlayerInfo[playerid][InSkyClimb] = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    TextForSkyClimbHide(playerid);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Sumo
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InSumo] == 1)
	{
		PlayerInfo[playerid][InSumo] = 0, TogglePlayerControllable(playerid, true);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    ServerInfo[SumoPlayers]--;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    ServerInfo[SumoSeatOcuped][PlayerInfo[playerid][SumoSeat]] = 0;
	   	PlayerInfo[playerid][SumoSeat] = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(SumoCar[playerid] != 0) DestroyVehicle(SumoCar[playerid]), SumoCar[playerid] = 0;
	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	foreach(new i: Player) if(PlayerInfo[i][InSumo] == 1 && ServerInfo[SumoPlayers] <= 1) CheckMinigames();
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Steal The Car
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InStealCar] == 1)
	{
		if(ServerInfo[StealCarOwner] == playerid)
	   	{
        	for(new i; i < MAX_PLAYERS; i++)
            {
                if(PlayerInfo[i][InStealCar] == 1)
			 	{
	                PlayerInfo[playerid][InStealCar] = 0;
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[i][InStealCar] = 0;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					ServerInfo[StealCarOwner] = -1;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					ServerInfo[StealcarStarted] = 0;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SpawnPlayer(i);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SCMALL(RED, "Steal the Car{00FBFF} s-a terminat. Foloseste{38AD21} /stealcar{00FBFF} pentru a incepe din nou!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					DestroyVehicle(StealerCar[i]);
				}
  			}
  		}
  	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // => Derby
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InDerby] == 1)
    {
        PlayerInfo[playerid][InDerby] = 0;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        BloodringFull[PlayerInfo[playerid][PlayerInBloodring]] = 0;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	PlayerInfo[playerid][PlayerInBloodring] = -1;
	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	SetPlayerVirtualWorld(playerid, 0), SetPlayerInterior(playerid, 0);
	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	CountPlayersInDerby--;
	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	foreach(new i: Player) if(PlayerInfo[i][InDerby] == 1 && CountPlayersInDerby <= 1) CheckMinigames();
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][boost] == 1) PlayerInfo[playerid][boost] = 0, KillTimer(PlayerInfo[playerid][boost_timer]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DestroyObject(GetPVarInt(playerid, "neon")); DestroyObject(GetPVarInt(playerid, "neon1")); DestroyObject(GetPVarInt(playerid, "neon2")); DestroyObject(GetPVarInt(playerid, "neon3"));
    DestroyObject(GetPVarInt(playerid, "neon4")); DestroyObject(GetPVarInt(playerid, "neon5")); DestroyObject(GetPVarInt(playerid, "neon6")); DestroyObject(GetPVarInt(playerid, "neon7"));
	DestroyObject(GetPVarInt(playerid, "neon8")); DestroyObject(GetPVarInt(playerid, "neon9")); DestroyObject(GetPVarInt(playerid, "neon10")); DestroyObject(GetPVarInt(playerid, "neon11"));
    DestroyObject(GetPVarInt(playerid, "neon12")); DestroyObject(GetPVarInt(playerid, "neon13")); DestroyObject(GetPVarInt(playerid, "neon14")); DestroyObject(GetPVarInt(playerid, "neon15"));
    DestroyObject(GetPVarInt(playerid, "neon16")); DestroyObject(GetPVarInt(playerid, "neon17")); DestroyObject(GetPVarInt(playerid, "neon18")); DestroyObject(GetPVarInt(playerid, "neon19"));
    DestroyObject(GetPVarInt(playerid, "neon20")); DestroyObject(GetPVarInt(playerid, "neon21")); DestroyObject(GetPVarInt(playerid, "neon22")); DestroyObject(GetPVarInt(playerid, "neon23"));
	DestroyObject(GetPVarInt(playerid, "neon24")); DestroyObject(GetPVarInt(playerid, "neon25")); DestroyObject(GetPVarInt(playerid, "neon26")); DestroyObject(GetPVarInt(playerid, "neon27"));
    DestroyObject(GetPVarInt(playerid, "neon28")); DestroyObject(GetPVarInt(playerid, "neon29")); DestroyObject(GetPVarInt(playerid, "neon30")); DestroyObject(GetPVarInt(playerid, "neon31"));
    DestroyObject(GetPVarInt(playerid, "neon32")); DestroyObject(GetPVarInt(playerid, "neon33")); DestroyObject(GetPVarInt(playerid, "neon34")); DestroyObject(GetPVarInt(playerid, "neon35"));
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayersInSoccer() == 0) ResetBallPosition();
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerTextDrawHide(playerid, PlayerText:ReportTD);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][DuelID] = -1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Auto Clear Reports
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	if(PlayerInfo[playerid][ReportedPlayer] == 1)
	{
		ServerInfo[CountReports]--;
		PlayerInfo[playerid][ReportedPlayer] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(ServerInfo[CountReports] <= -1) ServerInfo[CountReports] = 0;
		foreach(new i: Player) if(PlayerInfo[i][Level] >= 1) if(ServerInfo[CountReports] == 0) return PlayerTextDrawHide(i, ReportTD);
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//Reseting Timers
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	PlayerInfo[playerid][RepairTime] = 5,       PlayerInfo[playerid][BlowTime]  = 20,	SpamCheck[playerid]  			 = 0;
 	StuntTime[playerid]    	    	 = 0,		ChatTime[playerid]  	    	= 0,	vTankTimer[playerid] 			 = 0;
	MgTime[playerid]     		     = 0,		ReportTime[playerid] 			= 0,	RocketTime[playerid]  			 = 0;
	SpeedTime[playerid] 			 = 0,		SpeedLimit[playerid] 			= 10,	VupTime[playerid] 				 = 0;
	VUPLimit[playerid] 				 = 10;      vmtime[playerid]                = 0;
	rockettime[playerid]             = 0,       CaptureTimer[playerid]          = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Timer for | CMD:rweap(ESS) - Random Weapon
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	RandomWeaponTimer[playerid] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//Reseting Account Variabiles
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	PlayerInfo[playerid][RepairTime] = 5,       PlayerInfo[playerid][BlowTime]  = 20,	SpamCheck[playerid]  			 = 0;
 	StuntTime[playerid]    	    	 = 0,		ChatTime[playerid]  	    	= 0,	vTankTimer[playerid] 			 = 0;
	MgTime[playerid]     		     = 0,		ReportTime[playerid] 			= 0,	RocketTime[playerid]  			 = 0;
	SpeedTime[playerid] 			 = 0,		SpeedLimit[playerid] 			= 10,	VupTime[playerid] 				 = 0;
	VUPLimit[playerid] 				 = 10;      vmtime[playerid]                = 0;
	rockettime[playerid]             = 0;       CaptureTimer[playerid]          = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Timer for | CMD:rweap(ESS) - Random Weapon
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	RandomWeaponTimer[playerid] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//Reseting Account Variabiles
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][PlayerInBloodring] = -1,   PlayerInfo[playerid][PlayerInVortexCar] = -1,   PlayerInfo[playerid][RPreference]       = -1;
	PlayerInfo[playerid][AccID]	  		    = 0,	PlayerInfo[playerid][God]     	    	= 0,	PlayerInfo[playerid][InStunt]     		= 0;
	PlayerInfo[playerid][Ignore_PM]   		= 0,    PlayerInfo[playerid][InRepair] 			= 0,    PlayerInfo[playerid][UseHolds]          = 0;
	PlayerInfo[playerid][Ignore_Spec] 		= 0,    PlayerInfo[playerid][House] 			= 0;
	PlayerInfo[playerid][VCC] 				= 0,	PlayerInfo[playerid][Language] 	  		= -1,   PlayerInfo[playerid][Headshots] 	    = 0;
	PlayerInfo[playerid][RacePoints]  		= 0,	PlayerInfo[playerid][DriftPoints] 		= 0,	PlayerInfo[playerid][StuntPoints] 		= 0;
	PlayerInfo[playerid][Property] 			= 0,	PlayerInfo[playerid][InJob]             = 0,	PlayerInfo[playerid][PGoted] 		    = -1;
	PlayerInfo[playerid][PosRespect] 		= 0,    PlayerInfo[playerid][GPST]              = 0,	PlayerInfo[playerid][NegRespect]  		= 0;
    PlayerInfo[playerid][GPS]               = 0,	PlayerInfo[playerid][Ignore_Spec] 		= 0,	PlayerInfo[playerid][Ignore_Get] 	    = 0;
 	PlayerInfo[playerid][Deaths] 	  		= 0,	PlayerInfo[playerid][Kills] 		    = 0, 	PlayerInfo[playerid][Level] 	  		= 0;
	PlayerInfo[playerid][pVIP] 				= 0,	PlayerInfo[playerid][LoggedIn] 	  		= 0,    PlayerInfo[playerid][pColor] 			= 0;
    PlayerInfo[playerid][Coins] 	  		= 0,    PlayerInfo[playerid][hours] 			= 0,	PlayerInfo[playerid][mins] 		  		= 0;
	PlayerInfo[playerid][secs]				= 0, 	PlayerInfo[playerid][Ignore_Goto] 		= 0,  	PlayerInfo[playerid][KillingSpree]  	= 0;
    PlayerInfo[playerid][BestKillingSpree]  = 0, 	PlayerInfo[playerid][AFKBRB] 			= 0,	PlayerInfo[playerid][VUP] 				= 0;
	PlayerInfo[playerid][JumpSize] 			= 0,	PlayerInfo[playerid][Jailed] 			= 0,    PlayerInfo[playerid][SpeedB] 			= 0;
    PlayerInfo[playerid][Frozen]		    = 0,	PlayerInfo[playerid][Muted] 			= 0,	PlayerInfo[playerid][Hidden] 			= 0;
	PlayerInfo[playerid][Warnings] 			= 0,	PlayerInfo[playerid][pCar] 				= 0,	PlayerInfo[playerid][FailLogin] 		= 0;
    PlayerInfo[playerid][GodCar]            = 0,    PlayerInfo[playerid][ConnectTime] = gettime(),  PlayerInfo[playerid][RadioFav] 			= -1;
    PlayerInfo[playerid][PKicks] 		    = 0,	PlayerInfo[playerid][PMaths]		    = 0,	PlayerInfo[playerid][PWarns] 			= 0;
    PlayerInfo[playerid][PBans] 		    = 0,	PlayerInfo[playerid][PReactions]    	= 0,	PlayerInfo[playerid][PClearCH] 			= 0;
	PlayerInfo[playerid][PJails]	    	= 0,	PlayerInfo[playerid][PMutes] 			= 0,    PlayerInfo[playerid][HideTDS] 			= 0;
 	PlayerInfo[playerid][SpeedSize] 		= 0;    PlayerInfo[playerid][InDerby]           = 0,   	PlayerInfo[playerid][DuelID] 			= -1;
	PlayerInfo[playerid][DingOnShot] 		= 0,	PlayerInfo[playerid][InHouse] 			= 0,	PlayerInfo[playerid][Capturing]	    	= 0;
	PlayerInfo[playerid][LastKicker]        = 0,	PlayerInfo[playerid][Spectating] 		= 0;
    PlayerInfo[playerid][AdmW] 				= 0,    PlayerInfo[playerid][VIPW] 				= 0,	PlayerInfo[playerid][TVip] 				= 0;
    PlayerInfo[playerid][IsVipFree] 	    = 0,	PlayerInfo[playerid][VIPTime] 			= 0;
    PlayerInfo[playerid][GPS] 				= 0,    PlayerInfo[playerid][InMaze]            = 0;
	PlayerInfo[playerid][DriftCP][3]     	= 0, 	PlayerInfo[playerid][InMG][6]        	= 0,    PlayerInfo[playerid][VAC]               = 0;
	PlayerInfo[playerid][DriftCP][0]     	= 0,	PlayerInfo[playerid][DriftCP][1]     	= 0,	PlayerInfo[playerid][DriftCP][2]       	= 0;
 	PlayerInfo[playerid][DriftCP][4]     	= 0,	PlayerInfo[playerid][DriftCP][5]     	= 0,	PlayerInfo[playerid][Bait]            	= 0;
    PlayerInfo[playerid][Rod]            	= 0, 	PlayerInfo[playerid][Fishing]           = 0,	PlayerInfo[playerid][Inviter][0]      	= -1;
	PlayerInfo[playerid][Inviter][1]        = -1,	PlayerInfo[playerid][SDriftT]       	= 0,    PlayerInfo[playerid][HTag][0]           = 0;
	PlayerInfo[playerid][HTag][1]        	= 0,    PlayerInfo[playerid][InMG][1]           = 0,	PlayerInfo[playerid][InMG][2]           = 0;
	PlayerInfo[playerid][InMG][3]        	= 0,	PlayerInfo[playerid][InMG][4]        	= 0,    PlayerInfo[playerid][InMG][5]         	= 0;
	PlayerInfo[playerid][ClanID] 		    = 0, 	PlayerInfo[playerid][Invite]            = 0,    PlayerInfo[playerid][ChatColor]         = 16777215;
	PlayerInfo[playerid][STagOn]            = 0,    PlayerInfo[playerid][RepairTime] 		= 5,    PlayerInfo[playerid][BlowTime]  		= 20;
	rldtime[playerid] 				        = 0,    PlayerInfo[playerid][InWar] 			= 0,    PlayerInfo[playerid][InNascar] 			= 0;
	PlayerInfo[playerid][AWarings]          = 0,    PlayerInfo[playerid][Read][1]	    	= 0,    PlayerInfo[playerid][EventsMaded]       = 0;
	PlayerInfo[playerid][Read][2]		    = 0,    PlayerInfo[playerid][hoursADMIN]        = 0,    PlayerInfo[playerid][InMaze2]           = 0;
	PlayerInfo[playerid][Gifts]	    	    = 0,    PlayerInfo[playerid][DriftCP][6]     	= 0,    PlayerInfo[playerid][minutesADMIN]      = 0;
    PlayerInfo[playerid][FW]                = 0,    PlayerInfo[playerid][secondsADMIN]      = 0,    PlayerInfo[playerid][MyTimeHave]        = 0;
    PlayerInfo[playerid][RecentlyRobbed]    = 0,    PlayerInfo[playerid][NRGMaze]           = 0,    PlayerInfo[playerid][AccLocked]         = gettime();
    PlayerInfo[playerid][HG]                = 0,    PlayerInfo[playerid][Gems]              = 0,    PlayerInfo[playerid][ARClosed]          = 0;
    PlayerInfo[playerid][Activity]          = 0,    PlayerInfo[playerid][gemsMonth]         = 0;
    PlayerInfo[playerid][Shopkey]           = 0,    PlayerInfo[playerid][DriftMonth]        = 0,    PlayerInfo[playerid][RaceMonth]         = 0;
    PlayerInfo[playerid][StuntMonth]        = 0,    PlayerInfo[playerid][MySkin]            = 0,    PlayerInfo[playerid][KillsMonth]        = 0;
    PlayerInfo[playerid][SPassword]         = 0,    PlayerInfo[playerid][Blacklist]         = 0;    PlayerInfo[playerid][PointsMonth]       = 0;
    PlayerInfo[playerid][hoursMonth]        = 0,    PlayerInfo[playerid][minsMonth]         = 0,    PlayerInfo[playerid][secsMonth]         = 0,
    PlayerInfo[playerid][invisible]         = 0,    PlayerInfo[playerid][afob]              = 0;    PlayerInfo[playerid][respectMonth][0]   = 0;
    PlayerInfo[playerid][reports]           = 0,    PlayerInfo[playerid][DJ]                = 0;    PlayerInfo[playerid][respectMonth][1]   = 0;
    PlayerInfo[playerid][inlogging]         = 0,    PlayerInfo[playerid][Spawned]           = 0,    PlayerInfo[playerid][LastCarCP]         = 0,
    PlayerInfo[playerid][RPG2]              = 0,    PlayerInfo[playerid][g_Time][5]         = gettime();
    PlayerInfo[playerid][g_Skin] 			= 0,    PlayerInfo[playerid][GangTank]   		= 0;    PlayerInfo[playerid][PointsX2Month]     = 0;
    PlayerInfo[playerid][GangID] 			= 0, 	PlayerInfo[playerid][g_Rank] 			= 0;
    PlayerInfo[playerid][g_Kills] 			= 0,	PlayerInfo[playerid][g_Deaths] 			= 0;
    PlayerInfo[playerid][g_Captures] 		= 0,	PlayerInfo[playerid][g_Points] 			= 0;
    PlayerInfo[playerid][DingOnShot] 		= 0,	PlayerInfo[playerid][InHouse] 			= 0,	PlayerInfo[playerid][Capturing]	    	= 0;
	PlayerInfo[playerid][LastKicker]        = 0,	PlayerInfo[playerid][Spectating] 		= 0;
    PlayerInfo[playerid][AdmW] 				= 0,    PlayerInfo[playerid][VIPW] 				= 0,	PlayerInfo[playerid][TVip] 				= 0;
    PlayerInfo[playerid][IsVipFree] 		= 0,	PlayerInfo[playerid][VIPTime] 			= 0;
	PlayerInfo[playerid][DriftCP][3]     	= 0, 	PlayerInfo[playerid][InMG][6]           = 0;
	PlayerInfo[playerid][DriftCP][0]     	= 0,	PlayerInfo[playerid][DriftCP][1]     	= 0,	PlayerInfo[playerid][DriftCP][2]        = 0;
 	PlayerInfo[playerid][DriftCP][4]     	= 0,	PlayerInfo[playerid][DriftCP][5]     	= 0,	PlayerInfo[playerid][Bait]          	= 0;
    PlayerInfo[playerid][Rod]            	= 0, 	PlayerInfo[playerid][Fishing]           = 0,	PlayerInfo[playerid][Inviter][0]     	= -1;
	PlayerInfo[playerid][Inviter][1]        = -1,	PlayerInfo[playerid][SDriftT]       	= 0,    PlayerInfo[playerid][HTag][0]           = 0;
	PlayerInfo[playerid][HTag][1]        	= 0,    PlayerInfo[playerid][InMG][1]           = 0,	PlayerInfo[playerid][InMG][2]           = 0;
	PlayerInfo[playerid][InMG][3]        	= 0,	PlayerInfo[playerid][InMG][4]        	= 0,    PlayerInfo[playerid][InMG][5]        	= 0;
	PlayerInfo[playerid][ClanID] 			= 0, 	PlayerInfo[playerid][Invite]            = 0,    PlayerInfo[playerid][ClanArena]         = 0;
	rldtime[playerid] 				        = 0,    PlayerInfo[playerid][DriftCP][6]     	= 0;
	PlayerInfo[playerid][HG]                = 0,    PlayerInfo[playerid][InRec]             = 0;
	PlayerInfo[playerid][Shopkey]           = 0,    PlayerInfo[playerid][DriftMonth]        = 0;
	PlayerInfo[playerid][RaceMonth]         = 0,    PlayerInfo[playerid][StuntMonth]        = 0,    PlayerInfo[playerid][MySkin]            = 0;
	PlayerInfo[playerid][KillsMonth]        = 0,    PlayerInfo[playerid][LastCarCP]         = 0,    PlayerInfo[playerid][UseHolds]          = 0;
	PlayerInfo[playerid][InDM]              = 0, 	PlayerInfo[playerid][FLogin][2]         = 0,    PlayerInfo[playerid][TimesOnline]       = 0;
	PlayerInfo[playerid][FLogin][1]         = 0,    PlayerInfo[playerid][AdminTimeConnect]  = gettime();
	for (new i = 0; i < 14; i++) { DestroyObject(PlayerInfo[playerid][QuestObjectInVehicle][i]); }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TeleportCmd[playerid] = ""; TeleportName[playerid] = "";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_JOBS; i++) PlayerInfo[playerid][JobFinished][i] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][JobsFinishedCount] 	= 0;
	PlayerInfo[playerid][GoldVIPTaken]      	= 0,    PlayerInfo[playerid][InTargets]         = 0,    PlayerInfo[playerid][TargetPoints]      = 0;
	PlayerInfo[playerid][TargetsKills]      	= 0,    PlayerInfo[playerid][DuelID]   			= 0, 	PlayerInfo[playerid][DuelWeapon]		= 0;
	PlayerInfo[playerid][DuelMiza]				= 0, 	PlayerInfo[playerid][InDuel]			= 0,    PlayerInfo[playerid][InMinigun]         = 0;
	PlayerInfo[playerid][InM4]					= 0,    PlayerInfo[playerid][InRocket]			= 0,    PlayerInfo[playerid][InSniper]			= 0;
	PlayerInfo[playerid][InMRF]					= 0,    PlayerInfo[playerid][InDE]				= 0,    PlayerInfo[playerid][InPRODM]			= 0;
	format(PlayerInfo[playerid][DLine1], 300, ""),  	format(PlayerInfo[playerid][DLine2], 300, ""),  format(PlayerInfo[playerid][DLine3], 300, "");
	PlayerInfo[playerid][Quests]            	= 0,    PlayerInfo[playerid][AdminBlacklist]    = 0,    PlayerInfo[playerid][InGarena] 			= 0;
	PlayerInfo[playerid][RconType]          	= 0,    PlayerInfo[playerid][g_Time][1] 		= 0,    PlayerInfo[playerid][g_Time][2] 		= 0;
	PlayerInfo[playerid][g_Time][3] 			= 0,    OnTerryEdit[playerid]					= 0,    TerryEditStage[playerid]				= 0;
	InCheckPointEdit[playerid]              	= 0,    OnGangEdit[playerid]                    = 0,    PlayerInfo[playerid][InSantaLand]       = 0;
	PlayerInfo[playerid][InSantaLottery]    	= 0,    PlayerInfo[playerid][InSantaToyCar]     = 0,	PlayerInfo[playerid][InSpringQuest][0]	= 0;
	PlayerInfo[playerid][InSpringQuest][1]   	= 0, 	PlayerInfo[playerid][InSpringQuest][2] 	= 0,    DestroyVehicle(PlayerInfo[playerid][SpringQuestVehicle]);
	PlayerInfo[playerid][QuestAppleAvailable] 	= 0,    PlayerInfo[playerid][QuestAppleSold]    = 0;
	for(new i = 0; i < MAX_GANGPICKUPS; i++) KillTimer(PlayerInfo[playerid][GangTimerSet]), PlayerInfo[playerid][GangPickupTimer][i] = 0;
 	PlayerInfo[playerid][VehSelect]             = 0,    PlayerInfo[playerid][CameraViewRequest] = 0,    EditingSpawnCP[playerid]                = 0;
 	EditingSpawnCPA[playerid]                   = 0,    PlayerInfo[playerid][RadioListen]       = 0,    PlayerInfo[playerid][InOH]              = 0;
 	PlayerInfo[playerid][StageWeaponGG]         = 0,    PlayerInfo[playerid][InGG]              = 0,    GangCameraEdit[playerid]                = 0;
 	PlayerInfo[playerid][DataSet]               = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    //Reseting Another Variabiles
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	PlayerInfo[playerid][VBike] 	= 0,   	PlayerInfo[playerid][VCar] 			= 0;
  	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//Fromating String Variabiles
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	format(PlayerInfo[playerid][StuntRank], 35, "{FF4800}Begginer");
	format(PlayerInfo[playerid][RaceRank], 35, "{FF4800}Begginer");
	format(PlayerInfo[playerid][DriftRank], 35, "{FF4800}Begginer");
	format(PlayerInfo[playerid][KillerRank], 35, "{FF4800}Begginer");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AntiFlood[playerid][1] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new x: Player) if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid) CheckingDisSpectate(x);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DestroyVehObject(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][JobID] != 0)
	{
		PlayerInfo[playerid][JobID] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(JobVehicle[playerid] != 0) DestroyVehicle(JobVehicle[playerid]);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		DisablePlayerCheckpoint(playerid), JobVehicle[playerid] = 0;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InWar] == 1) CountPlayersInWar--;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InNascar] == 1) CountPlayersInNascar--;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(CountPlayersInNascar == 0) CountPlayersInNascar = 0, ServerInfo[NascarStarted] = 0, NascarWinner = 0;
 	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Get Player IP Location
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:test(ESS)
{
	new test[100];
	test = "test";
	new stringLength = strlen(test);
	SCM(playerid, WHITE, test[stringLength-1]);
}
CMD:location(ESS)
{
	new title[50], string[200];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 8);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "u", params[0])) return SendUsage(playerid, "/location [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(title, sizeof(title), "{FF0000}%s{FFFFFF}'s IP Location:", PN(params[0]));
	format(string, sizeof(string), "\
	{00CC00}Country: {FF0000}%s\n\
	{00CC00}City: {FF0000}%s", PlayerInfo[params[0]][IPCountry], PlayerInfo[params[0]][IPCity]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_EMPTY, MSGBOX, title, string, "Close", "");
	return true;
}
function GetPlayerCountry(playerid, response_code, data[]) { if(response_code == 200) format(PlayerInfo[playerid][IPCountry], 50, "%s", data); }
function GetPlayerCity(playerid, response_code, data[]) { if(response_code == 200) format(PlayerInfo[playerid][IPCity], 50, "%s", data); }
function SetPlayerLocation(playerid, type)
{
	new string[500];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(type)
	{
	    case 1:
		{
			format(string, sizeof(string), "ess-ro.com/includes/sampfunctions.php?function=ipget&ip=%s&type=1", GetPlayerIPEx(playerid));
			HTTP(playerid, HTTP_GET, string, "", "GetPlayerCountry");
		}
	    case 2:
		{
			format(string, sizeof(string), "ess-ro.com/includes/sampfunctions.php?function=ipget&ip=%s&type=2", GetPlayerIPEx(playerid));
			HTTP(playerid, HTTP_GET, string, "", "GetPlayerCity");
		}
	}
}
stock GetRconType(type)
{
	new string[24];
	switch(type)
	{
	    case 0: string = "Admin";
	    case 1: string = "RCON";
	    case 2: string = "Support";
	    case 3: string = "Manager";
	}
	return string;
}
stock GetListeners(RadioID)
{
    new string[30], listeners;
    for(new i = 0; i < MAX_PLAYERS; i++)
    if(PlayerInfo[i][RadioListen] == RadioID) listeners++;
    if(listeners != 0) format(string, sizeof(string), "{FFFFFF}Listeners:{00CC00} %d", listeners);
    else format(string, sizeof(string), "{FF0000}Nobody");
    return string;
}
stock GetPlayerTotallyRank(playerid)
{
	new string[25];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][PersonalTagColor] != 0) format(string, sizeof(string), "{%06x}%s", PlayerInfo[playerid][PersonalTagColor] >>> 8, PlayerInfo[playerid][PersonalTagString]);
	else
	{
		if(PlayerInfo[playerid][RconType] == 3) string = "{FF0000}Manager";
		else if(PlayerInfo[playerid][RconType] == 2) string = "{FF5555}Support";
		else if(PlayerInfo[playerid][RconType] == 1) string = GetRconType(1);
		else if(PlayerInfo[playerid][Level] >= 1) string = "{3333FF}Admin";
		else if(PlayerInfo[playerid][pVIP] == 2) string = "{FFD700}VIP";
		else if(PlayerInfo[playerid][pVIP] == 1) string = "{808080}VIP";
	}
	return string;
}
function UpdatePlayerRankHead(playerid)
{
    if(GetPlayerState(playerid) != 1 && GetPlayerState(playerid) != 2 && GetPlayerState(playerid) != 3)
	{
	    DestroyDynamic3DTextLabel(PlayerRank[playerid]);
	    PlayerInfo[playerid][RankHeadEnabled] = 0;
	    Streamer_Update(playerid);
		return true;
	}
	switch(PlayerInfo[playerid][RankHeadEnabled])
	{
	    case 0:
		{
			PlayerRank[playerid] = CreateDynamic3DTextLabel(GetPlayerTotallyRank(playerid), -1, 0, 0, 0.4, 10, playerid);
			PlayerInfo[playerid][RankHeadEnabled] = 1;
			Streamer_Update(playerid);
		}
	    case 1: UpdateDynamic3DTextLabelText(PlayerRank[playerid], -1, GetPlayerTotallyRank(playerid)), Streamer_Update(playerid);
	}
	return true;
}
function CheckIfPosAreGangTerry(Float:x, Float:y, Float:z)
{
	new value;
	for(new i = 0; i < MAX_GANGS; i++)
	if(IsPointInRangeOfPoint(200, GangInfo[i][GangX], GangInfo[i][GangY], GangInfo[i][GangZ], x, y, z)) value = 1;
	return value;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
    MapAndreas_Init(1);
	MapAndreas_FindZ_For2DCoord(fX, fY, fZ);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][TaxiReuquested] == 1 && PlayerInfo[playerid][TaxiCheckPointSeted] == 0)
	{
		PlayerInfo[playerid][TaxiCheckPointSeted] = 1;
		for(new i; i < MAX_PLAYERS; i++) if(PlayerInfo[i][TaxiAcceptedFor] == playerid)
		{
		    Announce(i, "~Y~Checkpoint have been seted~N~~G~~H~go to the destination!", 6000, 3);
		    SetPlayerCheckpoint(i, fX, fY, fZ, 3);
		    PlayerInfo[i][GoingToFinishTaxi] = 1;
		}
	}
	else if(PlayerInfo[playerid][TaxiReuquested] == 0 && PlayerInfo[playerid][Level] >= 5)
	{
	    if(CheckIfPosAreGangTerry(fX, fY, fZ) == 1 && PlayerInfo[playerid][RconType] == 0) return SendError(playerid, "You can't teleport nearby to a gang territory!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetPlayerPos(playerid, fX, fY, fZ+0.3);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    foreach(new i: Player)
		{
	 		if(PlayerInfo[i][Level] != 0)
	 		{
	    		FormatMSG(i, ABLUE, "[ADMIN] {00CC00}%s{0066FF} teleported to a position on the map", PN(playerid));
			}
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    FormatMSG(playerid, ABLUE, "You have been teleported at the following position: %.2f, %.2f, %.2f!", fX, fY, fZ);
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerModelSelection(playerid, response, listid, modelid)
{
    if(listid == objectlist)
    {
        if(response)
        {
            HoldModel1[playerid] = modelid;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            switch(PlayerInfo[playerid][Language])
			{
				case 1:
				{
				    SPD(playerid, Holds_D +2, LIST, "{0DFF00}Partea corpului", "Splina\nCap\nUmarul drept\nUmarul Stang\nMana Dreapta\nMana Stanga\nGamba Dreapta\nGamba Stanga\nPicior Drept\nPicior Stang\nCalcai Stang\nCalcai Drept\nAntebrat Drept\nAntebrat Stang\nUmarul Drept\nUmarul Stang\nGat\nMaxilar", "Selecteaza", "Cancel");
				}
				case 2:
				{
				    SPD(playerid, Holds_D +2, LIST, "{0DFF00}Body part", "Spine\nHead\nLeft Upper Arm\nRight Upper Arm\nLeft Hand\nRight Hand\nLeft Tight\nRight Tight\nLeft Foot\nRight Foot\nRight Calf\nLeft Calf\nLeft Forearm\nRight Forearm\nLeft Shoulder\nRight Shoulder\nNeck\nJaw", "Select", "Cancel");
				}
			}
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        }
        return true;
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(listid == skinss)
    {
        if(response)
        {
			SetPlayerSkin(playerid, modelid);
        }
        return true;
    }
	if(listid == mskinlist) // Default Skin
	{
	    if(response)
	    {
	        SetPlayerSkin(playerid, modelid), Clan[PlayerInfo[playerid][ClanID]][Skin] = modelid;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(PlayerInfo[playerid][Language] == 1) return SPD(playerid, DIALOG_CREATECLAN + 3, INPUT, "{FFFFFF}Create Clan{FF0000} - Pasul #4{FFFFFF} - Alege Culoarea", "{FFE600}Please enter a 'HEX' color! EX {FF0000}FF0000{FFE600}!", "Enter", "Inchide");
			if(PlayerInfo[playerid][Language] == 2) return SPD(playerid, DIALOG_CREATECLAN + 3, INPUT, "{FFFFFF}Create Clan{FF0000} - Pasul #4{FFFFFF} - Choose The Color", "{FFE600}Please enter a 'HEX' color! EX {FF0000}FF0000{FFE600}!", "Enter", "Inchide");
		}
	    return true;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(listid == Cars[0] || listid == Cars[1] || listid == Cars[2] || listid == Cars[3]
 	|| listid == Cars[4] || listid == Cars[5] || listid == Cars[6] || listid == Cars[7]
    || listid == Cars[8] || listid == Cars[9] || listid == Cars[10] || listid == Cars[11])
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(response)
	{
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		new Float:cPos[4], liColor[2], LVehicleID, int1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		liColor[0] = random(250);
		liColor[1] = random(250);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GetPlayerPos(playerid, cPos[0], cPos[1], cPos[2]);
		GetPlayerFacingAngle(playerid, cPos[3]);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		int1 = GetPlayerInterior(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		LVehicleID = AddStaticVehicleEx(modelid, cPos[0]+3, cPos[1], cPos[2], cPos[3], liColor[0], liColor[1], -1);
		LinkVehicleToInterior(LVehicleID, int1);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid));
		PutPlayerInVehicle(playerid, LVehicleID, 0);
		PlayerInfo[playerid][pCar] = LVehicleID;
	}
	if(listid == v_bycikles)
	{
	    if(response)
		{
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			new Float:cPos[4], liColor[2], LVehicleID, int1;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			liColor[0] = random(250);
			liColor[1] = random(250);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GetPlayerPos(playerid, cPos[0], cPos[1], cPos[2]);
			GetPlayerFacingAngle(playerid, cPos[3]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			int1 = GetPlayerInterior(playerid);
			LVehicleID = AddStaticVehicleEx(modelid, cPos[0]+3, cPos[1], cPos[2], cPos[3], liColor[0], liColor[1], -1);
			LinkVehicleToInterior(LVehicleID, int1);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid));
			PutPlayerInVehicle(playerid, LVehicleID, 0);
			PlayerInfo[playerid][pCar] = LVehicleID;
		}
	}
	if(listid == v_bikes)
	{
	    if(response)
		{

			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			new Float:cPos[4], liColor[2], LVehicleID, int1;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			liColor[0] = random(250);
			liColor[1] = random(250);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GetPlayerPos(playerid, cPos[0], cPos[1], cPos[2]);
			GetPlayerFacingAngle(playerid, cPos[3]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			int1 = GetPlayerInterior(playerid);
			LVehicleID = AddStaticVehicleEx(modelid, cPos[0]+3, cPos[1], cPos[2], cPos[3], liColor[0], liColor[1], -1);
			LinkVehicleToInterior(LVehicleID, int1);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid));
			PutPlayerInVehicle(playerid, LVehicleID, 0);
			PlayerInfo[playerid][pCar] = LVehicleID;
		}
	}
	if(listid == v_mtrucks)
	{
		if(response)
		{
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			new Float:cPos[4], liColor[2], LVehicleID, int1;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			liColor[0] = random(250);
			liColor[1] = random(250);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GetPlayerPos(playerid, cPos[0], cPos[1], cPos[2]);
			GetPlayerFacingAngle(playerid, cPos[3]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			int1 = GetPlayerInterior(playerid);
			LVehicleID = AddStaticVehicleEx(modelid, cPos[0]+3, cPos[1], cPos[2], cPos[3], liColor[0], liColor[1], -1);
			LinkVehicleToInterior(LVehicleID, int1);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid));
			PutPlayerInVehicle(playerid, LVehicleID, 0);
			PlayerInfo[playerid][pCar] = LVehicleID;
		}
	}
	if(listid == v_boats)
	{
	    if(response)
		{

			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			new Float:cPos[4], liColor[2], LVehicleID, int1;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			liColor[0] = random(250);
			liColor[1] = random(250);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GetPlayerPos(playerid, cPos[0], cPos[1], cPos[2]);
			GetPlayerFacingAngle(playerid, cPos[3]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			int1 = GetPlayerInterior(playerid);
			LVehicleID = AddStaticVehicleEx(modelid, cPos[0]+3, cPos[1], cPos[2], cPos[3], liColor[0], liColor[1], -1);
			LinkVehicleToInterior(LVehicleID, int1);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid));
			PutPlayerInVehicle(playerid, LVehicleID, 0);
			PlayerInfo[playerid][pCar] = LVehicleID;
		}
	}
	if(listid == v_helicopters)
	{
	    if(response)
		{

			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			new Float:cPos[4], liColor[2], LVehicleID, int1;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			liColor[0] = random(250);
			liColor[1] = random(250);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GetPlayerPos(playerid, cPos[0], cPos[1], cPos[2]);
			GetPlayerFacingAngle(playerid, cPos[3]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			int1 = GetPlayerInterior(playerid);
			LVehicleID = AddStaticVehicleEx(modelid, cPos[0]+3, cPos[1], cPos[2], cPos[3], liColor[0], liColor[1], -1);
			LinkVehicleToInterior(LVehicleID, int1);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid));
			PutPlayerInVehicle(playerid, LVehicleID, 0);
			PlayerInfo[playerid][pCar] = LVehicleID;
		}
	}
	if(listid == v_planes)
	{
	    if(response)
		{
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			new Float:cPos[4], liColor[2], LVehicleID, int1;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			liColor[0] = random(250);
			liColor[1] = random(250);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GetPlayerPos(playerid, cPos[0], cPos[1], cPos[2]);
			GetPlayerFacingAngle(playerid, cPos[3]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			int1 = GetPlayerInterior(playerid);
			LVehicleID = AddStaticVehicleEx(modelid, cPos[0]+3, cPos[1], cPos[2], cPos[3], liColor[0], liColor[1], -1);
			LinkVehicleToInterior(LVehicleID, int1);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid));
			PutPlayerInVehicle(playerid, LVehicleID, 0);
			PlayerInfo[playerid][pCar] = LVehicleID;
		}
	}
	if(listid == v_rcs)
	{
	    if(response)
		{
			if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			new Float:cPos[4], liColor[2], LVehicleID, int1;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			liColor[0] = random(250);
			liColor[1] = random(250);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GetPlayerPos(playerid, cPos[0], cPos[1], cPos[2]);
			GetPlayerFacingAngle(playerid, cPos[3]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			int1 = GetPlayerInterior(playerid);
			LVehicleID = AddStaticVehicleEx(modelid, cPos[0]+3, cPos[1], cPos[2], cPos[3], liColor[0], liColor[1], -1);
			LinkVehicleToInterior(LVehicleID, int1);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetVehicleVirtualWorld(LVehicleID, GetPlayerVirtualWorld(playerid));
			PutPlayerInVehicle(playerid, LVehicleID, 0);
			PlayerInfo[playerid][pCar] = LVehicleID;
		}
	}
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
    if(response == EDIT_RESPONSE_FINAL)
    {
        if(OnGangEdit[playerid] == 1)
	    {
	        DestroyDynamicObject(objectid);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    new X = PlayerInfo[playerid][EditingGang];
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            GateInfo[X][GatePos][1] = x;
			GateInfo[X][GatePos][2] = y;
			GateInfo[X][GatePos][3] = z;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GateInfo[X][rGatePos][1] = rx;
			GateInfo[X][rGatePos][2] = ry;
			GateInfo[X][rGatePos][3] = rz;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GangGate[X] = CreateDynamicObject(GateInfo[X][GateObject], GateInfo[X][GatePos][1], GateInfo[X][GatePos][2], GateInfo[X][GatePos][3], GateInfo[X][rGatePos][1], GateInfo[X][rGatePos][2], GateInfo[X][rGatePos][3]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			DestroyDynamic3DTextLabel(Gang3DGate[X]);
			Gang3DGate[X] = CreateDynamic3DTextLabel(""GANG_GATE_DESC"", ~1, x, y, z, 30);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			OnGangEdit[playerid] = 0; OnUpdate(5);
	    }
    }
    if(response == EDIT_RESPONSE_CANCEL)
	{
		if(OnGangEdit[playerid] == 1)
		{
		    DestroyDynamicObject(objectid);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    new X = PlayerInfo[playerid][EditingGang];
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    GangGate[X] = CreateDynamicObject(GateInfo[X][GateObject], GateInfo[X][GatePos][1], GateInfo[X][GatePos][2], GateInfo[X][GatePos][3], GateInfo[X][rGatePos][1], GateInfo[X][rGatePos][2], GateInfo[X][rGatePos][3]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			DestroyDynamic3DTextLabel(Gang3DGate[X]);
			Gang3DGate[X] = CreateDynamic3DTextLabel(""GANG_GATE_DESC"", ~1, GateInfo[X][GatePos][1], GateInfo[X][GatePos][2], GateInfo[X][GatePos][3], 30);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			OnGangEdit[playerid] = 0; OnUpdate(5);
		}
	}
	return true;
}
public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	new Float:oldX, Float:oldY, Float:oldZ, Float:oldRotX, Float:oldRotY, Float:oldRotZ;
	GetObjectPos(objectid, oldX, oldY, oldZ);
	GetObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!playerobject) // If this is a global object, sync the position for other players
	{
	    if(!IsValidObject(objectid)) return true;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetObjectPos(objectid, fX, fY, fZ);
	    SetObjectRot(objectid, fRotX, fRotY, fRotZ);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(response == EDIT_RESPONSE_FINAL)
	{
	    if(IsValidObject(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1]))
	    {
	        new Float:p[6],Float:vp[4];
	        GetVehiclePos(VehicleIDEdit[playerid], vp[0], vp[1], vp[2]);
	        GetVehicleZAngle(VehicleIDEdit[playerid], vp[3]);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        p[0] = fX-vp[0];
	        p[1] = fY-vp[1];
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(EditingObject[playerid] == 1)
	        {
		        Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][0] = p[0]*floatcos(vp[3],degrees)+p[1]*floatsin(vp[3],degrees);
				Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][1] = -p[0]*floatsin(vp[3],degrees)+p[1]*floatcos(vp[3],degrees);
                Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][2] = fZ-vp[2];
                Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][3] = fRotX;
		        Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][4] = fRotY;
		        Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][5] = fRotZ-vp[3];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SaveVehicleText(playerid, PlayerInfo[playerid][CarVCP], 1);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				EditingObject[playerid] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        AttachObjectToVehicle(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1], VehicleIDEdit[playerid], Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][0],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][1],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][2],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][3],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][4],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][5]);
	        }
	        if(EditingObject[playerid] == 2)
	        {
		        Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][0] = p[0]*floatcos(vp[3],degrees)+p[1]*floatsin(vp[3],degrees);
				Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][1] = -p[0]*floatsin(vp[3],degrees)+p[1]*floatcos(vp[3],degrees);
                Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][2] = fZ-vp[2];
                Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][3] = fRotX;
		        Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][4] = fRotY;
		        Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][5] = fRotZ-vp[3];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SaveVehicleText(playerid, PlayerInfo[playerid][CarVCP], 2);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				EditingObject[playerid] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        AttachObjectToVehicle(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][2], VehicleIDEdit[playerid], Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][0],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][1],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][2],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][3],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][4],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][5]);
	        }
	        if(EditingObject[playerid] == 3)
	        {
		        Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][0] = p[0]*floatcos(vp[3],degrees)+p[1]*floatsin(vp[3],degrees);
				Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][1] = -p[0]*floatsin(vp[3],degrees)+p[1]*floatcos(vp[3],degrees);
                Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][2] = fZ-vp[2];
                Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][3] = fRotX;
		        Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][4] = fRotY;
		        Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][5] = fRotZ-vp[3];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SaveVehicleText(playerid, PlayerInfo[playerid][CarVCP], 3);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                EditingObject[playerid] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        AttachObjectToVehicle(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][3], VehicleIDEdit[playerid], Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][0],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][1],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][2],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][3],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][4],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][5]);
	        }
	        if(EditingObject[playerid] == 4)
	        {
		        Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][0] = p[0]*floatcos(vp[3],degrees)+p[1]*floatsin(vp[3],degrees);
				Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][1] = -p[0]*floatsin(vp[3],degrees)+p[1]*floatcos(vp[3],degrees);
                Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][2] = fZ-vp[2];
                Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][3] = fRotX;
		        Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][4] = fRotY;
		        Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][5] = fRotZ-vp[3];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SaveVehicleText(playerid, PlayerInfo[playerid][CarVCP], 4);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				EditingObject[playerid] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        AttachObjectToVehicle(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][4], VehicleIDEdit[playerid], Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][0],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][1],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][2],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][3],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][4],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][5]);
	        }
	        if(EditingObject[playerid] == 5)
	        {
		        Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][0] = p[0]*floatcos(vp[3],degrees)+p[1]*floatsin(vp[3],degrees);
				Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][1] = -p[0]*floatsin(vp[3],degrees)+p[1]*floatcos(vp[3],degrees);
                Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][2] = fZ-vp[2];
                Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][3] = fRotX;
		        Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][4] = fRotY;
		        Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][5] = fRotZ-vp[3];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SaveVehicleText(playerid, PlayerInfo[playerid][CarVCP], 5);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				EditingObject[playerid] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        AttachObjectToVehicle(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][5], VehicleIDEdit[playerid], Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][0],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][1],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][2],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][3],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][4],Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][5]);
	        }
	 	}
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(response == EDIT_RESPONSE_CANCEL)
	{
		//The player cancelled, so put the object back to it's old position
		if(!playerobject) //Object is not a playerobject
		{
			SetObjectPos(objectid, oldX, oldY, oldZ);
			SetObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
		}
		else
		{
			SetPlayerObjectPos(playerid, objectid, oldX, oldY, oldZ);
			SetPlayerObjectRot(playerid, objectid, oldRotX, oldRotY, oldRotZ);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			//VehicleIDEdit[playerid] = 0;
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock IsPointInRangeOfPoint(Float:range, Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2)
{
    x2 -= x;
    y2 -= y;
    z2 -= z;
    return ((x2 * x2) + (y2 * y2) + (z2 * z2)) < (range * range);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerNameByAccID(AccountID)
{
    new AccountName[24]; eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `ID` = '%d'", AccountID);
    mysql_query(SQL, eQuery);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new rows; cache_get_row_count(rows);
	for(new i; i != rows; i++) { CONTENT(i, "Name", AccountName); }
	return AccountName;
}
function AddStuffForSpawnCheckpoints(playerid, Float:x, Float:y, Float:z)
{
    SpawnZones[EditingSpawnCP[playerid]][CPX] = x;
    SpawnZones[EditingSpawnCP[playerid]][CPY] = y;
    SpawnZones[EditingSpawnCP[playerid]][CPZ] = z;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SpawnCP3D[EditingSpawnCP[playerid]] = CreateDynamic3DTextLabel(SpawnZones[SpawnZones[EditingSpawnCP[playerid]][TeleportTo]][SpawnName], YELLOW, x, y, z, 30.5);
    SpawnCheckPoint[EditingSpawnCP[playerid]] = CPS_AddCheckpoint(x, y, z, 2.0, 30);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `SpawnZones` SET `CpX` = '%f', `CpY` = '%f', `CpZ` = '%f' WHERE `ID` = '%d'", x, y, z, EditingSpawnCP[playerid]);
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TogglePlayerControllable(playerid, true);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	EditingSpawnCP[playerid] = 0;
    EditingSpawnCPA[playerid] = 1;
}
function CheckPlayers()
{
	new String[512], Query2[128]; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player)
	{
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// -> Check if Player have Correct SA-MP Version -> /config (disable or enable)
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(strcmp(GetSampVersion(i), ""SAMP_VERSION"", false) != 0 && PlayerInfo[i][temprcontype] == 0 && PlayerInfo[i][LoggedIn] == 1 && ServerInfo[AntiVersionOutData] == 1)
	    {
	        format(eString, sizeof(eString), "\
	        {FF0000}WARNING:\n\
	        {FFFFFF}You need to use SA-MP version: {FF0000} 0.3.7-R4{FFFFFF} to connect here!\n\
	        {FFFFFF}Curent version: {FF0000}%s\n\
	        {FFFFFF}If you want to download, visit this page:{FF0000} www.sa-mp.com/download.php\n\
	        {FFFFFF}If you have more questions about this system, visit our forum:{FF0000} "SERVER_WEBSITE"", GetSampVersion(i));
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SPD(i, DIALOG_EMPTY, MSGBOX, "Client version outdated", eString, "Ok", "");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SetTimerEx("KickPlayer", 250, false, "i", i);
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> Actions from SQL
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(Query2, sizeof(Query2), "SELECT * FROM `Accounts` WHERE `ID` = '%d'", PlayerInfo[i][AccID]);
	    mysql_query(SQL, Query2);
	    new rows; cache_get_row_count(rows);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		for(new d = 0; d < rows; d++)
		{
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    // -> Kick Variables
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    new kicked, kicktype, kickreason[24], kickadmin[24];
			CACHE(d, "Kicked", kicked);
			CACHE(d, "KickType", kicktype);
			CONTENT(d, "KickReason", kickreason);
			CONTENT(d, "KickAdmin", kickadmin);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			// -> Ban Variables
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			new banned, bandays, banreason[24], banadmin[24];
			CACHE(d, "Banned", banned);
			CACHE(d, "BanDays", bandays);
			CONTENT(d, "BanReason", banreason);
			CONTENT(d, "BanAdmin", banadmin);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(kicked == 1)
			{
			    if(kicktype == 1)
			    {
				    format(String, 150, "%s {D1D1D1}has been kicked by Admin {00A6FF}%s{D1D1D1}!", PN(i), kickadmin);
					SCMALL(RED, String);
					format(String, 150, "Reason: {00BBF6}%s", kickreason);
					SCMALL(GREY, String);
				}
				else if(kicktype == 2)
				{
				    format(eString, sizeof(eString), "ESSBuster: %s has been kicked by %s. Reason: %s", PN(i), kickadmin, kickreason);
	    			SCMALL(RED, eString);
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				UpdatePlayer(PN(i), "Kicked", 0);
				UpdatePlayer(PN(i), "KickType", 0);
				UpdatePlayer(PN(i), "KickReason", 0);
				UpdatePlayer(PN(i), "KickAdmin", 0);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SetTimerEx("KickPlayer", 1000, 0, "d", i);
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(banned == 1)
			{
			    BanPlayer(GetPlayerIPEx(i), PN(i), banadmin, banreason, bandays);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            eLog[0] = EOS; format(eLog, sizeof(eLog), "%s has been banned by %s for %d days. Reason: %s", PN(i), banadmin, bandays, banreason), SendLog(eLog, 5);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            SendAllBan(i, banadmin, bandays, banreason);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            SendPlayerBanMessage(i, banadmin, bandays, banreason);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            UpdatePlayer(PN(i), "Banned", 0);
				UpdatePlayer(PN(i), "BanDays", 0);
				UpdatePlayer(PN(i), "BanReason", 0);
				UpdatePlayer(PN(i), "BanAdmin", 0);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            SetTimerEx("KickPlayer", 50, false, "d", i);
			}
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ShowPersonalCarOptions(playerid, listitem)
{
    new count = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < MAX_VEH; i++)
    {
        if(!Vehicles[i][vehStatus]) continue;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(Vehicles[i][vehOwner] == PlayerInfo[playerid][AccID])
        {
            if(count == listitem)
           	{
              	new String[128], String3[128], GarageInfoString[128]; eString[0] = EOS;
              	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  				PlayerInfo[playerid][CarVCP] = i;
              	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(Vehicles[i][vehLevel] == 0) String3 = "{FF0000}Not upgraded";
				else if(Vehicles[i][vehLevel] == 1) String3 = "{FF0000}Upgraded";
              	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
              	format(String, sizeof(String), "{FFFFFF}Manage your {FF9900}%s{FFFFFF}!", vNames[Vehicles[i][vehModel] - 400]);
              	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
              	if(PlayerInfo[playerid][InPersGarage] == 0) GarageInfoString = "Teleport to garage";
              	else if(PlayerInfo[playerid][InPersGarage] == 1) GarageInfoString = "Exit from garage";
              	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
              	format(eString, sizeof(eString), "Option\tInformation\n\
				                                  {FFFF00}Get vehicle\t{00FF22}Teleport vehicle to your position\n\
		  										  {FFFF00}Park Vehicle\t{00FF22}Current Position\n\
		  										  {FFFF00}Vehicle Settings\t{00FF22}Change settings of your vehicle\n\
          										  {FFFF00}Change car color 1\t{00FF22}Current: {FF0000}%d\n\
										  		  {FFFF00}Change car color 2\t{00FF22}Current: {FF0000}%d\n\
										  		  {FFFF00}Change car plate\t{00FF22}Current: {FF0000}%s\n\
										  		  {FFFF00}Vehicle Decorations\t{00FF22}Objects/Text\n\
										  		  {FFFF00}Upgrade vehicle to {FF9900}Premium{FFFF00}\t%s\n\
												  {FFFF00}%s\t{00FF22}Teleport",
				Vehicles[i][vehColor][0], Vehicles[i][vehColor][1], Vehicles[i][vehPlate], String3, GarageInfoString);
              	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
              	SPD(playerid, PCar_D+4, HEADERS, String, eString, "Choose", "Back");
		 		break;
		    }
			else count ++;
        }
	}
}
function UpdatePlayerDataAgain() // Auto Re-Load Gems/AdminAcc
{
    eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][LoggedIn] == 1)
		{
		    format(eString, sizeof(eString), "SELECT * FROM `Accounts` WHERE `ID` = '%d'", PlayerInfo[i][AccID]);
		    mysql_query(SQL, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			new rows; cache_get_row_count(rows);
			for(new d; d != rows; d++)
			{
				new changenamerequest;
				CACHE(d, "Gems", PlayerInfo[i][Gems]);
				CACHE(d, "AdminAccesForAdmin1", PlayerInfo[i][AdminAccesfor1]);
				CACHE(d, "NameApproved", changenamerequest);
				if(changenamerequest == 1)
				{
		    		eString[0] = EOS;
		    		format(eString, sizeof(eString), "Your change name request have been approved! For more details check the index!");
					SCM(i, ABLUE, eString);
					SCM(i, ABLUE, "You was been kicked automatically by the server! Reason: Change Name Request have been approved!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SetTimerEx("KickPlayer", 700, false, "i", i);
				}
			}
		}
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CheckAvailableID(playerid, Player) // Restriction for Rcons
{
    new AccesInfo;
	if(PlayerInfo[playerid][RconType] == 1)
	{
	    if(Player == playerid) AccesInfo = 1;
	    else if(Player != playerid) AccesInfo = 0;
	}
	else if(PlayerInfo[playerid][RconType] >= 2) AccesInfo = 1;
	return AccesInfo;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function UpdateSnow(playerid)
{
    if(!snowOn{playerid}) return 0;
    new Float:pPos[3];
    GetPlayerPos(playerid, pPos[0], pPos[1], pPos[2]);
    for(new i = 0; i < MAX_SNOW_OBJECTS; i++) SetDynamicObjectPos(snowObject[playerid][i], pPos[0] + random(25), pPos[1] + random(25), pPos[2] - 5 + random(10));
    return 1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function RandomPrizeCarol(playerid, HouseID)
{
    new CarolCoins, CarolMoney, string[300]; eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    strcat(eString, "{FFFFFF}Te-ai intors prea devreme...\n");
    strcat(eString, "{FFFFFF}Nu vei primii nimic daca te intorci atat de repede...\n");
    strcat(eString, "\n");
    strcat(eString, "{FF0000}Revino din nou peste cateva ore!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(GetChristmasFuncAvailable() == 0) return SendError(playerid, "Poti colinda doar de la ziua de 22 decembrie!");
    if(PlayerInfo[playerid][SLand_H][HouseID] == 1) return SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FFEE00}House!", eString, "Close", "");
    else
    {
     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     new Random = random(10); switch(Random)
     {
        case 0: CarolCoins = 10, CarolMoney = 854;
        case 1: CarolCoins = 5,  CarolMoney = 940;
        case 2: CarolCoins = 3,  CarolMoney = 100;
        case 3: CarolCoins = 1,  CarolMoney = 50;
        case 4: CarolCoins = 0,  CarolMoney = 0;
        case 5: CarolCoins = 6,  CarolMoney = 37;
        case 6: CarolCoins = 0,  CarolMoney = 0;
        case 7: CarolCoins = 15, CarolMoney = 1500;
        case 8: CarolCoins = 2,  CarolMoney = 68;
        case 9: CarolCoins = 0,  CarolMoney = 0;
     }
     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     if(CarolCoins >= 1)
     {
      format(eString, sizeof(eString), "{FFFFFF}HoHoHo...{FFEE00} Sarbatori fericite!\n\
                                        {FFFFFF}Pentru ca esti un jucator bun, iti vom da un mic cadou :).\n\
										\n\
										{00A600}+%d Coins & +$%d!", CarolCoins, CarolMoney);
      //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FFEE00}House!", eString, "Close", "");
      //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      PlayerInfo[playerid][Coins] += CarolCoins, GivePlayerMoney(playerid, CarolMoney);
	  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  PlayerInfo[playerid][SLand_H][HouseID] = 1;
	 }
	 else if(CarolCoins == 0)
	 {
	  strcat(string, "{FFFFFF}Din pacate nu e nimeni acasa acum :(...\n");
      strcat(string, "{FFFFFF}Poti incerca la o alta casa, sau poti revenii mai tarziu!\n");
      strcat(string, "\n");
      strcat(string, "{00A600}Viziteaza intreg taramul pentru mai multe!");
      //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FFEE00}House!", string, "Close", "");
	  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  PlayerInfo[playerid][SLand_H][HouseID] = 1;
	 }
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function GangTimerPickup(playerid, pickid)
{
    PlayerInfo[playerid][GangPickupTimer][pickid]--;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][GangPickupTimer][pickid] == 0) KillTimer(PlayerInfo[playerid][GangTimerSet]);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CreateCheckPointForServer(playerid, text[], Float:x, Float:y, Float:z, Float:xTo, Float:yTo, Float:zTo)
{
    new X = cache_insert_id();
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    gCheckpointInfo[X][CheckpointGang] = PlayerInfo[playerid][EditingGang];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(gCheckpointInfo[X][CheckpointText], 30, "%s", text);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    gCheckpointInfo[X][CheckpointX] = x;
	gCheckpointInfo[X][CheckpointY] = y;
	gCheckpointInfo[X][CheckpointZ] = z;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	gCheckpointInfo[X][ToX] = xTo;
	gCheckpointInfo[X][ToY] = yTo;
	gCheckpointInfo[X][ToZ] = zTo;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GangCheckpoints3D[X] = CreateDynamic3DTextLabel(text, YELLOW, x, y, z, 45.0);
    GangCheckpoints[X] = CPS_AddCheckpoint(x, y, z, 1.0, 5);
}
function UpdateWhoMakesEventKills(playerid, type)
{
    new string[123], killS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(type == 1) killS = PlayerInfo[playerid][MinigunKills];
    else if(type == 2) killS = PlayerInfo[playerid][M4Kills];
    else if(type == 3) killS = PlayerInfo[playerid][RocketKills];
    else if(type == 4) killS = PlayerInfo[playerid][SniperKills];
    else if(type == 5) killS = PlayerInfo[playerid][MRFKills];
    else if(type == 6) killS = PlayerInfo[playerid][DEKills];
    else if(type == 7) killS = PlayerInfo[playerid][PRODMKills];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerTextDrawHide(playerid, EventKills);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerTextDrawColor(playerid, EventKills, GREEN);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(string, sizeof(string), "Event Kills: ~R~~H~%d~W~~H~/~R~~H~%d", killS, ServerInfo[WhoMakesMostKillsAmmount][type]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerTextDrawSetString(playerid, EventKills, string);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerTextDrawShow(playerid, EventKills);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return true;
}
function HideWhoMakesEvenetKills(playerid) return PlayerTextDrawHide(playerid, EventKills);
function JailPlayer(playerid, Player, Reason[], bool:Admin)
{
	if(Admin == true)
	{
	    PlayerInfo[playerid][PJails]++, PlayerInfo[Player][Jailed] = 1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][r_Jails] == Raport[RJails]) return true;
		else PlayerInfo[playerid][r_Jails]++;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	SetPlayerPos(Player, 197.6661, 173.8179, 1003.0234);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerInterior(Player, 3);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerVirtualWorld(Player, 1000+playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[Player][Jailed] = 1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ResetPlayerWeapons(Player);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Announce(Player, "~R~~H~You have been~N~~R~~H~Jailed by admins!", 3000, 3);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetTimerEx("JailRelease", 300000, 0, "i", Player);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	format(PlayerInfo[Player][JailedByAdmin], 100, "%s", PN(playerid));
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(eString, sizeof(eString), "Administrator {FF0000}%s{D1D1D1} has Jailed {00A6FF}%s {D1D1D1}for 5 Minutes. (Reason: %s)", PN(playerid), PN(Player), Reason);
		SCMALL(GREY2, eString);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		AdminCMD(playerid, "JAIL"), PlayerInfo[playerid][Activity] += 1;
	}
	else if(Admin == false)
	{
	   	SetPlayerPos(Player, 197.6661, 173.8179, 1003.0234);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerInterior(Player, 3);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerVirtualWorld(Player, 1000+playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[Player][Jailed] = 1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ResetPlayerWeapons(Player);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Announce(Player, "~R~~H~You have been~N~~R~~H~Jailed by admins!", 3000, 3);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetTimerEx("JailRelease", 300000, 0, "i", Player);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(PlayerInfo[Player][JailedByAdmin], 100, "Server");
	}
	return true;
}
function UpdateVehicle(vehicleid, varname[], Float:amount)
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `PersonalCars` SET `%s` = '%f' WHERE `ID` = '%d'", varname, amount, Vehicles[vehicleid][vehID]);
	mysql_tquery(SQL, eQuery, "", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function UpdateVehicleText(vehicleid, varname[], amount[])
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `PersonalCars` SET `%s` = '%s' WHERE `ID` = '%d'", varname, amount, Vehicles[vehicleid][vehID]);
	mysql_tquery(SQL, eQuery, "", "");
	return true;
}
function UpdatePersonalVehicle(vehicleid, varname[], amount)
{
    eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `PersonalCars` SET `%s` = '%d' WHERE `ID` = '%d'", varname, amount, Vehicles[vehicleid][vehID]);
	mysql_tquery(SQL, eQuery, "", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function SaveVehicleText(playerid, vehicleid, slotobj)
{
    if(slotobj == 1)
    {
    	UpdateVehicleText(vehicleid, "VehicleText1", Vehicles[vehicleid][vehText1]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	UpdateVehicle(vehicleid, "VehText1PosX", Vehicles[vehicleid][VehObjectP1][0]);
    	UpdateVehicle(vehicleid, "VehText1PosY", Vehicles[vehicleid][VehObjectP1][1]);
    	UpdateVehicle(vehicleid, "VehText1PosZ", Vehicles[vehicleid][VehObjectP1][2]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	UpdateVehicle(vehicleid, "VehText1RotX", Vehicles[vehicleid][VehObjectP1][3]);
    	UpdateVehicle(vehicleid, "VehText1RotY", Vehicles[vehicleid][VehObjectP1][4]);
    	UpdateVehicle(vehicleid, "VehText1RotZ", Vehicles[vehicleid][VehObjectP1][5]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	UpdatePersonalVehicle(vehicleid, "TextSize1", Vehicles[vehicleid][VehTextSize][1]);
    }
    if(slotobj == 2)
    {
	   	UpdateVehicleText(vehicleid, "VehicleText2", Vehicles[vehicleid][vehText2]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	UpdateVehicle(vehicleid, "VehText2PosX", Vehicles[vehicleid][VehObjectP2][0]);
    	UpdateVehicle(vehicleid, "VehText2PosY", Vehicles[vehicleid][VehObjectP2][1]);
    	UpdateVehicle(vehicleid, "VehText2PosZ", Vehicles[vehicleid][VehObjectP2][2]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	UpdateVehicle(vehicleid, "VehText2RotX", Vehicles[vehicleid][VehObjectP2][3]);
    	UpdateVehicle(vehicleid, "VehText2RotY", Vehicles[vehicleid][VehObjectP2][4]);
    	UpdateVehicle(vehicleid, "VehText2RotZ", Vehicles[vehicleid][VehObjectP2][5]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	UpdatePersonalVehicle(vehicleid, "TextSize2", Vehicles[vehicleid][VehTextSize][2]);
    }
    if(slotobj == 3)
    {
        UpdateVehicleText(vehicleid, "VehicleText3", Vehicles[vehicleid][vehText3]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	UpdateVehicle(vehicleid, "VehText3PosX", Vehicles[vehicleid][VehObjectP3][0]);
    	UpdateVehicle(vehicleid, "VehText3PosY", Vehicles[vehicleid][VehObjectP3][1]);
    	UpdateVehicle(vehicleid, "VehText3PosZ", Vehicles[vehicleid][VehObjectP3][2]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	UpdateVehicle(vehicleid, "VehText3RotX", Vehicles[vehicleid][VehObjectP3][3]);
    	UpdateVehicle(vehicleid, "VehText3RotY", Vehicles[vehicleid][VehObjectP3][4]);
    	UpdateVehicle(vehicleid, "VehText3RotZ", Vehicles[vehicleid][VehObjectP3][5]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	UpdatePersonalVehicle(vehicleid, "TextSize3", Vehicles[vehicleid][VehTextSize][3]);
    }
    if(slotobj == 4)
    {
	    UpdateVehicleText(vehicleid, "VehicleText4", Vehicles[vehicleid][vehText4]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	UpdateVehicle(vehicleid, "VehText4PosX", Vehicles[vehicleid][VehObjectP4][0]);
    	UpdateVehicle(vehicleid, "VehText4PosY", Vehicles[vehicleid][VehObjectP4][1]);
    	UpdateVehicle(vehicleid, "VehText4PosZ", Vehicles[vehicleid][VehObjectP4][2]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	UpdateVehicle(vehicleid, "VehText4RotX", Vehicles[vehicleid][VehObjectP4][3]);
    	UpdateVehicle(vehicleid, "VehText4RotY", Vehicles[vehicleid][VehObjectP4][4]);
    	UpdateVehicle(vehicleid, "VehText4RotZ", Vehicles[vehicleid][VehObjectP4][5]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	UpdatePersonalVehicle(vehicleid, "TextSize4", Vehicles[vehicleid][VehTextSize][4]);
    }
    if(slotobj == 5)
    {
	    UpdateVehicleText(vehicleid, "VehicleText5", Vehicles[vehicleid][vehText5]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	UpdateVehicle(vehicleid, "VehText5PosX", Vehicles[vehicleid][VehObjectP5][0]);
    	UpdateVehicle(vehicleid, "VehText5PosY", Vehicles[vehicleid][VehObjectP5][1]);
    	UpdateVehicle(vehicleid, "VehText5PosZ", Vehicles[vehicleid][VehObjectP5][2]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	UpdateVehicle(vehicleid, "VehText5RotX", Vehicles[vehicleid][VehObjectP5][3]);
    	UpdateVehicle(vehicleid, "VehText5RotY", Vehicles[vehicleid][VehObjectP5][4]);
    	UpdateVehicle(vehicleid, "VehText5RotZ", Vehicles[vehicleid][VehObjectP5][5]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	UpdatePersonalVehicle(vehicleid, "TextSize5", Vehicles[vehicleid][VehTextSize][5]);
    }
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
    if(response)
	{
	    if(index == HoldIndex1[playerid])
	    {
	     	fScaleX = (fScaleX < 0.25) ? (0.25) : ((fScaleX > 3.00) ? (3.00) : (fScaleX));
		    fScaleY = (fScaleY < 0.25) ? (0.25) : ((fScaleY > 3.00) ? (3.00) : (fScaleY));
		    fScaleZ = (fScaleZ < 0.25) ? (0.25) : ((fScaleZ > 3.00) ? (3.00) : (fScaleZ));
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    HoldsInfo[playerid][index][fOffsetX1] = fOffsetX;
		    HoldsInfo[playerid][index][fOffsetY1] = fOffsetY;
		    HoldsInfo[playerid][index][fOffsetZ1] = fOffsetZ;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    HoldsInfo[playerid][index][fRotX1] = fRotX;
		    HoldsInfo[playerid][index][fRotY1] = fRotY;
		    HoldsInfo[playerid][index][fRotZ1] = fRotZ;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    HoldsInfo[playerid][index][fScaleX1] = fScaleX;
		    HoldsInfo[playerid][index][fScaleY1] = fScaleY;
		    HoldsInfo[playerid][index][fScaleZ1] = fScaleZ;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    eQuery[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    Announce(playerid,"~r~~h~~h~Hold~y~~h~ saved!", 4000, 3);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SetPlayerAttachedObject(playerid, index, modelid, boneid, HoldsInfo[playerid][index][fOffsetX1], HoldsInfo[playerid][index][fOffsetY1], HoldsInfo[playerid][index][fOffsetZ1], HoldsInfo[playerid][index][fRotX1], HoldsInfo[playerid][index][fRotY1], HoldsInfo[playerid][index][fRotZ1], HoldsInfo[playerid][index][fScaleX1], HoldsInfo[playerid][index][fScaleY1], HoldsInfo[playerid][index][fScaleZ1]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Holds` WHERE `HoldIndex` = %d AND `HoldID` = %d", index, PlayerInfo[playerid][AccID]);
		    mysql_tquery(SQL, eQuery, "OnHoldSave", "iiii", playerid, index, modelid, boneid);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    Announce(playerid, "~w~Hold ~g~~h~creat~n~~w~scrie ~r~~h~/hold ~w~pentru mai mult!", 4000, 3);
		}
		for(new i = 0; i < MAX_VEH; i++)
		if(index == 1)
		{
		}
    }
    else Announce(playerid,"~w~~h~~h~Hold ~r~~h~deleted!", 4000, 3);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ShowOfflineAdmins(playerid)
{
    StrH[0] = '\0'; StrH2[0] = '\0'; new s, String3[248], AdminName[24],
    AdminLevel, Date[24], Online, OnlineText[50], LastActive[24], rRank;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_query(SQL, "SELECT * FROM `Accounts` WHERE `Level` > 0 ORDER BY `ID` DESC");
	new total; cache_get_row_count(total);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i; i != total; i++)
	{
		CACHE(i, "Level", AdminLevel);
		CACHE(i, "LoggedIn", Online);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CACHE(i, "RconType", rRank);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CONTENT(i, "Name", AdminName);
	    CONTENT(i, "AdminSince", Date);
	    CONTENT(i, "LastOn", LastActive);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(Online == 1) OnlineText = "{00CC00}Online";
	    else if(Online == 0) format(OnlineText, 50, "{FF0000}Offline{FFFFFF} - Last Active: %s", LastActive);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        format(StrH2, sizeof(StrH2), "{FFFFFF}%s  \t{FFFFFF}%d / %s   \t{FFFFFF}%s  \t%s\n%s", AdminName, AdminLevel, GetRconType(rRank), Date, OnlineText, StrH2);
 		format(StrH, sizeof(StrH), "\tAdmin Name  \tAdmin Level / Rank  \tDate Since  \tStatus\n\
                                		%s", StrH2);
	 	s++;
	}
	format(String3, sizeof(String3), "{FFFFFF}Admins - {FF0000}%d {FFFFFF}Online and {FF0000}%d {FFFFFF}Total!", GetAmountOfConnectedAdmins(), total);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][RconType] >= 2) SPD(playerid, DIALOG_MANAGE_ADMINS, HEADERS, String3, StrH, "Close", "Manage");
	else SPD(playerid, DIALOG_EMPTY, HEADERS, String3, StrH, "Close", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ShowDJMP3(playerid)
{
	new Count = 1, string[200], Strr[4096], Strr3[4096];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_query(SQL, "SELECT * FROM `DJMP3` ORDER BY `ID`");
	new total; cache_get_row_count(total);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	for(new i, x = total; i < x; i++)
    {
        new MusicName[50], MusicDate[24], MusicOwner[24];
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CONTENT(i, "MusicName", MusicName);
        CONTENT(i, "MusicDate", MusicDate);
        CONTENT(i, "MusicBy", MusicOwner);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 		format(string, sizeof(string), "0\tAdd MP3 Music\tNone");
	 	format(Strr3, sizeof(Strr3), "%s\n{FFFFFF}%d\t{FF0000}%s\t{FFFF00}%s\n%s", Strr3, Count, MusicName, MusicOwner);
 		format(Strr, sizeof(Strr), "\t#\tArtist\tAdded by\n%s\n%s", string, Strr3);
	 	Count++;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_DJ_STUDIO, HEADERS, "DJ Studio", Strr, "Select", "Close");
}
function PlayMP3StreamByDB(playerid, IDD)
{
    new MusicLink[100], szQuery[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(szQuery, sizeof(szQuery), "SELECT * FROM `DJMP3` WHERE `ID` = '%d'", IDD-2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_query(SQL, szQuery);
	new rows; cache_get_row_count(rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i; i != rows; i++)
	{
		CONTENT(i, "MusicLink", MusicLink);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    for(new d = 0; d < MAX_PLAYERS; d++)
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayAudioStreamForPlayer(d, MusicLink, DJSTATE, 150, 1),
		PlayerInfo[d][RadioListen] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][DJSpam] == 0)
		{
			format(eString, 512, "DJ '%s' has started audio stream at DJ Studio. Type /djs!", PN(playerid));
			SCMALL(ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][DJSpam] = 1;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetTimerEx("DisableDJSpam", 180000, false, "i", playerid);
		}
	}
}
function DisableDJSpam(playerid) return PlayerInfo[playerid][DJSpam] = 0;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function TeleportToGangBase(playerid, baseID)
{
    new Float:p[3], szQuery[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(szQuery, sizeof(szQuery), "SELECT * FROM `GangBases` WHERE `ID` = '%d'", baseID);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_query(SQL, szQuery);
	new rows; cache_get_row_count(rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i; i != rows; i++)
	{
	    FLOAT(i, "X", p[0]);
	    FLOAT(i, "Y", p[1]);
	    FLOAT(i, "Z", p[2]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerPos(playerid, p[0], p[1], p[2]);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		LoadObjectsProtection(playerid);
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function EditSpawnZone(playerid, IDD)
{
	new SName[50], string[328], szQuery[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(szQuery, sizeof(szQuery), "SELECT * FROM `SpawnZones` WHERE `ID` = '%d'", IDD);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_query(SQL, szQuery);
	new rows; cache_get_row_count(rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_GANGS; i++)
	if(IsPlayerInRangeOfPoint(playerid, 200.0, GangInfo[i][GangX], GangInfo[i][GangY], GangInfo[i][GangZ])) return ErrorSpawnSet(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_CLANS; i++)
	if(IsPlayerInRangeOfPoint(playerid, 100.0, Clan[i][ClanPos][0], Clan[i][ClanPos][1], Clan[i][ClanPos][2])) return ErrorSpawnSet(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i; i != rows; i++)
	{
		CONTENT(i, "SpawnName", SName);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(string, sizeof(string), "SpawnZone: You are editing {FF0000}'%s'{FFFF00}!", SName);
	    SCM(playerid, YELLOW, string);
	    SCM(playerid, YELLOW, "Press button{FF0000} 'F'{FFFF00} to set the position!");
	    SCM(playerid, YELLOW, "Press button{FF0000} 'H'{FFFF00} if you want to cancel!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    EditingSpawnZone[playerid] = IDD;
	}
	return true;
}
function EditSpawnCP(playerid, IDD)
{
    new SName[50], string[328], szQuery[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(szQuery, sizeof(szQuery), "SELECT * FROM `SpawnZones` WHERE `ID` = '%d'", IDD);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_query(SQL, szQuery);
	new rows; cache_get_row_count(rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_GANGS; i++)
	if(IsPlayerInRangeOfPoint(playerid, 200.0, GangInfo[i][GangX], GangInfo[i][GangY], GangInfo[i][GangZ])) return ErrorSpawnSet(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_CLANS; i++)
	if(IsPlayerInRangeOfPoint(playerid, 100.0, Clan[i][ClanPos][0], Clan[i][ClanPos][1], Clan[i][ClanPos][2])) return ErrorSpawnSet(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i; i != rows; i++)
	{
		CONTENT(i, "SpawnName", SName);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(string, sizeof(string), "SpawnZone: You are editing {FF0000}'%s'{FFFF00}!", SName);
	    SCM(playerid, YELLOW, string);
	    SCM(playerid, YELLOW, "Press button{FF0000} 'F'{FFFF00} to set the checkpoint position!");
	    SCM(playerid, YELLOW, "Press button{FF0000} 'H'{FFFF00} if you want to cancel!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    EditingSpawnCP[playerid] = IDD;
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function BlockAccount(playerid, playername[])
{
    new rows, fields;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	cache_get_row_count(rows);
	cache_get_field_count(fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(rows)
	{
		for(new i = 0; i < rows; i++)
	    {
	        new blocked;
            CACHE(i, "BlackList", blocked);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(blocked == 0)
			{
				UpdatePlayer(playername[0], "BlackList", 1);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				foreach(new players: Player) if(strfind(PN(players), playername, true) != -1) KickPlayer(players);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(eString, sizeof(eString), "~R~~H~you have blocked: ~N~~W~~H~%s~N~~R~~H~You can unblock by using~n~~w~~H~/editplayer", playername);
				Announce(playerid, eString, 6000, 3);
			}
			else if(blocked == 1)
			{
				UpdatePlayer(playername[0], "BlackList", 0);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(eString, sizeof(eString), "~R~~H~you have un-blocked: ~N~~W~~H~%s~N~~R~~H~You can block by using~n~~w~~H~/editplayer", playername);
				Announce(playerid, eString, 6000, 3);
			}
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function RemoveGems(playerid, playername[])
{
    new string[128], rows, fields;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    cache_get_row_count(rows);
	cache_get_field_count(fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(rows)
	{
		for(new i = 0; i < rows; i++)
	    {
	        new GemsHave;
            CACHE(i, "Gems", GemsHave);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(GemsHave >= 1)
			{
	   		 UpdatePlayer(playername[0], "Gems", 0);
             //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             format(string, sizeof(string), "~R~~H~Your Gems has been~N~~R~~H~removed by admin:~W~~H~ %s", PN(playerid));
             //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             foreach(new players: Player) if(strfind(PN(players), playername, true) != -1)
			 {
               Announce(players, string, 6000, 3);
			   UpdatePlayer(PN(playerid), "Gems", 0);
			   PlayerInfo[players][Gems] = 0;
			   PlayerPlaySound(players,1057,0.0,0.0,0.0);
             }
             //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             format(eString, sizeof(eString), "~R~~H~Gems removed to~N~~R~~H~player:~W~~H~ %s~R~~H~!", playername);
             Announce(playerid, eString, 6000, 3);
			}
			else return SendError(playerid, "This player doesn't have gems to remove!");
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function DemoteVIP(playerid, playername[])
{
    new string[128], rows, fields;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	cache_get_row_count(rows);
	cache_get_field_count(fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(rows)
	{
		for(new i = 0; i < rows; i++)
	    {
	        new VIPLevel;
            CACHE(i, "VIP", VIPLevel);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(VIPLevel >= 1)
			{
			 UpdatePlayer(playername[0], "VIP", 0);
			 UpdatePlayer(playername[0], "TempVIP", 0);
			 UpdatePlayer(playername[0], "VIPTime", 0);
             //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             format(string, sizeof(string), "~R~~H~Your VIP has been~N~~R~~H~removed by admin:~W~~H~ %s", PN(playerid));
             //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             foreach(new players: Player) if(strfind(PN(players), playername, true) != -1)
			 {
               Announce(players, string, 6000, 3);
			   PlayerInfo[players][pVIP] = 0;
			   PlayerInfo[players][VIPTime] = 0;
			   PlayerInfo[players][TVip] = 0;
			   PlayerPlaySound(players,1057,0.0,0.0,0.0);
			 }
             //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             format(eString, sizeof(eString), "~R~~H~VIP ~W~~H~%s~N~~R~~H~has been removed~W~~H~!", playername);
             Announce(playerid, eString, 6000, 3);
			}
			else return SendError(playerid, "This player is not VIP!");
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function DemoteRCON(playerid, playername[])
{
    new string[128], rows, fields;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	cache_get_row_count(rows);
	cache_get_field_count(fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(rows)
	{
		for(new i = 0; i < rows; i++)
	    {
	        new AdminRCON;
            CACHE(i, "RconType", AdminRCON);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(AdminRCON == 1)
			{
			 UpdatePlayer(playername[0], "RconType", 0);
             //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             format(string, sizeof(string), "~R~~H~Your RCON has been~N~~R~~H~removed by owner:~W~~H~ %s", PN(playerid));
             //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             foreach(new players: Player)
			 {
			 	if(strfind(PN(players), playername, true) != -1)
				{
				    if(PlayerInfo[players][RconType] == 1)
				    {
				  		Announce(players, string, 6000, 3);
						PlayerInfo[players][RconType] = 0;
						PlayerInfo[players][temprcontype] = 0;
						PlayerPlaySound(players,1057,0.0,0.0,0.0);
				    }
				}
			 }
             //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             format(eString, sizeof(eString), "~R~~H~RCON ~W~~H~%s~N~~R~~H~has been removed~W~~H~!", playername);
             Announce(playerid, eString, 6000, 3);
			}
			else return SendError(playerid, "This player is not RCON!");
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function SetPlayerLevel(playerid, playername[], Amount)
{
    if(Amount < 0 || Amount > 5) return SendError(playerid, "You cannot set a level who are lower that 0 or higher that 5!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	UpdatePlayer(playername[0], "Level", Amount);
	UpdatePlayer(playername[0], "AWP", 0);
	UpdatePlayer(playername[0], "AdminChangedBy", PlayerInfo[playerid][AccID]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) if(strfind(PN(i), playername, true) != -1)
	{
	    FormatMSG(i, ABLUE, "Your admin level has been seted to '%d' by '%s'!", Amount, PN(playerid));
		SCM(i, ABLUE, "If you want to make screen-shot press button 'F8'!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[i][Level] = Amount;
		PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "ACW: Admin '%s' has been seted to level '%d' by '%s'!", playername, Amount, PN(playerid));
	MessageToAdmins(ABLUE, eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
function DemoteAdmin(playerid, playername[])
{
	UpdatePlayer(playername[0], "Level", 0);
	UpdatePlayer(playername[0], "AWP", 0);
	UpdatePlayer(playername[0], "AdminChangedBy", PlayerInfo[playerid][AccID]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) if(strfind(PN(i), playername, true) != -1)
	{
		FormatMSG(i, ABLUE, "Your admin level has been removed by '%s'!", PN(playerid));
		SCM(i, ABLUE, "If you want to make screen-shot press button 'F8'!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[i][Level] = 0;
		PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "~R~~H~Admin ~W~~H~%s~N~~R~~H~has been removed~W~~H~!", playername);
	Announce(playerid, eString, 6000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "ACW: Admin '%s' has been removed by '%s'!", playername, PN(playerid));
	MessageToAdmins(ABLUE, eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function AWPHave(playerid, playername[])
{
    new rows, fields;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	cache_get_row_count(rows);
	cache_get_field_count(fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(rows)
	{
		for(new i = 0; i < rows; i++)
	    {
            new AWPAvailable, AdminLevel;
			CACHE(i, "AWP", AWPAvailable);
            CACHE(i, "Level", AdminLevel);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(AdminLevel >= 1)
            {
             if(AWPAvailable == 4)
			 {
			  UpdatePlayer(playername[0], "Level", 0);
			  UpdatePlayer(playername[0], "AWP", 0);
              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
              format(eString, sizeof(eString), "~R~~H~Admin ~W~~H~%s~N~~R~~H~has been removed~W~~H~!~N~~W~~H~reason: ~R~~H~5~W~~H~/~R~~H~5 admin warns~W~~H~!", playername);
              Announce(playerid, eString, 6000, 3);
              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
              foreach(new players: Player) if(strfind(PN(players), playername, true) != -1) PlayerInfo[players][Level] = 0, PlayerInfo[players][AWP] = 0;
   	          //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			 }
			 else
			 {
			  mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `AWP` = `AWP`+1 WHERE `Name` = '%s'", playername);
              mysql_tquery(SQL, eQuery, "", "");
              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
              foreach(new players: Player) if(strfind(PN(players), playername, true) != -1) PlayerInfo[players][AWP] += 1;
              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
              mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s'", playername);
              mysql_tquery(SQL, eQuery, "AnnounceForAwp", "is", playerid, playername);
              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			 }
            }
            else return SendError(playerid, "This player is not admin!");
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function AnnounceForAwp(playerid, playername[])
{
    new rows, fields;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	cache_get_row_count(rows);
	cache_get_field_count(fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(rows)
	{
		for(new i = 0; i < rows; i++)
	    {
          new AWPAvailable;
		  CACHE(i, "AWP", AWPAvailable);
          //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
          format(eString, sizeof(eString), "~R~~H~~W~~H~+1 ~R~~H~awp has been added~N~~R~~H~to admin ~W~~H~%s~N~~R~~H~now this player have~W~~H~: ~R~~H~%d~W~~H~/~R~~H~5", playername, AWPAvailable);
          Announce(playerid, eString, 6000, 3);
		}
	}
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function UpdateAllPlayerAccount(varname[], amount)
{
    eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `%s` = '%d'", varname, amount);
	mysql_tquery(SQL, eQuery, "", "");
	return true;
}
function UpdatePlayerString(playername[], varname[], string[])
{
    eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `%s` = '%s' WHERE `Name` = '%s'", varname, string, playername);
	mysql_tquery(SQL, eQuery, "", "");
	return true;
}
function UpdatePlayer(playername[], varname[], amount)
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `%s` = '%d' WHERE `Name` = '%s'", varname, amount, playername);
	mysql_tquery(SQL, eQuery, "", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function UpdateNEx(table[], varname[], amount[], id)
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `%s` SET `%s` = '%s' WHERE `ID` = '%d'", table, varname, amount, id);
	mysql_tquery(SQL, eQuery, "", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CheckAcc(sqlplayersname[])
{
	new szQuery[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(szQuery, sizeof(szQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s' LIMIT 1", sqlplayersname);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_query(SQL, szQuery);
	new test; cache_get_row_count(test);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(test != 0) return true;
	return false;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function EmptyFireworkSlot()
{
    for(new i=1; i < MAX_FIREWORK; i++) if(FireworkInfo[i][FOwner] == -1) return i;
    return false;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function OnHouseCreated(playerid, H, CostCoins, CostMoney, Float:X, Float:Y, Float:Z)
{
    H = cache_insert_id();
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new DD[512], HouseInt = random(16); eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(HouseInfo[H][Name], 24, "ForSale");
	HouseInfo[H][Rent] = 1000;
	HouseInfo[H][Cost] = CostCoins;
	HouseInfo[H][Sell] = CostMoney/2;
	HouseInfo[H][CostM] = CostMoney;
	HouseInfo[H][Locked] = 1;
	HouseInfo[H][HX] = X;
	HouseInfo[H][HY] = Y;
	HouseInfo[H][HZ] = Z;
	HouseInfo[H][h_Level] = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(HouseInt)
	{
	   case 0: HouseInfo[H][Interior] = 3, HouseInfo[H][InteriorX] = 234.6087, HouseInfo[H][InteriorY] = 1187.8195, HouseInfo[H][InteriorZ] = 1080.2578;
       case 1: HouseInfo[H][Interior] = 2, HouseInfo[H][InteriorX] = 225.5707, HouseInfo[H][InteriorY] = 1240.0643, HouseInfo[H][InteriorZ] = 1082.1406;
   	   case 2: HouseInfo[H][Interior] = 1, HouseInfo[H][InteriorX] = 224.288, HouseInfo[H][InteriorY] = 1289.1907, HouseInfo[H][InteriorZ] = 1082.1406;
	   case 3: HouseInfo[H][Interior] = 5, HouseInfo[H][InteriorX] = 239.2819, HouseInfo[H][InteriorY] = 1114.1991, HouseInfo[H][InteriorZ] = 1080.9922;
	   case 4: HouseInfo[H][Interior] = 15, HouseInfo[H][InteriorX] = 295.1391, HouseInfo[H][InteriorY] = 1473.3719, HouseInfo[H][InteriorZ] = 1080.2578;
	   case 5: HouseInfo[H][Interior] = 4, HouseInfo[H][InteriorX] = 261.1165, HouseInfo[H][InteriorY] = 1287.2197, HouseInfo[H][InteriorZ] = 1080.2578;
	   case 6: HouseInfo[H][Interior] = 10, HouseInfo[H][InteriorX] = 24.3769, HouseInfo[H][InteriorY] = 1341.1829, HouseInfo[H][InteriorZ] = 1084.375;
   	   case 7: HouseInfo[H][Interior] = 4, HouseInfo[H][InteriorX] = -262.1759, HouseInfo[H][InteriorY] = 1456.6158, HouseInfo[H][InteriorZ] = 1084.3672;
   	   case 8: HouseInfo[H][Interior] = 5, HouseInfo[H][InteriorX] = 22.861, HouseInfo[H][InteriorY] = 1404.9165, HouseInfo[H][InteriorZ] = 1084.4297;
	   case 9: HouseInfo[H][Interior] = 5, HouseInfo[H][InteriorX] = 140.3679, HouseInfo[H][InteriorY] = 1367.8837, HouseInfo[H][InteriorZ] = 1083.8621;
       case 10: HouseInfo[H][Interior] = 6, HouseInfo[H][InteriorX] = 234.2826, HouseInfo[H][InteriorY] = 1065.229, HouseInfo[H][InteriorZ] = 1084.2101;
	   case 11: HouseInfo[H][Interior] = 6, HouseInfo[H][InteriorX] = -68.5145, HouseInfo[H][InteriorY] = 1353.8485, HouseInfo[H][InteriorZ] = 1080.2109;
	   case 12: HouseInfo[H][Interior] = 15, HouseInfo[H][InteriorX] = -285.2511, HouseInfo[H][InteriorY] = 1471.197, HouseInfo[H][InteriorZ] = 1084.375;
	   case 13: HouseInfo[H][Interior] = 8, HouseInfo[H][InteriorX] = -42.5267, HouseInfo[H][InteriorY] = 1408.23, HouseInfo[H][InteriorZ] = 1084.4297;
	   case 14: HouseInfo[H][Interior] = 9, HouseInfo[H][InteriorX] = 84.9244, HouseInfo[H][InteriorY] = 1324.2983, HouseInfo[H][InteriorZ] = 1083.8594;
	   case 15: HouseInfo[H][Interior] = 9, HouseInfo[H][InteriorX] = 260.7421, HouseInfo[H][InteriorY] = 1238.2261, HouseInfo[H][InteriorZ] = 1084.2578;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Houses` SET `HouseInterior` = %d, `HouseIntX` = %f, `HouseIntY` = %f, `HouseIntZ` = %f WHERE `ID` = %d", HouseInfo[H][Interior], HouseInfo[H][InteriorX], HouseInfo[H][InteriorY], HouseInfo[H][InteriorZ], H);
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	HousePickup[H] = CreateDynamicPickup(1273, 1, HouseInfo[H][HX], HouseInfo[H][HY], HouseInfo[H][HZ]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(DD, 512, "{00CC00}Cost: {FF0000}%d Coins and $%d\n\
 					 {00CC00}Type {FF9900}/House {00CC00}for more info.", HouseInfo[H][Cost], HouseInfo[H][CostM]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	housei[H] = CreateDynamic3DTextLabel(DD, ~1, HouseInfo[H][HX], HouseInfo[H][HY], HouseInfo[H][HZ], 15.0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SCM(playerid, YELLOW, "House has been created!");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function OnPropertyCreated(playerid, P, szCoins, szMoney, szEarning, szEarningM, Float:X, Float:Y, Float:Z)
{
	P = cache_insert_id();
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new string[512], PropInt = random(12);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PropInfo[P][Cost] = szCoins;
	PropInfo[P][CostM] = szMoney;
	PropInfo[P][Earning] = szEarning;
	PropInfo[P][EarningM] = szEarningM;
	PropInfo[P][PropX] = X;
	PropInfo[P][PropY] = Y;
	PropInfo[P][PropZ] = Z;
	PropInfo[P][p_Level] = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(PropInt)
	{
	    case 0: PropInfo[P][IntID] = 10, PropInfo[P][InteriorX] = 2016.74, PropInfo[P][InteriorY] = 1017.8, PropInfo[P][InteriorZ] = 996.875;
	    case 1: PropInfo[P][IntID] = 9, PropInfo[P][InteriorX] = 365, PropInfo[P][InteriorY] = -9, PropInfo[P][InteriorZ] = 1001;
	    case 2: PropInfo[P][IntID] = 5, PropInfo[P][InteriorX] = 372, PropInfo[P][InteriorY] = -131, PropInfo[P][InteriorZ] = 1001;
	    case 3: PropInfo[P][IntID] = 18, PropInfo[P][InteriorX] = 161, PropInfo[P][InteriorY] = -94, PropInfo[P][InteriorZ] = 1001;
	    case 4: PropInfo[P][IntID] = 3, PropInfo[P][InteriorX] = -100, PropInfo[P][InteriorY] = -22, PropInfo[P][InteriorZ] = 1000;
	    case 5: PropInfo[P][IntID] = 10, PropInfo[P][InteriorX] = 365, PropInfo[P][InteriorY] = -73, PropInfo[P][InteriorZ] = 1001;
	    case 6: PropInfo[P][IntID] = 1, PropInfo[P][InteriorX] = 286, PropInfo[P][InteriorY] = -40, PropInfo[P][InteriorZ] = 1001;
	    case 7: PropInfo[P][IntID] = 16, PropInfo[P][InteriorX] = -203, PropInfo[P][InteriorY] = -24, PropInfo[P][InteriorZ] = 1002;
	    case 8: PropInfo[P][IntID] = 12, PropInfo[P][InteriorX] = 411, PropInfo[P][InteriorY] = -51, PropInfo[P][InteriorZ] = 1001;
	    case 9: PropInfo[P][IntID] = 17, PropInfo[P][InteriorX] = -25, PropInfo[P][InteriorY] = -185, PropInfo[P][InteriorZ] = 1003;
	    case 10: PropInfo[P][IntID] = 15, PropInfo[P][InteriorX] = 2220, PropInfo[P][InteriorY] = -1148, PropInfo[P][InteriorZ] = 1025;
	    case 11: PropInfo[P][IntID] = 7, PropInfo[P][InteriorX] = 774, PropInfo[P][InteriorY] = -71, PropInfo[P][InteriorZ] = 1000;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Properties` SET `Interior` = %d, `IntX` = %f, `IntY` = %f, `IntZ` = %f WHERE `ID` = %d", PropInfo[P][IntID], PropInfo[P][InteriorX], PropInfo[P][InteriorY], PropInfo[P][InteriorZ], P);
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(PropInfo[P][PropName], 24, "ForSale"), format(PropInfo[P][PropOwner], 24, "Nobody");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PropInfo[P][PropMapIcon] = CreateDynamicMapIcon(PropInfo[P][PropX], PropInfo[P][PropY], PropInfo[P][PropZ], 52, 52);
    PropPickUP[P] = CreateDynamicPickup(1274, 1, PropInfo[P][PropX], PropInfo[P][PropY], PropInfo[P][PropZ]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(string, sizeof(string), "{9C9621}\"%s\"\n{9C9621}Property is For Sale\n{2982FF}Cost: {00FF22}%d coins and $%d\n{2982FF}Win: {00FF22}%d coins and $%d\n{DE00BD}/business", PropInfo[P][PropName], PropInfo[P][Cost], PropInfo[P][CostM], PropInfo[P][Earning], PropInfo[P][EarningM]);
   	Prop3D[P] = CreateDynamic3DTextLabel(string, ~1, PropInfo[P][PropX], PropInfo[P][PropY], PropInfo[P][PropZ], 15.0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SCM(playerid, YELLOW, "Business has been created!");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function StartFirework(id)
{
    FireworkInfo[id][FAmount]--;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Float:distance, Float:Ax, Float:Ay, Float:Az, time, object;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(!FireworkInfo[id][FAmount])
    {
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        DestroyObject(FireworkInfo[id][FBox]);
        KillTimer(FireworkInfo[id][FTimer]);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        return true;
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(++FireworkInfo[id][FRocketsReleased] == 3) FireworkInfo[id][FRocketsReleased] = -2;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Ax = FireworkInfo[id][FPos][0] + (distance * floatsin(-FireworkInfo[id][FPos][3], degrees));
    Ay = FireworkInfo[id][FPos][1] + (distance * floatsin(-FireworkInfo[id][FPos][3], degrees));
    Az = FireworkInfo[id][FPos][2] + FireworkInfo[id][FHeight];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    object = CreateObject(0, FireworkInfo[id][FPos][0], FireworkInfo[id][FPos][1], FireworkInfo[id][FPos][2], 0, 0, 0);
    time = MoveObject(object, Ax, Ay, Az, 20.0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetTimerEx("FireworkSphere", time, false, "dffff", object, Ax, Ay, Az, FireworkInfo[id][FRadius]);
    return true;
}
function FireworkSphere(nobject, Float:x, Float:y, Float:z, Float:radius)
{
    DestroyObject(nobject);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new object, type[3] = {19282, 19283, 19284};
    new Float: phi = 0.0, Float:theta = 0.0, time;
    new Float: Ax = 0.0, Float:Ay = 0.0, Float:Az = 0.0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CreateExplosion(x, y, z, 12, 10.0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i; i < 26; i++)
	{
        Ax = x + (radius * floatsin(-phi, degrees) * floatcos(-theta, degrees));
        Ay = y + (radius * floatsin(-phi, degrees) * floatsin(-theta, degrees));
        Az = z + (radius * floatcos(-phi, degrees));
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        object = CreateObject(type[random(3)], x, y, z, 0.0, 0.0, theta + 45);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        time = MoveObject(object, Ax, Ay, Az, 5.0);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SetTimerEx("FireworkRocketEnd", time, false, "d", object);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        theta += 45.0; if(theta == 360.0)
		{
		   Ax = 0.0, Ax = 0.0, Ay = 0.0;
		}
        if((1+i)%8 == 1) phi += 45;
    }
    return true;
}
function FireworkRocketEnd(object) return DestroyObject(object);
function OnHoldSave(playerid, index, modelid, boneid)
{
	eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new RowCount; cache_get_row_count(RowCount);
    if(!RowCount)
	{
        mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Holds` (`HoldID`,`HoldIndex`,`Model`,`Bone`,`OffsetX`,`OffsetY`,`OffsetZ`) VALUES (%d,%d,%d,%d,%f,%f,%f)", PlayerInfo[playerid][AccID], index, modelid, boneid, HoldsInfo[playerid][index][fOffsetX1], HoldsInfo[playerid][index][fOffsetY1], HoldsInfo[playerid][index][fOffsetZ1]);
        mysql_tquery(SQL, eQuery, "", "");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Holds` SET `RotX` = %f, `RotY` = %f, `RotZ` = %f, `ScaleX` = %f, `ScaleY` = %f, `ScaleZ` = %f WHERE `HoldID` = %d AND `HoldIndex` = %d", HoldsInfo[playerid][index][fRotX1], HoldsInfo[playerid][index][fRotY1], HoldsInfo[playerid][index][fRotZ1], HoldsInfo[playerid][index][fScaleX1], HoldsInfo[playerid][index][fScaleY1], HoldsInfo[playerid][index][fScaleZ1], PlayerInfo[playerid][AccID], HoldsInfo[playerid][index][HoldIndex]);
        mysql_tquery(SQL, eQuery, "", "");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Holds` SET `Model` = %d,`Bone` = %d,`OffsetX` = %f,`OffsetY` = %f,`OffsetZ` = %f WHERE `HoldID` = %d AND `HoldIndex` = %d", modelid, boneid, HoldsInfo[playerid][index][fOffsetX1], HoldsInfo[playerid][index][fOffsetY1], HoldsInfo[playerid][index][fOffsetZ1], PlayerInfo[playerid][AccID], HoldsInfo[playerid][index][HoldIndex]);
    mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Holds` SET `RotX` = %f, `RotY` = %f, `RotZ` = %f, `ScaleX` = %f, `ScaleY` = %f, `ScaleZ` = %f WHERE `HoldID` = %d AND `HoldIndex` = %d", HoldsInfo[playerid][index][fRotX1], HoldsInfo[playerid][index][fRotY1], HoldsInfo[playerid][index][fRotZ1], HoldsInfo[playerid][index][fScaleX1], HoldsInfo[playerid][index][fScaleY1], HoldsInfo[playerid][index][fScaleZ1], PlayerInfo[playerid][AccID], HoldsInfo[playerid][index][HoldIndex]);
    mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
}
function Inactivity()
{
    foreach(new i: Player)
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(ServerInfo[CountReports] >= 1)
	{
	    if(PlayerInfo[i][Level] >= 1)
		{
	        new Float:x, Float:y, Float:z;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        GetPlayerPos(i, x, y, z), SetPlayerPos(i, x, y, z+5);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    Announce(i, "~R~~H~Slapped for~N~~R~~H~Inactivity!~N~~Y~~H~Check~W~~H~ /reports", 6000, 3);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    ServerInfo[InactivityReports] = SetTimer("Inactivity", 300000, true);
		}
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
RadioSwitch(playerid)
{
	switch(PlayerInfo[playerid][RadioFav])
 	{
 		case 0:  PlayAudioStreamForPlayerEx(playerid, "http://stream.radiozu.ro:8020/listen.pls");
  		case 1:  PlayAudioStreamForPlayerEx(playerid, "http://stream.profm.ro:8012/profm.mp3");
   		case 2:  PlayAudioStreamForPlayerEx(playerid, "http://www.radio-hit.ro/asculta.m3u");
    	case 3:  PlayAudioStreamForPlayerEx(playerid, "http://www.radiomafia.ro/listen.m3u");
    	case 4:  PlayAudioStreamForPlayerEx(playerid, "http://www.radiowish.ro/live.m3u");
    	case 5:  PlayAudioStreamForPlayerEx(playerid, "http://radio-fun.ro/asculta.m3u");
     	case 6:  PlayAudioStreamForPlayerEx(playerid, "http://www.radiolautaru.ro/live.m3u");
     	case 7:  PlayAudioStreamForPlayerEx(playerid, "http://www.greudedifuzat.eu/greudedifuzat.m3u");
      	case 8:  PlayAudioStreamForPlayerEx(playerid, "http://www.radioclubmix.ro/live.m3u");
       	case 9:  PlayAudioStreamForPlayerEx(playerid, "http://radiostardj.ro/lst/hip/listen.pls");
       	case 10: PlayAudioStreamForPlayerEx(playerid, "http://www.radiogmusic.com/rock.m3u");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
GetIP(playerid)
{
	new IP[17]; GetPlayerIp(playerid, IP, 17);
	return IP;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ReturnWeaponID(weaponmodelid)
{
	switch(weaponmodelid)
	{
    	case 331: return 1;
    	case 333: return 2;
    	case 334: return 3;
    	case 335: return 4;
    	case 336: return 5;
    	case 337: return 6;
    	case 338: return 7;
    	case 339: return 8;
    	case 341: return 9;
    	case 321: return 10;
    	case 322: return 11;
    	case 323: return 12;
    	case 324: return 13;
    	case 325: return 14;
    	case 326: return 15;
    	case 342: return 16;
    	case 343: return 17;
    	case 344: return 18;
    	case 346: return 22;
    	case 347: return 23;
    	case 348: return 24;
    	case 349: return 25;
    	case 350: return 26;
    	case 351: return 27;
    	case 352: return 28;
    	case 353: return 29;
    	case 355: return 30;
    	case 356: return 31;
    	case 372: return 32;
    	case 357: return 33;
    	case 358: return 34;
    	case 359: return 35;
    	case 360: return 36;
    	case 361: return 37;
    	case 365: return 41;
    	case 366: return 42;
    	case 367: return 43;
    	case 371: return 46;
    	default: return true;
	}
	return -1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ToggleTrue(playerid)
{
	return TogglePlayerControllable(playerid, true);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock PlayAudioStreamForPlayerEx(playerid, link[])
{
	TextDrawHideForPlayer(playerid, Logo[3]);
    PlayAudioStreamForPlayer(playerid, link);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock StopAudioStreamForPlayerEx(playerid)
{
	TextDrawShowForPlayer(playerid, Logo[3]);
    StopAudioStreamForPlayer(playerid);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock EraseVeh(vehicleid)
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
        new Float:X,Float:Y,Float:Z;
    	if(IsPlayerInVehicle(i, vehicleid))
		{
  		    RemovePlayerFromVehicle(i);
  		    GetPlayerPos(i,X,Y,Z);
 		    SetPlayerPos(i,X,Y+3,Z);
	    }
	    SetVehicleParamsForPlayer(vehicleid,i,0,1);
	}
    DestroyVehicle(vehicleid);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock InputHelp(playerid, text[])
{
    new string[1024], Count = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i : Player) if(PlayerInfo[i][Level] != 0) Count++;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Count == 0) return Announce(playerid, "~r~~h~The message cannot~n~~r~~h~Be sent right now!~n~~n~~y~Try again later!", 5000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Level] > 0) return SendError(playerid, "You can't send message because if you're an admin!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if((gettime() - helptime[playerid]) < 60) return SendError(playerid, "Please wait 1 minute to send another message!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player)
	{
		if(PlayerInfo[i][Level] >= 1)
		{
			format(string, 1024, "HELP QUESTION:{FFA500) %s(%d){FFFFFF} /FPM %d", PN(playerid), playerid, playerid);
			SCM(i, WHITE, string);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(string, 1024, "MESSAGE: {FFA500}%s", text);
			SCM(i, WHITE, string);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Count++;
		}
	}
	Announce(playerid, "~R~~H~~H~Your question has been send~N~~R~~H~~H~to online administrators!~N~~W~~H~~H~Please wait for an admin!", 6000, 3);
	return helptime[playerid] = gettime(), true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock IsPlayerInTerritory(playerid, Float:iMinX, Float:iMinY, Float:iMaxX, Float:iMaxY)
{
    new Float:X, Float:Y, Float:Z; GetPlayerPos(playerid, X, Y, Z);
    if(X >= iMinX && X <= iMaxX && Y >= iMinY && Y <= iMaxY) return true;
    return false;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock safeString(exploit[])
{
    new safe[128];
    mysql_escape_string(exploit, safe);
    return safe;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock IsMail(email[])
{
  	new len = strlen(email), cstate = 0, i;
  	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  	for(i = 0; i < len; i++)
	{
	    if((cstate==0 || cstate==1) && (email[i]>='A' && email[i]<='Z')||(email[i]>='0' && email[i]<='9') || (email[i]>='a' && email[i]<='z')  || (email[i]=='.')  || (email[i]=='-')  || (email[i]=='_')) { }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		else
		{
	       if((cstate == 0) &&(email[i] == '@')) cstate = 1;
		   else return false;
	 	}
	}
  	if(cstate < 1) return false;
  	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  	if(len < 6) return false;
  	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  	if((email[len-3]=='.') || (email[len-4]=='.') || (email[len-5]=='.')) return true;
  	return false;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendRconLog(Log[])
{
	new Date[6]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	getdate(Date[0], Date[1], Date[2]); gettime(Date[3], Date[4], Date[5]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `LogsRcon`(`ID`,`Log`,`Date`,`Time`) VALUES(0, '%s', '%02d/%02d/%02d', '%02d:%02d:%02d')", Log, Date[2], Date[1], Date[0], Date[3], Date[4], Date[5]);
	mysql_tquery(SQL, eQuery, "", ""); return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function DeletePersonalCar(playerid, i)
{
    eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(Vehicles[i][vehStatus] == true)
	{
       AdminCMD(playerid, "DELETE VEH");
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       Announce(playerid, "~w~~h~Personal vehicle~n~~r~~h~~h~deleted!", 4000, 3);
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       format(eQuery, sizeof(eQuery), "DELETE FROM `PersonalCars` WHERE `ID` = '%d'", Vehicles[i][vehID]);
       mysql_query(SQL, eQuery, false);
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       DestroyObject(Vehicles[i][vehObject][1]);
       DestroyObject(Vehicles[i][vehObject][2]);
       DestroyObject(Vehicles[i][vehObject][3]);
       DestroyObject(Vehicles[i][vehObject][4]);
       DestroyObject(Vehicles[i][vehObject][5]);
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       RemovePersonalCar(i);
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       return true;
    }
    else return SendError(playerid, "Sorry, but you must be in a personal car to use this command!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function checkVehicle(playerid, vehicleid)
{
    eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Float:x, Float:y, Float:z;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(Vehicles[vehicleid][vehPersonal] == 1)
    {
		if(Vehicles[vehicleid][vehOwner] != PlayerInfo[playerid][AccID] && PlayerInfo[playerid][RconType] < 2)
        {
  			if(PlayerInfo[playerid][Language] == 1) format(eString, sizeof(eString), "~G~~H~Nu esti stapanul meu!~N~~R~~H~%s", GetPlayerNameByAccID(Vehicles[vehicleid][vehOwner]));
  			else if(PlayerInfo[playerid][Language] == 2) format(eString, sizeof(eString), "~G~~H~You are not is my owner!~N~~R~~H~%s", GetPlayerNameByAccID(Vehicles[vehicleid][vehOwner]));
  			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    Announce(playerid, eString, 4000, 3);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            GetPlayerPos(playerid, x, y, z);
            SetPlayerPos(playerid, x, y, z+5);
        }
	}
	else return true;
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function OnSavedVehicleCreatedEx(model, playerid, Float:x, Float:y, Float:z, Float:a)
{
    for(new i = 0; i < MAX_VEH; i++)
    {
        if(Vehicles[i][vehStatus]) continue;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        Vehicles[i][vehStatus]          = true;
        Vehicles[i][vehID]              = cache_insert_id();
        Vehicles[i][vehModel]           = model;
        Vehicles[i][vehPos][0]          = x;
        Vehicles[i][vehPos][1]          = y;
        Vehicles[i][vehPos][2]          = z;
        Vehicles[i][vehPos][3]          = a;
        Vehicles[i][vehColor][0]        = 1;
        Vehicles[i][vehColor][1]        = 1;
        Vehicles[i][vehPersonal]        = 1;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        Vehicles[i][vehOwner] = PlayerInfo[playerid][AccID];
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        format(Vehicles[i][vehPlate], 20, "PersonalCar");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        AddVehEx(i, false);
        break;
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function OnSavedVehicleCreated(model, playerid, Float:x, Float:y, Float:z, Float:a)
{
    for(new i = 0; i < MAX_VEH; i++)
    {
        if(Vehicles[i][vehStatus]) continue;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        Vehicles[i][vehStatus]          = true;
        Vehicles[i][vehID]              = cache_insert_id();
        Vehicles[i][vehModel]           = model;
        Vehicles[i][vehPos][0]          = x;
        Vehicles[i][vehPos][1]          = y;
        Vehicles[i][vehPos][2]          = z;
        Vehicles[i][vehPos][3]          = a;
        Vehicles[i][vehColor][0]        = 1;
        Vehicles[i][vehColor][1]        = 1;
        Vehicles[i][vehPersonal]        = 1;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        Vehicles[i][vehOwner] = PlayerInfo[playerid][AccID];
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        format(Vehicles[i][vehPlate], 20, "PersonalCar");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        CreatePersonalCar1(i);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        PutPlayerInVehicle(playerid, Vehicles[i][vehicleData], 0);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        break;
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function SolveReport()
{
    if(ServerInfo[CountReports] <= 0) foreach(new i: Player)
   	HideReportsTD(i), KillTimer(ServerInfo[InactivityReports]);
    return true;
}
function HideReportsTD(playerid) return PlayerTextDrawHide(playerid, PlayerText:ReportTD);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function NewName(playerid)
{
	StrH[0] = '\0'; StrH2[0] = '\0'; GetPlayerName(playerid, OldName, MAX_PLAYER_NAME); eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new rowcount; cache_get_row_count(rowcount);
	if(rowcount)
	{
		if(PlayerInfo[playerid][Language] == 1)
	    {
	        format(StrH, 400, "{FFE100}Numele {FF0000}%s {FFE100}este deja inregistrat in Baza noastra de Date!\n", OldName),
	        strcat(StrH2, StrH, 400);
	        strcat(StrH2,     "{FFCC00}Daca acesta este tot contul tau, te rugam sa introduci mai jos parola sa!\n\n", 400);
	        strcat(StrH2,     "{FF0000}Daca acest cont nu este al tau, te rugam sa iti alegi un {FFE100}Alt Nume{FF0000}!", 400);
	        //------------------------------------------------------------------
	        SPD(playerid, DIALOG_CHANGENAME, DIALOG_STYLE_PASSWORD, "Autentificare", StrH2, "Continuare", "Alt Nume");
		}
		else if(PlayerInfo[playerid][Language] == 2)
		{
		    format(StrH, 400, "{FFE100}The Name {FF0000}%s {FFE100}is already registered in our DataBase!\n", OldName),
	        strcat(StrH2, StrH, 400);
	        strcat(StrH2,     "{FFCC00}If this is your Account, please enter before it's Password!\n\n", 400);
	        strcat(StrH2,     "{FF0000}If this is not your Account, please choose a {FFE100}New Name{FF0000}!", 400);
	        //------------------------------------------------------------------
	        SPD(playerid, DIALOG_CHANGENAME, DIALOG_STYLE_PASSWORD, "Login", StrH2, "Continue", "New Name");
		}
		return true;
	}
	else
	{
		format(eString, 512, "ACCOUNT: Name changed from %s to %s! ", OldName, StrH);
		SCM(playerid, LIME, eString);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerName(playerid, StrH);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		new year, month, day; getdate(year, month, day);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `LastNameChange`(`Name`, `NewName`, `Date`) VALUES('%s', '%s', '%02d/%02d/%02d')", OldName, StrH, day, month, year);
		mysql_tquery(SQL, eQuery, "", "");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `Name` = '%s' WHERE `ID` = '%d'", StrH, PlayerInfo[playerid][AccID]);
		mysql_tquery(SQL, eQuery, "", "");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][House] != 0)
		{
		    new String[24], String2[512];
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(HouseInfo[PlayerInfo[playerid][House]][h_Level] == 1) String = "{FF9900}Standard";
			if(HouseInfo[PlayerInfo[playerid][House]][h_Level] == 2) String = "{FF0000}Premium";
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(String2, sizeof(String2), "{00FF22}Owned by: {FF0000}%s\n\
						  	  	  			  {00FF22}House Level: {FF0000}%s\n\
	                              			  {00FF22}Type {FF9900}/house {00FF22}for more details.", PN(playerid), String);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdateDynamic3DTextLabelText(housei[PlayerInfo[playerid][House]], ~1, String2);
		}
		if(PlayerInfo[playerid][Property] != 0)
		{
		    new String2[512];
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Properties` SET `PropOwner` = '%s' WHERE `ID` = '%d'", PN(playerid), PlayerInfo[playerid][Property]);
			mysql_tquery(SQL, eQuery, "", "");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(PropInfo[PlayerInfo[playerid][Property]][PropOwner], 24, "%s", PN(playerid));
			format(PropInfo[PlayerInfo[playerid][Property]][PropName], 24, "%s", PN(playerid));
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(String2, sizeof(String2), "{9C9621}\"%s\"\n\
											  {2982FF}Business Owner: {00FF22}%s\n\
											  {2982FF}Cost: {00FF22}%d coins and $%d\n\
											  {2982FF}Win: {00FF22}%d coins and $%d\n\
											  {DE00BD}/business", PropInfo[PlayerInfo[playerid][Property]][PropName], PN(playerid), PropInfo[PlayerInfo[playerid][Property]][Cost], PropInfo[PlayerInfo[playerid][Property]][CostM], PropInfo[PlayerInfo[playerid][Property]][Earning], PropInfo[PlayerInfo[playerid][Property]][EarningM]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdateDynamic3DTextLabelText(Prop3D[PlayerInfo[playerid][Property]], ~1, String2);
		}
		PlayerInfo[playerid][AccLocked] = gettime() + 2*86400, UpdatePlayer(PN(playerid), "AccLocked", PlayerInfo[playerid][AccLocked]), SpawnPlayer(playerid);
		return OnPlayerConnect(playerid);
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ChangeName(playerid)
{
	if(PlayerInfo[playerid][Language] == 1)
	{
		format(StrH, 312,  "{FF0000}Citeste cu atentie!\n\
	        				{FFFF00}Folosiind aceasta comanda iti putea schimba numele de pe server fara a-ti pierde staticile!\n\
	        				{00CC00}Introdu mai jos parola contului pentru a continua ({FF0000}prima parola{00CC00}):");
		return SPD(playerid, DIALOG_CHECK_ACCOUNT_PASSWORD, DIALOG_STYLE_PASSWORD, "Change Name", StrH, "Continua", "Close");
	}
	else if(PlayerInfo[playerid][Language] == 2)
	{
		format(StrH, 312,  "{FF0000}Read this carefully!\n\
					        {FFFF00}Using the command you will change your name on our server without losing your statics!\n\
					        {00CC00}Enter below your account password in order to continue ({FF0000}fist password{00CC00}):");
		return SPD(playerid, DIALOG_CHECK_ACCOUNT_PASSWORD, DIALOG_STYLE_PASSWORD, "Change Name", StrH, "Continue", "Close");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Rec(issuerid)
{
	PlayerInfo[issuerid][InRec] = 0;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Boost(playerid)
{
    KillTimer(PlayerInfo[playerid][boost_timer]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][boost] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Announce(playerid, "~R~~H~Warning:~N~~G~~H~~H~The boost has been expired!", 6000, 3);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ResetPlayerAdmin(playerid)
{
    PlayerInfo[playerid][PBans]        = 0; PlayerInfo[playerid][PKicks]       = 0;
    PlayerInfo[playerid][PWarns]       = 0; PlayerInfo[playerid][PJails]       = 0;
    PlayerInfo[playerid][PMutes]       = 0; PlayerInfo[playerid][Activity]     = 0;
    PlayerInfo[playerid][Level]        = 0; PlayerInfo[playerid][ARClosed]     = 0;
    PlayerInfo[playerid][EventsMaded]  = 0; PlayerInfo[playerid][hoursADMIN]   = 0;
    PlayerInfo[playerid][minutesADMIN] = 0; PlayerInfo[playerid][secondsADMIN] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function DataSetTimer(playerid)
{
    new liYear, liMonth, liDay, rQuery[256]; getdate(liYear, liMonth, liDay);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    //MySQL INSERT For Date
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `AdminSince` = '%d %s, %d' WHERE `ID` = '%d'", liDay, GetMonth(), liYear, PlayerInfo[playerid][AccID]);
    mysql_tquery(SQL, rQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(PlayerInfo[playerid][AdminSince], 24, "%d %s, %d", liDay, GetMonth(), liYear);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function TargetsPoints(playerid)
{
	new string[128], Color; Color = GetPlayerColor(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][TargetPoints] != 100)
	{
		PlayerTextDrawColor(playerid, Targets1, Color), PlayerTextDrawColor(playerid, Targets2, Color);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(string, sizeof string, "Points:~W~~H~ %d", PlayerInfo[playerid][TargetPoints]);
	    PlayerTextDrawSetString(playerid, Targets2, string);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerTextDrawShow(playerid, PlayerText:Targets1), PlayerTextDrawShow(playerid, PlayerText:Targets2);
    }
    else if(PlayerInfo[playerid][TargetPoints] >= 100)
	{
	    PlayerTextDrawDestroy(playerid, Targets2);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Targets2 = CreatePlayerTextDraw(playerid, 543.000000, 433.06660, "_");
		PlayerTextDrawLetterSize(playerid, Targets2, 0.449999, 1.600000);
	    PlayerTextDrawAlignment(playerid, Targets2, 1);
	    PlayerTextDrawColor(playerid, Targets2, -1);
	    PlayerTextDrawSetShadow(playerid, Targets2, 0);
	    PlayerTextDrawSetOutline(playerid, Targets2, 1);
	    PlayerTextDrawBackgroundColor(playerid, Targets2, 51);
	    PlayerTextDrawFont(playerid, Targets2, 3);
	    PlayerTextDrawSetProportional(playerid, Targets2, 1);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerTextDrawColor(playerid, Targets2, Color);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(string, sizeof string, "Points:~W~~H~ %d", PlayerInfo[playerid][TargetPoints]);
	    PlayerTextDrawSetString(playerid, Targets2, string);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerTextDrawShow(playerid, PlayerText:Targets2);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Report(playerid)
{
    new string[123];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(string, sizeof(string), "/REPORTS: ~R~~H~%d", ServerInfo[CountReports]);
	PlayerTextDrawSetString(playerid, ReportTD, string);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerText(playerid, text[])
{
    new ctime; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//text[0] = toupper(text[0]); // Asta era sa scri cu caracter mare la inceput "Bug la /event - Question & Answer"
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][LoggedIn] == 0) return KickPlayer(playerid), false;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Muted] == 1) return Announce(playerid, "~w~~h~You are ~r~~h~muted~w~~h~!", 3000, 4), false;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][RconType] < 1)
	{
	    if(PlayerInfo[playerid][pVIP] == 0 || PlayerInfo[playerid][pVIP] == 1)
	    {
			if((gettime() - ChatTime[playerid]) < 3)
			{
			    if(gettime() - ChatTime[playerid] == 0)			ctime = 3;
			    else if(gettime() - ChatTime[playerid] == 1)	ctime = 2;
			    else if(gettime() - ChatTime[playerid] == 2)	ctime = 1;
			    //--------------------------------------------------------------
			    switch(PlayerInfo[playerid][Language])
			    {
       			    case 0: FormatMSG(playerid, ANTISPAM, "Please wait {26FF00}%d{FF6F00} seconds to write something again!", ctime);
			        case 1: FormatMSG(playerid, ANTISPAM, "Please wait {26FF00}%d{FF6F00} seconds to write something again!", ctime);
				}
				return 0;
			}
			else ChatTime[playerid] = gettime();
		}
		else if(PlayerInfo[playerid][pVIP] == 2)
		{
			if((gettime() - ChatTime[playerid]) < 1)
			{
			    if(gettime() - ChatTime[playerid] == 0)			ctime = 1;
			    //--------------------------------------------------------------
			    switch(PlayerInfo[playerid][Language])
			    {
			        case 0: FormatMSG(playerid, ANTISPAM, "{FF6F00}Please wait {26FF00}%d{FF6F00} seconds to write something again!", ctime);
			        case 1: FormatMSG(playerid, ANTISPAM, "{FF6F00}Please wait {26FF00}%d{FF6F00} seconds to write something again!", ctime);
				}
				return 0;
			}
			else ChatTime[playerid] = gettime();
		}
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][AFKBRB] != 0) return Announce(playerid, "~w~~h~Type ~r~~h~/back~n~~w~~h~to use the~n~~r~~h~Chat~w~~h~!", 4000, 4), false;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(StartedM && text[0] && MathsResult == strval(text))
	{
	    StartedM = false;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    foreach(new i : Player)
	    {
			switch(PlayerInfo[playerid][Language])
		    {
		        case 1: FormatMSG(i, RED, "%s {05C81F}a raspuns {FF0000}%i {05C81F}si a castigat {FF0000}%d {05C81F}coins!", PN(playerid), MathsResult, ReacReward);
		        case 2: FormatMSG(i, RED, "%s {05C81F}answer {FF0000}%i {05C81F}and won {FF0000}%d {05C81F}coins!", PN(playerid), MathsResult, ReacReward);
			}
		}
		Announce(playerid, "~G~~h~~H~Test won!~n~~y~~h~check~R~~H~ /stats~y~~h~!", 6000, 3);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ServerInfo[MathTest] = 0, PlayerInfo[playerid][Coins] += ReacReward, PlayerInfo[playerid][PMaths]++;
		return false;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(StartedR == 1)
    {
		if(!strcmp(Chars, text, false))
		{
			foreach(new i : Player)
			{
				switch(PlayerInfo[i][Language])
			    {
			        case 1: FormatMSG(i, RED, "%s {05C81F}a scris {FF0000}%s {05C81F}si a castigat {FF0000}%d coins & 5000${05C81F}!", PN(playerid), Chars, ReacReward);
			        case 2: FormatMSG(i, RED, "%s {05C81F}typed {FF0000}%s {05C81F}and won {FF0000}%d coins & 5000${05C81F}!", PN(playerid), Chars, ReacReward);
				}
			}
			Announce(playerid, "~G~~h~~H~Test won!~n~~y~~h~check~R~~H~ /stats~y~~h~!", 6000, 3);
	    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        ServerInfo[ReactionTest] = 0;
			PlayerInfo[playerid][Coins] += ReacReward;
		    PlayerInfo[playerid][Money] += 5000;
		    GivePlayerMoney(playerid, 5000);
		    PlayerInfo[playerid][PReactions]++, StartedR = 0, ReacReward = 0;
		    return false;
   		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(ServerInfo[QStarted] == 1)
	{
	    if(!strcmp(ServerInfo[QAnswer], text, false))
	    {
	        new String[128];
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        foreach(new i : Player)
			{
				FormatMSG(i, RED, "%s {33CC33}a castigat event-ul!", PN(playerid));
			    FormatMSG(i, ABLUE, "%s(%d) has won 'Question & response' event!", PN(playerid), playerid);
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        Announce(playerid, "~Y~~H~Test Won~N~~N~~G~~H~Check~R~~H~ /Stats", 6000, 3);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            format(String, sizeof(String), "~r~~H~Winner:~Y~~H~ %d~N~~G~~H~Give him the prize!", playerid);
            Announce(ServerInfo[QAdmin], String, 6000, 3);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            ServerInfo[QStarted] = 0;
            return false;
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(ServerInfo[WStarted] == 1)
	{
	    if(!strcmp(ServerInfo[WhoSayFirst], text, true))
        {
            new String[128];
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        foreach(new i : Player)
			{
		 		FormatMSG(i, RED, "%s {33CC33}a castigat event-ul!", PN(playerid));
			    FormatMSG(i, ABLUE, "%s(%d) has won 'Who say first' event!", PN(playerid), playerid);
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        Announce(playerid, "~Y~~H~Test Won~N~~N~~G~~H~Check~R~~H~ /Stats", 6000, 3);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            format(String, sizeof(String), "~r~~H~Winner:~Y~~H~ %d~N~~G~~H~Give him the prize!", playerid);
            Announce(ServerInfo[WAdmin], String, 6000, 3);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            ServerInfo[WStarted] = 0;
            return false;
		}
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Other Chat
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(text[0] == '~' && PlayerInfo[playerid][RconType] == 3)
    {
        format(eString, sizeof(eString), "King Chat:{FF0000} %s(%d): {15FF00}%s", PN(playerid), playerid, text[1]);
		MessageToKings(ORANGE, eString);
        return false;
    }
    if(text[0] == '@' && PlayerInfo[playerid][Level] >= 1)
    {
        format(eString, sizeof(eString), "Admin Chat:{FF0000} %s(%d): {15FF00}%s", PN(playerid), playerid, text[1]);
		MessageToAdmins(ORANGE, eString);
        return false;
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(text[0] == '#' && PlayerInfo[playerid][pVIP] >= 1)
    {
        if(PlayerInfo[playerid][VipChat] == 1) return SCM(playerid, RED, "Sorry, but you have Vip Chat disabled. Enable it first (/vipchat)!"), false;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        format(eString, sizeof(eString), "VIP Chat:{FF0000} %s(%d): {15FF00}%s", PN(playerid), playerid, text[1]);
		MessageToVips(ORANGE, eString);
        return false;
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(text[0] == '!' && PlayerInfo[playerid][ClanID] != 0)
	{
	    foreach(new i: Player) if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID]) FormatMSG(i, ORANGE, "Clan Chat: {FF4400}%s(%d): {15FF00}%s", PN(playerid), playerid, text[1]);
	    return false;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(text[0] == '!' && PlayerInfo[playerid][GangID] != 0)
	{
	    foreach(new i: Player)
		{
			if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID])
			{
				FormatMSG(i, ORANGE, "Gang Chat: {FF0000}%s(%d): {15FF00}%s", PN(playerid), playerid, text[1]);
			}
			if(GangInfo[PlayerInfo[i][GangID]][AllianceID] == PlayerInfo[playerid][GangID])
			{
			    FormatMSG(i, ORANGE, "Gang Chat {00FFFF}(Ally){FF9900}: {FF0000}%s(%d): {15FF00}%s", PN(playerid), playerid, text[1]);
			}
		}
		return false;
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, sizeof(eString), "{%06x}%s%s{00CC00}(%d): {FFFFFF}%s", GetPlayerColor(playerid) >>> 8, PN(playerid), GetPlayerRankInChat(playerid), playerid, text);
	SCMALL(GetPlayerColor(playerid), eString), SetPlayerChatBubble(playerid, text, 0xFFFFFFFF, 40.0, 4000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return false;
}
stock GetPlayerRankInChat(playerid)
{
	new string[242];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Level] >= 1)
	{
	    if(PlayerInfo[playerid][PersonalTagColor] != 0) format(string, 24, "{%06x}(%s)", PlayerInfo[playerid][PersonalTagColor] >>> 8, PlayerInfo[playerid][PersonalTagString]);
	    else
	    {
			if(PlayerInfo[playerid][RconType] == 3) string = "{FF0000}({FFFFFF}Manager{FF0000})";
			else if(PlayerInfo[playerid][RconType] == 2) string = "{FF0000}({FFFFFF}Support{FF0000})";
			else if(PlayerInfo[playerid][RconType] == 1) string = "{FF0000}({FFFFFF}RCON{FF0000})";
			else string = "{3333FF}(Admin)";
		}
	}
	else if(PlayerInfo[playerid][pVIP] >= 1) string = "{FF0000}(VIP)";
	else string = "";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return string;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnVehicleMod(playerid, vehicleid, componentid)
{
 	for(new i = 0; i < MAX_VEH; i++)
  	{
        if(Vehicles[i][vehicleData] == vehicleid)
        {
            Vehicles[i][vehMod][GetVehicleComponentType(componentid)] = componentid;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            SaveVehicleMod(i);
            break;
        }
    }
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
    for(new i = 0; i < MAX_VEH; i++)
    {
        if(Vehicles[i][vehicleData] == vehicleid)
        {
            Vehicles[i][vehPaint] = paintjobid;
            break;
        }
    }
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
    for(new i = 0; i < MAX_VEH; i++)
    {
        if(Vehicles[i][vehicleData] == vehicleid)
        {
            Vehicles[i][vehColor][0] = color1, Vehicles[i][vehColor][1] = color2;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            ChangeVehicleColor(i, Vehicles[i][vehColor][0], Vehicles[i][vehColor][1]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            SavePersonalCars(i);
        }
    }
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function IsPlayerInASpecialCP(playerid)
{
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Gangs Checkpoints Pos
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < MAX_GANGCHECKPOINTS; i++)
	if(CPS_IsPlayerInCheckpoint(playerid, GangCheckpoints[i]))
	{
		if(gCheckpointInfo[i][CheckpointGang] == PlayerInfo[playerid][GangID])
	    {
			SetPlayerPos(playerid, gCheckpointInfo[i][ToX], gCheckpointInfo[i][ToY], gCheckpointInfo[i][ToZ]), SetPlayerVirtualWorld(playerid, 0), SetPlayerInterior(playerid, 0);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			LoadObjectsProtection(playerid);
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Spawn Checkpoints
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for (new i = 0; i < MAX_SPAWN_ZONES; i ++)
	if(CPS_GetPlayerCheckpoint(playerid) == SpawnCheckPoint[i] && EditingSpawnCPA[playerid] == 0)
	{
	    SetPlayerPos(playerid, SpawnZones[SpawnZones[i][TeleportTo]][sPosX], SpawnZones[SpawnZones[i][TeleportTo]][sPosY], SpawnZones[SpawnZones[i][TeleportTo]][sPosZ]);
    	SetPlayerFacingAngle(playerid, SpawnZones[SpawnZones[i][TeleportTo]][sPosA]);
	}
}
public OnPlayerLeaveCheckpoint(playerid) { EditingSpawnCPA[playerid] = 0; }
public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerEnterDynamicArea(playerid, areaid)
{
	if(PlayerInfo[playerid][SkateActive] == true)
	{
	    new Float:p[3];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[playerid][SkateActive] = false;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    DestroyObject(PlayerInfo[playerid][Skate]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	RemovePlayerAttachedObject(playerid, INDEX_SKATE);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	GetPlayerPos(playerid, p[0], p[1], p[2]);
		SetPlayerPos(playerid, p[0], p[1], p[2]+1);
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Santa Ice Rink
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(areaid == SantaIce)
	{
		PlayerInfo[playerid][InTerry] = SantaIce;
		//++++++++++++++++++++++++++++++++++++++|+++++++++++++++++++++++++++++++
		oldskin[playerid] = GetPlayerSkin(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ApplyAnimation(playerid, "SKATE", "skate_sprint", 4.1, 1, 1, 1, 1, 1);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerSkin(playerid, 99);
	}
	else
	{
	    if(PlayerInfo[playerid][God] == 1 || PlayerInfo[playerid][GodCar] == 1 && PlayerInfo[playerid][RconType] == 0)
	    {
	        Announce(playerid, "~H~~H~You entered in a gang territory!~N~~R~~H~godmode~W~ has been disabled!", 6000, 3);
	        PlayerInfo[playerid][God] = 0, PlayerInfo[playerid][GodCar] = 0;
	        SetPlayerHealth(playerid, 100), SetPlayerArmour(playerid, 100);
	        if(IsPlayerInAnyVehicle(playerid)) { new vehid = GetPlayerVehicleID(playerid); SetVehicleHealth(vehid, 1000); }
	    }
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	if(areaid == SantaIce) SetPlayerSkin(playerid, oldskin[playerid]), PlayerInfo[playerid][InTerry] = 0;
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function IsPlayerInSpecialZone(playerid)
{
	new SpecZone;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InNascar] == 1) SpecZone = 1;
 	else if(PlayerInfo[playerid][InWar] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InSkyClimb] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InSumo] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InMaze2] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][NRGMaze] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InMaze] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][JobID] != 0) SpecZone = 1;
	else if(PlayerInfo[playerid][InDM] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InStealCar] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InStunt] == 1) SpecZone = 1;
 	else if(PlayerInfo[playerid][InMG][1] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InMG][2] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InRace] != 0) SpecZone = 1;
	else if(PlayerInfo[playerid][JobStarted][1] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][JobStarted][2] == 1) SpecZone = 1;
 	else if(PlayerInfo[playerid][JobStarted][3] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][JobStarted][4] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][JobStarted][5] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InMG][0] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InLastCar] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InTargets] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InDuel] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InVortex] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InDerby] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InGarena] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InGangWar] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InFallOut] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InSantaLand] == 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InSpringQuest][0] >= 1) SpecZone = 1;
	else if(PlayerInfo[playerid][InHNS] == 1) SpecZone = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else SpecZone = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SpecZone;
}
public OnPlayerCommandReceived(playerid, cmdtext[])
{
	new ctime; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][LoggedIn] == 0) return Kick(playerid), false;
   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	if(PlayerInfo[playerid][Level] < 3 || PlayerInfo[playerid][RconType] < 1)
	{
	    if(PlayerInfo[playerid][Level] < 3)
	    {
			if((gettime() - SpamCheck[playerid]) < 2)
			{
			    if(gettime() - SpamCheck[playerid] == 0)		    ctime = 2;
			    else if(gettime() - SpamCheck[playerid] == 1)		ctime = 1;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    switch(PlayerInfo[playerid][Language])
			    {
			        case 1: FormatMSG(playerid, ANTISPAM, "Te rugam asteapta {26FF00}%d{FF6F00} secunde si incearca din nou!", ctime);
			        case 2: FormatMSG(playerid, ANTISPAM, "Please wait {26FF00}%d{FF6F00} second(s) to use commands again!", ctime);
				}
				return 0;
			}
			else SpamCheck[playerid] = gettime();
		}
		else if(PlayerInfo[playerid][Level] < 3)
		{
			if((gettime() - SpamCheck[playerid]) < 1)
			{
			    if(gettime() - SpamCheck[playerid] == 0) ctime = 1;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    switch(PlayerInfo[playerid][Language])
			    {
			        case 1: FormatMSG(playerid, ANTISPAM, "Te rugam sa astepti {26FF00}%d{FF6F00} secunde pentru a folosi comenzi!", ctime);
			        case 2: FormatMSG(playerid, ANTISPAM, "Please wait {26FF00}%d{FF6F00} seconds to use commands again!", ctime);
				}
				return 0;
			}
			else SpamCheck[playerid] = gettime();
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInSpecialZone(playerid) == 1 && strfind(cmdtext, "leave", true) &&
    strfind(cmdtext, "/ban", true) && strfind(cmdtext, "/kick", true) && strfind(cmdtext, "/jail", true) &&
    strfind(cmdtext, "/unjail", true) && strfind(cmdtext, "/mute", true) && strfind(cmdtext, "/unmute", true) &&
    strfind(cmdtext, "/radio", true) && strfind(cmdtext, "/mp3", true) && strfind(cmdtext, "/cc", true) &&
    strfind(cmdtext, "/admins", true) && strfind(cmdtext, "/report", true) && strfind(cmdtext, "/res", true) &&
    strfind(cmdtext, "/announce", true) && strfind(cmdtext, "/explode", true) && strfind(cmdtext, "/setcolor", true) &&
    strfind(cmdtext, "/set", true) && strfind(cmdtext, "/spawn", true) && strfind(cmdtext, "/slap", true) &&
    strfind(cmdtext, "/burn", true) && strfind(cmdtext, "/akill", true) && strfind(cmdtext, "/freeze", true) &&
    strfind(cmdtext, "/unfreeze", true) && strfind(cmdtext, "/ad", true) && strfind(cmdtext, "/vad", true) &&
    strfind(cmdtext, "/spec", true) && strfind(cmdtext, "/carol", true) && strfind(cmdtext, "/snow", true) && strfind(cmdtext, "leave", true) == -1) {
    return Announce(playerid, "~w~~h~Use ~r~~h~/Leave ~w~~h~to ~r~~h~Leave~w~~h~!", 4000, 3), 0; }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InPersGarage] == 1 && strfind(cmdtext, "/mycar", true)) return false;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][AFKBRB] == 1 && strfind(cmdtext, "back", true) && strfind(cmdtext, "back", true)     == -1)
    {
        return false;
    }
    if(PlayerInfo[playerid][Jailed] == 1 && strfind(cmdtext, "unjail", true)     == -1)
    return SendError(playerid, "Please wait 5 minutes to release the jail!"), false;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new l; l < MAX_PLAYERS; l++) if(PlayerInfo[l][Read][1] == 1 && PlayerInfo[playerid][Level] < 3 && PlayerInfo[playerid][RconType] < 1)
    {
        new gStr[1024];
		format(gStr, 200, "%s {FFFFFF}has typed the command: {33AA33}%s", PN(playerid), cmdtext);
		if(l != playerid) SCM(l, GREEN, gStr);
	}
    if(PlayerInfo[playerid][Frozen] == 1 && PlayerInfo[playerid][Level] < 5)
    {
        if(strcmp(cmdtext, "/unfreeze", true) == 0) return true;
		SendError(playerid, "You are frozen you can't use any command!"); return false;
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Custom Teleport System
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eString, sizeof(eString), "SELECT * FROM `ServerTeleports` WHERE `TeleportCMD` = '%s'", cmdtext);
	mysql_query(SQL, eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new total; cache_get_row_count(total);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(total != 0)
	{
	    new tTitle[20], Float:p[3], string[200];
		CONTENT(0, "TeleportName", tTitle);
		FLOAT(0, "PosX", p[0]);
		FLOAT(0, "PosY", p[1]);
		FLOAT(0, "PosZ", p[2]);
		format(string, sizeof(string), "~y~Welcome to ~n~~g~~h~%s", tTitle);
		Announce(playerid, string, 4000, 3);
		SetPlayerPos(playerid, p[0], p[1], p[2]);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		return false;
	}
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
    if(success == 0)
    {
		switch(PlayerInfo[playerid][Language])
  		{
	        case 1: FormatMSG(playerid, RED, "Comanda {00CC00}%s{FF0000} nu exista! Foloseste {00CC00}/cmds{FF0000} sau {00CC00}/help{FF0000}.", cmdtext);
	        case 2: FormatMSG(playerid, RED, "Command {00CC00}%s{FF0000} don't exist! Use {00CC00}/cmds{FF0000} or {00CC00}/help{FF0000}.", cmdtext);
		}
	}
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
    foreach(new x: Player) if(IsPlayerConnected(x) && GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid && PlayerInfo[x][SpecType] == ADMIN_SPEC_TYPE_PLAYER) SetPlayerInterior(x, newinteriorid);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    VM_OnPlayerKeyStateChange(playerid, newkeys);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new VehicleID = GetPlayerVehicleID(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PRESSED(KEY_SECONDARY_ATTACK))
    {
        switch(GetPlayerState(playerid))
        {
            case PLAYER_STATE_DRIVER:
            {
                switch(GetVehicleModel(GetPlayerVehicleID(playerid)))
                {
                    case 441,464,465,501,564,584:
                    {
					  if(PlayerInfo[playerid][InSantaToyCar] == 1)
					  {
                        RemovePlayerFromVehicle(playerid);
                        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
                        SetPlayerPos(playerid, -611.7360,3502.4048,5.7700);
                        SetPlayerFacingAngle(playerid, 1.6395);
                        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
                        PlayerInfo[playerid][InSantaToyCar] = 0;
                        SetPlayerVirtualWorld(playerid, 2019);
                        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
						SetTimerEx("EraseVeh", 1000, false, "i", PlayerInfo[playerid][pCar]);
					  }
					  else
					  {
					    RemovePlayerFromVehicle(playerid);
					  }
                    }
                }
            }
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][SkateActive] && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
        static bool:act;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SetPlayerArmedWeapon(playerid,0);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(newkeys & KEY_HANDBRAKE)
		{
            ApplyAnimation(playerid, "SKATE", "skate_sprint", 4.1, 1, 1, 1, 1, 1, 1);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(!act)
			{
                act = true;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                RemovePlayerAttachedObject(playerid, INDEX_SKATE);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                DestroyObject(PlayerInfo[playerid][Skate]);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                PlayerInfo[playerid][Skate] = CreateObject(19878, 0, 0, 0, 0, 0, 0);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                AttachObjectToPlayer(PlayerInfo[playerid][Skate], playerid, -0.2 ,0, -0.9, 0, 0, 90);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            }
        }
        if(oldkeys & KEY_HANDBRAKE)
		{
            ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(act)
			{
                act = false;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                DestroyObject(PlayerInfo[playerid][Skate]);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                RemovePlayerAttachedObject(playerid, INDEX_SKATE);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                SetPlayerAttachedObject(playerid, INDEX_SKATE, 19878, 6, -0.055999, 0.013000, 0.000000, -84.099983, 0.000000, -106.099998, 1.000000, 1.000000, 1.000000);
            }
        }
    }
	if(newkeys & KEY_CTRL_BACK)
	{
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> Gang Camera Edit
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(GangCameraEdit[playerid] >= 1)
		{
		    SCM(playerid, YELLOW, "Info:{FF0000} Gang camera edit position has been canceled!");
		    gCameraPos[PlayerInfo[playerid][EditingGang]][gCamPos][1] = 0;
		    gCameraPos[PlayerInfo[playerid][EditingGang]][gCamPos][2] = 0;
		    gCameraPos[PlayerInfo[playerid][EditingGang]][gCamPos][3] = 0;
		    gCameraPos[PlayerInfo[playerid][EditingGang]][gCamPosTo][1] = 0;
		    gCameraPos[PlayerInfo[playerid][EditingGang]][gCamPosTo][2] = 0;
		    gCameraPos[PlayerInfo[playerid][EditingGang]][gCamPosTo][3] = 0;
		    GangCameraEdit[playerid] = 0;
		    OnGangEdit[playerid] = 0;
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> Base Teleport Position Edit #editgang
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(GangBaseEdit[playerid] >= 1) {
        SCM(playerid, YELLOW, "Info:{FF0000} Gang base set has been canceled{FFFF00}!");
        GangBaseEdit[playerid] = 0;
		OnGangEdit[playerid] = 0; }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> Edit Gang Territory
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(TerryEditStage[playerid] >= 1)
	    {
	        KillTimer(TerryEditTimer[playerid]);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        TerryEditStage[playerid] = 0, OnGangEdit[playerid] = 0;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        Teritories[OnTerryEdit[playerid]][minx] = TerryData[playerid][0];
			Teritories[OnTerryEdit[playerid]][miny] = TerryData[playerid][1];
			Teritories[OnTerryEdit[playerid]][maxx] = TerryData[playerid][2];
			Teritories[OnTerryEdit[playerid]][maxy] = TerryData[playerid][3];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GangZoneDestroy(Teritories[OnTerryEdit[playerid]][ID]);
    		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    		Teritories[OnTerryEdit[playerid]][ID] = GangZoneCreate(Teritories[OnTerryEdit[playerid]][minx], Teritories[OnTerryEdit[playerid]][miny], Teritories[OnTerryEdit[playerid]][maxx], Teritories[OnTerryEdit[playerid]][maxy]);
    		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SCM(playerid, YELLOW, "Info:{FF0000} Gang zone edit has been canceled{FFFF00}!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GangZoneHideForAll(Teritories[OnTerryEdit[playerid]][ID]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GangZoneShowForAll(Teritories[OnTerryEdit[playerid]][ID], GangInfo[Teritories[OnTerryEdit[playerid]][owner]][pGangColor]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			OnUpdate(2);
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> Spawn Zone Edit
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(EditingSpawnZone[playerid] >= 1)
	    {
	        SCM(playerid, YELLOW, "SpawnZone: The Spawn Zone edit has been succesfully canceled!");
	        EditingSpawnZone[playerid] = 0;
	    }
	    if(EditingSpawnCP[playerid] >= 1)
	    {
	        SCM(playerid, YELLOW, "SpawnZone: The Spawn Zone CP edit has been succesfully canceled!");
	        EditingSpawnCP[playerid] = 0;
	    }
	}
	if(newkeys & KEY_SECONDARY_ATTACK)
	{
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> Gang Camera Edit
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(GangCameraEdit[playerid] == 1)
		{
		    GetPlayerPos(playerid, GangCameraEditPos[playerid][0], GangCameraEditPos[playerid][1], GangCameraEditPos[playerid][2]);
		    SCM(playerid, YELLOW, "Info:{FF0000} Gang camera position for started point have been registered!");
		    GangCameraEdit[playerid] = 2;
		}
		else if(GangCameraEdit[playerid] == 2)
		{
            GetPlayerPos(playerid, GangCameraEditPos[playerid][3], GangCameraEditPos[playerid][4], GangCameraEditPos[playerid][5]);
		    SCM(playerid, YELLOW, "Info:{FF0000} Gang camera position have been updated successfully!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    gCameraPos[PlayerInfo[playerid][EditingGang]][gCamPos][1] = GangCameraEditPos[playerid][0];
		    gCameraPos[PlayerInfo[playerid][EditingGang]][gCamPos][2] = GangCameraEditPos[playerid][1];
		    gCameraPos[PlayerInfo[playerid][EditingGang]][gCamPos][3] = GangCameraEditPos[playerid][2];
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			gCameraPos[PlayerInfo[playerid][EditingGang]][gCamPosTo][1] = GangCameraEditPos[playerid][3];
			gCameraPos[PlayerInfo[playerid][EditingGang]][gCamPosTo][2] = GangCameraEditPos[playerid][4];
			gCameraPos[PlayerInfo[playerid][EditingGang]][gCamPosTo][3] = GangCameraEditPos[playerid][5];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			OnUpdate(6);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    GangCameraEdit[playerid] = 0;
		    OnGangEdit[playerid] = 0;
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> Base Teleport Position Edit #editgang
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(GangBaseEdit[playerid] >= 1)
		{
		    new Float:p[3]; GetPlayerPos(playerid, p[0], p[1], p[2]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SCM(playerid, YELLOW, "GangEDIT:{FF0000} Base teleport has been set{FFFF00}!");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `GangBases` SET `X` = '%f', `Y` = '%f', `Z` = '%f' WHERE `ID` = '%d'", p[0], p[1], p[2], GangBaseEdit[playerid]);
	    	mysql_tquery(SQL, eQuery, "", "");
	    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    	GangBaseEdit[playerid] = 0;
	    	OnGangEdit[playerid] = 0;
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> Edit Gang Checkpoint
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(InCheckPointEdit[playerid] == 1)
		{
			GetPlayerPos(playerid, CPPosTo[playerid][0], CPPosTo[playerid][1], CPPosTo[playerid][2]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			InCheckPointEdit[playerid] = 0, OnGangEdit[playerid] = 0;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SCM(playerid, YELLOW, "GangEDIT:{FF0000} Checkpoint finished with editing{FFFF00}!");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `GangCheckpoints`(`ID`,`GangID`,`CheckpointText`,`CheckpointX`,`CheckpointY`,`CheckpointZ`,`ToX`,`ToY`,`ToZ`) VALUES(0, '%d', '%s', '%f', '%f', '%f', '%f', '%f', '%f')",
			PlayerInfo[playerid][EditingGang], CPPosText[playerid], CPPos[playerid][0], CPPos[playerid][1], CPPos[playerid][2], CPPosTo[playerid][0],CPPosTo[playerid][1], CPPosTo[playerid][2]);
			mysql_tquery(SQL, eQuery, "CreateCheckPointForServer", "isffffff", playerid, CPPosText[playerid], CPPos[playerid][0], CPPos[playerid][1], CPPos[playerid][2], CPPosTo[playerid][0], CPPosTo[playerid][1], CPPosTo[playerid][2]);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// -> Edit Gang Territory
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(OnTerryEdit[playerid] >= 1)
		{
		    if(TerryEditStage[playerid] == 1)
		    {
		        new Float:p[3]; GetPlayerPos(playerid, p[0], p[1], p[2]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    TerryEditTimer[playerid] = SetTimerEx("EditingGangTerritory", 1, true, "i", playerid);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    SCM(playerid, YELLOW, "GangEDIT:{FF0000} Now you need to go to a vertically postion and press{FFFF00} 'F'{FF0000}!");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    TerryEditStage[playerid] = 2;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    NewTerryPos[playerid][0] = p[0];
			    NewTerryPos[playerid][1] = p[1];
			}
			else if(TerryEditStage[playerid] == 2)
			{
			    KillTimer(TerryEditTimer[playerid]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    SCM(playerid, YELLOW, "GangEDIT:{FF0000} You have finished the gang territory edit{FFFF00}!");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    TerryEditStage[playerid] = 0, OnGangEdit[playerid] = 0;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    GangZoneDestroy(Teritories[OnTerryEdit[playerid]][ID]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    Teritories[OnTerryEdit[playerid]][ID] = GangZoneCreate(Teritories[OnTerryEdit[playerid]][minx], Teritories[OnTerryEdit[playerid]][miny], Teritories[OnTerryEdit[playerid]][maxx], Teritories[OnTerryEdit[playerid]][maxy]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    GangZoneShowForAll(Teritories[OnTerryEdit[playerid]][ID], GangInfo[Teritories[OnTerryEdit[playerid]][owner]][pGangColor]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				OnUpdate(2);
			}

		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> DJ STATE
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(IsPlayerInRangeOfPoint(playerid, 1.0, DJSTATE))
		{
		    if(PlayerInfo[playerid][DJ] >= 1) ShowDJMP3(playerid);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// -> Edit Spawn Zones
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(EditingSpawnZone[playerid] >= 1)
		{
		    new string[128], Float:p[4]; GetPlayerPos(playerid, p[0], p[1], p[2]);
		    GetPlayerFacingAngle(playerid, p[3]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(string, sizeof(string), "SpawnZone: You have succesfully seted the spawn zone for {FF0000}'%s'{FFFF00}!", SpawnZones[EditingSpawnZone[playerid]][SpawnName]);
		    SCM(playerid, YELLOW, string);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SpawnZones[EditingSpawnZone[playerid]][sPosX] = p[0];
		    SpawnZones[EditingSpawnZone[playerid]][sPosY] = p[1];
		    SpawnZones[EditingSpawnZone[playerid]][sPosZ] = p[2];
		    SpawnZones[EditingSpawnZone[playerid]][sPosA] = p[3];
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    DestroyDynamic3DTextLabel(SpawnZone3D[EditingSpawnZone[playerid]]);
		    SpawnZone3D[EditingSpawnZone[playerid]] = CreateDynamic3DTextLabel("{FFFF00}Spawn Zone\n{00FF22}Type {FF0000}/HM {00FF22}for free health & armour!\n{FFFF00}"SERVER_WEBSITE"", ~1, p[0], p[1], p[2], 30);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `SpawnZones` SET `X` = '%f', `Y` = '%f', `Z` = '%f', `A` = '%f' WHERE `ID` = '%d'", p[0], p[1], p[2], p[3], EditingSpawnZone[playerid]);
    		mysql_tquery(SQL, eQuery, "", "");
    		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    		EditingSpawnZone[playerid] = 0;
		}
		if(EditingSpawnCP[playerid] >= 1)
		{
		    new string[128], Float:p[3]; GetPlayerPos(playerid, p[0], p[1], p[2]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(string, sizeof(string), "SpawnZone: You have succesfully seted the spawn Checkpoint for {FF0000}'%s'{FFFF00}!", SpawnZones[EditingSpawnCP[playerid]][SpawnName]);
		    SCM(playerid, YELLOW, string);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    DestroyDynamic3DTextLabel(SpawnCP3D[EditingSpawnCP[playerid]]);
		    CPS_RemoveCheckpoint(SpawnCheckPoint[EditingSpawnCP[playerid]]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SetTimerEx("AddStuffForSpawnCheckpoints", 1000, false, "dfff", playerid, p[0], p[1], p[2]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    TogglePlayerControllable(playerid, false);
		}
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(newkeys & KEY_FIRE)
	{
		for(new i = 0; i < 3; i++) PlayerTextDrawHide(playerid, Car_Textdraw[i]);
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(newkeys & KEY_FIRE && IsPlayerInAnyVehicle(playerid))
	{
	    if(IsNosVehicle(VehicleID)) AddVehicleComponent(VehicleID, 1010);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(newkeys & KEY_HANDBRAKE && PlayerInfo[playerid][InMG][5] == 1)
 	{
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  		new Float:ox, Float:oy, Float:oz, Float:px, Float:py, Float:pz, Float:angle;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        GetObjectPos(SoccerBall, ox, oy, oz); GetPlayerFacingAngle(playerid, angle);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  		if(IsPlayerInRangeOfPoint(playerid, 1.5, ox, oy, oz))
    	{
     		GetPlayerPos(playerid, px, py, pz), 		GetXYInFrontOfPlayer(playerid, px, py, 7.0),				 MoveObject(SoccerBall,px ,py, 736.69220, 8.0);
          	ApplyAnimation(playerid,"FIGHT_D","FightD_1",4.1,0,1,1,0,0); for(new s = 0; s < MAX_PLAYERS; s++) PlayerInfo[s][LastKicker] = 0;
           	PlayerInfo[playerid][LastKicker] = 1;
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(newkeys & KEY_SUBMISSION)
    {
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
        {
			if(IsPlayerInAnyVehicle(playerid))
	        {
         		if(PlayerInfo[playerid][InDerby] == 1) return true;
            	if(PlayerInfo[playerid][InVortex] == 1) return true;
            	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				RepairVehicle(GetPlayerVehicleID(playerid));
				PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				RepairVehicle(VehicleID), PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	        }
		}
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(newkeys & KEY_YES)
	{
	    if(!IsPlayerInAnyVehicle(playerid)) return true;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][InDerby] == 1) return true;
		if(PlayerInfo[playerid][InVortex] == 1) return true;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    new Float:X, Float:Y, Float:Z, Float:Angle;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    GetPlayerPos(playerid, X, Y, Z),   GetVehicleZAngle(VehicleID, Angle);
	    SetVehiclePos(VehicleID, X, Y, Z), SetVehicleZAngle(VehicleID, Angle), Announce(playerid, "~n~~n~~n~~n~~n~~n~~n~~y~Vehicle ~g~~h~~h~Flipped~w~~h~!", 4000, 3);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][VUP])
    {
        new Float:xx, Float:xy, Float:xz, vperror[128], vptime; GetVehicleVelocity(VehicleID, xx, xy, xz);
	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsPlayerInSpecialZone(playerid) == 0)
		{
			if(newkeys & KEY_CROUCH)
			{
			    if(VUPLimit[playerid] == 5)
				{
				    if(gettime() - VupTime[playerid] == 0) vptime = 5;
				    else if(gettime() - VupTime[playerid] == 1) vptime = 4;
				    else if(gettime() - VupTime[playerid] == 2) vptime = 3;
				    else if(gettime() - VupTime[playerid] == 3) vptime = 2;
				    else if(gettime() - VupTime[playerid] == 4) vptime = 1;
				    else if(gettime() - VupTime[playerid] == 5) vptime = 1;
				}
		 		if((gettime() - VupTime[playerid]) < VUPLimit[playerid])
				{
					format(vperror, 128, "", vptime);
				}
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        else
		        {
		            if(PlayerInfo[playerid][JumpSize] > 0)
		            {
			            switch(PlayerInfo[playerid][JumpSize])
						{
						    case 1: SetVehicleVelocity(VehicleID, xx, xy, xz + 0.3);
						    case 2: SetVehicleVelocity(VehicleID, xx, xy, xz + 0.8);
						    case 3: SetVehicleVelocity(VehicleID, xx, xy, xz + 1.0);
						    case 4: SetVehicleVelocity(VehicleID, xx, xy, xz + 1.5);
						    case 5: SetVehicleVelocity(VehicleID, xx, xy, xz + 1.0);
			            }
					}
					VupTime[playerid] = gettime();
				    return true;
		        }
			}
		}
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
    {
        if(newkeys == KEY_JUMP) AdvanceSpectate(playerid);
        else if(newkeys == KEY_SPRINT) ReverseSpectate(playerid);
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][SpeedB])
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsPlayerInSpecialZone(playerid) == 0)
		{
			if(newkeys & KEY_FIRE)
			{
			    new sberror[128], sbtime;
	   			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(SpeedLimit[playerid] == 10)
				{
					if(gettime() - SpeedTime[playerid] == 0) sbtime = 10;
					else if(gettime() - SpeedTime[playerid] == 1) sbtime = 9;
					else if(gettime() - SpeedTime[playerid] == 2) sbtime = 8;
					else if(gettime() - SpeedTime[playerid] == 3) sbtime = 7;
					else if(gettime() - SpeedTime[playerid] == 4) sbtime = 6;
					else if(gettime() - SpeedTime[playerid] == 5) sbtime = 5;
					else if(gettime() - SpeedTime[playerid] == 6) sbtime = 4;
					else if(gettime() - SpeedTime[playerid] == 7) sbtime = 3;
					else if(gettime() - SpeedTime[playerid] == 8) sbtime = 2;
					else if(gettime() - SpeedTime[playerid] == 9) sbtime = 1;
					else if(gettime() - SpeedTime[playerid] == 10) sbtime = 1;
				}
	       	    if((gettime() - SpeedTime[playerid]) < SpeedLimit[playerid]) format(sberror, 128, "", sbtime);
	       	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else
				{
				    if(PlayerInfo[playerid][SpeedSize] > 0)
			    	{
						new Float:vx, Float:vy, Float:vz, Float:px, Float:py, Float:pz;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  				GetPlayerPos(playerid, px, py, pz), GetVehicleVelocity(VehicleID, vx, vy, vz);
		  				//++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            	if(floatabs(vx) < 5 && floatabs(vy) < 5 && floatabs(vz) < 5)
		           		{
		           		    switch(PlayerInfo[playerid][SpeedSize])
							{
							    case 1: SetVehicleVelocity(VehicleID, vx * 1.0, vy * 1.0, vz * 1.0);
							    case 2: SetVehicleVelocity(VehicleID, vx * 2.0, vy * 2.0, vz * 2.0);
							    case 3: SetVehicleVelocity(VehicleID, vx * 3.5, vy * 3.5, vz * 3.5);
							    case 4: SetVehicleVelocity(VehicleID, vx * 4.0, vy * 4.0, vz * 4.0);
							    case 5: SetVehicleVelocity(VehicleID, vx * 4.5, vy * 4.5, vz * 4.5);
		         			}
		                    SetVehicleHealth(VehicleID, 10000), CreateExplosion(px, py, pz, 11, 0.5), SetVehicleHealth(VehicleID, 1000);
						}
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						SpeedTime[playerid] = gettime();
						return true;
					}
				}
			}
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerSpawn(playerid)
{
    if(PlayerInfo[playerid][MyTimeHave] == 1) SetPlayerWeather(playerid, 2), SetPlayerTime(playerid, PlayerInfo[playerid][MyTime], 0);
    else if(PlayerInfo[playerid][MyTimeHave] == 0) SetPlayerWeather(playerid, 2), SetPlayerTime(playerid, 14, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][SpawnedBySV] == 0)
    {
	    PlayerInfo[playerid][SpawnedBySV] = 1;
		StopAudioStreamForPlayerEx(playerid);
	}
    if(PlayerInfo[playerid][UseSkin] == 1) SetPlayerSkin(playerid, PlayerInfo[playerid][MySkin]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	if(PlayerInfo[playerid][HideTDS] == 0)
	{
	    LogoTDShow(playerid);
		if(IsPlayerLogged[playerid] == 1 && Pont[playerid] == 0 && Pont2[playerid] == 0) TextDrawShowForPlayer(playerid, TeleTD), PlayerTextDrawShow(playerid, TD_ADs);
	}
   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	if(PlayerInfo[playerid][RPreference] == 2) RadioSwitch(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerInterior(playerid, 0);
	PlayerInfo[playerid][CameraViewRequest] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerLogged[playerid] == 1) SetPlayerVirtualWorld(playerid, 0);
	else if(IsPlayerLogged[playerid] == 0) SetPlayerVirtualWorld(playerid, playerid + 1000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InDM] == 0) SetPlayerRandomSpawn(playerid, true);
	else CheckDMInfo(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	PlayerPlaySound(playerid, 1063,0.0,0.0,0.0);
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	for(new i = 0; i < 2; i++) TextDrawHideForPlayer(playerid, TD_Death[i]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerSpecialAction(playerid, 0);
	Jail_EvadeCheck(playerid);
	Freeze_EvadeCheck(playerid);
	ShowZonesForPlayer(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][AFKBRB] = 0, PlayerInfo[playerid][Spawned] = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InDM] == 0 && IsPlayerLogged[playerid] == 1)
	{
	    if(PlayerInfo[playerid][Kills] == 0 && PlayerInfo[playerid][Kills] < 1) 			SCM(playerid, RED, "+0 {00CC00}Armour for your {FF0000}Killer Rank{26FF00}!"), SetPlayerHealth(playerid, 100.0), SetPlayerArmour(playerid, 5.0);
	    if(PlayerInfo[playerid][Kills] >= 1 && PlayerInfo[playerid][Kills] < 500) 			SCM(playerid, RED, "+10 {00CC00}Armour for your {FF0000}Killer Rank{26FF00}!"), SetPlayerHealth(playerid, 100.0), SetPlayerArmour(playerid, 10.0);
	    if(PlayerInfo[playerid][Kills] >= 500 && PlayerInfo[playerid][Kills] < 3000) 		SCM(playerid, RED, "+15 {00CC00}Armour for your {FF0000}Killer Rank{26FF00}!"), SetPlayerHealth(playerid, 100.0), SetPlayerArmour(playerid, 15.0);
	    if(PlayerInfo[playerid][Kills] >= 3000 && PlayerInfo[playerid][Kills] < 10000) 		SCM(playerid, RED, "+25 {00CC00}Armour for your {FF0000}Killer Rank{26FF00}!"), SetPlayerHealth(playerid, 100.0), SetPlayerArmour(playerid, 25.0);
	    if(PlayerInfo[playerid][Kills] >= 10000 && PlayerInfo[playerid][Kills] < 20000) 	SCM(playerid, RED, "+50 {00CC00}Armour for your {FF0000}Killer Rank{26FF00}!"), SetPlayerHealth(playerid, 100.0), SetPlayerArmour(playerid, 50.0);
		if(PlayerInfo[playerid][Kills] >= 20000)										    SCM(playerid, RED, "+100 {00CC00}Armour for your {FF0000}Killer Rank{26FF00}!"), SetPlayerHealth(playerid, 100.0), SetPlayerArmour(playerid, 100.0);
	}
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GiveNote(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i,j=MAX_OBJECTS; i<j; i++)
	{
	    if(HoldsInfo[playerid][i][HoldUsed] == true && PlayerInfo[playerid][UseHolds] != 0)
	    {
           SetPlayerAttachedObject(playerid, HoldsInfo[playerid][i][HoldIndex], HoldsInfo[playerid][i][HoldModel], HoldsInfo[playerid][i][HoldBone], HoldsInfo[playerid][i][fOffsetX1], HoldsInfo[playerid][i][fOffsetY1], HoldsInfo[playerid][i][fOffsetZ1], HoldsInfo[playerid][i][fRotX1], HoldsInfo[playerid][i][fRotY1], HoldsInfo[playerid][i][fRotZ1], HoldsInfo[playerid][i][fScaleX1], HoldsInfo[playerid][i][fScaleY1], HoldsInfo[playerid][i][fScaleZ1]);
		}
	}
 	for(new i = 0; i < 3; i++) PlayerTextDrawHide(playerid, PONT[i]);
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DestroyObject(GetPVarInt(playerid, "neon")); DestroyObject(GetPVarInt(playerid, "neon1")); DestroyObject(GetPVarInt(playerid, "neon2")); DestroyObject(GetPVarInt(playerid, "neon3"));
    DestroyObject(GetPVarInt(playerid, "neon4")); DestroyObject(GetPVarInt(playerid, "neon5")); DestroyObject(GetPVarInt(playerid, "neon6")); DestroyObject(GetPVarInt(playerid, "neon7"));
	DestroyObject(GetPVarInt(playerid, "neon8")); DestroyObject(GetPVarInt(playerid, "neon9")); DestroyObject(GetPVarInt(playerid, "neon10")); DestroyObject(GetPVarInt(playerid, "neon11"));
    DestroyObject(GetPVarInt(playerid, "neon12")); DestroyObject(GetPVarInt(playerid, "neon13")); DestroyObject(GetPVarInt(playerid, "neon14")); DestroyObject(GetPVarInt(playerid, "neon15"));
    DestroyObject(GetPVarInt(playerid, "neon16")); DestroyObject(GetPVarInt(playerid, "neon17")); DestroyObject(GetPVarInt(playerid, "neon18")); DestroyObject(GetPVarInt(playerid, "neon19"));
    DestroyObject(GetPVarInt(playerid, "neon20")); DestroyObject(GetPVarInt(playerid, "neon21")); DestroyObject(GetPVarInt(playerid, "neon22")); DestroyObject(GetPVarInt(playerid, "neon23"));
	DestroyObject(GetPVarInt(playerid, "neon24")); DestroyObject(GetPVarInt(playerid, "neon25")); DestroyObject(GetPVarInt(playerid, "neon26")); DestroyObject(GetPVarInt(playerid, "neon27"));
    DestroyObject(GetPVarInt(playerid, "neon28")); DestroyObject(GetPVarInt(playerid, "neon29")); DestroyObject(GetPVarInt(playerid, "neon30")); DestroyObject(GetPVarInt(playerid, "neon31"));
    DestroyObject(GetPVarInt(playerid, "neon32")); DestroyObject(GetPVarInt(playerid, "neon33")); DestroyObject(GetPVarInt(playerid, "neon34")); DestroyObject(GetPVarInt(playerid, "neon35"));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerNeon[playerid] = 0;
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
    // Get the damage status of all the components
    new panels, doors, lights, tires;
    GetVehicleDamageStatus(vehicleid, panels, doors, lights, tires);

    // Set the tires to 0, which means none are popped
    tires = 0;

    // Update the vehicle's damage status with unpopped tires
    UpdateVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InDrift] == 1) return Announce(playerid, "~N~~Y~~H~Drift failed~N~~R~~H~Vehicle damaged!", 5000, 3), PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, PlayerInfo[playerid][Drift1] = 0, PlayerInfo[playerid][Drift2] = 0, PlayerInfo[playerid][Drift3] = 0, PlayerInfo[playerid][Drift4] = 0, PlayerInfo[playerid][Drift5] = 0, PlayerInfo[playerid][Drift6] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][DriftCP][1] = 0, PlayerInfo[playerid][DriftCP][2] = 0, PlayerInfo[playerid][DriftCP][3] = 0, PlayerInfo[playerid][DriftCP][4] = 0, PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0;
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
	new WeapName[50];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(IsPlayerConnected(issuerid))
	{
	    if(issuerid != INVALID_PLAYER_ID && bodypart == 9 && PlayerInfo[playerid][God] != 0 && (weaponid == 24 || weaponid == 25 || weaponid == 33 || weaponid == 34))
	    {
	        if(PlayerInfo[playerid][God] == 1) return true;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        else if(PlayerInfo[playerid][God] == 0)
	        {
		        new Float:Health;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    GetPlayerHealth(issuerid, Health), SetPlayerHealth(issuerid, Health + 25);
		  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SetPlayerHealth(playerid, 0), PlayerInfo[issuerid][Coins] += 1;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerInfo[issuerid][Headshots]++;
			}
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[issuerid][AnnForAim] == 1)
		{
			foreach(new i: Player)
			{
				if(PlayerInfo[i][Level] >= 1)
		 		{
		 			if(PlayerInfo[i][AimcheckActivated] == 1)
		 			{
	     				if(PlayerInfo[i][AimCheckActivatedForID] == issuerid)
	     				{
	     		 			GetWeaponName(weaponid, WeapName, 50);
	     		 			//++++++++++++++++++++++++++++++++++++++++++++++++++
	     		 			FormatMSG(i, RED, "* %s(%d) last shot detected as auto-aim. Target %s(%d). Weapon: %s!", PN(issuerid), issuerid, PN(playerid), playerid, WeapName);
	     				}
					}
         		}
			}
        }
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[playerid][InRec] == 1)
		{
		    Announce(issuerid, "~R~~H~Atentie!~n~~w~Nu ai voie sa tragi~n~~w~in aceasta zona!~N~~y~~h~Foloseste~R~~H~ /dm", 5000, 3);
		    SpawnPlayer(issuerid);
		    Rec(issuerid);
		    SetPlayerHealth(playerid, 100);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[issuerid][VipWeapons] == 1)
        {
            new Float:Health, Float:Armour;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            GetPlayerHealth(issuerid, Health);
            GetPlayerArmour(issuerid, Armour);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            SetPlayerHealth(issuerid, Health + 5);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(Health > 99.0)
            {
                SetPlayerArmour(issuerid, Armour + 5);
            }
        }
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][ClanID] != 0)
		{
			if(PlayerInfo[playerid][ClanID] == PlayerInfo[issuerid][ClanID])
			{
			    if(PlayerInfo[issuerid][InDM] == 0)
			    {
				    switch(PlayerInfo[issuerid][Language])
					{
	    				case 0: Announce(issuerid, "~R~~H~Warning!~n~~w~Stop shooting~N~~W~in your clan~N~~w~members!", 6000, 4);
		        		case 1: Announce(issuerid, "~R~~H~Warning!~n~~w~Stop shooting~N~~W~in your clan~N~~w~members!", 6000, 4);
					}
				}
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[playerid][GangID] != 0)
		{
			if(PlayerInfo[playerid][GangID] == PlayerInfo[issuerid][GangID])
			{
			    if(PlayerInfo[issuerid][InDM] == 0)
			    {
				    switch(PlayerInfo[issuerid][Language])
					{
	    				case 0: Announce(issuerid, "~R~~H~Warning!~n~~w~Stop shooting~N~~W~in your gang~N~~w~members!", 6000, 4);
		        		case 1: Announce(issuerid, "~R~~H~Warning!~n~~w~Stop shooting~N~~W~in your gang~N~~w~members!", 6000, 4);
					}
				}
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(GetPlayerState(issuerid) == PLAYER_STATE_DRIVER || GetPlayerState(issuerid) == PLAYER_STATE_PASSENGER)
   		{
   		    if(!IsPlayerInAnyDynamicArea(issuerid))
		   	{
		   	    if(PlayerInfo[issuerid][InDM] == 0 && PlayerInfo[issuerid][Level] < 3)
		   		{
		        	new Float:Health;
		        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	SetPlayerHealth(playerid, 100), GetPlayerHealth(issuerid, Health), SetPlayerHealth(issuerid, Health - 25);
		        	ResetPlayerWeapons(issuerid), SetPlayerArmedWeapon(issuerid, 1), Announce(issuerid,"~r~~h~Stop Drive by kill ~n~~w~~h~or you will die!",4000,4);
				}
			}
    	}
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	for (new i = 0; i < MAX_SPAWN_ZONES; i++)
    	if(IsPlayerInRangeOfPoint(issuerid, 80.0, SpawnZones[i][sPosX], SpawnZones[i][sPosY], SpawnZones[i][sPosZ]))
    	{
            switch(PlayerInfo[issuerid][Language])
			{
                case 0: Announce(issuerid, "~R~~H~Atentie!~n~~w~Nu ai voie sa tragi~n~~w~in aceasta zona!~N~~y~~h~Foloseste~R~~H~ /dm", 5000, 3);
                case 1: Announce(issuerid, "~R~~H~Atentie!~n~~w~Nu ai voie sa tragi~n~~w~in aceasta zona!~N~~y~~h~Foloseste~R~~H~ /dm", 5000, 3);
            }
			SetPlayerHealth(playerid, 100), ResetPlayerWeapons(issuerid);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[issuerid][InTargets] == 1)
		{
	 	    switch(PlayerInfo[issuerid][Language])
			{
                case 0: Announce(issuerid, "~R~~H~Atentie!~n~~w~Nu ai voie sa tragi~n~~w~in aceasta zona!~N~~y~~h~Foloseste~R~~H~ /dm", 5000, 3);
                case 1: Announce(issuerid, "~R~~H~Atentie!~n~~w~Nu ai voie sa tragi~n~~w~in aceasta zona!~N~~y~~h~Foloseste~R~~H~ /dm", 5000, 3);
            }
            SetPlayerHealth(playerid, 100), ResetPlayerWeapons(issuerid);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	if(PlayerInfo[issuerid][DingOnShot] == 1) PlayerPlaySound(issuerid, 17802, 0.0, 0.0, 0.0);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[playerid][God] == 1) Announce(issuerid, "~r~~h~This player has godmode!", 6000, 3);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[issuerid][God] == 1)
		{
			switch(PlayerInfo[issuerid][Language])
			{
				case 0: Announce(issuerid, "~R~~H~God deactivated!~N~~G~~H~Do not abuse of your~N~~G~~H~God mode, bitch!~N~~R~~H~Your hp set to 5", 6000, 3);
 				case 1: Announce(issuerid, "~R~~H~God deactivated!~N~~G~~H~Do not abuse of your~N~~G~~H~God mode, bitch!~N~~R~~H~Your hp set to 5", 6000, 4);
			}
			SetPlayerHealth(issuerid, 5), PlayerInfo[issuerid][God] = 0;
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(GetPlayerState(issuerid) == PLAYER_STATE_DRIVER || GetPlayerState(issuerid) == PLAYER_STATE_PASSENGER)
   		{
   		    if(!IsPlayerInAnyDynamicArea(issuerid))
		   	{
		   	    if(PlayerInfo[issuerid][InDM] == 0 && PlayerInfo[issuerid][Level] < 3)
		   		{
		        	new Float:Health;
		        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	SetPlayerHealth(playerid, 100), GetPlayerHealth(issuerid, Health), SetPlayerHealth(issuerid, Health - 25);
		        	ResetPlayerWeapons(issuerid), SetPlayerArmedWeapon(issuerid, 1), Announce(issuerid,"~r~~h~Stop Drive by kill ~n~~w~~h~or you will die!",4000,4);
				}
			}
    	}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
   	if(hittype != BULLET_HIT_TYPE_NONE)
   	{
   		if(!(-1000.0 <= fX <= 1000.0) || !(-1000.0 <= fY <= 1000.0) || !(-1000.0 <= fZ <= 1000.0))
		{
	       	Kick(playerid);
	       	return false;
		}
		if((fX <= -1000.0 || fX >= 1000.0) || (fY <= -1000.0 || fY >= 1000.0) || (fZ <= -1000.0 || fZ >= 1000.0) || ((hittype != BULLET_HIT_TYPE_PLAYER) && (hittype != BULLET_HIT_TYPE_VEHICLE) && (hittype != BULLET_HIT_TYPE_OBJECT) && (hittype != BULLET_HIT_TYPE_PLAYER_OBJECT)))
	 	{
	   		Kick(playerid);
	 		return false;
	 	}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Santa Grinch
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InSantaLand] == 1)
	{
	  if(weaponid == 33)
	  {
	   if(hittype == 3)
	   {
        for(new y = 0; y < MAX_GRINCH_OBJECTS; y++)
		if(hitid == GrinchObj[y])
		{
		 eString[0] = EOS;
		 //---------------------------------------------------------------------
		 GrinchHealth -= 1;
		 //---------------------------------------------------------------------
		 if(GrinchHealth == 300) CrinchColor = "00FF00";
		 if(GrinchHealth == 150) CrinchColor = "FFBB00";
		 if(GrinchHealth == 50) CrinchColor = "FF0000";
		 //---------------------------------------------------------------------
         format(eString, sizeof(eString), "{%s}%d HP\n{FFFFFF}Remaining!", CrinchColor, GrinchHealth);
         UpdateDynamic3DTextLabelText(GrinchText, ~1, eString);
         //---------------------------------------------------------------------
		 if(GrinchHealth == 0)
		 {
		  CrinchColor = "00FF00";
		  //--------------------------------------------------------------------
		  for(new x = 0; x < MAX_GRINCH_OBJECTS; x++) DestroyObject(GrinchObj[x]);
		  //--------------------------------------------------------------------
		  DestroyDynamic3DTextLabel(GrinchText);
		  //--------------------------------------------------------------------
          SCMALL(WHITE, "Mos Craciun le-a dat tuturor un cadou, 2 Coins & $10.000 pentru distrugarea{FF0000} Grinch{FFFFFF} de la{FFEE00} /SantaLand{FFFFFF}!");
          foreach(new i: Player) PlayerInfo[i][Coins] += 1, GivePlayerMoney(i, 10000), PlayerInfo[i][Gifts] += 1;
          SetTimer("GrinchUpdate", 1800000, false);
		 }
		}
	   }
	  }
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Targets Weapon Shot Detect
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Float:p[3];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GetPlayerPos(playerid, p[0], p[1], p[2]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InTargets] == 1)
    {
        if(p[2] >= 1403.6322)
        {
			if(weaponid == 33)
		  	{
		   		if(hittype == 3)
		   		{
					if(hitid == ServerInfo[TargetObject])
					{
					    new String[256];
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 					PlayerInfo[playerid][TargetPoints] += 1;
	         			//++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        Announce(playerid, "~Y~~H~+1~G~~H~ point!", 1000, 3);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        TargetsPoints(playerid); // Update la points
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        DestroyObject(ServerInfo[TargetObject]);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        //Who makes most kills
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	     			if(ServerInfo[WhoMakeMostKillsStarted] == 1)
			 			{
	          				if(ServerInfo[WhoMakeMostKillsType] == 8)
	          				{
			     				if(PlayerInfo[playerid][InTargets] == 1)
			     				{
	              			   		PlayerInfo[playerid][TargetsKills] += 1;
			     				}
			     				if(PlayerInfo[playerid][TargetsKills] == ServerInfo[WhoMakesMostKillsAmmount][8])
			     				{
				                	format(String, sizeof(String), "~Y~~H~%s~n~~G~~H~has won the~N~~R~~H~who makes most kills event!", PN(playerid));
					            	foreach(new i: Player) Announce(i, String, 6000, 1), PlayerInfo[i][TargetsKills] = 0;
					            	//++++++++++++++++++++++++++++++++++++++++++
				                	Announce(playerid, "~Y~~H~event won~N~~N~~G~~H~check~R~~H~ /stats", 6000, 3);
				                	format(String, sizeof(String), "%s(%d) has won 'Who makes most kills' event!", PN(playerid), playerid), MessageToAdmins(ABLUE, String);
				                	//++++++++++++++++++++++++++++++++++++++++++
				                	ServerInfo[WhoMakeMostKillsStarted] = 0;
				                	ServerInfo[WhoMakeMostKillsType] = 0;
				                	//++++++++++++++++++++++++++++++++++++++++++
				                	format(String, sizeof(String), "~r~~H~winner:~Y~~H~ %d~N~~G~~H~give him the prize!", playerid);
				                	Announce(ServerInfo[WhoMakeMostKillsAdmin], String, 6000, 3);
			     				}
	      					}
			 			}
				        new Object = random(9);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
						switch(Object)
	   					{
							case 0: ServerInfo[TargetObject] = CreateObject(1586, 922.331177, 1462.805298, 1385.181030, 0.000000, 0.000000, 0.000000);
							case 1: ServerInfo[TargetObject] = CreateObject(1586, 911.711975, 1462.854248, 1385.181030, 0.000000, 0.000000, 0.000000);
							case 2: ServerInfo[TargetObject] = CreateObject(1586, 911.650330, 1473.943115, 1385.181030, 0.000000, 0.000000, 0.000000);
							case 3: ServerInfo[TargetObject] = CreateObject(1586, 903.255127, 1449.840332, 1385.181030, 0.000000, 0.000000, 0.000000);
							case 4: ServerInfo[TargetObject] = CreateObject(1586, 903.113770, 1473.840576, 1385.181030, 0.000000, 0.000000, 0.000000);
							case 5: ServerInfo[TargetObject] = CreateObject(1586, 921.801086, 1474.339600, 1385.181030, 0.000000, 0.000000, 0.000000);
							case 6: ServerInfo[TargetObject] = CreateObject(1586, 922.805786, 1449.672607, 1385.181030, 0.000000, 0.000000, 0.000000);
							case 7: ServerInfo[TargetObject] = CreateObject(1586, 911.7436, 1449.8085, 1385.1810, 0.000000, 0.000000, 0.000000);
							case 8: ServerInfo[TargetObject] = CreateObject(1586, 903.2529, 1462.8131, 1385.1810, 0.000000, 0.000000, 0.000000);
						}
					}
				}
			}
		}
		else KickPlayer(playerid);
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][FW] == 1)
	{
		if(weaponid == 24)
	  	{
	   		if(IsPlayerInSpecialZone(playerid) == 0)
	   		{
				if(IsPlayerInAnyDynamicArea(playerid)) return false;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new Float:fOriginX, Float:fOriginY, Float:fOriginZ;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				GetPlayerLastShotVectors(playerid, fOriginX, fOriginY, fOriginZ, fX, fY, fZ), CreateExplosion(fX, fY , fZ, 12, 10.0);
	  		}
	  	}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerDeath(playerid, killerid, reason)
{
	new string[128], Float:H, Float:A;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[killerid][InHNS] != 1) SendDeathMessage(killerid, playerid, reason);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][God] = 0, PlayerInfo[playerid][GodCar] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < 2; i++) TextDrawShowForPlayer(playerid, TD_Death[i]);
    for(new i = 0; i < 3; i++) PlayerTextDrawHide(playerid, PONT[i]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Spring Quest
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InSpringQuest][0] >= 1)
	{
	    PlayerInfo[playerid][InSpringQuest][0] = 0;
	    PlayerInfo[playerid][InSpringQuest][1] = 0;
	    PlayerInfo[playerid][InSpringQuest][2] = 0;
	    DisablePlayerCheckpoint(playerid);
	    DestroyVehicle(PlayerInfo[playerid][SpringQuestVehicle]);
	    for (new i = 0; i < 14; i++) { DestroyObject(PlayerInfo[playerid][QuestObjectInVehicle][i]); }
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // SkyClimb
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InSkyClimb] == 1)
    {
        PlayerInfo[playerid][InSkyClimb] = 0;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        TextForSkyClimbHide(playerid);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SpawnPlayer(playerid);
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerConnected(killerid))
    {
        if(PlayerInfo[killerid][InGG] == 1) PlayerInfo[killerid][StageWeaponGG]++, CheckPlayerKillsInGG(killerid);
	    if(PlayerInfo[killerid][KillingSpree] != PlayerInfo[killerid][BestKillingSpree])
	    {
	    	PlayerInfo[killerid][KillingSpree]++;
	    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerTextDrawHide(killerid, KSpree[1]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(string, sizeof(string), "~g~~h~Killing Spree: ~r~~h~%d~N~~Y~+50 HP, $10.000", PlayerInfo[killerid][KillingSpree]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerTextDrawSetString(killerid, KSpree[1], string);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerTextDrawShow(killerid, KSpree[1]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        	SetTimerEx("HKTXD", 3000, false, "i", killerid);
        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[killerid][Money] += 10000, GivePlayerMoney(killerid, 10000), GetPlayerHealth(killerid, H), SetPlayerHealth(killerid, H + 25);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[killerid][InSniper] == 0 && PlayerInfo[killerid][InOH] == 0)
			{
				GetPlayerHealth(killerid, H), GetPlayerArmour(killerid, A);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(H > 100) SetPlayerHealth(killerid, H + 25);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else if(A > 100) SetPlayerArmour(killerid, A + 25);
			}
		}
		else
		{
 			PlayerInfo[killerid][KillingSpree]++, PlayerInfo[killerid][BestKillingSpree]++;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerTextDrawHide(playerid, KSpree[1]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(string, 128, "~g~~h~Killing Spree: ~r~~h~%d~N~~Y~+50 HP, $10.000", PlayerInfo[killerid][KillingSpree]);
			PlayerTextDrawSetString(killerid, KSpree[1], string);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerTextDrawShow(killerid, KSpree[1]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  			SetTimerEx("HKTXD", 3000, false, "i", killerid);
  			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   			GivePlayerMoney(killerid, 10000), PlayerInfo[killerid][Money] += 10000, GetPlayerHealth(killerid, H), SetPlayerHealth(killerid, H + 50), PlayerInfo[killerid][Coins] += 25;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		 	if(PlayerInfo[killerid][InSniper] == 0)
			{
				GetPlayerHealth(killerid, H);
				GetPlayerArmour(killerid, A);
				if(H > 100) SetPlayerHealth(killerid, H + 25);
				else
				{
				    if(A > 100) SetPlayerArmour(killerid, A + 25);
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerInfo[killerid][Coins] += 1;
			}
		}
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // => Derby
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InDerby] == 1)
    {
		PlayerInfo[playerid][InDerby] = 0;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        CountPlayersInDerby--;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        BloodringFull[PlayerInfo[playerid][PlayerInBloodring]] = 0;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	PlayerInfo[playerid][PlayerInBloodring] = -1;
	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	foreach(new i: Player) if(PlayerInfo[i][InDerby] == 1 && CountPlayersInDerby <= 1) CheckMinigames();
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Steal The Car
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InStealCar] == 1)
	{
		if(ServerInfo[StealCarOwner] == playerid)
	   	{
        	for(new i; i < MAX_PLAYERS; i++)
            {
                if(PlayerInfo[i][InStealCar] == 1)
			 	{
	                PlayerInfo[playerid][InStealCar] = 0;
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[i][InStealCar] = 0;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					ServerInfo[StealCarOwner] = -1;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SpawnPlayer(i);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SCMALL(RED, "Steal the Car{00FBFF} s-a terminat. Foloseste{38AD21} /stealcar{00FBFF} pentru a incepe din nou!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					DestroyVehicle(StealerCar[i]);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					DestroyVehicle(StealerCar[ServerInfo[StealCarOwner]]);
				}
  			}
  		}
  	}
  	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerConnected(killerid))
	{
	    if(PlayerInfo[killerid][InHNS] == 1 && PlayerInfo[playerid][InHNS] == 1 && ServerInfo[HNSStarter] == killerid)
	    {
			Announce(killerid, "~R~~H~HIT~N~~Y~+5 coins, +$100.000", 6000, 3);
			PlayerInfo[killerid][Coins] += 5;
			PlayerInfo[killerid][Money] += 100000;
			GivePlayerMoney(killerid, 100000);
			RemovePlayerFromHNS(playerid);
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[killerid][GangID] != 0)
		{
			if(PlayerInfo[killerid][GangID] != PlayerInfo[playerid][GangID])
		    {
				PlayerInfo[killerid][g_Kills]++, PlayerInfo[playerid][g_Deaths] ++;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(PlayerInfo[killerid][boost] == 0) PlayerInfo[killerid][g_Points] ++;
				if(PlayerInfo[killerid][boost] == 1) PlayerInfo[killerid][g_Points] += 2;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(PlayerInfo[killerid][InDM] == 0 && PlayerInfo[playerid][InGarena] == 0 && PlayerInfo[playerid][InGangWar] == 0) SetPVarInt(playerid, "KilledByAnyGangs", 1);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        GangInfo[PlayerInfo[killerid][GangID]][GangKills]++, GangInfo[PlayerInfo[killerid][GangID]][Points]++, GangInfo[PlayerInfo[playerid][GangID]][GangDeaths]++;
			}
	        else
			{
	        	if(PlayerInfo[killerid][InDM] == 0)
			  	{
	                new String[128];
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(killerid, "~R~~H~Stop killing~N~~W~Members from your gang~N~~W~or you will get~N~~R~~H~Kicked!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                format(eString, sizeof eString, "[Team Kill] {FF0000}%s{D1D1D1} has killed a member of our gang!", PN(killerid));
	                SendGangTeamKillMessage(PlayerInfo[playerid][GangID], eString);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerInfo[playerid][TeamKill] = killerid;
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                switch(PlayerInfo[playerid][Language])
	                {
	                    case 1:
	                    {
		                    format(String, sizeof(String), "{D1D1D1}Ai fost omorat de{FF0000} %s{D1D1D1}!", PN(killerid));
			                //++++++++++++++++++++++++++++++++++++++++++++++++++
		                    SPD(playerid, DIALOG_TEAMKILL, LIST, String, "{FF0000}Omoara-l\n{FFFFFF}Seteaza-i viata 1\n{FF0000}Scoate-i armele\n{FFFFFF}Iarta-l", "Select", "");
						}
						case 2:
						{
						    format(String, sizeof(String), "{D1D1D1}You were killed by{FF0000} %s{D1D1D1}!", PN(killerid));
	            			//++++++++++++++++++++++++++++++++++++++++++++++++++
	            			SPD(playerid, DIALOG_TEAMKILL, LIST, String, "{FF0000}Kill him\n{FFFFFF}Set her life 1\n{FF0000}Get his guns out\n{FFFFFF}Forgive him", "Select", "");
						}
					}
				}
			}
		}
	}
	if(PlayerInfo[killerid][InGangWar] == 1)
	{
	    new Player = PlayerInfo[killerid][gWarPlayer];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[killerid][gWarPoints] >= 9)
	    {
		    SpawnPlayer(killerid);
			SpawnPlayer(Player);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[killerid][InGangWar] = 0;
			PlayerInfo[Player][InGangWar] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			HidePlayerGangTextDraw(killerid);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    Announce(killerid, "~G~~H~Your gang has won the gang war~N~~R~~H~Check ~Y~~H~/gstats~R~~H~ for more!", 3000, 3);
		    Announce(Player, "~R~~H~Your gang lost!", 3000, 3);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    ResetGwarVariables(killerid);
			ResetGwarVariables(Player);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			KillTimer(PlayerInfo[playerid][gWarUpdateTimer]);
			KillTimer(PlayerInfo[Player][gWarUpdateTimer]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    }
		else PlayerInfo[killerid][gWarPoints] += 1;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Gang Capture | Add Variable
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[killerid][GangID] == GangInfo[PlayerInfo[playerid][GangID]][GangTurfe]) GangInfo[PlayerInfo[playerid][GangID]][c_Deaths]++;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // Clan System
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Clan[PlayerInfo[playerid][ClanID]][Capturing] == 1)
	{
	    new j = PlayerInfo[playerid][ClanID];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(Clan[j][TurfingClan] == PlayerInfo[killerid][ClanID])
	    {
		    if(Clan[j][MaxDeaths] <= 5)
			{
			    ClanTers[PlayerInfo[playerid][clanturfe]][turfing] = false;
			    ClanTers[PlayerInfo[playerid][clanturfe]][turfingby] = 0;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    PlayerInfo[playerid][clanturfe] = 0;
		   		Clan[PlayerInfo[playerid][ClanID]][CaptureTime] = CAPTURE_TIME;
		   		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				Clan[PlayerInfo[playerid][ClanID]][c_CaptureJoins] = 0;
		   		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		   		Clan[PlayerInfo[playerid][ClanID]][Capturing] = 0;
		   		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		   		Clan[j][Losts]++;
		   		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                Clan[j][ZoneLocked] = GetTickCount();
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		   		Clan[PlayerInfo[killerid][ClanID]][Wins]++;
		   		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		   		foreach(new i: Player)
	      		{
			        if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID]) Announce(i, "~R~~H~Capture Failed~N~~R~~H~Max deaths reached!", 6000, 3), PlayerInfo[i][c_Capturing] = 0;
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        if(PlayerInfo[i][ClanID] == PlayerInfo[killerid][ClanID]) Announce(i, "~g~~h~Your Clan Defense ~y~Succesfully!", 6000, 3);
     			}
		 	}
         	else Clan[j][MaxDeaths]++;
		}
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[killerid][ClanID] >= 1)
	{
		if(PlayerInfo[killerid][ClanID] != PlayerInfo[playerid][ClanID])
	    {
			PlayerInfo[killerid][c_Kills]++, PlayerInfo[playerid][c_Deaths]++, PlayerInfo[killerid][c_Points]++;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        Clan[PlayerInfo[killerid][ClanID]][ClanKills]++, Clan[PlayerInfo[killerid][ClanID]][ClanPoints]++, Clan[PlayerInfo[playerid][ClanID]][ClanDeaths]++;
		}
        else
		{
			switch(PlayerInfo[killerid][Language])
			{
				case 1: Announce(killerid, "~w~~h~You killed a member from ~n~~r~~h~your clan !", 3000, 4);
 				case 2: Announce(killerid, "~w~~h~Ai ucis un membru din ~n~~r~~h~clanul tau !", 3000, 4);
			}
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][clanturfe] != 0)
    {
        ClanTers[PlayerInfo[playerid][clanturfe]][turfing] = false;
	    ClanTers[PlayerInfo[playerid][clanturfe]][turfingby] = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[playerid][clanturfe] = 0;
   		Clan[PlayerInfo[playerid][ClanID]][CaptureTime] = CAPTURE_TIME;
    }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerConnected(killerid) && IsPlayerConnected(playerid)) PlayerInfo[killerid][Kills]++, PlayerInfo[killerid][KillsMonth] += 1, PlayerInfo[playerid][Deaths]++, PlayerInfo[playerid][KillingSpree] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][God] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    //For Duel
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InDuel] == 1)
	{
       new Float:Health, Float:Armour;
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       GetPlayerHealth(killerid, Armour); GetPlayerHealth(playerid, Health);
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       if(Health == 100.0)
       {
		 eString = "100";
       }
       else if(Health == 99.0)
       {
          eString = "99";
       }
       else if(Health == 98.0)
       {
		 eString = "98";
       }
       else if(Health == 97.0)
       {
          eString = "97";
       }
       else if(Health == 96.0)
       {
		 eString = "96";
       }
       else if(Health == 95.0)
       {
          eString = "95";
       }
       else if(Health == 94.0)
       {
          eString = "94";
       }
       else if(Health == 93.0)
       {
          eString = "95";
       }
       else if(Health == 92.0)
       {
          eString = "95";
       }
       else if(Health == 91.0)
       {
          eString = "95";
       }
       else if(Health == 90.0)
       {
          eString = "90";
       }
       else if(Health == 89.0)
       {
          eString = "89";
       }
       else if(Health == 88.0)
       {
          eString = "88";
       }
       else if(Health == 87.0)
       {
          eString = "87";
       }
       else if(Health == 86.0)
       {
          eString = "86";
       }
       else if(Health == 85.0)
       {
          eString = "85";
       }
       else if(Health == 84.0)
       {
          eString = "84";
       }
       else if(Health == 83.0)
       {
          eString = "83";
       }
       else if(Health == 82.0)
       {
          eString = "82";
       }
       else if(Health == 81.0)
       {
          eString = "81";
       }
       else if(Health == 80.0)
       {
          eString = "80";
       }
       else if(Health == 79.0)
       {
          eString = "79";
       }
       else if(Health == 78.0)
       {
          eString = "78";
       }
       else if(Health == 77.0)
       {
          eString = "77";
       }
       else if(Health == 76.0)
       {
          eString = "76";
       }
       else if(Health == 75.0)
       {
          eString = "75";
       }
       else if(Health == 74.0)
       {
          eString = "74";
       }
       else if(Health == 73.0)
       {
          eString = "73";
       }
       else if(Health == 72.0)
       {
          eString = "72";
       }
       else if(Health == 71.0)
       {
          eString = "71";
       }
       else if(Health == 70.0)
       {
          eString = "70";
       }
       else if(Health == 69.0)
       {
          eString = "69";
       }
       else if(Health == 68.0)
       {
          eString = "68";
       }
       else if(Health == 67.0)
       {
          eString = "67";
       }
       else if(Health == 66.0)
       {
          eString = "66";
       }
       else if(Health == 65.0)
       {
          eString = "65";
       }
       else if(Health == 64.0)
       {
          eString = "64";
       }
       else if(Health == 63.0)
       {
          eString = "63";
       }
       else if(Health == 62.0)
       {
          eString = "62";
       }
       else if(Health == 61.0)
       {
          eString = "61";
       }
       else if(Health == 60.0)
       {
          eString = "60";
       }
       else if(Health == 59.0)
       {
          eString = "59";
       }
       else if(Health == 58.0)
       {
          eString = "58";
       }
       else if(Health == 57.0)
       {
          eString = "57";
       }
       else if(Health == 56.0)
       {
          eString = "56";
       }
       else if(Health == 55.0)
       {
          eString = "55";
       }
       else if(Health == 54.0)
       {
          eString = "54";
       }
       else if(Health == 53.0)
       {
          eString = "53";
       }
       else if(Health == 52.0)
       {
          eString = "52";
       }
       else if(Health == 51.0)
       {
          eString = "51";
       }
       else if(Health == 50.0)
       {
          eString = "50";
       }
       else if(Health == 49.0)
       {
          eString = "49";
       }
       else if(Health == 48.0)
       {
          eString = "48";
       }
       else if(Health == 47.0)
       {
          eString = "47";
       }
       else if(Health == 46.0)
       {
          eString = "46";
       }
       else if(Health == 45.0)
       {
          eString = "45";
       }
       else if(Health == 44.0)
       {
          eString = "44";
       }
       else if(Health == 43.0)
       {
          eString = "43";
       }
       else if(Health == 42.0)
       {
          eString = "42";
       }
       else if(Health == 41.0)
       {
          eString = "41";
       }
       else if(Health == 40.0)
       {
          eString = "40";
       }
       else if(Health == 39.0)
       {
          eString = "39";
       }
       else if(Health == 38.0)
       {
          eString = "38";
       }
       else if(Health == 37.0)
       {
          eString = "37";
       }
       else if(Health == 36.0)
       {
          eString = "36";
       }
       else if(Health == 35.0)
       {
          eString = "35";
       }
       else if(Health == 34.0)
       {
          eString = "34";
       }
       else if(Health == 33.0)
       {
          eString = "33";
       }
       else if(Health == 32.0)
       {
          eString = "32";
       }
       else if(Health == 31.0)
       {
          eString = "31";
       }
       else if(Health == 30.0)
       {
          eString = "30";
       }
       else if(Health == 29.0)
       {
          eString = "29";
       }
       else if(Health == 28.0)
       {
          eString = "28";
       }
       else if(Health == 27.0)
       {
          eString = "27";
       }
       else if(Health == 26.0)
       {
          eString = "26";
       }
       else if(Health == 25.0)
       {
          eString = "25";
       }
       else if(Health == 24.0)
       {
          eString = "24";
       }
       else if(Health == 23.0)
       {
          eString = "23";
       }
       else if(Health == 22.0)
       {
          eString = "22";
       }
       else if(Health == 21.0)
       {
          eString = "21";
       }
       else if(Health == 20.0)
       {
          eString = "20";
       }
       else if(Health == 19.0)
       {
          eString = "19";
       }
       else if(Health == 18.0)
       {
          eString = "18";
       }
       else if(Health == 17.0)
       {
          eString = "17";
       }
       else if(Health == 16.0)
       {
          eString = "16";
       }
       else if(Health == 15.0)
       {
          eString = "15";
       }
       else if(Health == 14.0)
       {
          eString = "14";
       }
       else if(Health == 13.0)
       {
          eString = "13";
       }
       else if(Health == 12.0)
       {
          eString = "12";
       }
       else if(Health == 11.0)
       {
          eString = "11";
       }
       else if(Health == 10.0)
       {
          eString = "10";
       }
       else if(Health == 9.0)
       {
          eString = "9";
       }
       else if(Health == 8.0)
       {
          eString = "8";
       }
       else if(Health == 7.0)
       {
          eString = "7";
       }
       else if(Health == 6.0)
       {
          eString = "5";
       }
       else if(Health == 4.0)
       {
          eString = "4";
       }
       else if(Health == 3.0)
       {
          eString = "2";
       }
       else if(Health == 1.0)
       {
          eString = "1";
       }
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       if(Armour == 100.0)
       {
		 eString = "200";
       }
       else if(Armour == 99.0)
       {
          eString = "199";
       }
       else if(Armour == 98.0)
       {
		 eString = "198";
       }
       else if(Armour == 97.0)
       {
          eString = "197";
       }
       else if(Armour == 96.0)
       {
		 eString = "196";
       }
       else if(Armour == 95.0)
       {
          eString = "195";
       }
       else if(Armour == 94.0)
       {
          eString = "194";
       }
       else if(Armour == 93.0)
       {
          eString = "193";
       }
       else if(Armour == 92.0)
       {
          eString = "192";
       }
       else if(Armour == 91.0)
       {
          eString = "191";
       }
       else if(Armour == 90.0)
       {
          eString = "190";
       }
       else if(Armour == 89.0)
       {
          eString = "189";
       }
       else if(Armour == 88.0)
       {
          eString = "188";
       }
       else if(Armour == 187.0)
       {
          eString = "187";
       }
       else if(Armour == 86.0)
       {
          eString = "186";
       }
       else if(Armour == 85.0)
       {
          eString = "185";
       }
       else if(Armour == 84.0)
       {
          eString = "184";
       }
       else if(Armour == 83.0)
       {
          eString = "183";
       }
       else if(Armour == 82.0)
       {
          eString = "182";
       }
       else if(Armour == 81.0)
       {
          eString = "181";
       }
       else if(Armour == 80.0)
       {
          eString = "180";
       }
       else if(Armour == 79.0)
       {
          eString  = "179";
       }
       else if(Armour == 78.0)
       {
          eString = "178";
       }
       else if(Armour == 77.0)
       {
          eString = "177";
       }
       else if(Armour == 76.0)
       {
          eString = "176";
       }
       else if(Armour == 75.0)
       {
          eString = "175";
       }
       else if(Armour == 74.0)
       {
          eString = "174";
       }
       else if(Armour == 73.0)
       {
          eString = "173";
       }
       else if(Armour == 72.0)
       {
          eString = "172";
       }
       else if(Armour == 71.0)
       {
          eString = "171";
       }
       else if(Armour == 70.0)
       {
          eString = "170";
       }
       else if(Armour == 69.0)
       {
          eString = "169";
       }
       else if(Armour == 68.0)
       {
          eString = "168";
       }
       else if(Armour == 67.0)
       {
          eString = "167";
       }
       else if(Armour == 66.0)
       {
          eString = "166";
       }
       else if(Armour == 65.0)
       {
          eString = "165";
       }
       else if(Armour == 64.0)
       {
          eString = "64";
       }
       else if(Armour == 63.0)
       {
          eString = "163";
       }
       else if(Armour == 62.0)
       {
          eString = "162";
       }
       else if(Armour == 61.0)
       {
          eString = "161";
       }
       else if(Armour == 60.0)
       {
          eString = "160";
       }
       else if(Armour == 59.0)
       {
          eString = "159";
       }
       else if(Armour == 58.0)
       {
          eString = "158";
       }
       else if(Armour == 57.0)
       {
          eString = "157";
       }
       else if(Armour == 56.0)
       {
          eString = "156";
       }
       else if(Armour == 55.0)
       {
          eString = "155";
       }
       else if(Armour == 54.0)
       {
          eString = "154";
       }
       else if(Armour == 53.0)
       {
          eString = "153";
       }
       else if(Armour == 52.0)
       {
          eString = "152";
       }
       else if(Armour == 51.0)
       {
          eString = "151";
       }
       else if(Armour == 50.0)
       {
          eString = "150";
       }
       else if(Armour == 49.0)
       {
          eString = "149";
       }
       else if(Armour == 48.0)
       {
          eString = "148";
       }
       else if(Armour == 47.0)
       {
          eString = "147";
       }
       else if(Armour == 46.0)
       {
          eString = "146";
       }
       else if(Armour == 45.0)
       {
          eString = "145";
       }
       else if(Armour == 44.0)
       {
          eString = "144";
       }
       else if(Armour == 43.0)
       {
          eString = "143";
       }
       else if(Armour == 42.0)
       {
          eString = "142";
       }
       else if(Armour == 41.0)
       {
          eString = "141";
       }
       else if(Armour == 40.0)
       {
          eString = "410";
       }
       else if(Armour == 39.0)
       {
          eString = "139";
       }
       else if(Armour == 38.0)
       {
          eString = "138";
       }
       else if(Armour == 37.0)
       {
          eString = "137";
       }
       else if(Armour == 36.0)
       {
          eString = "136";
       }
       else if(Armour == 35.0)
       {
          eString = "135";
       }
       else if(Armour == 34.0)
       {
          eString = "134";
       }
       else if(Armour == 33.0)
       {
          eString = "133";
       }
       else if(Armour == 32.0)
       {
          eString = "132";
       }
       else if(Armour == 31.0)
       {
          eString = "131";
       }
       else if(Armour == 30.0)
       {
          eString = "130";
       }
       else if(Armour == 29.0)
       {
          eString = "129";
       }
       else if(Armour == 28.0)
       {
          eString = "128";
       }
       else if(Armour == 27.0)
       {
          eString = "127";
       }
       else if(Armour == 26.0)
       {
          eString = "126";
       }
       else if(Armour == 25.0)
       {
          eString = "125";
       }
       else if(Armour == 24.0)
       {
          eString = "124";
       }
       else if(Armour == 23.0)
       {
          eString = "123";
       }
       else if(Armour == 22.0)
       {
          eString = "122";
       }
       else if(Armour == 21.0)
       {
          eString = "121";
       }
       else if(Armour == 20.0)
       {
          eString = "120";
       }
       else if(Armour == 19.0)
       {
          eString = "119";
       }
       else if(Armour == 18.0)
       {
          eString = "118";
       }
       else if(Armour == 17.0)
       {
          eString = "117";
       }
       else if(Armour == 16.0)
       {
          eString = "116";
       }
       else if(Armour == 15.0)
       {
          eString = "115";
       }
       else if(Armour == 14.0)
       {
          eString = "114";
       }
       else if(Armour == 13.0)
       {
          eString = "113";
       }
       else if(Armour == 12.0)
       {
          eString = "112";
       }
       else if(Armour == 11.0)
       {
          eString = "111";
       }
       else if(Armour == 10.0)
       {
          eString = "110";
       }
       else if(Armour == 9.0)
       {
          eString = "109";
       }
       else if(Armour == 8.0)
       {
          eString = "108";
       }
       else if(Armour == 7.0)
       {
          eString = "107";
       }
       else if(Armour == 6.0)
       {
          eString = "105";
       }
       else if(Armour == 4.0)
       {
          eString = "104";
       }
       else if(Armour == 3.0)
       {
          eString = "102";
       }
       else if(Armour == 1.0)
       {
         eString = "101";
       }
	   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   format(StrH, 312, "[DUEL] {FFFFFF}%s {3B83FF}won a duel vs {FFFFFF}%s{3B83FF}. {3B83FF}HP Left: {FFFFFF}%s", PN(killerid), PN(playerid), eString);
	   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   SCMALL(DUEL, StrH);
	   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       Announce(playerid, "~r~~h~YOU LOST THE DUEL!", 3000, 3);
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       PlayerInfo[playerid][InDuel] = 0;
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `Duels` WHERE `Name` = '%s'", PN(playerid));
       mysql_tquery(SQL, eQuery, "", "");
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `Duels` WHERE `Name` = '%s'", PN(killerid));
       mysql_tquery(SQL, eQuery, "", "");
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       PlayerInfo[playerid][InDuel] = 0;
       Announce(killerid, "~g~~h~YOU WON THE DUEL!", 3000, 3);
       SpawnPlayer(killerid);
       PlayerInfo[killerid][InDuel] = 0;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerConnected(killerid))
	{
	    if(PlayerInfo[killerid][ClanID] >= 1)
	    {
		    if(PlayerInfo[killerid][ClanID] != PlayerInfo[playerid][ClanID])
		    {
		        PlayerInfo[killerid][c_Points] += 2, PlayerInfo[playerid][c_Deaths]++, PlayerInfo[playerid][c_Kills]++;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        eQuery[0] = EOS;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Clans` SET `Points` = `Points`+2, `Kills` = `Kills`+1 WHERE `ID` = '%d'", PlayerInfo[killerid][ClanID]);
				mysql_tquery(SQL, eQuery, "", "");
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Clans` SET `Deaths` = `Deaths`+1 WHERE `ID` = '%d'", PlayerInfo[killerid][ClanID]);
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			}
			else
			{
				switch(PlayerInfo[killerid][Language])
				{
					case 1: Announce(killerid, "~R~~H~Stop killing~N~~W~Members from your clan~N~~W~or you will get~N~~R~~H~Kicked!", 6000, 3);
	 				case 2: Announce(killerid, "~R~~H~Stop killing~N~~W~Members from your clan~N~~W~or you will get~N~~R~~H~Kicked!", 6000, 3);
				}
			}
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Who Makes Most Kills Event
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerConnected(killerid))
	{
		if(ServerInfo[WhoMakeMostKillsStarted] == 1)
		{
		   	if(ServerInfo[WhoMakeMostKillsType] == 1)
		   	{
			 	if(PlayerInfo[killerid][InMinigun] == 1)
			 	{
               		PlayerInfo[killerid][MinigunKills] += 1;
               		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
               		UpdateWhoMakesEventKills(killerid, 1);
			 	}
			 	if(PlayerInfo[killerid][MinigunKills] == ServerInfo[WhoMakesMostKillsAmmount][1])
			 	{
				  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              format(eString, 669, "~Y~~H~%s~n~~G~~H~has won the~N~~R~~H~who makes most kills event!", PN(killerid));
				  foreach(new i: Player) Announce(i, eString, 6000, 1), PlayerInfo[i][MinigunKills] = 0;
				  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              Announce(killerid, "~Y~~H~event won~N~~N~~G~~H~check~R~~H~ /stats", 6000, 3);
	              format(eString, sizeof(eString), "%s(%d) has won 'Who makes most kills' event!", PN(killerid), killerid), MessageToAdmins(ABLUE, eString);
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              ServerInfo[WhoMakeMostKillsStarted] = 0;
	              ServerInfo[WhoMakeMostKillsType] = 0;
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              format(string, 669, "~r~~H~winner:~Y~~H~ %d~N~~G~~H~give him the prize!", killerid);
	              Announce(ServerInfo[WhoMakeMostKillsAdmin], string, 6000, 3);
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              foreach(new u: Player) HideWhoMakesEvenetKills(u);
			 	}
		   	}
		   	else if(ServerInfo[WhoMakeMostKillsType] == 2)
		   	{
		     	if(PlayerInfo[killerid][InM4] == 1)
			 	{
               		PlayerInfo[killerid][M4Kills] += 1;
               		UpdateWhoMakesEventKills(killerid, 2);
			 	}
			 	if(PlayerInfo[killerid][M4Kills] == ServerInfo[WhoMakesMostKillsAmmount][2])
			 	{
				  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              format(eString, 669, "~Y~~H~%s~n~~G~~H~has won the~N~~R~~H~who makes most kills event!", PN(killerid));
				  foreach(new i: Player) Announce(i, eString, 6000, 1), PlayerInfo[i][M4Kills] = 0;
				  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              Announce(killerid, "~Y~~H~event won~N~~N~~G~~H~check~R~~H~ /stats", 6000, 3);
	              format(eString, sizeof(eString), "%s(%d) has won 'Who makes most kills' event!", PN(killerid), killerid), MessageToAdmins(ABLUE, eString);
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              ServerInfo[WhoMakeMostKillsStarted] = 0;
	              ServerInfo[WhoMakeMostKillsType] = 0;
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              format(string, 669, "~r~~H~winner:~Y~~H~ %d~N~~G~~H~give him the prize!", killerid);
	              Announce(ServerInfo[WhoMakeMostKillsAdmin], string, 6000, 3);
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              foreach(new u: Player) HideWhoMakesEvenetKills(u);
			 	}
		   	}
		   	else if(ServerInfo[WhoMakeMostKillsType] == 3)
		   	{
		     	if(PlayerInfo[killerid][InRocket] == 1)
			 	{
               		PlayerInfo[killerid][RocketKills] += 1;
               		UpdateWhoMakesEventKills(killerid, 3);
			 	}
			 	if(PlayerInfo[killerid][RocketKills] == ServerInfo[WhoMakesMostKillsAmmount][3])
			 	{
				  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              format(eString, 669, "~Y~~H~%s~n~~G~~H~has won the~N~~R~~H~who makes most kills event!", PN(killerid));
				  foreach(new i: Player) Announce(i, eString, 6000, 1), PlayerInfo[i][RocketKills] = 0;
				  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              Announce(killerid, "~Y~~H~event won~N~~N~~G~~H~check~R~~H~ /stats", 6000, 3);
	              format(eString, sizeof(eString), "%s(%d) has won 'Who makes most kills' event!", PN(killerid), killerid), MessageToAdmins(ABLUE, eString);
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              ServerInfo[WhoMakeMostKillsStarted] = 0;
	              ServerInfo[WhoMakeMostKillsType] = 0;
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              format(string, 669, "~r~~H~winner:~Y~~H~ %d~N~~G~~H~give him the prize!", killerid);
	              Announce(ServerInfo[WhoMakeMostKillsAdmin], string, 6000, 3);
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              foreach(new u: Player) HideWhoMakesEvenetKills(u);
			 	}
		   	}
		   	else if(ServerInfo[WhoMakeMostKillsType] == 4)
		   	{
             	if(PlayerInfo[killerid][InSniper] == 1)
			 	{
		       		PlayerInfo[killerid][SniperKills] += 1;
		       		UpdateWhoMakesEventKills(killerid, 4);
			 	}
			 	if(PlayerInfo[killerid][SniperKills] == ServerInfo[WhoMakesMostKillsAmmount][4])
			 	{
				  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              format(eString, 669, "~Y~~H~%s~n~~G~~H~has won the~N~~R~~H~who makes most kills event!", PN(killerid));
				  foreach(new i: Player) Announce(i, eString, 6000, 1), PlayerInfo[i][SniperKills] = 0;
				  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              Announce(killerid, "~Y~~H~event won~N~~N~~G~~H~check~R~~H~ /stats", 6000, 3);
	              format(eString, sizeof(eString), "%s(%d) has won 'Who makes most kills' event!", PN(killerid), killerid), MessageToAdmins(ABLUE, eString);
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              ServerInfo[WhoMakeMostKillsStarted] = 0;
	              ServerInfo[WhoMakeMostKillsType] = 0;
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              format(string, 669, "~r~~H~winner:~Y~~H~ %d~N~~G~~H~give him the prize!", killerid);
	              Announce(ServerInfo[WhoMakeMostKillsAdmin], string, 6000, 3);
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              foreach(new u: Player) HideWhoMakesEvenetKills(u);
			 	}
		   	}
		   	else if(ServerInfo[WhoMakeMostKillsType] == 5)
		   	{
             	if(PlayerInfo[killerid][InMRF] == 1)
			 	{
               		PlayerInfo[killerid][MRFKills] += 1;
               		UpdateWhoMakesEventKills(killerid, 5);
			 	}
			 	if(PlayerInfo[killerid][MRFKills] == ServerInfo[WhoMakesMostKillsAmmount][5])
			 	{
				  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              format(eString, 669, "~Y~~H~%s~n~~G~~H~has won the~N~~R~~H~who makes most kills event!", PN(killerid));
				  foreach(new i: Player) Announce(i, eString, 6000, 1), PlayerInfo[i][MRFKills] = 0;
				  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              Announce(killerid, "~Y~~H~event won~N~~N~~G~~H~check~R~~H~ /stats", 6000, 3);
	              format(eString, sizeof(eString), "%s(%d) has won 'Who makes most kills' event!", PN(killerid), killerid), MessageToAdmins(ABLUE, eString);
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              ServerInfo[WhoMakeMostKillsStarted] = 0;
	              ServerInfo[WhoMakeMostKillsType] = 0;
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              format(string, 669, "~r~~H~winner:~Y~~H~ %d~N~~G~~H~give him the prize!", killerid);
	              Announce(ServerInfo[WhoMakeMostKillsAdmin], string, 6000, 3);
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              foreach(new u: Player) HideWhoMakesEvenetKills(u);
			 	}
		   	}
		   	else if(ServerInfo[WhoMakeMostKillsType] == 6)
		   	{
             	if(PlayerInfo[killerid][InDE] == 1)
			    {
               		PlayerInfo[killerid][DEKills] += 1;
               		UpdateWhoMakesEventKills(killerid, 6);
			 	}
			 	if(PlayerInfo[killerid][DEKills] == ServerInfo[WhoMakesMostKillsAmmount][6])
			 	{
				  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              format(eString, 669, "~Y~~H~%s~n~~G~~H~has won the~N~~R~~H~who makes most kills event!", PN(killerid));
				  foreach(new i: Player) Announce(i, eString, 6000, 1), PlayerInfo[i][DEKills] = 0;
				  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              Announce(killerid, "~Y~~H~event won~N~~N~~G~~H~check~R~~H~ /stats", 6000, 3);
	              format(eString, sizeof(eString), "%s(%d) has won 'Who makes most kills' event!", PN(killerid), killerid), MessageToAdmins(ABLUE, eString);
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              ServerInfo[WhoMakeMostKillsStarted] = 0;
	              ServerInfo[WhoMakeMostKillsType] = 0;
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              format(string, 669, "~r~~H~winner:~Y~~H~ %d~N~~G~~H~give him the prize!", killerid);
	              Announce(ServerInfo[WhoMakeMostKillsAdmin], string, 6000, 3);
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              foreach(new u: Player) HideWhoMakesEvenetKills(u);
			 	}
		   	}
		   	else if(ServerInfo[WhoMakeMostKillsType] == 7)
		   	{
             	if(PlayerInfo[killerid][InPRODM] == 1)
			 	{
               		PlayerInfo[killerid][PRODMKills] += 1;
               		UpdateWhoMakesEventKills(killerid, 7);
			 	}
			 	if(PlayerInfo[killerid][PRODMKills] == ServerInfo[WhoMakesMostKillsAmmount][7])
			 	{
	              format(eString, 669, "~Y~~H~%s~n~~G~~H~has won the~N~~R~~H~who makes most kills event!", PN(killerid));
				  foreach(new i: Player) Announce(i, eString, 6000, 1), PlayerInfo[i][PRODMKills] = 0;
				  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              Announce(killerid, "~Y~~H~event won~N~~N~~G~~H~check~R~~H~ /stats", 6000, 3);
	              format(eString, sizeof(eString), "%s(%d) has won 'Who makes most kills' event!", PN(killerid), killerid), MessageToAdmins(ABLUE, eString);
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              ServerInfo[WhoMakeMostKillsStarted] = 0;
	              ServerInfo[WhoMakeMostKillsType] = 0;
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              format(string, 669, "~r~~H~winner:~Y~~H~ %d~N~~G~~H~give him the prize!", killerid);
	              Announce(ServerInfo[WhoMakeMostKillsAdmin], string, 6000, 3);
	              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	              foreach(new u: Player) HideWhoMakesEvenetKills(u);
				}
		    }
		}
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerRequestClass(playerid, classid)
{
	switch(classid)
	{
		case 0, 1, 2: Announce(playerid, "~r~~h~Stunt men", 1500, 6);
		case 3, 4, 5: Announce(playerid, " ~y~~h~Racing driver", 1500, 6);
		case 6, 7, 8, 9: Announce(playerid, " ~g~~h~Drifter", 1500, 6);
		case 10, 11, 12: Announce(playerid, " ~b~~h~Hitman", 1500,  6);
		case 13, 14, 15, 16: Announce(playerid, "~p~~h~Biker", 1500, 3);
		case 17, 18, 19, 20, 21: Announce(playerid, " ~p~~h~~h~Girl", 1500, 6);
		case 22, 23, 24, 25, 26: Announce(playerid, " ~g~Gangster", 1500, 6);
		case 27, 28, 29: Announce(playerid, " ~y~Mafioso", 1500, 6);
	    case 30, 31, 32, 33, 34: Announce(playerid, " ~h~~y~Prostitute", 1500, 6);
		case 35: Announce(playerid, " Idiot", 1500, 6);
		case 36, 37, 38, 39, 40, 41, 42, 43: Announce(playerid, " ~b~Justice", 1500, 6);
		case 44, 45: Announce(playerid, " ~w~Bodyguards", 1500, 6);
		case 46, 47, 48: Announce(playerid, " ~r~~h~Doctors", 1500, 6);
		case 49, 50, 51: Announce(playerid, " ~r~Fire Brigade", 1500, 6);
		case 52, 53, 54, 55: Announce(playerid, " ~y~Z~r~o~y~mb~r~i~y~e~r~", 1500, 6);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerInterior(playerid, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(GetPlayerVirtualWorld(playerid) != playerid+100) SetPlayerVirtualWorld(playerid, playerid+100);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerTime(playerid, 06, 0);
    SetPlayerPos(playerid, 1551.1915, -1353.4355, 329.8583);
	SetPlayerFacingAngle(playerid, 275.3890);
	SetPlayerSpecialAction(playerid, 5);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][CameraViewRequest] == 0) {
    InterpolateCameraPos(playerid, 1595.991821, -1353.682861, 347.914978, 1562.279174, -1352.972045, 333.039489, 2500, CAMERA_MOVE);
	InterpolateCameraLookAt(playerid, 1591.003295, -1353.675659, 347.576171, 1557.317871, -1353.182006, 332.455657, 2500, CAMERA_MOVE);
	PlayerInfo[playerid][CameraViewRequest] = 1; }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(PlayerInfo[playerid][CameraViewRequest] == 1) {
	SetPlayerCameraPos(playerid, 1569.9792,-1352.6340,334.9214);
	SetPlayerCameraLookAt(playerid, 1557.317871, -1353.182006, 332.455657); }
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerRequestSpawn(playerid)
{
    if(PlayerInfo[playerid][LoggedIn] == 0) return false;
    DestroyRequestSpawn(playerid);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnGameModeExit()
{
    foreach(new i: Player) OnPlayerDisconnect(i, 1); eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `TimePlayed` = 'Disconnected'");
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `AFK` = '-1'");
	mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new x = 1; x < MAX_GANGS; x++)
	{
	    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `GangTers` SET `GangTerOwner` = '%d' WHERE `ID` = '%d'", Teritories[x][owner], x);
	    mysql_tquery(SQL, eQuery, "", "");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new x = 1; x < MAX_CLANS; x++)
	{
	    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Clans` SET `Owner` = '%d' WHERE `ID` = '%d'", ClanTers[x][owner], x);
	    mysql_tquery(SQL, eQuery, "", "");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_close(SQL);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnGameModeInit()
{
	if(SV_DATABASE_TYPE == 1)
	{
	    format(ServerInfo[Database_Host], 50, "localhost");
	    format(ServerInfo[Database_User], 50, "root");
	    format(ServerInfo[Database_Password], 50, "");
	    format(ServerInfo[Database_Database], 50, "ESS");
	    FinishDatabaseConnect(0);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    ServerProtection = 1;
    ServerInfo[HNSStarter] = -1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(ServerInfo[HostNameChangedBy], 24, "Server");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	foreach(new i: Player) OnPlayerConnect(i);
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	SetWorldTime(14);
	SetWeather(2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Stunt3DText[300], DriftStr[300], FishStr[500], FishPick[11],
    SantaToyCars3D[300], SantaLottery3D[300], SantaH3D[300], Santa3D[300], Snow3D[300];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Sky Climb Pickup Add
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SkyClimbPickup = CreatePickup(1274, 100, -2592.6045,2131.9963,3250.1370, 2022);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Karting Vehicles
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AddStaticVehicle(571,294.9474,1079.4940,610.8208,73.6043,2,35); // kart#1
	AddStaticVehicle(571,294.1011,1086.7520,610.8237,89.9988,40,35); // kart#2
	AddStaticVehicle(571,294.0991,1094.1067,610.8237,89.9997,11,22); // kart#3
	AddStaticVehicle(571,276.1621,1094.1063,610.8237,269.9999,36,2); // kart#4
	AddStaticVehicle(571,276.1515,1086.7522,610.8254,269.9994,51,53); // kart#5
	AddStaticVehicle(571,276.1489,1079.4207,610.8243,269.9993,36,2); // kart#6
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> SF Vehicles
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AddStaticVehicle(411,-1989.5701,272.5496,34.9368,264.3436,2,40); // sf_car_1
	AddStaticVehicle(411,-1990.2225,265.9608,34.9313,264.3435,2,40); // sf_car_2
	AddStaticVehicle(411,-1990.7450,259.0551,34.9311,264.4980,2,40); // sf_car_3
	AddStaticVehicle(411,-1991.3599,252.6847,34.9324,264.4975,2,40); // sf_car_4
	AddStaticVehicle(411,-1992.0037,245.9939,34.9274,264.4977,2,40); // sf_car_5
	AddStaticVehicle(411,-1992.9285,240.2551,34.9091,271.3582,2,40); // sf_car_6
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Tree House
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TreeHouseLift = CreateDynamicObject(19277, TreeHouseLift1, 0.000000, 0.000000, -18.099992, -1, -1, -1, 300.00, 300.00);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	LiftState = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TreeHouseText[0] = CreateDynamic3DTextLabel("/lift\n{00CC00}To go up", ~1, TreeHouseLift1, 20);
	TreeHouseText[1] = CreateDynamic3DTextLabel("/lift\n{00CC00}To go down", ~1, TreeHouseLift2, 20);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ServerInfo[StealCarOwner] = -1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetGameModeText(""SERVER_GM"");
	SendRconCommand("mapname "SERVER_MAP"");
    SendRconCommand("weburl "SERVER_WEBSITE"");
    SendRconCommand("language "SERVER_LANGUAGE"");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SendRconCommand("rcon_password "SERVER_RCON"");
	printf("%d - Objects.",CountDynamicObjects());
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mskinlist 		= LoadModelSelectionMenu("skins.txt");
    skinss          = LoadModelSelectionMenu("skins.txt");
    v_bycikles 		= LoadModelSelectionMenu("bycikles.txt");
    v_bikes 		= LoadModelSelectionMenu("bikes.txt");
    v_mtrucks 		= LoadModelSelectionMenu("trucks.txt");
    v_boats 		= LoadModelSelectionMenu("boats.txt");
    v_helicopters 	= LoadModelSelectionMenu("hely.txt");
    v_planes 		= LoadModelSelectionMenu("planes.txt");
    v_rcs 			= LoadModelSelectionMenu("rcs.txt");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < 12; i++)
	{
	    new String[128];
	    format(String, sizeof(String), "Cars%d.txt", i);
	    Cars[i] = LoadModelSelectionMenu(String);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < 6; i++) c_weapons[i] = LoadModelSelectionMenu("Weapons.txt");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ShowPlayerMarkers(1);		ShowNameTags(1);
    EnableStuntBonusForAll(0);	AllowInteriorWeapons(1);
	UsePlayerPedAnims();		DisableInteriorEnterExits();
	Streamer_TickRate(30);      AntiDeAMX();
	SpawnBloodrings();          ShowAllJob3D();
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i; i < MAX_FIREWORK; i++) FireworkInfo[i][FOwner] = -1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// SFPD Vehicles
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AddStaticVehicle(597,-1616.7892,672.9784,6.9566,180.2449,0,1);
	AddStaticVehicle(597,-1611.8794,672.9996,7.0460,180.2448,0,1);
	AddStaticVehicle(597,-1606.1447,673.0212,6.9472,180.2428,0,1);
	AddStaticVehicle(597,-1599.9624,673.0472,6.9507,180.2449,0,1);
	AddStaticVehicle(597,-1594.1595,673.0720,6.9507,180.2449,0,1);
	AddStaticVehicle(597,-1588.2201,673.0975,6.9549,180.2808,0,1);
	AddStaticVehicle(597,-1582.6532,673.1249,6.9549,180.2808,0,1);
	AddStaticVehicle(597,-1576.5793,673.1545,6.9625,180.2781,0,1);
	AddStaticVehicle(427,-1638.7388,649.6739,-5.1102,269.6869,0,1);
	AddStaticVehicle(427,-1638.7170,653.7061,-5.1062,269.6871,0,1);
	AddStaticVehicle(427,-1638.6952,657.6953,-5.1021,269.6873,0,1);
	AddStaticVehicle(427,-1638.6724,661.8129,-5.0940,269.6875,0,1);
	AddStaticVehicle(427,-1638.6500,665.9158,-5.0939,269.6875,0,1);
	AddStaticVehicle(427,-1638.6283,669.8724,-5.0939,269.6875,0,1);
	AddStaticVehicle(427,-1638.6051,674.0704,-5.0938,269.6875,0,1);
	AddStaticVehicle(427,-1638.5839,678.0112,-5.0936,269.6875,0,1);
	AddStaticVehicle(427,-1638.5605,682.2640,-5.0935,269.6875,0,1);
	AddStaticVehicle(427,-1638.5399,686.0231,-5.0935,269.6875,0,1);
	AddStaticVehicle(599,-1574.6127,706.0781,-5.0513,90.5009,0,1);
	AddStaticVehicle(599,-1574.6851,714.3246,-5.0420,90.5002,0,1);
	AddStaticVehicle(599,-1574.7567,722.5456,-5.0374,90.5007,0,1);
	AddStaticVehicle(599,-1574.8286,730.7540,-5.0291,90.5002,0,1);
	AddStaticVehicle(599,-1574.8959,738.4726,-5.0235,90.5006,0,1);
	AddStaticVehicle(597,-1583.9606,748.6295,-5.4731,180.4359,0,1);
	AddStaticVehicle(597,-1591.9731,748.5685,-5.4731,180.4359,0,1);
	AddStaticVehicle(597,-1600.1100,748.5068,-5.4732,180.4359,0,1);
	AddStaticVehicle(597,-1608.1112,748.4460,-5.4731,180.4359,0,1);
	AddStaticVehicle(597,-1616.2814,748.3839,-5.4732,180.4359,0,1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// LSPD Vehicles
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AddStaticVehicle(596,1600.5031,-1683.8717,5.6120,89.9979,0,1);
	AddStaticVehicle(596,1600.5031,-1687.8538,5.6120,89.9979,0,1);
	AddStaticVehicle(596,1600.5031,-1691.9958,5.6120,89.9979,0,1);
	AddStaticVehicle(596,1600.5031,-1696.0115,5.6121,89.9979,0,1);
	AddStaticVehicle(596,1600.5031,-1700.1422,5.6122,89.9979,0,1);
	AddStaticVehicle(596,1600.5031,-1704.0176,5.6122,89.9979,0,1);
	AddStaticVehicle(599,1526.4874,-1646.4576,6.0833,180.2526,0,1);
	AddStaticVehicle(599,1530.4100,-1646.4408,6.0833,180.2525,0,1);
	AddStaticVehicle(599,1534.5308,-1646.4227,6.0835,180.2525,0,1);
	AddStaticVehicle(599,1538.6672,-1646.4048,6.0943,180.2519,0,1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// LVPD Vehicles
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AddStaticVehicle(598,2282.3274,2444.5938,10.5678,359.6997,0,1);
	AddStaticVehicle(598,2277.9285,2444.6169,10.5678,359.6997,0,1);
	AddStaticVehicle(598,2273.5654,2444.6387,10.5677,359.6997,0,1);
	AddStaticVehicle(598,2269.1099,2444.6619,10.5677,359.6997,0,1);
	AddStaticVehicle(599,2282.0464,2458.1384,11.0141,180.3780,0,1);
	AddStaticVehicle(599,2277.8352,2458.1101,11.0142,180.3780,0,1);
	AddStaticVehicle(599,2273.6272,2458.0820,11.0143,180.3780,0,1);
	AddStaticVehicle(599,2269.1560,2458.0532,11.0144,180.3780,0,1);
	AddStaticVehicle(427,2269.0894,2476.6387,10.9521,180.6794,0,1);
	AddStaticVehicle(427,2273.4700,2476.6899,10.9522,180.6794,0,1);
	AddStaticVehicle(427,2277.6885,2476.7390,10.9523,180.6794,0,1);
	AddStaticVehicle(427,2282.0383,2476.7903,10.9524,180.6794,0,1);
	AddStaticVehicle(523,2290.7834,2475.8469,10.3888,180.6529,0,1);
	AddStaticVehicle(523,2295.2471,2475.8965,10.3888,180.6462,0,1);
	AddStaticVehicle(523,2295.4385,2458.8872,10.3888,180.6454,0,1);
	AddStaticVehicle(523,2290.9741,2458.8376,10.3889,180.6405,0,1);
	AddStaticVehicle(523,2291.1389,2444.3054,10.3910,0.6378,0,1);
	AddStaticVehicle(523,2295.2993,2444.3513,10.3909,0.6378,0,1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// War Vehicles
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	WarVeh[0] = AddStaticVehicle(470, 213.4171, 1864.8115, 13.1754, 358.6309, 17, 108);
	WarVeh[1] = AddStaticVehicle(520, 206.2758, 1931.2197, 23.9654, 269.1416, 0, 0);
	WarVeh[2] = AddStaticVehicle(432, 279.2066, 1956.4241, 17.6693, 271.1624, 43, 0);
	WarVeh[3] = AddStaticVehicle(425, 341.7077, 1812.0973, 18.4824, 57.2811, 43, 0);
	WarVeh[4] = AddStaticVehicle(432, 278.3197, 1988.6575, 17.6133, 270.0365, 43, 0);
	WarVeh[5] = AddStaticVehicle(432, 275.3194, 2023.6628, 17.6692, 272.0243, 43, 0);
	WarVeh[6] = AddStaticVehicle(520, 308.5438, 2052.5728, 18.3638, 181.7552, 95, 99);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < 7; i++) SetVehicleVirtualWorld(WarVeh[i], 78);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Vehicles In Mount Chilliad - /Chilliad
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AddStaticVehicle(411,-2305.4148,-1604.0525,483.6517,124.3150,64,10);
	AddStaticVehicle(411,-2301.5066,-1609.8304,483.6455,124.2892,64,10);
	AddStaticVehicle(411,-2297.5945,-1615.7880,483.5912,123.7889,64,10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//Timers
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetTimer("UpdatePlayerDataAgain", 999, true);
	SetTimer("MounthlyTopReset", 60000*60, true);
	SetTimer("HostNameChanger", 60000, true);
	SetTimer("MathsType", 200000, true);
    SetTimer("GiveGifts", 3600000, true);
    SetTimer("PONTSystem", 600000, true);
	SetTimer("SetOFFPonts", 1200000, true);
    SetTimer("CheckBallPosition", 250, true);
	SetTimer("RandomGameText", 300000, true);
	SetTimer("PlayerTimers", 1000, true);
	SetTimer("RandomAds", 40000, true);
    SetTimer("SavePlayerSession", 3600, true);
    SetTimer("CalculateAccountLocked", 3540000, true);
    SetTimer("CheckClanTers", 10000, true);
    SetTimer("CheckPlayers", 1000, true);
    SetTimer("GetPeakReset", 1000, true);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new a = 0; a < 5; a++)
    SetTimerEx("OnUpdate", 1800000, true, "i", a); // Save all server details after 30 mins
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GOLDPOTTIMER = SetTimer("GoldPot", 100000, false);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	NascarWinner = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SoccerBall = CreateObject(2114, 1574.99329, -2017.36682, 736.69220,   0.00000, 0.00000, 0.00000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ServerInfo[StarEventStarted] 	= -1,  	ServerInfo[StarID] 		 = -1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ServerInfo[GoldPotStarted] = -1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CountPlayersInDerby = 0, CheckDerby = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for (new i = 1; i < MAX_REPORTS; i++) Reports[i] = "NoReports";
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Santaland
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(GetChristmasFuncAvailable() == 1)
    {
	    strcat(Snow3D, "{FFFFFF}Type\n\
		                {FF0000}/snow\n\
	                    {FFFFFF}and let it snow!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CreateDynamic3DTextLabel(Snow3D, -1, -534.9141,3559.9841,5.7700, 50);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		strcat(Santa3D, "{FFFFFF}/carol\n\
						 {FFEE00}To receive gifts from Santa's elves!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CreateDynamic3DTextLabel(Santa3D, -1, SANTA_HOUSE1, 50);
	    CreateDynamic3DTextLabel(Santa3D, -1, SANTA_HOUSE2, 50);
	    CreateDynamic3DTextLabel(Santa3D, -1, SANTA_HOUSE3, 50);
	    CreateDynamic3DTextLabel(Santa3D, -1, SANTA_HOUSE4, 50);
	    CreateDynamic3DTextLabel(Santa3D, -1, SANTA_HOUSE5, 50);
	    CreateDynamic3DTextLabel(Santa3D, -1, SANTA_HOUSE6, 50);
	    CreateDynamic3DTextLabel(Santa3D, -1, SANTA_HOUSE7, 50);
	    CreateDynamic3DTextLabel(Santa3D, -1, SANTA_HOUSE8, 50);
	    CreateDynamic3DTextLabel(Santa3D, -1, SANTA_HOUSE9, 50);
	    CreateDynamic3DTextLabel(Santa3D, -1, SANTA_HOUSE10, 50);
	    CreateDynamic3DTextLabel(Santa3D, -1, SANTA_HOUSE11, 50);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CreateDynamicPickup(19135, 999999999, SANTA_HOUSE1);
	   	CreateDynamicPickup(19135, 999999999, SANTA_HOUSE2);
	   	CreateDynamicPickup(19135, 999999999, SANTA_HOUSE3);
	   	CreateDynamicPickup(19135, 999999999, SANTA_HOUSE4);
	   	CreateDynamicPickup(19135, 999999999, SANTA_HOUSE5);
	   	CreateDynamicPickup(19135, 999999999, SANTA_HOUSE6);
	   	CreateDynamicPickup(19135, 999999999, SANTA_HOUSE7);
	   	CreateDynamicPickup(19135, 999999999, SANTA_HOUSE8);
	   	CreateDynamicPickup(19135, 999999999, SANTA_HOUSE9);
	   	CreateDynamicPickup(19135, 999999999, SANTA_HOUSE10);
		CreateDynamicPickup(19135, 999999999, SANTA_HOUSE11);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CreateDynamic3DTextLabel("{FFFFFF}Grinch Shootout\n\
	                              {FFEE00}Destroy the beast that wanks\n\
								  {FFEE00}to ruin Christmas and win gifts from Santa!\n\
								  {FFFFFF}Have fun!", 0xFFFFFFFF, -527.0251,3489.6980,5.7700, 50);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SantaGrinchInfo = CreateDynamicPickup(1239, 999999999, -527.0251,3489.6980,5.7700);
		SantaGrinchWeapon[1] = CreateDynamicPickup(357, 999999999, -511.7353,3485.0442,5.7700);
		SantaGrinchWeapon[2] = CreateDynamicPickup(357, 999999999, -544.3597,3481.2195,5.7700);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		eString[0] = EOS;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GrinchHealth = 300;
		CrinchColor = "00FF00";
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "{00CC00}300 HP\n{FFFFFF}Remaining!");
	    GrinchText = CreateDynamic3DTextLabel(eString, -1, -527.6615,3455.6067,13.3820, 50);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GrinchObj[0] = CreateObject(19373, -529.36713, 3448.91602, 15.87195,   -0.00001, 0.00000, 90.10002);
		GrinchObj[1] = CreateObject(19373, -529.36713, 3448.91602, 12.37195,   -0.00001, 0.00000, 90.10002);
		GrinchObj[2] = CreateObject(19373, -526.15698, 3448.92188, 15.87195,   -0.00001, 0.00000, 90.10002);
		GrinchObj[3] = CreateObject(19373, -526.15698, 3448.92188, 12.37195,   -0.00001, 0.00000, 90.10002);
		GrinchObj[4] = CreateObject(19791, -527.71252, 3452.05908, 2.38195,   0.00000, 0.00001, -179.89993);
		GrinchObj[5] = CreateObject(19373, -529.28003, 3450.64648, 17.51195,   -0.00001, -90.00000, 90.10002);
		GrinchObj[6] = CreateObject(19373, -526.30011, 3450.70166, 17.52196,   -0.00001, -90.00000, 90.10002);
		GrinchObj[7] = CreateObject(2898, -527.73529, 3449.96924, 19.08700,   -90.00000, 0.00000, 180.00000);
		GrinchObj[8] = CreateObject(19373, -526.31488, 3453.44141, 17.53196,   -0.00001, -90.00000, 90.10002);
		GrinchObj[9] = CreateObject(19373, -524.63519, 3453.65430, 15.87195,   0.00000, -0.00001, 0.10007);
		GrinchObj[10] = CreateObject(19373, -524.62964, 3450.44434, 15.87195,   0.00000, -0.00001, 0.10007);
		GrinchObj[11] = CreateObject(19373, -524.62964, 3450.44434, 12.37195,   0.00000, -0.00001, 0.10007);
		GrinchObj[12] = CreateObject(19373, -524.63519, 3453.65430, 12.37195,   0.00000, -0.00001, 0.10007);
		GrinchObj[13] = CreateObject(3877, -523.05090, 3452.10547, 15.83710,   0.00000, -90.00000, -180.00000);
		GrinchObj[14] = CreateObject(19373, -526.16791, 3455.17188, 12.37195,   -0.00001, 0.00000, 90.10002);
		GrinchObj[15] = CreateObject(19373, -529.37799, 3455.16602, 15.87195,   -0.00001, 0.00000, 90.10002);
		GrinchObj[16] = CreateObject(19373, -526.16791, 3455.17188, 15.8227195,   -0.00001, 0.00000, 90.10002);
		GrinchObj[17] = CreateObject(19373, -529.37799, 3455.16602, 12.37195,   -0.00001, 0.00000, 90.10002);
		GrinchObj[18] = CreateObject(19373, -529.32483, 3453.36670, 17.52196,   -0.00001, -90.00000, 90.10002);
		GrinchObj[19] = CreateObject(19373, -530.88519, 3453.63379, 15.86196,   0.00000, -0.00001, 0.10007);
		GrinchObj[20] = CreateObject(19373, -530.87976, 3450.51367, 15.86196,   0.00000, -0.00001, 0.10007);
		GrinchObj[21] = CreateObject(19373, -530.87976, 3450.51367, 12.36196,   0.00000, -0.00001, 0.10007);
		GrinchObj[22] = CreateObject(19373, -530.88519, 3453.63379, 12.36196,   0.00000, -0.00001, 0.10007);
		GrinchObj[23] = CreateObject(3877, -532.53717, 3452.10547, 15.83710,   0.00000, -90.00000, 0.00000);
		GrinchObj[24] = CreateObject(2898, -529.75397, 3451.99023, 19.08700,   -90.00000, 0.00000, 90.00000);
		GrinchObj[25] = CreateObject(2898, -527.73718, 3454.01318, 19.08700,   -90.00000, 0.00000, 0.00000);
		GrinchObj[26] = CreateObject(2898, -525.71155, 3452.00342, 19.08700,   -90.00000, 0.00000, -90.00000);
		GrinchObj[27] = CreateObject(6865, -527.77679, 3452.40430, 18.37214,   0.00000, 0.00000, -135.00000);
		GrinchObj[28] = CreateObject(3877, -526.79138, 3452.52246, 20.46880,   0.00000, -90.00000, -90.00000);
		GrinchObj[29] = CreateObject(3877, -528.75494, 3452.53516, 20.46880,   0.00000, -90.00000, -90.00000);
		GrinchObj[30] = CreateObject(2960, -527.71777, 3454.06299, 19.04200,   0.00000, 0.00000, -180.00000);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// => Santa Ice Rink
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CreateDynamic3DTextLabel("{FFFFFF}Ice Rink\n\
	                              {FFEE00}Let's skate on the ice!\n\
								  {FFFFFF}Have fun!", 0xFFFFFFFF, -478.8012,3559.2671,5.7700, 50);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SantaIce = CreateDynamicRectangle(-477.674133,3602.976074,-403.822143,3529.970947);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// => Santa House
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		strcat(SantaH3D, "{FFFFFF}Santa House\n\
						 {FFEE00}Explore Santa's house and\n\
						 {FFEE00}try to find his gifts!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CreateDynamic3DTextLabel(SantaH3D, -1, -437.7797,3472.3555,5.7700, 50);
	    CreateDynamic3DTextLabel(SantaH3D, -1, -437.2009,3512.4065,5.7700, 50);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SantaHouseInfo[1] = CreateDynamicPickup(1239, 999999999, -437.7797,3472.3555,5.7700);
	    SantaHouseInfo[2] = CreateDynamicPickup(1239, 999999999, -437.2009,3512.4065,5.7700);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    new RandPos = random(sizeof(RandomPickupSanta));
	    new RandGifts = random(sizeof(RandomGiftsPickups));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SantaHousePickups = CreateDynamicPickup(RandomGiftsPickups[RandGifts][0], 999999999, RandomPickupSanta[RandPos][0],RandomPickupSanta[RandPos][1],RandomPickupSanta[RandPos][2]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // => Santa Lottery
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    strcat(SantaLottery3D, "{FFFFFF}Gifts lottery\n\
	                            {FFEE00}Try your lucky at Santa's lottery!\n\
			                    {FFFFFF}Have fun!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CreateDynamic3DTextLabel(SantaLottery3D, -1, -594.9498,3482.3682,6.9778, 50);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SantaLottery = CreateDynamicPickup(1239, 999999999, -594.9498,3482.3682,6.9778);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SantaLotteryPickups[1] = CreateDynamicPickup(19058, 999999999, -1742.5591,-3808.2197,911.4706);
		SantaLotteryPickups[2] = CreateDynamicPickup(19058, 999999999, -1746.0002,-3804.4670,911.4706);
		SantaLotteryPickups[3] = CreateDynamicPickup(19058, 999999999, -1749.3381,-3800.9285,911.4706);
		SantaLotteryPickups[4] = CreateDynamicPickup(19058, 999999999, -1739.8591,-3805.5178,911.4706);
		SantaLotteryPickups[5] = CreateDynamicPickup(19058, 999999999, -1743.2830,-3801.7876,911.4706);
		SantaLotteryPickups[6] = CreateDynamicPickup(19058, 999999999, -1746.8467,-3798.2766,911.4706);
		SantaLotteryPickups[7] = CreateDynamicPickup(19058, 999999999, -1737.2493,-3802.8542,911.4706);
		SantaLotteryPickups[8] = CreateDynamicPickup(19058, 999999999, -1740.6571,-3799.4443,911.4706);
		SantaLotteryPickups[9] = CreateDynamicPickup(19058, 999999999, -1744.2606,-3795.8992,911.4706);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		new RandomGiftLottery = random(9); switch(RandomGiftLottery)
	    {
	        case 0: SantaLotteryGift = SantaLotteryPickups[1];
	        case 1: SantaLotteryGift = SantaLotteryPickups[2];
	        case 2: SantaLotteryGift = SantaLotteryPickups[3];
	        case 3: SantaLotteryGift = SantaLotteryPickups[4];
	        case 4: SantaLotteryGift = SantaLotteryPickups[5];
	        case 5: SantaLotteryGift = SantaLotteryPickups[6];
	        case 6: SantaLotteryGift = SantaLotteryPickups[7];
	        case 7: SantaLotteryGift = SantaLotteryPickups[8];
	        case 8: SantaLotteryGift = SantaLotteryPickups[9];
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// => Toy Cars
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		strcat(SantaToyCars3D, "{FFFFFF}Toy Cars\n\
						        {FFEE00}Collect gifts with your toy car!\n\
						        {FFFFFF}Have fun!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CreateDynamic3DTextLabel(SantaToyCars3D, -1, -611.7015,3507.2476,5.7700, 50);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SantaToyCars = CreateDynamicPickup(1239, 999999999, -611.7015,3507.2476,5.7700);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		new RandomPos = random(10); switch(RandomPos)
	    {
	        case 0: SantaToyCarPos[0] = -629.5334, SantaToyCarPos[1] = 3528.5908, SantaToyCarPos[2] = 6.2900;
	        case 1: SantaToyCarPos[0] = -619.0206, SantaToyCarPos[1] = 3552.4846, SantaToyCarPos[2] = 6.2900;
	        case 2: SantaToyCarPos[0] = -604.3511, SantaToyCarPos[1] = 3563.2603, SantaToyCarPos[2] = 6.2900;
	        case 3: SantaToyCarPos[0] = -607.4111, SantaToyCarPos[1] = 3577.3352,  SantaToyCarPos[2] = 6.2900;
	        case 4: SantaToyCarPos[0] = -627.5074, SantaToyCarPos[1] = 3588.3223, SantaToyCarPos[2] = 6.2900;
	        case 5: SantaToyCarPos[0] = -619.4536, SantaToyCarPos[1] = 3617.3777, SantaToyCarPos[2] = 6.2900;
	        case 6: SantaToyCarPos[0] = -599.4554, SantaToyCarPos[1] = 3613.9038, SantaToyCarPos[2] = 6.2900;
	        case 7: SantaToyCarPos[0] = -595.2631, SantaToyCarPos[1] = 3588.1880, SantaToyCarPos[2] = 6.2900;
	        case 8: SantaToyCarPos[0] = -632.0173, SantaToyCarPos[1] = 3548.6897, SantaToyCarPos[2] = 6.2900;
	        case 9: SantaToyCarPos[0] = -623.1711, SantaToyCarPos[1] = 3543.4541, SantaToyCarPos[2] = 6.2900;
	    }
	    SantaToyCarPickup = CreatePickup(1247, 2, SantaToyCarPos[0], SantaToyCarPos[1], SantaToyCarPos[2], -1);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "{FFEE00}Last picked up by{FF0000} Nobody\n\
	  									  {FFEE00}He won 0 Coins & $0!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SantaToyCarText = CreateDynamic3DTextLabel(eString, ~1, SantaToyCarPos[0], SantaToyCarPos[1], SantaToyCarPos[2], 80);
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Actors
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new DJSAct;
    DJSAct = CreateActor(93, 204.0603, -1819.0299, 7.8828, 181.5366);
    ApplyActorAnimation(DJSAct, "PED", "IDLE_CHAT", 1.800001, 1, 1, 1, 1, 13000);
    new BeachActor;
    BeachActor = CreateActor(168, 359.7841, -1825.2498, 4.0725, 94.2658);
    ApplyActorAnimation(BeachActor, "PED", "IDLE_CHAT", 1.800001, 1, 1, 1, 1, 13000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	strcat(Stunt3DText, "{00FF22}Type{FF0000} /Start{00FF22} to try this stunt!\n\
		                 {FFFF00}Use /stunts for more stunts!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CreateDynamic3DTextLabel(Stunt3DText, ~1, 1838.994873,1586.723144,8.527256, 50),    CreateDynamic3DTextLabel(Stunt3DText, ~1, 1843.6899,1455.3818,11.6454, 50);
    CreateDynamic3DTextLabel(Stunt3DText, ~1, 2335.312255,2149.432128,10.249174, 50),   CreateDynamic3DTextLabel(Stunt3DText, ~1, 1922.183959,2008.699096,10.116531, 50);
    CreateDynamic3DTextLabel(Stunt3DText, ~1, 1943.340087,2199.185791,10.392769, 50),   CreateDynamic3DTextLabel(Stunt3DText, ~1, 2876.097167,1579.139160,10.393080, 50);
    CreateDynamic3DTextLabel(Stunt3DText, ~1, -2264.446044,320.152679,34.956920, 50),   CreateDynamic3DTextLabel(Stunt3DText, ~1, -2490.424072,441.591400,27.666994, 50);
    CreateDynamic3DTextLabel(Stunt3DText, ~1, 1872.261840,-1427.949462,10.135522,50),   CreateDynamic3DTextLabel(Stunt3DText, ~1, -2003.273559,-283.168212,34.892936, 50);
    CreateDynamic3DTextLabel(Stunt3DText, ~1, 2008.712158,900.844909,10.390938, 50),    CreateDynamic3DTextLabel(Stunt3DText, ~1, 2218.766113,2406.661132,10.385766, 50);
    CreateDynamic3DTextLabel(Stunt3DText, ~1, -1795.686645,730.918395,34.581394, 50),   CreateDynamic3DTextLabel(Stunt3DText, ~1, 1536.790649,-1742.266601,13.120272, 50);
    CreateDynamic3DTextLabel(Stunt3DText, ~1, 1855.901489,-1467.969238,12.967999, 50),  CreateDynamic3DTextLabel(Stunt3DText, ~1, -2267.8716,-102.2001,35.3203, 50);
    CreateDynamic3DTextLabel(Stunt3DText, ~1, 1874.7556,-1444.6968,13.5510, 50), 	   	CreateDynamic3DTextLabel(Stunt3DText, ~1, 2066.1096,-1340.9332,23.8203, 50);
    CreateDynamic3DTextLabel(Stunt3DText, ~1, 2140.0549,-2223.0105,13.3899, 50), 	   	CreateDynamic3DTextLabel(Stunt3DText, ~1, 1453.5579,-1300.2125,13.3828, 50);
    CreateDynamic3DTextLabel(Stunt3DText, ~1, 1618.0244,-1592.3458,13.5469, 50), 	   	CreateDynamic3DTextLabel(Stunt3DText, ~1, 2168.9238,1213.3776,10.8203, 50);
    CreateDynamic3DTextLabel(Stunt3DText, ~1, 1878.1779,933.1486,10.6719, 50), 		   	CreateDynamic3DTextLabel(Stunt3DText, ~1, -2291.7871,726.4196,49.4384, 50);
    CreateDynamic3DTextLabel(Stunt3DText, ~1, 1373.9473,-939.9419,34.1875, 50), 	  	CreateDynamic3DTextLabel(Stunt3DText, ~1, 1338.1860,-1282.4750,13.3828, 50);
    CreateDynamic3DTextLabel(Stunt3DText, ~1, -2706.2795,77.7037,4.2400, 50), 		  	CreateDynamic3DTextLabel(Stunt3DText, ~1, -1721.1564,1103.3379,45.2969, 50);
    CreateDynamic3DTextLabel(Stunt3DText, ~1, 343.6186,-1467.6818,35.5760, 50),         CreateDynamic3DTextLabel(Stunt3DText, ~1, -2020.3922,280.9665,33.6787, 50);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(DriftStr, "{00FF22}Type{FF0000} /Start{00FF22} to try this drift!\n\
                      {FFFF00}Use /drifts for more tracks!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CreateDynamic3DTextLabel(DriftStr, ~1, -303.2536,1505.5580,75.1785, 50),	 CreateDynamic3DTextLabel(DriftStr, ~1, -1064.4688,-1647.8483,76.6258, 50);
	CreateDynamic3DTextLabel(DriftStr, ~1, -2411.7566,-601.1371,132.5680, 50),   CreateDynamic3DTextLabel(DriftStr, ~1, 2228.4851,1964.6354,31.7797, 50);
	CreateDynamic3DTextLabel(DriftStr, ~1, 2261.7908,1398.9540,42.8203, 50),	 CreateDynamic3DTextLabel(DriftStr, ~1, 1638.0500,-1129.9093,23.9063, 50);
	CreateDynamic3DTextLabel(DriftStr, ~1, 1647.1736,919.6669,10.6719, 50),	 	//CreateDynamic3DTextLabel(DriftStr, ABLUE, 1647.1736,919.6669,10.6719, 50);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(FishStr, "{FFFF00}Fish Place\n\
					 {00FF22}Type {FF0000}/Fish {00FF22}to start fishing!\n\
					 {FFFF00}Have Fun!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	CreateDynamic3DTextLabel(FishStr, ~1, 403.8266, -2088.7598, 7.8359, 30),	CreateDynamic3DTextLabel(FishStr, ~1, 398.7553, -2088.7490, 7.8359, 30);
    CreateDynamic3DTextLabel(FishStr, ~1, 396.2197, -2088.6692, 7.8359, 30),	CreateDynamic3DTextLabel(FishStr, ~1, 391.1094, -2088.7976, 7.8359, 30);
    CreateDynamic3DTextLabel(FishStr, ~1, 383.4157, -2088.7849, 7.8359, 30),	CreateDynamic3DTextLabel(FishStr, ~1, 374.9598, -2088.7979, 7.8359, 30);
    CreateDynamic3DTextLabel(FishStr, ~1, 369.8107, -2088.7927, 7.8359, 30),	CreateDynamic3DTextLabel(FishStr, ~1, 367.3637, -2088.7925, 7.8359, 30);
    CreateDynamic3DTextLabel(FishStr, ~1, 362.2244, -2088.7981, 7.8359, 30),	CreateDynamic3DTextLabel(FishStr, ~1, 354.5382, -2088.7979, 7.8359, 30);
    CreateDynamic3DTextLabel("/Fishmarket", YELLOW, 360.6447, -2031.58, 7.8359, 30);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    FishPick[0]  = CreatePickup(1318, 1, 403.8266, -2088.7598, 7.8359),	FishPick[1]  = CreatePickup(1318, 1, 398.7553, -2088.7490, 7.8359);
    FishPick[2]  = CreatePickup(1318, 1, 396.2197, -2088.6692, 7.8359), FishPick[3]  = CreatePickup(1318, 1, 391.1094, -2088.7976, 7.8359);
    FishPick[4]  = CreatePickup(1318, 1, 383.4157, -2088.7849, 7.8359), FishPick[5]  = CreatePickup(1318, 1, 374.9598, -2088.7979, 7.8359);
    FishPick[6]  = CreatePickup(1318, 1, 369.8107, -2088.7927, 7.8359), FishPick[7]  = CreatePickup(1318, 1, 367.3637, -2088.7925, 7.8359);
    FishPick[8]  = CreatePickup(1318, 1, 360.6447, -2031.58, 7.8359);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AddPlayerClass(217,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1),	    AddPlayerClass(122,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1);
    AddPlayerClass(23,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1),		AddPlayerClass(28,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1);
    AddPlayerClass(101,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1),	    AddPlayerClass(115,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1);
    AddPlayerClass(116,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1),	    AddPlayerClass(53,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1);
    AddPlayerClass(78,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1),		AddPlayerClass(134,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1);
    AddPlayerClass(135,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1),	    AddPlayerClass(137,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1);
    AddPlayerClass(93,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1),		AddPlayerClass(192,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1);
    AddPlayerClass(193,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1),	    AddPlayerClass(12,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1);
    AddPlayerClass(55,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1),		AddPlayerClass(91,483.9709,-1509.2065,20.4061,183.8791,-1,-1,-1,-1,-1,-1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // TD Information
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	for(new i = 0; i < MAX_PLAYERS; i++)
	{
    	ShowInfo[i] = TextDrawCreate(30.000000, 120.000000, "_");
		TextDrawBackgroundColor(ShowInfo[i], 255);
		TextDrawFont(ShowInfo[i], 1);
		TextDrawLetterSize(ShowInfo[i],0.210000, 1.000000);
		TextDrawColor(ShowInfo[i], -1);
		TextDrawSetOutline(ShowInfo[i], 1);
		TextDrawSetProportional(ShowInfo[i], 1);
		TextDrawUseBox(ShowInfo[i], 1);
		TextDrawBoxColor(ShowInfo[i], 130);
		TextDrawTextSize(ShowInfo[i], 184.000000, 0.000000);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Player Death
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    TD_Death[0] = TextDrawCreate(660.000000, 174.000000, "_");
	TextDrawBackgroundColor(TD_Death[0], 255);
	TextDrawFont(TD_Death[0], 1);
	TextDrawLetterSize(TD_Death[0], 0.500000, 3.899999);
	TextDrawColor(TD_Death[0], -1);
	TextDrawSetOutline(TD_Death[0], 0);
	TextDrawSetProportional(TD_Death[0], 1);
	TextDrawSetShadow(TD_Death[0], 1);
	TextDrawUseBox(TD_Death[0], 1);
	TextDrawBoxColor(TD_Death[0], 168430280);
	TextDrawTextSize(TD_Death[0], -21.000000, 1.000000);
	//--------------------------------------------------------------------------
	TD_Death[1] = TextDrawCreate(279.000000, 182.000000, "Wasted");
	TextDrawBackgroundColor(TD_Death[1] , 255);
	TextDrawFont(TD_Death[1] , 3);
	TextDrawLetterSize(TD_Death[1] , 0.500000, 2.000000);
	TextDrawColor(TD_Death[1] , -16776961);
	TextDrawSetOutline(TD_Death[1] , 1);
	TextDrawSetProportional(TD_Death[1] , 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> LOGO SPAWN TD
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	/*Logo[0] = TextDrawCreate(7.000000, 428.000000, "Empire");
	TextDrawBackgroundColor(Logo[0], 336860360);
	TextDrawFont(Logo[0], 2);
	TextDrawLetterSize(Logo[0], 0.199999, 1.000000);
	TextDrawColor(Logo[0], 7536639);
	TextDrawSetOutline(Logo[0], 1);
	TextDrawSetProportional(Logo[0], 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Logo[1] = TextDrawCreate(39.000000, 428.000000, "Super");
	TextDrawBackgroundColor(Logo[1], 336860360);
	TextDrawFont(Logo[1], 2);
	TextDrawLetterSize(Logo[1], 0.199999, 1.000000);
	TextDrawColor(Logo[1], -2031361);
	TextDrawSetOutline(Logo[1], 1);
	TextDrawSetProportional(Logo[1], 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Logo[2] = TextDrawCreate(68.000000, 428.000000, "Stunt");
	TextDrawBackgroundColor(Logo[2], 336860360);
	TextDrawFont(Logo[2], 2);
	TextDrawLetterSize(Logo[2], 0.199999, 1.000000);
	TextDrawColor(Logo[2], -16776961);
	TextDrawSetOutline(Logo[2], 1);
	TextDrawSetProportional(Logo[2], 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Logo[3] = TextDrawCreate(16.000000, 436.000000, ""SERVER_WEBSITE"");
	TextDrawBackgroundColor(Logo[3], 336860360);
	TextDrawFont(Logo[3], 2);
	TextDrawLetterSize(Logo[3], 0.149999, 0.899999);
	TextDrawColor(Logo[3], -1);
	TextDrawSetOutline(Logo[3], 1);
	TextDrawSetProportional(Logo[3], 1);*/
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> NEW LOGO SPAWN
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Logo[0] = TextDrawCreate(19.000000, 417.000000, "Empire");
	TextDrawBackgroundColor(Logo[0], 255);
	TextDrawFont(Logo[0], 0);
	TextDrawLetterSize(Logo[0], 0.600000, 2.000000);
	TextDrawColor(Logo[0], 4521983);
	TextDrawSetOutline(Logo[0], 0);
	TextDrawSetProportional(Logo[0], 1);
	TextDrawSetShadow(Logo[0], 1);
	TextDrawSetSelectable(Logo[0], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Logo[1] = TextDrawCreate(68.000000, 417.000000, "Super");
	TextDrawBackgroundColor(Logo[1], 255);
	TextDrawFont(Logo[1], 0);
	TextDrawLetterSize(Logo[1], 0.600000, 2.000000);
	TextDrawColor(Logo[1], -65281);
	TextDrawSetOutline(Logo[1], 0);
	TextDrawSetProportional(Logo[1], 1);
	TextDrawSetShadow(Logo[1], 1);
	TextDrawSetSelectable(Logo[1], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Logo[2] = TextDrawCreate(109.000000, 417.000000, "Stunt");
	TextDrawBackgroundColor(Logo[2], 255);
	TextDrawFont(Logo[2], 0);
	TextDrawLetterSize(Logo[2], 0.600000, 2.000000);
	TextDrawColor(Logo[2], -16776961);
	TextDrawSetOutline(Logo[2], 0);
	TextDrawSetProportional(Logo[2], 1);
	TextDrawSetShadow(Logo[2], 1);
	TextDrawSetSelectable(Logo[2], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Logo[3] = TextDrawCreate(84.000000, 434.000000, "/CMDS /NEWS /TELES /TOP");
	TextDrawAlignment(Logo[3], 2);
	TextDrawBackgroundColor(Logo[3], 255);
	TextDrawFont(Logo[3], 1);
	TextDrawLetterSize(Logo[3], 0.269999, 1.600000);
	TextDrawColor(Logo[3], -1);
	TextDrawSetOutline(Logo[3], 0);
	TextDrawSetProportional(Logo[3], 1);
	TextDrawSetShadow(Logo[3], 1);
	TextDrawSetSelectable(Logo[3], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Christmas Tree Textdraw
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    ChristmasTree[0] = TextDrawCreate(585.000000, 403.000000, "~n~");
	TextDrawBackgroundColor(ChristmasTree[0], 255);
	TextDrawFont(ChristmasTree[0], 1);
	TextDrawLetterSize(ChristmasTree[0], 0.500000, 4.799999);
	TextDrawColor(ChristmasTree[0], -1);
	TextDrawSetOutline(ChristmasTree[0], 0);
	TextDrawSetProportional(ChristmasTree[0], 1);
	TextDrawSetShadow(ChristmasTree[0], 1);
	TextDrawUseBox(ChristmasTree[0], 1);
	TextDrawBoxColor(ChristmasTree[0], -1975123713);
	TextDrawTextSize(ChristmasTree[0], 564.000000, 20.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[1] = TextDrawCreate(542.000000, 404.000000, "/");
	TextDrawBackgroundColor(ChristmasTree[1], 255);
	TextDrawFont(ChristmasTree[1], 1);
	TextDrawLetterSize(ChristmasTree[1], 2.499999, 3.199999);
	TextDrawColor(ChristmasTree[1], 934019327);
	TextDrawSetOutline(ChristmasTree[1], 0);
	TextDrawSetProportional(ChristmasTree[1], 1);
	TextDrawSetShadow(ChristmasTree[1], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[2] = TextDrawCreate(607.000000, 404.000000, "/");
	TextDrawBackgroundColor(ChristmasTree[2], 255);
	TextDrawFont(ChristmasTree[2], 1);
	TextDrawLetterSize(ChristmasTree[2], -2.499999, 3.199999);
	TextDrawColor(ChristmasTree[2], 934019327);
	TextDrawSetOutline(ChristmasTree[2], 0);
	TextDrawSetProportional(ChristmasTree[2], 1);
	TextDrawSetShadow(ChristmasTree[2], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[3] = TextDrawCreate(599.000000, 391.000000, "/");
	TextDrawBackgroundColor(ChristmasTree[3], 255);
	TextDrawFont(ChristmasTree[3], 1);
	TextDrawLetterSize(ChristmasTree[3], -1.789999, 3.199999);
	TextDrawColor(ChristmasTree[3], 934019327);
	TextDrawSetOutline(ChristmasTree[3], 0);
	TextDrawSetProportional(ChristmasTree[3], 1);
	TextDrawSetShadow(ChristmasTree[3], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[4] = TextDrawCreate(549.000000, 391.000000, "/");
	TextDrawBackgroundColor(ChristmasTree[4], 255);
	TextDrawFont(ChristmasTree[4], 1);
	TextDrawLetterSize(ChristmasTree[4], 1.799999, 3.199999);
	TextDrawColor(ChristmasTree[4], 934019327);
	TextDrawSetOutline(ChristmasTree[4], 0);
	TextDrawSetProportional(ChristmasTree[4], 1);
	TextDrawSetShadow(ChristmasTree[4], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[5] = TextDrawCreate(596.000000, 379.000000, "/");
	TextDrawBackgroundColor(ChristmasTree[5], 255);
	TextDrawFont(ChristmasTree[5], 1);
	TextDrawLetterSize(ChristmasTree[5], -1.679998, 3.199999);
	TextDrawColor(ChristmasTree[5], 934019327);
	TextDrawSetOutline(ChristmasTree[5], 0);
	TextDrawSetProportional(ChristmasTree[5], 1);
	TextDrawSetShadow(ChristmasTree[5], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[6] = TextDrawCreate(553.000000, 379.000000, "/");
	TextDrawBackgroundColor(ChristmasTree[6], 255);
	TextDrawFont(ChristmasTree[6], 1);
	TextDrawLetterSize(ChristmasTree[6], 1.500000, 3.199999);
	TextDrawColor(ChristmasTree[6], 934019327);
	TextDrawSetOutline(ChristmasTree[6], 0);
	TextDrawSetProportional(ChristmasTree[6], 1);
	TextDrawSetShadow(ChristmasTree[6], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[7] = TextDrawCreate(594.000000, 363.000000, "/");
	TextDrawBackgroundColor(ChristmasTree[7], 255);
	TextDrawFont(ChristmasTree[7], 0);
	TextDrawLetterSize(ChristmasTree[7], -1.359998, 4.199998);
	TextDrawColor(ChristmasTree[7], 934019327);
	TextDrawSetOutline(ChristmasTree[7], 0);
	TextDrawSetProportional(ChristmasTree[7], 1);
	TextDrawSetShadow(ChristmasTree[7], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[8] = TextDrawCreate(554.000000, 361.000000, "/");
	TextDrawBackgroundColor(ChristmasTree[8], 255);
	TextDrawFont(ChristmasTree[8], 0);
	TextDrawLetterSize(ChristmasTree[8], 1.500000, 4.499999);
	TextDrawColor(ChristmasTree[8], 934019327);
	TextDrawSetOutline(ChristmasTree[8], 0);
	TextDrawSetProportional(ChristmasTree[8], 1);
	TextDrawSetShadow(ChristmasTree[8], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[9] = TextDrawCreate(585.000000, 382.000000, "~n~");
	TextDrawBackgroundColor(ChristmasTree[9], 255);
	TextDrawFont(ChristmasTree[9], 1);
	TextDrawLetterSize(ChristmasTree[9], 0.509998, 4.299999);
	TextDrawColor(ChristmasTree[9], -1);
	TextDrawSetOutline(ChristmasTree[9], 0);
	TextDrawSetProportional(ChristmasTree[9], 1);
	TextDrawSetShadow(ChristmasTree[9], 1);
	TextDrawUseBox(ChristmasTree[9], 1);
	TextDrawBoxColor(ChristmasTree[9], 934019327);
	TextDrawTextSize(ChristmasTree[9], 564.000000, 20.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[10] = TextDrawCreate(549.000000, 420.000000, "/");
	TextDrawBackgroundColor(ChristmasTree[10], 65535);
	TextDrawFont(ChristmasTree[10], 0);
	TextDrawLetterSize(ChristmasTree[10], 3.109998, -1.700000);
	TextDrawColor(ChristmasTree[10], 65535);
	TextDrawSetOutline(ChristmasTree[10], 1);
	TextDrawSetProportional(ChristmasTree[10], 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[11] = TextDrawCreate(555.000000, 400.000000, "/");
	TextDrawBackgroundColor(ChristmasTree[11], 65535);
	TextDrawFont(ChristmasTree[11], 0);
	TextDrawLetterSize(ChristmasTree[11], 2.589998, -1.700000);
	TextDrawColor(ChristmasTree[11], 65535);
	TextDrawSetOutline(ChristmasTree[11], 1);
	TextDrawSetProportional(ChristmasTree[11], 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[12] = TextDrawCreate(554.000000, 435.000000, "~w~~h~T~n~  ~p~~h~T~n~~n~ ~r~~h~T   ~b~~h~T");
	TextDrawBackgroundColor(ChristmasTree[12], -65281);
	TextDrawFont(ChristmasTree[12], 1);
	TextDrawLetterSize(ChristmasTree[12], 0.300000, -1.100000);
	TextDrawColor(ChristmasTree[12], -65281);
	TextDrawSetOutline(ChristmasTree[12], 0);
	TextDrawSetProportional(ChristmasTree[12], 1);
	TextDrawSetShadow(ChristmasTree[12], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[13] = TextDrawCreate(565.000000, 411.000000, "~y~~h~T~n~~n~~r~~h~T");
	TextDrawBackgroundColor(ChristmasTree[13], -65281);
	TextDrawFont(ChristmasTree[13], 1);
	TextDrawLetterSize(ChristmasTree[13], 0.300000, -1.100000);
	TextDrawColor(ChristmasTree[13], -65281);
	TextDrawSetOutline(ChristmasTree[13], 0);
	TextDrawSetProportional(ChristmasTree[13], 1);
	TextDrawSetShadow(ChristmasTree[13], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[14] = TextDrawCreate(544.000000, 440.000000, "~y~~h~T          ~b~~h~~h~T");
	TextDrawBackgroundColor(ChristmasTree[14], -65281);
	TextDrawFont(ChristmasTree[14], 1);
	TextDrawLetterSize(ChristmasTree[14], 0.300000, -1.100000);
	TextDrawColor(ChristmasTree[14], -65281);
	TextDrawSetOutline(ChristmasTree[14], 0);
	TextDrawSetProportional(ChristmasTree[14], 1);
	TextDrawSetShadow(ChristmasTree[14], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[15] = TextDrawCreate(524.000000, 427.000000, "O");
	TextDrawBackgroundColor(ChristmasTree[15], 255);
	TextDrawFont(ChristmasTree[15], 1);
	TextDrawLetterSize(ChristmasTree[15], 3.499998, 8.000000);
	TextDrawColor(ChristmasTree[15], -1);
	TextDrawSetOutline(ChristmasTree[15], 0);
	TextDrawSetProportional(ChristmasTree[15], 1);
	TextDrawSetShadow(ChristmasTree[15], 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[16] = TextDrawCreate(561.000000, 358.000000, "]");
	TextDrawBackgroundColor(ChristmasTree[16], -65281);
	TextDrawFont(ChristmasTree[16], 0);
	TextDrawLetterSize(ChristmasTree[16], 0.800000, 2.499999);
	TextDrawColor(ChristmasTree[16], -36561153);
	TextDrawSetOutline(ChristmasTree[16], 0);
	TextDrawSetProportional(ChristmasTree[16], 1);
	TextDrawSetShadow(ChristmasTree[16], 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[17] = TextDrawCreate(581.000000, 422.000000, "~r~~h~~h~T");
	TextDrawBackgroundColor(ChristmasTree[17], -65281);
	TextDrawFont(ChristmasTree[17], 1);
	TextDrawLetterSize(ChristmasTree[17], 0.300000, -1.100000);
	TextDrawColor(ChristmasTree[17], -65281);
	TextDrawSetOutline(ChristmasTree[17], 0);
	TextDrawSetProportional(ChristmasTree[17], 1);
	TextDrawSetShadow(ChristmasTree[17], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[18] = TextDrawCreate(582.000000, 422.000000, "O");
	TextDrawBackgroundColor(ChristmasTree[18], -1);
	TextDrawFont(ChristmasTree[18], 1);
	TextDrawLetterSize(ChristmasTree[18], 3.499998, 8.000000);
	TextDrawColor(ChristmasTree[18], -1);
	TextDrawSetOutline(ChristmasTree[18], 0);
	TextDrawSetProportional(ChristmasTree[18], 1);
	TextDrawSetShadow(ChristmasTree[18], 3);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[19] = TextDrawCreate(569.000000, 384.000000, "O");
	TextDrawBackgroundColor(ChristmasTree[19], 934019327);
	TextDrawFont(ChristmasTree[19], 1);
	TextDrawLetterSize(ChristmasTree[19], 0.409999, -0.800000);
	TextDrawColor(ChristmasTree[19], 934019327);
	TextDrawSetOutline(ChristmasTree[19], 1);
	TextDrawSetProportional(ChristmasTree[19], 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[20] = TextDrawCreate(560.000000, 430.000000, "~r~~h~Merry~n~~i~xmas");
	TextDrawBackgroundColor(ChristmasTree[20], -1);
	TextDrawFont(ChristmasTree[20], 3);
	TextDrawLetterSize(ChristmasTree[20], 0.360000, 1.000000);
	TextDrawColor(ChristmasTree[20], 255);
	TextDrawSetOutline(ChristmasTree[20], 0);
	TextDrawSetProportional(ChristmasTree[20], 1);
	TextDrawSetShadow(ChristmasTree[20], -1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[21] = TextDrawCreate(539.000000, 400.000000, ".     ~n~  .  .    .      . ~n~ .   .   .     . .  .~n~     .    . ~n~ .    .       .       . ~n~    .    .     .  . ~n~ .  .   ");
	TextDrawBackgroundColor(ChristmasTree[21], 255);
	TextDrawFont(ChristmasTree[21], 1);
	TextDrawLetterSize(ChristmasTree[21], 0.240000, 0.699999);
	TextDrawColor(ChristmasTree[21], -1);
	TextDrawSetOutline(ChristmasTree[21], 0);
	TextDrawSetProportional(ChristmasTree[21], 1);
	TextDrawSetShadow(ChristmasTree[21], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChristmasTree[22] = TextDrawCreate(638.000000, 360.000000, ".     ~n~  .  .    .      . ~n~ .   .   .     . .  .~n~     .    . ~n~ .    .       .       . ~n~    .    .     .  . ~n~ .  .   ");
	TextDrawAlignment(ChristmasTree[22], 3);
	TextDrawBackgroundColor(ChristmasTree[22], -1);
	TextDrawFont(ChristmasTree[22], 0);
	TextDrawLetterSize(ChristmasTree[22], 0.270000, 1.000000);
	TextDrawColor(ChristmasTree[22], -1);
	TextDrawSetOutline(ChristmasTree[22], 0);
	TextDrawSetProportional(ChristmasTree[22], 1);
	TextDrawSetShadow(ChristmasTree[22], -8);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Textdraw == Show Time and Date on Server
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	HClock = TextDrawCreate(549.000000, 24.000000, "--:--");
    TextDrawBackgroundColor(HClock, 255);
	TextDrawFont(HClock, 3);
	TextDrawLetterSize(HClock, 0.379999, 2.200000);
	TextDrawColor(HClock, -1);
	TextDrawSetOutline(HClock, 1);
	TextDrawSetProportional(HClock, 1);
	TextDrawSetSelectable(HClock, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    HClock2 = TextDrawCreate(587.000000, 33.000000, "--");
	TextDrawLetterSize(HClock2, 0.2009999, 1.100000);
	TextDrawBackgroundColor(HClock2, 255);
	TextDrawFont(HClock2, 3);
	TextDrawColor(HClock2, -1);
	TextDrawSetOutline(HClock2, 1);
	TextDrawSetProportional(HClock2, 1);
	TextDrawSetSelectable(HClock2, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    HClock3 = TextDrawCreate(501.000000, 13.000000, "--/--/++++");
    TextDrawBackgroundColor(HClock3, 255);
	TextDrawFont(HClock3, 2);
	TextDrawLetterSize(HClock3, 0.200000, 1.000000);
	TextDrawColor(HClock3, -1);
	TextDrawSetOutline(HClock3, 1);
	TextDrawSetProportional(HClock3, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TeleTD = TextDrawCreate(249.000000, 411.000000, "~b~~h~~h~Johnny ~y~~h~joined the server~n~~b~~h~TheIulian ~y~~h~joined the server~n~~r~~g~~h~Johnny ~y~left the server (timeout)");
	TextDrawBackgroundColor(TeleTD, 84215190);
	TextDrawFont(TeleTD, 1);
	TextDrawLetterSize(TeleTD, 0.20, 1.25);
	TextDrawColor(TeleTD, -1);
	TextDrawSetOutline(TeleTD, 0);
	TextDrawSetProportional(TeleTD, 1);
	TextDrawSetShadow(TeleTD, 1);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// => Pont System | A great system <3
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function PONTSystem()
{
    new PontRandom = random(10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(PontRandom)
	{
 		case 0: SendPontText(1, "~y~~h~Esti nou? ~r~~h~Citeste /Ajutor~y~~h~!");
		case 1: SendPontText(1, "~y~~h~Ai vreo problema? Posteaza pe~n~~r~~h~"SERVER_WEBSITE"");
	    case 2: SendPontText(1, "~y~~h~Nu stii toate comenziile?~n~~r~~h~/cmds~y~~h~!");
	    case 3: SendPontText(1, "~y~~h~Viziteaza-ne si pe~n~~r~~h~"SERVER_WEBSITE"~y~~h~!");
	    case 4: SendPontText(1, "~y~~h~Vezi vrun codat pe server? ~n~~y~~h~Foloseste ~r~~h~/report~y~~h~!");
		case 5: SendPontText(1, "~y~~h~Vrei o motocicleta? ~n~~r~~h~Incearca /nrg~y~~h~!");
		case 6: SendPontText(1, "~y~~h~Vrei sa afli topul jucatorilor? ~n~~r~~h~Foloseste /top~y~~h~!");
		case 7: SendPontText(1, "~y~~h~Vrei sa incerci o experienta noua? ~n~~r~~h~Incearca /maze~y~~h~!");
		case 8: SendPontText(1, "~y~~h~Vrei sa stii ce este nou? ~n~~r~~h~Vezi /news~y~~h~!");
		case 9: SendPontText(1, "~y~~h~Iti plac cursele cu masini? ~n~~r~~h~Incearca /RACE~y~~h~!");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function SendPontText(type, Message[])
{
	if(type == 1) // Small PONT
 	{
		foreach(new i: Player)
		{
		    if(PlayerInfo[i][Spawned] == 1 && PlayerInfo[i][LoggedIn] == 1 && Pont2[i] == 0)
		    {
			    PlayerTextDrawSetString(i, PONT[2], Message);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				for(new x = 0; x < 3; x++) PlayerTextDrawShow(i, PONT[x]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				TextDrawHideForPlayer(i, TeleTD), PlayerTextDrawHide(i, TD_ADs);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    Pont[i] = 1;
			}
		}
	}
	if(type == 2) // Large PONT
	{
	    foreach(new i: Player)
		{
		    if(PlayerInfo[i][Spawned] == 1 && PlayerInfo[i][LoggedIn] == 1)
		    {
			    PlayerTextDrawSetString(i, PONT2[2], Message);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				for(new x = 0; x < 3; x++) PlayerTextDrawShow(i, PONT2[x]), PlayerTextDrawHide(i, PONT[x]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				TextDrawHideForPlayer(i, TeleTD), PlayerTextDrawHide(i, TD_ADs);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    	Pont2[i] = 1;
		    }
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function SetOFFPonts()
{
	foreach(new i: Player)
	{
        for(new t = 0; t < 3; t++) PlayerTextDrawHide(i, PONT[t]), PlayerTextDrawHide(i, PONT2[t]);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	TextDrawShowForPlayer(i, TeleTD), PlayerTextDrawShow(i, TD_ADs);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[i][Spawned] == 1 && PlayerInfo[i][LoggedIn] == 1) Pont[i] = 0, Pont2[i] = 0;
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// => Derby Functions
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function RespawnBloodrings()
{
    for(new i = 0; i < 15; i++)
    {
        SetVehicleToRespawn(Bloodring[i]);
        SetVehicleVirtualWorld(Bloodring[i], 1);
        BloodringFull[i] = 0;
    }
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function SpawnBloodrings()
{
    for(new i = 0; i < 15; i++)
    {
        Bloodring[i] = CreateVehicle(494, DerbyCars[i][0], DerbyCars[i][1], DerbyCars[i][2], DerbyCars[i][3], -1, -1, -1);
        LinkVehicleToInterior(Bloodring[i], 15);
        SetVehicleVirtualWorld(Bloodring[i], 1);
        BloodringFull[i] = 0;
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function StartDerby()
{
	if(DerbyCount == 1)
	{
	    if(CountPlayersInDerby <= 1)
		{
		    SCMALL(RED, "Derby{00F7FF} s-a terminat fara castigator! Foloseste {05C81F}/Derby{00F7FF} pentru a incepe din nou!");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    foreach(new i: Player)
		    {
				if(PlayerInfo[i][InDerby] == 1)
				{
				    PlayerInfo[i][InDerby] = 0;
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    SpawnPlayer(i);
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    Announce(i, "~W~~H~Derby~R~~H~ canceled~N~~W~~H~ not enough~R~~H~ players", 6000, 3);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        BloodringFull[PlayerInfo[i][PlayerInBloodring]] = 0;
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				   	PlayerInfo[i][PlayerInBloodring] = -1;
				   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				   	SetPlayerVirtualWorld(i, 0), SetPlayerInterior(i, 0);
				}
			}
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            DerbyOn = 0, DerbyPlaying = 0, CountPlayersInDerby = 0, CheckDerby = 0;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    RespawnBloodrings();
	 	}
	 	else
	 	{
			DerbyPlaying = 1, CheckDerby = 1;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   			foreach(new i: Player)
			{
			    if(PlayerInfo[i][InDerby] == 1)
			    {
					Announce(i, "~W~~H~Destroy all~N~~R~~H~Vehicles!", 6000, 3);
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					TogglePlayerControllable(i, 1);
					SetPlayerArmedWeapon(i, 28);
				}
			}
		}
	}
	else SetTimer("StartDerby", 999, 0), DerbyCount--;
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// New Functions
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function RegisterPlayer(playerid, Password[])
{
	new y, m, d, h, mi, s; getdate(y, m, d); gettime(h, mi, s); eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Accounts`(`Name`, `Password`, `RegisterDate`, `IP`) VALUES ('%s', '%s', '%d-%d-%d %d:%d:%d', '%s')", PN(playerid), MD5_Hash(Password), y, m, d, h, mi, s, GetIP(playerid));
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	UpdatePlayer(PN(playerid), "Status", 2);
	UpdatePlayer(PN(playerid), "PlayerIDConnect", playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][LoggedIn] = 1, PlayerPlaySound(playerid, 1057,0.0,0.0,0.0), UpdatePlayer(PN(playerid), "LoggedIn", 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(PlayerInfo[playerid][SPassword], 30, "Null"), format(PlayerInfo[playerid][EMail], 30, "None"), ResetPlayerMoney(playerid),
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][Money] = 3000000, PlayerInfo[playerid][Coins] = 10, GivePlayerMoney(playerid, 3000000), PlayerInfo[playerid][Blacklist] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT `ID` FROM `Accounts` WHERE `Name` = '%s'", PN(playerid)),
	mysql_tquery(SQL, eQuery, "GetPlayerID", "d", playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SPD(playerid, DIALOG_SELECT_AGE, INPUT, "Register - Age", "{FF0000}Enter your age:", "Continue", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(GetPlayerPassword, 128, "%s", Password);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function GetPlayerID(playerid)
{
	new RowCount; cache_get_row_count(RowCount);
    if(cache_get_row_count(RowCount)) CACHE(0, "ID", PlayerInfo[playerid][AccID]);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function OnPlayerLogin(playerid)
{
 	eString[0] = EOS;
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(cache_num_rows())
    {
	    new laston[64], TwoFactAuth, field[128];
		format(field, sizeof(field), "SELECT * FROM `Accounts` WHERE `Name` = '%s'", PN(playerid));
		mysql_query(SQL, field);
		CONTENT(0, "LastOn", laston);
		CACHE(0, "TwoFactAuth", TwoFactAuth);
		if(TwoFactAuth == 1)
		{
		    if(PlayerInfo[playerid][Language] == 1)
			{
				format(eString, sizeof(eString), "\
				{FFFF00}Bine ai revenit, {FF0000}%s{FFFF00} pe server!\n\n\
				{FFCC00}Acest cont are optiunea {FF0000}Two Factor Authenticate{FFCC00} activat!\n\
				{FFCC00}Te rugam sa introduci mai jos numerele generate de aplicatie (1-6)!\n\
				{FF0000}ATENTIE: {FFCC00}codul nu trebuie sa contine spatiu!\n\
				{FFFF00}Daca acest nume nu este numele tau, apasa pe butonul {FF0000}Nume Nou{FFFF00} pentru a-ti schimba numele!\n\n\
				{FFFF00}Ultima logare: {FF0000}%s{FFFF00}!", PN(playerid), laston);
	            SPD(playerid, DIALOG_LOGIN_TWO_AUTH, INPUT, "Autentificare", eString, "Autentificare", "Nume Nou");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			else if(PlayerInfo[playerid][Language] == 2)
			{
				format(eString, sizeof(eString), "\
				{FFFF00}Welcome back, {FF0000}%s{FFFF00}!\n\n\
				{FFCC00}This account are have {FF0000}Two Factor Authenticate{FFCC00} enabled!\n\
				{FFCC00}Please enter below the numbers what generated the application (1-6)!\n\
				{FF0000}WARNING: {FFCC00}code must not contain space!\n\
				{FFFF00}If this name is not your name, press on the {FF0000}New Name{FFFF00} button!\n\n\
				{FFFF00}Last login: {FF0000}%s{FFFF00}!", PN(playerid), laston);
	            SPD(playerid, DIALOG_LOGIN_TWO_AUTH, INPUT, "Login", eString, "Login", "New Name");
			}
		}
		else if(TwoFactAuth == 0)
		{
		    if(PlayerInfo[playerid][Language] == 1)
			{
				format(eString, sizeof(eString), "\
				{FFFF00}Bine ai revenit, {FF0000}%s{FFFF00} pe  server!\n\n\
				{FFCC00}Te rugam sa iti introduci parola cont-ului pentru a continua!\n\
				{FFFF00}Daca acesta nu este numele tau, apasa pe butonul {FF0000}Nume Nou{FFFF00} pentru a-ti schimba numele!\n\n\
				{FFFF00}Ultima logare: {FF0000}%s{FFFF00}!", PN(playerid), laston);
	            SPD(playerid, DIALOG_LOGIN, PASS, "Autentificare", eString, "Autentificare", "Nume Nou");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			else if(PlayerInfo[playerid][Language] == 2)
			{
				format(eString, sizeof(eString), "\
				{FFFF00}Welcome back, {FF0000}%s{FFFF00}!\n\n\
				{FFCC00}Please enter this account's password to continue before!\n\
				{FFFF00}If this is not your name, press on the {FF0000}New Name{FFFF00} button!\n\n\
				{FFFF00}Last login: {FF0000}%s{FFFF00}!", PN(playerid), laston);
	            SPD(playerid, DIALOG_LOGIN, PASS, "Login", eString, "Login", "New Name");
			}
		}
	}
	else
	{
	    if(PlayerInfo[playerid][Language] == 1)
		{
			format(eString, sizeof(eString), "\
			{FFFF00}Salut, {FF0000}%s{FFFF00}!\n\n\
			{FFCC00}Numele tau nu este inregistrat. Te rugam sa-l inregistrezi pentru a-ti salva statisticile\n\
			{FFCC00}Precum ar fii money, moins, orele jucate, stunt points, drift points, race points si alte statistici!\n\n\
			{FFFF00}Introdu o parola grea pe care doar tu sa o stii pentru a te autentifica! ({FF0000}intre 3-25 de caractere{FFFF00}):", PN(playerid));
            SPD(playerid, DIALOG_REGISTER, PASS, "Inregistreaza-te", eString, "Inregistrare", "");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		else if(PlayerInfo[playerid][Language] == 2)
		{
			format(eString, sizeof(eString), "\
			{FFFF00}Hi, {FF0000}%s{FFFF00}!\n\n\
			{FFCC00}You name is not registered. Please register it to save your statistics!\n\
			{FFFF00}Enter a hard password before ({FF0000}Min. 3 - Max. 25 characters{FFFF00}):", PN(playerid));
            SPD(playerid, DIALOG_REGISTER, PASS, "Register", eString, "Register", "");
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CheckPassword(playerid, Password[])
{
    new String[500], String2[128]; StrH2[0] = '\0'; eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(!cache_num_rows())
	{
	    if(PlayerInfo[playerid][Language] == 1)
		{
		    PlayerInfo[playerid][FLogin][1]++;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(StrH2, 500, "{FF0000}Autentificare esuata (%d/4)!\n\n{FFCC00}Ai introdus o parola gresita! Te rugam sa incerci dinnou!\n{FFFF00}Daca ti-ai uitat parola, viziteaza {FF0000}"SERVER_WEBSITE" {FFFF00}pentru a o reseta!", PlayerInfo[playerid][FLogin][1]);
		    strcat(String, StrH2, 500);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SPD(playerid, DIALOG_LOGIN, PASS, "Autentificare", String, "Autentificare", "Nume Nou");
		}
		else if(PlayerInfo[playerid][Language] == 2)
		{
		    PlayerInfo[playerid][FLogin][1]++;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(StrH2, 500, "{FF0000}Login failed (%d/4)!\n\n{FFCC00}You have entered a wrong password! Please try again!\n{FFFF00}If you forgot your password, visit {FF0000}"SERVER_WEBSITE" {FFFF00}to reset it!", PlayerInfo[playerid][FLogin][1]),
		    strcat(String, StrH2, 500);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SPD(playerid, DIALOG_LOGIN, PASS, "Login", String, "Login", "New Name");
		}
  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  		if(PlayerInfo[playerid][FLogin][1] == 4)
		{
			format(String2, sizeof(String2), "{C0C0C0}%s has been kicked (Failed Logins)!", PN(playerid));
			SCMALL(-1, String2);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            SetTimerEx("KickPlayer", 100, false, "i", playerid);
		}
		return false;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s'", PN(playerid));
   	mysql_tquery(SQL, eQuery, "LoadPlayerData", "d", playerid);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CheckMinigames()
{
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(CheckDerby == 1)
	{
 	 	new String[256], c_Reward = randomEx(1, 5), m_Reward = randomEx(5000, 10000);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 		foreach(new i : Player) if(PlayerInfo[i][InDerby] == 1 && CountPlayersInDerby <= 1)
		{
			format(String, sizeof(String), "%s {00FBFF}a castigat {38AD21}Derby{00FBFF} si a primit {FF1A00}%d$ & %d Coins!", PN(i), m_Reward, c_Reward);
			SCMALL(RED, String);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "~G~~H~You won~N~~Y~~H~%d coins, +%d$", c_Reward, m_Reward);
			Announce(i, eString, 6000, 3);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        PlayerInfo[i][InDerby] = 0, BloodringFull[PlayerInfo[i][PlayerInBloodring]] = 0, PlayerInfo[i][PlayerInBloodring] = -1;
		   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		   	SetPlayerVirtualWorld(i, 0), SetPlayerInterior(i, 0), RespawnBloodrings(), SpawnPlayer(i);
    		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[i][Money] += m_Reward, PlayerInfo[i][Coins] += c_Reward;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			DerbyPlaying = 0, DerbyOn = 0, CountPlayersInDerby = 0, CheckDerby = 0;
		}
	}
	if(ServerInfo[SumoStarted] == 1)
	{
	    new String[256], c_Reward = randomEx(50, 150), m_Reward = randomEx(5000, 10000);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 		foreach(new i : Player) if(PlayerInfo[i][InSumo] == 1 && ServerInfo[SumoPlayers] <= 1)
		{
			format(String, sizeof(String), "%s {00FBFF}a castigat {38AD21}Sumo{00FBFF} si a primit {FF1A00}%d$ & %d Coins!", PN(i), m_Reward, c_Reward);
			SCMALL(RED, String);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "~G~~H~You won~N~~Y~~H~%d coins, +%d$", c_Reward, m_Reward);
			Announce(i, eString, 6000, 3);
    		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[i][Money] += m_Reward, PlayerInfo[i][Coins] += c_Reward;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(SumoCar[i] != 0) DestroyVehicle(SumoCar[i]), SumoCar[i] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[i][SumoSeat] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			for (new d = 0; d < 8; d++) ServerInfo[SumoSeatOcuped][d] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			ServerInfo[SumoStarted] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			ServerInfo[SumoTimerStarted] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[i][InSumo] = 0, ServerInfo[SumoPlayers] = 0;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SpawnPlayer(i);
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function GiveGifts()
{
	new timer_time=randomEx(1,6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player)
	{
	 	if(PlayerInfo[i][Property] != 0)
		{
		    if(PropInfo[PlayerInfo[i][Property]][p_Level] == 1)
		    {
			    new PropID = PlayerInfo[i][Property]; PlayerInfo[i][Coins] += PropInfo[PropID][Earning], PlayerInfo[i][Money] += PropInfo[PropID][EarningM];
				MSG(i, YELLOW, "You win {33AA33}$%d and %d coins{FFFF00}, from your properties!", PropInfo[PropID][EarningM], PropInfo[PropID][Earning]);
			}
			else if(PropInfo[PlayerInfo[i][Property]][p_Level] == 2)
			{
			    new PropID = PlayerInfo[i][Property]; PlayerInfo[i][Coins] += PropInfo[PropID][Earning], PlayerInfo[i][Money] += PropInfo[PropID][EarningM], PlayerInfo[i][Gems] += 2, UpdatePlayer(PN(i), "Gems", PlayerInfo[i][Gems] + 2);
				MSG(i, YELLOW, "You win {33AA33}$%d, %d coins & 2 gems{FFFF00}, from your properties!", PropInfo[PropID][EarningM], PropInfo[PropID][Earning]);
			}
		}
		if(PlayerInfo[i][House] != 0)
		{
			if(HouseInfo[PlayerInfo[i][House]][h_Level] == 2)
			{
			    PlayerInfo[i][Gems] += 2;
			    UpdatePlayer(PN(i), "Gems", PlayerInfo[i][Gems] + 2);
				SCM(i, YELLOW, "You win {33AA33}2 gems{FFFF00}, from your house!");
			}
		}
		if(PlayerInfo[i][LoggedIn] == 0)
		{
			switch(timer_time)
			{
			    case 1: GivePlayerWeapon(i, 10, 9999), Announce(i, "~y~It's time to ~n~~y~figh with a~n~~r~~h~Dildo", 4000, 3);
			    case 2: GivePlayerWeapon(i, 22, 9999), Announce(i, "~y~It's time to ~n~~y~figh with a~n~~r~~h~9mm", 4000, 3);
			    case 3: GivePlayerWeapon(i, 24, 9999), Announce(i, "~y~It's time to ~n~~y~figh with a~n~~r~~h~Desert Eagle", 4000, 3);
			    case 4: GivePlayerWeapon(i, 26, 9999), Announce(i, "~y~It's time to ~n~~y~figh with a~n~~r~~h~Sawnoff Shotgun", 4000, 3);
			    case 5: GivePlayerWeapon(i, 29, 9999), Announce(i, "~y~It's time to ~n~~y~figh with a~n~~r~~h~MP5", 4000, 3);
			    case 6: GivePlayerWeapon(i, 18, 9999), Announce(i, "~y~It's time to ~n~~y~figh with a~n~~r~~h~Molotov Cocktail", 4000, 3);
			}
		}
		PlayerInfo[i][Gifts] += 1, Announce(i, "~G~~H~~H~You got +1 gift!~N~~Y~Open it on our website~N~~Y~"SERVER_WEBSITE"", 6000, 6);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CheckClans();
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function GetDistanceBetweenPlayers(playerid, player2)
{
	new Float:X, Float:Y, Float:Z, String[512];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(player2, X, Y, Z);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][GPS] == 1)
	{
		format(String, sizeof(String), "~n~~n~~n~~n~~n~~n~~n~~w~~h~< ~g~~h~%0.2f ~w~~h~M ~g~~h~>", GetPlayerDistanceFromPoint(playerid, X, Y, Z)), Announce(playerid, String, 1000, 5);
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ResetRobVariable(playerid)
{
	return PlayerInfo[playerid][RecentlyRobbed] = 1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function InfoTDToAdmins(time, text[])
{
	foreach(new i: Player)
	{
		if(PlayerInfo[i][Level] >= 3)
		{
			SCM(i, time, text);
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function AntiSad(playerid)
{
	return AntiSadSpam[playerid] = 0;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function FishTimer(playerid)
{
	new fish, lStr[129], fishreward[100], earning[100]; fish = random(5);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(fish)
	{
	    case 0: fishreward = "Trout"; case 1: fishreward = "Pike"; case 2: fishreward = "Shark"; case 3: fishreward = "nothing";
	}
	switch(fish)
	{
	    case 0: earning = "3 Coins", PlayerInfo[playerid][Coins] += 3; case 1: earning = "6 Coins", PlayerInfo[playerid][Coins] += 6;
	    case 2: earning = "9 Coins", PlayerInfo[playerid][Coins] += 9; case 3: earning = "nothing";
	    case 4: earning = "your bait back", PlayerInfo[playerid][Bait] += 1;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(lStr, sizeof(lStr), "You have caughted a {00BBF6}%s {00CC00}and earned {00BBF6}%s{00CC00}!", fishreward, earning), SCM(playerid, GREEN, lStr);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][Fishing] = 0, TogglePlayerControllable(playerid, 1), ClearAnimations(playerid);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CheckBallPosition()
{
	eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsObjectInArea(SoccerBall, 1626.878, -2023.366, 1637.006, -2010.612) || IsObjectInArea(SoccerBall, 1518.554, -2022.649, 1525.824, -2010.235))
 	{
		if(!IsObjectInArea(SoccerBall, 1525.149, -2044.615, 1629.733, -1990.522))
		{
		    ResetBallPosition(), format(eString, 512, "Football: {0072FF}GOAAAAL,GOOD JOB {0072FF}!!!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			for(new s = 0; s < MAX_PLAYERS; s++)
			{
				if(PlayerInfo[s][InMG][5] == 1) SCM(s, ORANGE, eString);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(PlayersInSoccer() == 1) if(PlayerInfo[s][LastKicker] == 1) Announce(s, "~g~~h~GOAAAAL", 4000, 4);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else
				{
					if(PlayerInfo[s][LastKicker] == 1) PlayerInfo[s][Coins] += 1, Announce(s, "~g~~h~GOAAAAL~n~~w~~h~+~g~~h~10 Coins~n~~w~~h~+~g~~h~5000$", 4000, 4);
				}
			}
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else
	{
		if(!IsObjectInArea(SoccerBall, 1525.149, -2044.615, 1629.733, -1990.522))
		{
			ResetBallPosition(), format(eString, 1024, "Football: {0072FF}Kicked the ball out of the {FF0000}Football Field{0072FF}! Ball respawned on the center!", PN(GetIDOfLastKicker()));
			for(new l = 0; l < MAX_PLAYERS; l++) if(PlayerInfo[l][InMG][5] == 1) SCM(l, ORANGE, eString);
		}
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function AnimFixer(playerid)
{
	if(ValidFishPlace(playerid))
	{
	    if(PlayerInfo[playerid][Fishing] == 1) SetCameraBehindPlayer(playerid), ApplyAnimation(playerid, "SWORD", "sword_block", 50.0, 0, 1, 0, 1, 1);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function OnPMReceived(playerid, Receiver, text[])
{
    new Str[512], Str2[512], Str3[200], String2[256]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "Message sent to %s(%d): %s", PN(Receiver), Receiver, text);
	SCM(playerid, PM, eString);
	PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "New message from %s(%d): %s", PN(playerid), playerid, text);
	SCM(Receiver, PM, eString);
	PlayerPlaySound(Receiver, 1057,0.0,0.0,0.0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `PM_Logs`(`Name`, `Receiver`, `Text`) VALUES('%s', '%s', '%s')", PN(playerid), PN(Receiver), text);
    mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String2, sizeof(String2), "*** PM: %s To %s: %s ***", PN(playerid), PN(Receiver), text);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new a = 0; a < MAX_PLAYERS; a++)
	{
		if(PlayerInfo[a][Level] >= 1)
		{
			if(PlayerInfo[a][ShowPMs] == 1)
			{
				SCM(a, GREY, String2);
			}
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[Receiver][InDM] == 0)
    {
		PlayerInfo[Receiver][PMID] = playerid;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(Str2, sizeof(Str2), "{00CC00}Ai primit un mesaj privat nou.\n"), strcat(Str, Str2, sizeof(Str));
		format(Str2, sizeof(Str2), "\n"), strcat(Str, Str2, sizeof(Str));
		format(Str2, sizeof(Str2), "{FFFF33}\"%s\"", text), strcat(Str, Str2, sizeof(Str));
		format(Str2, sizeof(Str2), "\n"), strcat(Str, Str2, sizeof(Str));
		format(Str2, sizeof(Str2), "{00CC00}Scie mai jos un text daca vrei sa-i raspunzi la mesaj:\n"), strcat(Str, Str2, sizeof(Str));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(Str2, sizeof(Str2), "Send a Message to {FF0000}%s(%d)", PN(playerid), playerid), strcat(Str3, Str2, sizeof(Str3));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	}
	return SPD(Receiver, DIALOG_PM, INPUT, Str3, Str, "Send", "Close");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function OnPMReceivedFromAdmin(playerid, Receiver, text[])
{
    new Str[512], Str2[512], Str3[200], String2[256]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "Message sent to %s(%d): %s", PN(Receiver), Receiver, text);
	SCM(playerid, PM, eString);
	PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "New message from admin %s(%d): %s", PN(playerid), playerid, text);
	SCM(Receiver, PM, eString);
	PlayerPlaySound(Receiver, 1057,0.0,0.0,0.0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `PM_AdminLogs`(`Name`, `Receiver`, `Text`) VALUES('%s', '%s', '%s')", PN(playerid), PN(Receiver), text);
    mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String2, sizeof(String2), "*** ADMIN PM: %s To %s: %s ***", PN(playerid), PN(Receiver), text);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new a = 0; a < MAX_PLAYERS; a++)
	{
		if(PlayerInfo[a][Level] >= 1)
		{
			if(PlayerInfo[a][ShowPMs] == 1) SCM(a, GREY, String2);
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[Receiver][InDM] == 0)
    {
		PlayerInfo[Receiver][PMID] = playerid;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(Str2, sizeof(Str2), "You have received a new PM from %s\n", PN(playerid)), strcat(Str, Str2, sizeof(Str));
		format(Str2, sizeof(Str2), "\n"), strcat(Str, Str2, sizeof(Str));
		format(Str2, sizeof(Str2), "\"%s\"", text), strcat(Str, Str2, sizeof(Str));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(Str2, sizeof(Str2), "{DBDBDB}New PM from {3333FF}ADMIN {DBDBDB}%s(%d)", PN(playerid), playerid), strcat(Str3, Str2, sizeof(Str3));
	}
	return SPD(Receiver, DIALOG_REPLY_ADMIN_PM, INPUT, Str3, Str, "Reply", "Close");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function OnPMReplyFromAdmin(playerid, Receiver, text[])
{
    new Str[512], Str2[512], Str3[200], String2[256]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "Message sent to %s(%d): %s", PN(Receiver), Receiver, text);
	SCM(playerid, GREY, eString);
	PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "New message from %s(%d): %s", PN(playerid), playerid, text);
	SCM(Receiver, GREY, eString);
	PlayerPlaySound(Receiver, 1057,0.0,0.0,0.0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `PM_AdminLogs`(`Name`, `Receiver`, `Text`) VALUES('%s', '%s', '%s')", PN(playerid), PN(Receiver), text);
    mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String2, sizeof(String2), "*** ADMIN PM: %s To %s: %s ***", PN(playerid), PN(Receiver), text);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new a = 0; a < MAX_PLAYERS; a++)
	{
		if(PlayerInfo[a][Level] >= 1)
		{
			if(PlayerInfo[a][ShowPMs] == 1) SCM(a, GREY, String2);
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[Receiver][InDM] == 0)
    {
		PlayerInfo[Receiver][PMID] = playerid;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(Str2, sizeof(Str2), "You have received a new PM from %s\n", PN(playerid)), strcat(Str, Str2, sizeof(Str));
		format(Str2, sizeof(Str2), "\n"), strcat(Str, Str2, sizeof(Str));
		format(Str2, sizeof(Str2), "\"%s\"", text), strcat(Str, Str2, sizeof(Str));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(Str2, sizeof(Str2), "New FPM from %s(%d)", PN(playerid), playerid), strcat(Str3, Str2, sizeof(Str3));
	}
	return SPD(Receiver, DIALOG_ADMIN_PM, INPUT, Str3, Str, "Reply", "Close");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function StopAlarm(vehicleid)
{
	return ToggleAlarm(vehicleid, VEHICLE_PARAMS_OFF);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function RespawnCars()
{
	for(new cars = 0; cars < MAX_VEHICLES; cars++)
	{
		if(!VehicleOccupied(cars))
		{
			SetVehicleToRespawn(cars);
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function VehicleOccupied(vehicleid)
{
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerInVehicle(i, vehicleid)) return true;
	return false;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function AutoVehicleColorChange(playerid)
{
	if(Vehicles[PlayerInfo[playerid][CarVCP]][vehRainbow] == 1)
	{
		if(IsPlayerInAnyVehicle(playerid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
		{
			new vehicleid = GetPlayerVehicleID(playerid), rand = random(126) + 0, rand1 = random(126) + 0;
		    if(vehicleid == Vehicles[PlayerInfo[playerid][CarVCP]][vehicleData]) ChangeVehicleColor(vehicleid, rand, rand1);
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Explode(playerid)
{
	CreateExplosion(bx[playerid], by[playerid], bz[playerid], 7, 15);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~R~~H~C4~N~~Y~Detonated!", 3000, 3);
	PlayerInfo[playerid][C4]--;
	Planted[playerid] = 0;
	PlantC4Spam[playerid] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player)
    if(PlayerInfo[i][Level] >= 1)
    {
        new string[123];
        format(string, sizeof(string), "%s(%d) has detonated C4!", PN(playerid), playerid);
     	SCM(i, ABLUE, string);
	}
    return true;
}
function HKTXD(playerid) return PlayerTextDrawHide(playerid, KSpree[1]);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function MathsType()
{
	switch(random(2))
	{
	    case 0: Contest_Function(0);
	    case 1: Contest_Function(1);
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CheckSPassword(playerid, Password[])
{
    new String[500]; StrH2[0] = '\0'; eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(!cache_num_rows())
	{
	    if(PlayerInfo[playerid][Language] == 1)
		{
		    PlayerInfo[playerid][FLogin][2]++;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(StrH2, 500, "{FF0000}Autentificare esuata (%d/4)!\n\n{FFCC00}Ai introdus o parola gresita! Te rugam sa incerci dinnou!\n{FFE100}Daca ti-ai uitat parola, viziteaza {FF0000}"SERVER_WEBSITE" {FFE100}pentru a o reseta!", PlayerInfo[playerid][FLogin][2]);
		    strcat(String, StrH2, 500);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SPD(playerid, DIALOG_LOGIN_SPASSWORD, PASS, "Autentificare", String, "Autentificare", "Renunta");
		}
		else if(PlayerInfo[playerid][Language] == 2)
		{
		    PlayerInfo[playerid][FLogin][2]++;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(StrH2, 500, "{FF0000}Login failed (%d/4)!\n\n{FFCC00}You have entered a wrong password! Please try again!\n{FFE100}If you forgot your password, visit {FF0000}"SERVER_WEBSITE" {FFE100}to reset it!", PlayerInfo[playerid][FLogin][2]),
		    strcat(String, StrH2, 500);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SPD(playerid, DIALOG_LOGIN_SPASSWORD, PASS, "Login", String, "Login", "Quit");
		}
  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  		if(PlayerInfo[playerid][FLogin][2] == 4)
		{
			format(StrH2, sizeof(StrH2), "{C0C0C0}%s has been kicked (Failed Logins)!", PN(playerid));
			SCMALL(-1, StrH2);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            SetTimerEx("KickPlayer", 100, false, "i", playerid);
		}
		return false;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s'", PN(playerid));
   	mysql_tquery(SQL, eQuery, "ReLoadPlayerData", "d", playerid);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function LoadPlayerData(playerid)
{
    eQuery[0] = EOS;
	new sPass[42]; CONTENT(0, "SPassword", sPass);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(sPass, "Null", false) != 0)
	{
	    if(PlayerInfo[playerid][Language] == 1) SPD(playerid, DIALOG_LOGIN_SPASSWORD, PASS, "Autentificare", "{FF0000}Parola secundara:", "Autentificare", "Renunta");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		else if(PlayerInfo[playerid][Language] == 2) SPD(playerid, DIALOG_LOGIN_SPASSWORD, PASS, "Login", "{FF0000}Secondary password:", "Login", "Quit");
	}
	else
	{
	    mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s'", PN(playerid));
   		mysql_tquery(SQL, eQuery, "ReLoadPlayerData", "d", playerid);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ChangeNameReload(playerid, q_acc[])
{
	new q_rows, q_fields; eQuery[0] = EOS; eString[0] = EOS;
	cache_get_row_count(q_rows);
	cache_get_field_count(q_fields);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!q_rows) // Daca parola contului nu este corecta..
    {
		if(PlayerInfo[playerid][Language] == 1)
        {
        	SendError(playerid, "Parola invalida! Incearca din nou!");
	    }
        if(PlayerInfo[playerid][Language] == 2)
        {
        	SendError(playerid, "Invalid Password! Please try again!");
      	}
    }
    else // Daca parola contului este corecta..
    {
		if(PlayerInfo[playerid][Language] == 1)
        {
         	format(eString, 512, "{FFFF00}Verificare incheiat cu success!\n{00CC00}Introdu mai jos noul nume ({FF0000}noul nume nu trebuie sa fie inregistrat{00CC00}):");
         	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
         	return SPD(playerid, DIALOG_CHANGENAME, INPUT, "Change Name", eString, "Continue", "Close");
      	}
        else if(PlayerInfo[playerid][Language] == 2)
        {
        	format(eString, 512, "{FFFF00}Verification successfully ended!\n{00CC00}Enter below the new name({FF0000}the new name need to be not registered{00CC00}):");
        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        	return SPD(playerid, DIALOG_CHANGENAME, INPUT, "Change Name", eString, "Continue", "Close");
        }
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ReLoadPlayerData(playerid)
{
  	eQuery[0] = EOS; eString[0] = EOS; StrH[0] = '\0'; StrH2[0] = '\0';
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	UpdatePlayer(PN(playerid), "NameApproved", 0);
	UpdatePlayer(PN(playerid), "Status", 2);
	UpdatePlayer(PN(playerid), "PlayerIDConnect", playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CACHE(0, "ID", PlayerInfo[playerid][AccID]);
    CACHE(0, "Age", PlayerInfo[playerid][Age]);
  	CACHE(0, "Level", PlayerInfo[playerid][Level]);
    CACHE(0, "VIP", PlayerInfo[playerid][pVIP]);
    CACHE(0, "DJ", PlayerInfo[playerid][DJ]);
    CACHE(0, "Coins", PlayerInfo[playerid][Coins]);
    CACHE(0, "Headshots", PlayerInfo[playerid][Headshots]);
    CACHE(0, "Kills", PlayerInfo[playerid][Kills]);
	CACHE(0, "Deaths", PlayerInfo[playerid][Deaths]);
 	CACHE(0, "Hours", PlayerInfo[playerid][hours]);
    CACHE(0, "Minutes", PlayerInfo[playerid][mins]);
    CACHE(0, "Seconds", PlayerInfo[playerid][secs]);
    CACHE(0, "PointsX2Month", PlayerInfo[playerid][PointsX2Month]);
  	CACHE(0, "PointsMonth", PlayerInfo[playerid][PointsMonth]);
    CACHE(0, "GemsMonth", PlayerInfo[playerid][gemsMonth]);
    CACHE(0, "RespectPMonth", PlayerInfo[playerid][respectMonth][0]);
    CACHE(0, "RespectNMonth", PlayerInfo[playerid][respectMonth][1]);
    CACHE(0, "HoursMonth", PlayerInfo[playerid][hoursMonth]);
    CACHE(0, "MinutesMonth", PlayerInfo[playerid][minsMonth]);
    CACHE(0, "SecondsMonth", PlayerInfo[playerid][secsMonth]);
    CACHE(0, "AdminAccesForAdmin1", PlayerInfo[playerid][AdminAccesfor1]);
    CACHE(0, "HoursAdmin", PlayerInfo[playerid][hoursADMIN]);
    CACHE(0, "MinutesAdmin", PlayerInfo[playerid][minutesADMIN]);
	CACHE(0, "SecondsAdmin", PlayerInfo[playerid][secondsADMIN]);
    CACHE(0, "EventsMaded", PlayerInfo[playerid][EventsMaded]);
    CACHE(0, "BestKillings", PlayerInfo[playerid][BestKillingSpree]);
    CACHE(0, "UseSkin", PlayerInfo[playerid][UseSkin]);
 	CACHE(0, "Property", PlayerInfo[playerid][Property]);
 	CACHE(0, "House", PlayerInfo[playerid][House]);
    CACHE(0, "Positive", PlayerInfo[playerid][PosRespect]);
    CACHE(0, "Negative", PlayerInfo[playerid][NegRespect]);
	CACHE(0, "Kicks", PlayerInfo[playerid][PKicks]);
	CACHE(0, "Bans", PlayerInfo[playerid][PBans]);
	CACHE(0, "Jails", PlayerInfo[playerid][PJails]);
	CACHE(0, "Warns", PlayerInfo[playerid][PWarns]);
	CACHE(0, "ClearChats", PlayerInfo[playerid][PClearCH]);
	CACHE(0, "ReactionTest", PlayerInfo[playerid][PReactions]);
	CACHE(0, "MathTest", PlayerInfo[playerid][PMaths]);
	CACHE(0, "Mutes", PlayerInfo[playerid][PMutes]);
	CACHE(0, "Jailed", PlayerInfo[playerid][Jailed]);
	CACHE(0, "Muted", PlayerInfo[playerid][Muted]);
	CACHE(0, "Frozen", PlayerInfo[playerid][Frozen]);
	CACHE(0, "RaceScore", PlayerInfo[playerid][RacePoints]);
	CACHE(0, "StuntScore", PlayerInfo[playerid][StuntPoints]);
	CACHE(0, "DriftScore", PlayerInfo[playerid][DriftPoints]);
	CACHE(0, "C4", PlayerInfo[playerid][C4]);
	CACHE(0, "FreeVIP", PlayerInfo[playerid][IsVipFree]);
	CACHE(0, "TempVIP", PlayerInfo[playerid][TVip]);
	CACHE(0, "AdmWarns", PlayerInfo[playerid][AdmW]);
	CACHE(0, "VIPWarns", PlayerInfo[playerid][VIPW]);
	CACHE(0, "KickW", PlayerInfo[playerid][KickW]);
	CACHE(0, "Gifts", PlayerInfo[playerid][Gifts]);
	CACHE(0, "Gems", PlayerInfo[playerid][Gems]);
	CACHE(0, "Warnings", PlayerInfo[playerid][Warnings]);
	CACHE(0, "Activity", PlayerInfo[playerid][Activity]);
	CACHE(0, "DriftMonth", PlayerInfo[playerid][DriftMonth]);
	CACHE(0, "RaceMonth", PlayerInfo[playerid][RaceMonth]);
	CACHE(0, "StuntMonth", PlayerInfo[playerid][StuntMonth]);
	CACHE(0, "KillsMonth", PlayerInfo[playerid][KillsMonth]);
	CACHE(0, "BlackList", PlayerInfo[playerid][Blacklist]);
	CACHE(0, "MySkin", PlayerInfo[playerid][MySkin]);
	CACHE(0, "AWP", PlayerInfo[playerid][AWP]);
	CACHE(0, "DataSet", PlayerInfo[playerid][DataSet]);
	CACHE(0, "UseHolds", PlayerInfo[playerid][UseHolds]);
	CACHE(0, "HoldInCar", PlayerInfo[playerid][HoldInCar]);
	CACHE(0, "HoldCID", PlayerInfo[playerid][HoldCID]);
	CACHE(0, "MyTime", PlayerInfo[playerid][MyTime]);
	CACHE(0, "MyTimeHave", PlayerInfo[playerid][MyTimeHave]);
	CACHE(0, "Cash", PlayerInfo[playerid][Money]);
	CACHE(0, "FavStation", PlayerInfo[playerid][RPreference]);
	CACHE(0, "FavRadio", PlayerInfo[playerid][RadioFav]);
	CACHE(0, "Quests", PlayerInfo[playerid][Quests]);
	CACHE(0, "AdminBl", PlayerInfo[playerid][AdminBlacklist]);
	CACHE(0, "AccLocked", PlayerInfo[playerid][AccLocked]);
	CACHE(0, "TimesOnline", PlayerInfo[playerid][TimesOnline]);
	CACHE(0, "JobsFinishedCount", PlayerInfo[playerid][JobsFinishedCount]);
	CACHE(0, "GoldVIPTaken", PlayerInfo[playerid][GoldVIPTaken]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CACHE(0, "RBans", PlayerInfo[playerid][r_Bans]);
	CACHE(0, "RKicks", PlayerInfo[playerid][r_Kicks]);
	CACHE(0, "RWarns", PlayerInfo[playerid][r_Warns]);
	CACHE(0, "RJails", PlayerInfo[playerid][r_Jails]);
	CACHE(0, "RMutes", PlayerInfo[playerid][r_Mutes]);
	CACHE(0, "REvents", PlayerInfo[playerid][r_Events]);
	CACHE(0, "RReports", PlayerInfo[playerid][r_Reports]);
	CACHE(0, "AdminCheck", PlayerInfo[playerid][r_Check]);
	CACHE(0, "RTotal", PlayerInfo[playerid][r_Total]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Load Player Gang
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CACHE(0, "GangID", PlayerInfo[playerid][GangID]);
	CACHE(0, "GangKills", PlayerInfo[playerid][g_Kills]);
	CACHE(0, "GangDeaths", PlayerInfo[playerid][g_Deaths]);
    CACHE(0, "GangRank", PlayerInfo[playerid][g_Rank]);
    CACHE(0, "GangSkin", PlayerInfo[playerid][g_Skin]);
    CACHE(0, "GangTank", PlayerInfo[playerid][GangTank]);
	CACHE(0, "GangCaptures", PlayerInfo[playerid][g_Captures]);
	CACHE(0, "GangPoints", PlayerInfo[playerid][g_Points]);
	CACHE(0, "GangHours", PlayerInfo[playerid][g_Time][1]);
	CACHE(0, "GangMinutes", PlayerInfo[playerid][g_Time][2]);
	CACHE(0, "GangSeconds", PlayerInfo[playerid][g_Time][3]);
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CACHE(0, "GangWarns1", PlayerInfo[playerid][gWarnInGang][1]);
	CACHE(0, "GangWarns2", PlayerInfo[playerid][gWarnInGang][2]);
	CACHE(0, "GangWarns3", PlayerInfo[playerid][gWarnInGang][3]);
	CACHE(0, "GangWarns4", PlayerInfo[playerid][gWarnInGang][4]);
	CACHE(0, "GangWarns5", PlayerInfo[playerid][gWarnInGang][5]);
	CACHE(0, "GangWarns6", PlayerInfo[playerid][gWarnInGang][6]);
	CACHE(0, "GangWarns7", PlayerInfo[playerid][gWarnInGang][7]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Load Player Clan
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CACHE(0, "ClanID", PlayerInfo[playerid][ClanID]);
	CACHE(0, "ClanPoints", PlayerInfo[playerid][c_Points]);
	CACHE(0, "ClanKills", PlayerInfo[playerid][c_Kills]);
	CACHE(0, "ClanDeaths", PlayerInfo[playerid][c_Deaths]);
	CACHE(0, "ClanRank", PlayerInfo[playerid][c_Rank]);
	CACHE(0, "ClanSkin", PlayerInfo[playerid][c_Skin]);
	CACHE(0, "ClanEXP", PlayerInfo[playerid][c_EXP]);
	CACHE(0, "ClanCaptures", PlayerInfo[playerid][c_Captures]);
	CACHE(0, "ClanTotalP", PlayerInfo[playerid][c_Total]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(gettime() > PlayerInfo[playerid][AccLocked]) PlayerInfo[playerid][AccLocked] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][LoggedIn] = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new playermoney; CACHE(0, "Cash", playermoney);
	ResetPlayerMoney(playerid); GivePlayerMoney(playerid, playermoney);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new eMail[100], aSince[24], gSince[24], lAston[21], dline1[300], dline2[300], dline3[300];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CACHE(0, "RconType", PlayerInfo[playerid][temprcontype]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CONTENT(0, "E-Mail", eMail);
	format(PlayerInfo[playerid][EMail], 100, "%s", PlayerInfo[playerid][EMail]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CONTENT(0, "AdminSince", aSince);
	format(PlayerInfo[playerid][AdminSince], 24, "%s", aSince);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CONTENT(0, "GangMemberSince", gSince);
	format(PlayerInfo[playerid][GangMemberSince], 24, "%s", gSince);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CONTENT(0, "LastOn", lAston);
	format(PlayerInfo[playerid][LastOn], 21, "%s", lAston);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CONTENT(0, "Description1", dline1);
	CONTENT(0, "Description2", dline2);
	CONTENT(0, "Description3", dline3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(PlayerInfo[playerid][DLine1], 300, "%s", dline1);
	format(PlayerInfo[playerid][DLine2], 300, "%s", dline2);
	format(PlayerInfo[playerid][DLine3], 300, "%s", dline3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	LoadPlayerPersonalCars(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][TVip] == 1)
	{
	    CACHE(0, "VIPTime", PlayerInfo[playerid][VIPTime]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(gettime() > PlayerInfo[playerid][VIPTime]) PlayerInfo[playerid][pVIP] = 0, PlayerInfo[playerid][VIPTime] = 0, PlayerInfo[playerid][TVip] = 0, Announce(playerid, "~Y~~H~Your VIP~N~~W~~H~has expired!", 6000, 4);
	}
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `LoggedIn` = '1', `IP` = '%s' WHERE `ID` = '%d'", GetPlayerIPEx(playerid), PlayerInfo[playerid][AccID]);
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Holds` WHERE `HoldID` = %d", PlayerInfo[playerid][AccID]);
    mysql_tquery(SQL, eQuery, "HoldsLoad", "d", playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][CarVCP] = -1, IsPlayerLogged[playerid] = 1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Level] >= 1)
  	{
  	    PlayerInfo[playerid][AdminTimeConnect] = gettime();
		if(ServerInfo[CountReports] >= 1) { PlayerTextDrawShow(playerid, ReportTD); Report(playerid); }
  	}
  	if(PlayerInfo[playerid][GangID] >= 1) { PlayerInfo[playerid][g_Time][5]	= gettime(); }
  	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Blacklist] == 1)
    {
		switch(PlayerInfo[playerid][Language])
		{
			case 1:
			{
				format(eString, sizeof(eString), "{FF0000}ATENTIE! Cont-ul este blocat!\n\
    											  {FFFFFF}\n\
								                  {FF9933}Pentru deblocare te rugam sa postezi pe forumul nostru la categoria Probleme.\n\
								                  {FFFFFF}\n\
								                  {FF9933}Multumim pentru intelegere.\n\n");
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_BLOCK, MSGBOX, "{FFFFFF}Cont Blocat!", eString, "Close", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SetTimerEx("KickPlayer", 1200, false, "i", playerid);
			}
			case 2:
			{
				format(eString, sizeof(eString), "{FF0000}CAREFUL! The account is blocked!\n\
								                  {FFFFFF}\n\
								                  {FF9933}For unblock please post on our forum under the Problems category.\n\
								                  {FFFFFF}\n\
								                  {FF9933}Thank you for understanding.\n\n");
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_BLOCK, MSGBOX, "{FFFFFF}Blocked account!", eString, "Close", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SetTimerEx("KickPlayer", 1200, false, "i", playerid);
			}
		}
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    else if(PlayerInfo[playerid][Blacklist] == 0)
    {
		strcat(StrH2, "{FFE100}Ai fost autentificat cu succes.\n\n", 300);
		format(StrH, 300, "{00FF22}VIP: %s\n", GetPlayerVip(playerid));
		strcat(StrH2, StrH, 300);
		format(StrH, 300, "{00FF22}Nota statistici: {FF0000}%d{00FF22}/{FF0000}10\n", GiveNote(playerid));
		strcat(StrH2, StrH, 300);
		format(StrH, 300, "{00FF22}Versiune client: {FF0000}%s\n\n", GetSampVersion(playerid));
		strcat(StrH2, StrH, 300);
		strcat(StrH2, "{00FF22}Pentru mai multe statistici foloseste {FF0000}/stats{00FF22}.\n\n", 400);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(strcmp(PlayerInfo[playerid][EMail], "None", true))
		{
			strcat(StrH2, "{FF0000}Mesaj {FF9900}URGENT {FF0000}pentru siguranta contului tau:\n");
			strcat(StrH2, "{FFFFFF}- In contul tau nu exista o parola secundara sau o adresa de email!\n");
			strcat(StrH2, "{FFFFFF}- Pentru a evita pierderea contului, adauga o parola secundara folosind comanda /spassword si\n");
			strcat(StrH2, "{FFFFFF}- intra pe "SERVER_WEBSITE" ca sa iti adaugi o adresa de email in cont!");
		}
		SPD(playerid, DIALOG_EMPTY, MSGBOX, "My Account", StrH2, "Close", "");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new checkanychanged;
	CACHE(0, "AdminChangedBy", checkanychanged);
	if(checkanychanged != 0)
	{
	    FormatMSG(playerid, ABLUE, "Warning: Your admin has been modified by '%s'!", GetPlayerNameByAccID(checkanychanged));
	    Announce(playerid, "~Y~Your admin level have~N~~Y~ been modified!~N~~R~~H~Check the chat!", 6000, 3);
	    UpdatePlayer(PN(playerid), "AdminChangedBy", 0);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 1; i < MAX_JOBS; i++)
	{
	    new tempstringjob[20]; format(tempstringjob, sizeof(tempstringjob), "JobFinished%d", i);
		CONTENT(0, tempstringjob, PlayerInfo[playerid][JobFinished][i]);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function HoldsLoad(playerid)
{
	new RowCount; cache_get_row_count(RowCount);
    for(new i, j = RowCount; i < j; i++)
	{
        new in; cache_get_value_index_int(i, 2, in);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        HoldsInfo[playerid][in][HoldIndex] = in;
        cache_get_value_index_int(i, 3, HoldsInfo[playerid][in][HoldModel]);
        cache_get_value_index_int(i, 4, HoldsInfo[playerid][in][HoldBone]);
        cache_get_value_index_float(i, 5, HoldsInfo[playerid][in][fOffsetX1]);
        cache_get_value_index_float(i, 6, HoldsInfo[playerid][in][fOffsetY1]);
        cache_get_value_index_float(i, 7, HoldsInfo[playerid][in][fOffsetZ1]);
        cache_get_value_index_float(i, 8, HoldsInfo[playerid][in][fRotX1]);
        cache_get_value_index_float(i, 9, HoldsInfo[playerid][in][fRotY1]);
        cache_get_value_index_float(i, 10, HoldsInfo[playerid][in][fRotZ1]);
        cache_get_value_index_float(i, 11, HoldsInfo[playerid][in][fScaleX1]);
        cache_get_value_index_float(i, 12, HoldsInfo[playerid][in][fScaleY1]);
        cache_get_value_index_float(i, 13, HoldsInfo[playerid][in][fScaleZ1]);
        HoldsInfo[playerid][in][HoldUsed]  = true;
    }
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function LoadPlayerAKA(playerid)
{
	new count_rows, fields, pAka[1024]; eQuery[0]=EOS; eString[0] = EOS;
	cache_get_row_count(count_rows);
	cache_get_field_count(fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!count_rows)
	{
	    mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Akas`(`ID`, `IP`, `Names`) VALUES(0, '%s', '%s')", GetPlayerIPEx(playerid), PN(playerid));
		mysql_tquery(SQL, eQuery, "", "");
	}
	else
	{
 		CONTENT(0, "Names", pAka);
		if(strfind(pAka, PN(playerid), true) == -1)
        {
            format(eString, sizeof(eString), "%s, %s", pAka, PN(playerid));
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Akas` SET `Names` = '%s' WHERE `IP` = '%s'", eString, GetPlayerIPEx(playerid));
			mysql_tquery(SQL, eQuery, "", "");
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ShowConnectPlayerAka(playerid, Player)
{
    if(!IsPlayerConnected(Player)) return Error(playerid, 10);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new pAka[1024], AkaString[1024]; CONTENT(0, "Names", pAka);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][RconType] == 3)
	{
		new IP[16];
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    GetPlayerIp(Player, IP, sizeof(IP));
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(AkaString, 1024, "ACW: '%s(#%d)' has been connected! (IP: %s / Names: %s / Country: %s | City: %s)", PN(Player), Player, IP, pAka, PlayerInfo[Player][IPCountry], PlayerInfo[Player][IPCity]);
	}
	else if(PlayerInfo[playerid][Level] >= 3)
	{
		format(AkaString, 1024, "ACW: '%s(#%d)' has been connected! (Names: %s)", PN(Player), Player, pAka);
	}
    SCM(playerid, ABLUE, AkaString);
	return true;
}
function ShowPlayerAka(playerid, Player)
{
    if(!IsPlayerConnected(Player)) return Error(playerid, 10);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new pAka[1024], AkaString[1024]; CONTENT(0, "Names", pAka);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(AkaString, 50, "%s's AKA", PN(Player));
	SCM(playerid, AKA, AkaString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(AkaString, 1024, "Names: %s", pAka);
	SCM(playerid, AKA, AkaString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Level] >= 3)
	{
		new IP[16];
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    GetPlayerIp(Player, IP, sizeof(IP));
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[playerid][RconType] == 3) {
		format(AkaString, 50, "IP: %s", IP);
		SCM(playerid, AKA, AkaString);
		format(AkaString, 200, "Country: %s | City: %s", PlayerInfo[Player][IPCountry], PlayerInfo[Player][IPCity]);
		SCM(playerid, AKA, AkaString); }
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		AdminCMD(playerid, "AKA");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    PlayerInfo[playerid][InCar] = 1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new x: Player) if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid) TogglePlayerSpectating(x, 1), PlayerSpectateVehicle(x, vehicleid), PlayerInfo[x][SpecType] = ADMIN_SPEC_TYPE_VEHICLE;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i, j = MAX_OBJECTS; i < j; i++)
	{
		if(HoldsInfo[playerid][i][HoldUsed] == true)
        {
         	if(GetVehicleModel(vehicleid) == PlayerInfo[playerid][HoldCID] && !ispassenger)
         	{
             	SetPlayerAttachedObject(playerid, HoldsInfo[playerid][i][HoldIndex], HoldsInfo[playerid][i][HoldModel], HoldsInfo[playerid][i][HoldBone], HoldsInfo[playerid][i][fOffsetX1], HoldsInfo[playerid][i][fOffsetY1], HoldsInfo[playerid][i][fOffsetZ1], HoldsInfo[playerid][i][fRotX1], HoldsInfo[playerid][i][fRotY1], HoldsInfo[playerid][i][fRotZ1], HoldsInfo[playerid][i][fScaleX1], HoldsInfo[playerid][i][fScaleY1], HoldsInfo[playerid][i][fScaleZ1]);
         	}
         	if(PlayerInfo[playerid][HoldInCar] != 0 && !ispassenger)
         	{
             	SetPlayerAttachedObject(playerid, HoldsInfo[playerid][i][HoldIndex], HoldsInfo[playerid][i][HoldModel], HoldsInfo[playerid][i][HoldBone], HoldsInfo[playerid][i][fOffsetX1], HoldsInfo[playerid][i][fOffsetY1], HoldsInfo[playerid][i][fOffsetZ1], HoldsInfo[playerid][i][fRotX1], HoldsInfo[playerid][i][fRotY1], HoldsInfo[playerid][i][fRotZ1], HoldsInfo[playerid][i][fScaleX1], HoldsInfo[playerid][i][fScaleY1], HoldsInfo[playerid][i][fScaleZ1]);
        	}
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Taxi Job Request
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i; i < MAX_PLAYERS; i++) if(PlayerInfo[i][TaxiAcceptedFor] == playerid)
	{
	    //Announce(playerid, "~G~~H~Now press ~R~~H~esc~G~~H~ and~N~~G~~H~Select a location from ~R~~H~map", 3000, 3);
	    Announce(i, "~G~~H~Please wait a moment~N~~G~~H~for the ~R~~H~location~G~~H~!", 3000, 3);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerExitVehicle(playerid, vehicleid)
{
    PlayerInfo[playerid][InCar] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < 3; i ++) PlayerTextDrawHide(playerid, Car_Textdraw[i]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][GodCar] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new x: Player) if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid && PlayerInfo[x][SpecType] == ADMIN_SPEC_TYPE_VEHICLE) TogglePlayerSpectating(x, 1), PlayerSpectatePlayer(x, playerid), PlayerInfo[x][SpecType] = ADMIN_SPEC_TYPE_PLAYER;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][VCC] == 1) return PlayerInfo[playerid][VCC] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InStunt] == 1) DisablePlayerCheckpoint(playerid), Announce(playerid, "~w~~h~Stunt ~r~~h~Failed", 4000, 4), PlayerInfo[playerid][InStunt] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InDrift] == 1) PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), Announce(playerid, "~w~~h~Drift ~r~~h~failed", 3000, 4);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InLastCar] == 1) DestroyVehicle(vehicleid), DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][InLastCar] = 0, SpawnPlayer(playerid), SetPlayerInterior(playerid, 0), SetPlayerVirtualWorld(playerid, 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // => Derby
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InDerby] == 1)
    {
		PlayerInfo[playerid][InDerby] = 0;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        CountPlayersInDerby--;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        BloodringFull[PlayerInfo[playerid][PlayerInBloodring]] = 0;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	PlayerInfo[playerid][PlayerInBloodring] = -1;
	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	foreach(new i: Player)
	   	{
	   	    if(PlayerInfo[i][InDerby] == 1)
	   	    {
		   	    if(CountPlayersInDerby <= 1)
		   	    {
		   	        CheckMinigames();
		   	    }
			}
		}
	   	SpawnPlayer(playerid);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// => Sumo
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InSumo] == 1) PutPlayerInVehicle(playerid, SumoCar[playerid], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_OBJECTS; i++)
    {
		if(HoldsInfo[playerid][i][HoldUsed] == true)
        {
			if(GetVehicleModel(vehicleid) == PlayerInfo[playerid][HoldCID])
         	{
            	if(IsPlayerAttachedObjectSlotUsed(playerid, i))
				{
			 		RemovePlayerAttachedObject(playerid, i);
				}
         	}
         	if(PlayerInfo[playerid][HoldInCar] != 0)
         	{
            	if(IsPlayerAttachedObjectSlotUsed(playerid, i))
				{
			 		RemovePlayerAttachedObject(playerid, i);
				}
         	}
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DestroyObject(GetPVarInt(playerid, "neon")); DestroyObject(GetPVarInt(playerid, "neon1")); DestroyObject(GetPVarInt(playerid, "neon2")); DestroyObject(GetPVarInt(playerid, "neon3"));
    DestroyObject(GetPVarInt(playerid, "neon4")); DestroyObject(GetPVarInt(playerid, "neon5")); DestroyObject(GetPVarInt(playerid, "neon6")); DestroyObject(GetPVarInt(playerid, "neon7"));
	DestroyObject(GetPVarInt(playerid, "neon8")); DestroyObject(GetPVarInt(playerid, "neon9")); DestroyObject(GetPVarInt(playerid, "neon10")); DestroyObject(GetPVarInt(playerid, "neon11"));
    DestroyObject(GetPVarInt(playerid, "neon12")); DestroyObject(GetPVarInt(playerid, "neon13")); DestroyObject(GetPVarInt(playerid, "neon14")); DestroyObject(GetPVarInt(playerid, "neon15"));
    DestroyObject(GetPVarInt(playerid, "neon16")); DestroyObject(GetPVarInt(playerid, "neon17")); DestroyObject(GetPVarInt(playerid, "neon18")); DestroyObject(GetPVarInt(playerid, "neon19"));
    DestroyObject(GetPVarInt(playerid, "neon20")); DestroyObject(GetPVarInt(playerid, "neon21")); DestroyObject(GetPVarInt(playerid, "neon22")); DestroyObject(GetPVarInt(playerid, "neon23"));
	DestroyObject(GetPVarInt(playerid, "neon24")); DestroyObject(GetPVarInt(playerid, "neon25")); DestroyObject(GetPVarInt(playerid, "neon26")); DestroyObject(GetPVarInt(playerid, "neon27"));
    DestroyObject(GetPVarInt(playerid, "neon28")); DestroyObject(GetPVarInt(playerid, "neon29")); DestroyObject(GetPVarInt(playerid, "neon30")); DestroyObject(GetPVarInt(playerid, "neon31"));
    DestroyObject(GetPVarInt(playerid, "neon32")); DestroyObject(GetPVarInt(playerid, "neon33")); DestroyObject(GetPVarInt(playerid, "neon34")); DestroyObject(GetPVarInt(playerid, "neon35"));
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerNeon[playerid] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    /*if(PlayerInfo[playerid][InJob] != 0)
    {
		if(IsPlayerInAnyVehicle(playerid)) return true;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		else
		{
	        new Count = 30;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(IsPlayerInAnyVehicle(playerid)) return KillTimer(Count);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Count --;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(String, sizeof(String), "~r~~h~Return back to the vehicle!~n~~w~~h~Time Remaing ~r~~h~%d~w~~h~!", Count);
			Announce(playerid, String, 5000, 3);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Count == 0) return PlayerInfo[playerid][InJob] = 0;
		}
    }*/
	return true;
}
public OnPlayerLeaveDynamicCP(playerid, checkpointid)
{
	if(PlayerInfo[playerid][InRepair] == 1)
	{
		if(checkpointid != RPG && !IsPlayerInDynamicCP(playerid, RPG))
		{
		    DisablePlayerCheckpoint(playerid);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[playerid][RPG2] = 0, PlayerInfo[playerid][InRepair] = 0, PlayerInfo[playerid][RepairTime] = 5;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    KillTimer(PlayerInfo[playerid][RepairTime]), Announce(playerid, "~w~~h~Repair ~r~~h~failed", 3500, 4);
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function GetChristmasFuncAvailable()
{
	new code, y, m, d; getdate(y, m, d);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(m == 12 && d >= 22) code = 1;
	else code = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return code;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
    for(new i = 0; i < MAX_GANGPICKUPS; i++)
	{
	    if(PlayerInfo[playerid][GangID] != 0)
		{
		   	new string[500];
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(pickupid == GangPickups[i])
			{
			    if(Teritories[PickupInfo[i][PickupGangID]][owner] == PlayerInfo[playerid][GangID])
			    {
		   	    	if(PickupInfo[i][PickupType] == 1) // Minigun
			  		{
			  		    if(PlayerInfo[playerid][g_Time][1] >= 1)
			        	{
				    		if(PlayerInfo[playerid][GangPickupTimer][i] != 0) return format(string, 144, "Sorry, but you need to wait %s minutes to take this pickup again!", TimeConvert(PlayerInfo[playerid][GangPickupTimer][i])), SCM(playerid, RED, string);
		        			//++++++++++++++++++++++++++++++++++++++++++++++++++
		        			PlayerInfo[playerid][GangPickupTimer][i] = 120;
		        			//++++++++++++++++++++++++++++++++++++++++++++++++++
			        		GivePlayerWeapon(playerid, PickupInfo[i][PickupWeaponID], 50), PlayerInfo[playerid][GangTimerSet] = SetTimerEx("GangTimerPickup", 1000, true, "ii", playerid, i);
			        	}
			        	else
				    	{
					        switch(PlayerInfo[playerid][Language])
					        {
					            case 1: SendError(playerid, "Ai nevoie de cel putin 1 ora in acest gang ca sa iei aceasta arma. Foloseste /gstats sa vezi cate ore ai.");
					            case 2: SendError(playerid, "You need at least 1 hour in this gang to get this gun. Check /gstats to see how much time in gang you have.");
					        }
				    	}
			  		}
			  		else if(PickupInfo[i][PickupType] == 2) // Rocket
			  		{
			  		    if(PlayerInfo[playerid][g_Time][1] >= 1)
			        	{
							if(PlayerInfo[playerid][GangPickupTimer][i] != 0) return format(string, 144, "Sorry, but you need to wait %s minutes to take this pickup again!", TimeConvert(PlayerInfo[playerid][GangPickupTimer][i])), SCM(playerid, RED, string);
		        			//++++++++++++++++++++++++++++++++++++++++++++++++++
		        			PlayerInfo[playerid][GangPickupTimer][i] = 120;
		        			//++++++++++++++++++++++++++++++++++++++++++++++++++
			        		GivePlayerWeapon(playerid, PickupInfo[i][PickupWeaponID], 10), PlayerInfo[playerid][GangTimerSet] = SetTimerEx("GangTimerPickup", 1000, true, "ii", playerid, i);
			        	}
			        	else
				    	{
					        switch(PlayerInfo[playerid][Language])
					        {
					            case 1: SendError(playerid, "Ai nevoie de cel putin 1 ora in acest gang ca sa iei aceasta arma. Foloseste /gstats sa vezi cate ore ai.");
					            case 2: SendError(playerid, "You need at least 1 hour in this gang to get this gun. Check /gstats to see how much time in gang you have.");
					        }
				    	}
			  		}
			  		else if(PickupInfo[i][PickupType] == 3) // Health
			  		{
		        		if(PlayerInfo[playerid][GangPickupTimer][i] != 0) return format(string, 144, "Sorry, but you need to wait %s minutes to take this pickup again!", TimeConvert(PlayerInfo[playerid][GangPickupTimer][i])), SCM(playerid, RED, string);
		        		//++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        		PlayerInfo[playerid][GangPickupTimer][i] = 120;
		        		//++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        		SetPlayerHealth(playerid, 100), Announce(playerid, "~R~~H~hp filled", 3000, 3), PlayerInfo[playerid][GangTimerSet] = SetTimerEx("GangTimerPickup", 1000, true, "ii", playerid, i);
			  		}
				    else if(PickupInfo[i][PickupType] == 4) // Armour
				    {
				    	if(PlayerInfo[playerid][GangPickupTimer][i] != 0) return format(string, 144, "Sorry, but you need to wait %s minutes to take this pickup again!", TimeConvert(PlayerInfo[playerid][GangPickupTimer][i])), SCM(playerid, RED, string);
		        		//++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        		PlayerInfo[playerid][GangPickupTimer][i] = 120;
		        		//++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        	SetPlayerArmour(playerid, 100), Announce(playerid, "~R~~H~armour filled", 3000, 3), PlayerInfo[playerid][GangTimerSet] = SetTimerEx("GangTimerPickup", 1000, true, "ii", playerid, i);
				  	}
			 	}
			 	else return SendError(playerid, "This territory is not captured by your gang to use this pickup!");
			}
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Santa Grinch
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(pickupid == SantaGrinchInfo)
	{
     if(PlayerInfo[playerid][InSantaLand] == 1)
     {
	  eString[0] = EOS;
	  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  strcat(eString, "{FFFFFF}Ajuta-l pe{FF0000} Mos Craciun{FFFFFF} salvand Craciunul de furia{FF0000} Grinch-ului{FFFFFF} care\n");
	  strcat(eString, "{FFFFFF}vrea sa-l distruga... O singura arma il poate distruge, iar aceeas e pusca... trage\n");
	  strcat(eString, "{FFFFFF}inpreuna cu alti jucatori in el si distruge-l. Toti jucatorii de pe server\n");
	  strcat(eString, "{FFFFFF}vor primii un cadou de la{FF0000} Mos Craciun{FFFFFF} pentru ajutorul acordat!\n");
	  strcat(eString, "\n");
	  strcat(eString, "{FFFFFF}Trebuie sa sti insa ca{FF0000} Grinch{FFFFFF} nu se va oprii aic. El va reveni\n");
	  strcat(eString, "{FFFFFF}inapoi dupa 30 de minute si va incerca sa-si duca planul malefic la capat!");
	  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FFEE00}Salveaza Craciunul!", eString, "Inchide", "");
	 }
	}
	if(pickupid == SantaGrinchWeapon[1])
	{
	 if(PlayerInfo[playerid][InSantaLand] == 1)
	 {
	  GivePlayerWeapon(playerid, 33, 10);
	 }
	}
	if(pickupid == SantaGrinchWeapon[2])
	{
	 if(PlayerInfo[playerid][InSantaLand] == 1)
	 {
	  GivePlayerWeapon(playerid, 33, 10);
	 }
    }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Santa House
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(pickupid == SantaHouseInfo[1] || pickupid == SantaHouseInfo[2])
	{
    	if(PlayerInfo[playerid][InSantaLand] == 1)
	 	{
	 		if(GetChristmasFuncAvailable() == 1)
	 		{
		      eString[0] = EOS;
			  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			  strcat(eString, "{FFFFFF}Bine ai venit in casa lui{FF0000} Mos Craciun{FFFFFF}!\n");
			  strcat(eString, "{FFFFFF}Exploreaza fiecare colt al ei pentru a incerca sa gasesti cadourile ascunse de\n");
			  strcat(eString, "{FFFFFF}acesta. Fiecare cadou gasit, iti poate aduce un gift gratis!");
			  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			  SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FFEE00}Casa lui Mos Craciun!", eString, "Inchide", "");
			  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			  LoadObjectsProtection(playerid);
			  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			  SetPlayerPos(playerid, -1574.9742,3444.4202,835.4988), SetPlayerFacingAngle(playerid, 180.0000);
			}
		  	else return Announce(playerid, "~R~~H~Santa house will be available on~N~~Y~22th december", 6000, 3);
	 	}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Santa House Gifts
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(pickupid == SantaHousePickups)
	{
	 new RandomPrize = random(5); switch(RandomPrize)
     {
        case 0: PlayerInfo[playerid][Gifts] += 1, Announce(playerid, "~G~~H~~H~You got +1 gift!~N~~Y~Open it on our website~N~~Y~"SERVER_WEBSITE"", 6000, 6);
        case 1: PlayerInfo[playerid][Coins] += 10, SCM(playerid, COLOR_SANTALAND, "Felicitari, ai primit 30 Coins!");
        case 2: PlayerInfo[playerid][Coins] += 15, SCM(playerid, COLOR_SANTALAND, "Felicitari, ai primit 15 Coins!");
        case 3: GivePlayerMoney(playerid, 1000), SCM(playerid, COLOR_SANTALAND, "Felicitari, ai primit $1000!");
        case 4: SCM(playerid, COLOR_SANTALAND, "Ne pare rau, dar nu ai primit nimic!");
     }
     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 DestroyDynamicPickup(SantaHousePickups);
	 //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 new RandPos = random(sizeof(RandomPickupSanta));
     new RandGifts = random(sizeof(RandomGiftsPickups));
	 //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 SantaHousePickups = CreateDynamicPickup(RandomGiftsPickups[RandGifts][0], 999999999, RandomPickupSanta[RandPos][0],RandomPickupSanta[RandPos][1],RandomPickupSanta[RandPos][2]);
	 //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Santa Lottery
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(pickupid == SantaLottery)
	{
	 if(PlayerInfo[playerid][InSantaLand] == 1)
	 {
	  eString[0] = EOS;
	  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  strcat(eString, "{FFFFFF}Pentru a participa la loteria cu cadouri a lui{FF0000} Mos Craciun{FFFFFF} trebuie\n");
	  strcat(eString, "{FFFFFF}sa platesti o mica taxa in valoare de{FFEE00} 200{FFFFFF} Coins! Poti castiga gift-uri, coins, bani, etc!\n");
	  strcat(eString, "\n");
	  strcat(eString, "{FFFFFF}Apasa pe{FF0000} Continua{FFFFFF} daca esti de acord!\n");
	  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  SPD(playerid, DIALOG_LOTTERY, MSGBOX, "{FFEE00}Loteria cu cadouri a lui Mos Craciun!", eString, "Continua", "Inchide");
	  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 }
	}
    for(new x = 0; x < MAX_SANTALOTTERY; x++)
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(pickupid == SantaLotteryPickups[x])
	{
	 if(PlayerInfo[playerid][InSantaLottery] == 1)
	 {
	  if(SantaLotteryGift == SantaLotteryPickups[x])
	  {
	   new RandomPrize = random(4); switch(RandomPrize)
       {
         case 0: PlayerInfo[playerid][Gifts] += 1, Announce(playerid, "~G~~H~~H~You got +1 gift!~N~~Y~Open it on our website~N~~Y~"SERVER_WEBSITE"", 6000, 6);
         case 1: PlayerInfo[playerid][Coins] += 300, SCM(playerid, COLOR_SANTALAND, "Felicitari, ai primit 300 Coins!");
         case 2: PlayerInfo[playerid][Coins] += 150, SCM(playerid, COLOR_SANTALAND, "Felicitari, ai primit 150 Coins!");
         case 3: GivePlayerMoney(playerid, 10000), SCM(playerid, COLOR_SANTALAND, "Felicitari, ai primit $10000!");
       }
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       PlayerInfo[playerid][InSantaLottery] = 0;
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       SetPlayerPos(playerid, -497.4211,3561.1484,5.7700);
	   SetPlayerFacingAngle(playerid, 90.0000);
	   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   SetPlayerVirtualWorld(playerid, 2019);
	   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   new RandomGiftLottery = random(9); switch(RandomGiftLottery)
       {
         case 0: SantaLotteryGift = SantaLotteryPickups[1];
         case 1: SantaLotteryGift = SantaLotteryPickups[2];
         case 2: SantaLotteryGift = SantaLotteryPickups[3];
         case 3: SantaLotteryGift = SantaLotteryPickups[4];
         case 4: SantaLotteryGift = SantaLotteryPickups[5];
         case 5: SantaLotteryGift = SantaLotteryPickups[6];
         case 6: SantaLotteryGift = SantaLotteryPickups[7];
         case 7: SantaLotteryGift = SantaLotteryPickups[8];
         case 8: SantaLotteryGift = SantaLotteryPickups[9];
       }
      }
      else
      {
       if(PlayerInfo[playerid][InSantaLottery] == 1)
       {
        SCM(playerid, COLOR_SANTALAND, "Ne pare rau, dar nu ai primit nimic!");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[playerid][InSantaLottery] = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetPlayerPos(playerid, -497.4211,3561.1484,5.7700);
		SetPlayerFacingAngle(playerid, 90.0000);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerVirtualWorld(playerid, 2019);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   }
      }
     }
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Santa Toy Cars
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(pickupid == SantaToyCars)
	{
	 if(PlayerInfo[playerid][InSantaLand] == 1)
	 {
	  new Float:x, Float:y, Float:z, Float:angle;
	  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  new RandomVehSpawner = random(7); switch(RandomVehSpawner)
      {
         case 0: x = -598.5618, y = 3512.8022, z = 6.2900, angle = 5.7125;
         case 1: x = -603.9398, y = 3512.8467, z = 6.2900, angle = 354.7458;
         case 2: x = -608.6887, y = 3512.6919, z = 6.2900, angle = 359.1325;
         case 3: x = -613.8262, y = 3513.0413, z = 6.2900, angle = 357.2526;
         case 4: x = -619.0079, y = 3512.9360, z = 6.2900, angle = 0.6993;
         case 5: x = -623.6873, y = 3512.4695, z = 6.2900, angle = 1.0127;
         case 6: x = -628.9080, y = 3512.2771, z = 6.2900, angle = 358.1927;
      }
      //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  Announce(playerid, "~W~~H~Press~R~~H~ return~W~~H~ to~N~~Y~leave the car!", 4000, 3);
	  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  PlayerInfo[playerid][InSantaToyCar] = 1;
	  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  SetPlayerVirtualWorld(playerid, 0);
	  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  EraseVeh(PlayerInfo[playerid][pCar]);
      //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  new vehicleid = CreateVehicle(441, x, y, z, angle, -1, -1, -1);
      //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      EraseVeh(PlayerInfo[playerid][pCar]);
      //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      PutPlayerInVehicle(playerid, vehicleid, 0);
      PlayerInfo[playerid][pCar] = vehicleid;
	 }
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerPickUpPickup(playerid, pickupid)
{
    if(pickupid == ServerInfo[StarID])
    {
        if(ServerInfo[StarEventStarted] != -1)
        {
			new String[512], String2[128];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(pickupid == 331 || 333 || 334 || 335 || 336 || 337 || 338 || 339 ||
			               341 || 321 || 322 || 323 || 324 || 325 || 326 || 342 ||
			               343 || 344 || 346 || 347 || 348 || 349 || 350 || 351 ||
			               352 || 353 || 355 || 356 || 372 || 357 || 358 || 359 ||
			               360 || 361 || 362 || 363 || 364 || 365 || 366 || 367 ||
			               368 || 369 || 371 || 370) ResetPlayerWeapons(playerid);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			ServerInfo[StarEventStarted] = -1, DestroyPickup(ServerInfo[StarID]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(ServerInfo[PrizeID] == 3)
			{
				GivePlayerMoney(playerid, ServerInfo[PrizeAmount]), ServerInfo[PrizeAmount] = 0, ServerInfo[PrizeID] = 0;
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            format(String, sizeof(String), "~g~~h~%s ~n~ ~y~~h~has found the ~g~~h~hidden star", PN(playerid)), GameTextForAll(String, 5000, 1);
            format(eString, sizeof(eString), "%s(%d) has won 'Hidden pickup' event!", PN(playerid), playerid), MessageToAdmins(ABLUE, eString);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            format(String2, sizeof(String2), "~r~~H~winner:~Y~~H~ %d~N~~G~~H~give him the prize!", playerid);
            Announce(ServerInfo[StarEventAdmin], String2, 6000, 3);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            Announce(playerid, "~Y~~H~You found the~N~~G~~H~hidden pickup~N~~N~~W~~H~Type~R~~H~ /stats~W~~H~ to see~N~~W~~H~what you won", 6000, 3);
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Sky Climb
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(pickupid == SkyClimbPickup)
	{
		if(PlayerInfo[playerid][InSkyClimb] == 1)
		{
		    new string[138];
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if((gettime() - SkyClimbTimer[playerid]) < 600) return SendBuster(playerid, 1, "Cheating");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    TextForSkyClimbHide(playerid);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[playerid][InSkyClimb] = 0;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[playerid][Money] += 100000, GivePlayerMoney(playerid, 50000), PlayerInfo[playerid][Coins] += 300;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Announce(playerid, "~G~~H~You won~N~~Y~~H~200 coins, +100000$", 6000, 3);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(string, sizeof(string), "{FFFF00}%s has finished skyclimb (/skyclimb)!", PN(playerid));
		  	SCMALL(-1, string);
		  	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  	SpawnPlayer(playerid);
		  	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  	if(ServerInfo[SkyClimbEventStarted] == 1)
		  	{
		  	    new String[138];
		  	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  	    format(String, sizeof(String), "%s(%d) has won 'SkyClimb' event!", PN(playerid), playerid), MessageToAdmins(ABLUE, String);
            	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            	ServerInfo[SkyClimbEventStarted] = 0;
            	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            	format(String, sizeof(String), "~r~~H~winner:~Y~~H~ %d~N~~G~~H~give him the prize!", playerid);
            	Announce(ServerInfo[SkyClimbAdmin], String, 6000, 3);
			}
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(pickupid == ServerInfo[GoldPotPK])
	{
	    if(ServerInfo[GoldPotStarted] != -1)
	    {
			new String[256];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(String, sizeof(String), "QUEST: {FF0000}%s {FFFF00}has found the {00CC00}Gold Pot{FFFF00}!", PN(playerid));
			SCMALL(YELLOW, String);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			FormatMSG(playerid, YELLOW, "You've found the goldpot and you've earned {00FF22}%s!", SGoldP);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][Money] += GPRIZE[0], GivePlayerMoney(playerid, GPRIZE[0]), PlayerInfo[playerid][Coins] += GPRIZE[1], UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] + GPRIZE[2]), PlayerInfo[playerid][Gems] += GPRIZE[2];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][gemsMonth] += GPRIZE[2];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][Quests] ++;
		 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GoldPotFound = 1, ServerInfo[GoldPotStarted] = -1;
		    DestroyPickup(ServerInfo[GoldPotPK]);
		    KillTimer(GOLDPOTTIMER);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        GOLDPOTTIMER = SetTimer("GoldPot", 120000, false);
		}
	}
	if(pickupid == SantaToyCarPickup)
	{
	 if(PlayerInfo[playerid][InSantaToyCar] == 1)
	 {
	  eString[0] = EOS;
	  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  DestroyPickup(SantaToyCarPickup);
	  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  DestroyDynamic3DTextLabel(SantaToyCarText);
	  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  format(eString, sizeof(eString), "{FFEE00}Last picked up by{FF0000} %s\n\
                                        {FFEE00}He won 1 Coins & $680!", PN(playerid));
      SantaToyCarText = CreateDynamic3DTextLabel(eString, ~1, SantaToyCarPos[0], SantaToyCarPos[1], SantaToyCarPos[2], 80);
      //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      PlayerInfo[playerid][Coins] += 1;
      GivePlayerMoney(playerid, 680);
      //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      new RandomPos = random(10); switch(RandomPos)
      {
        case 0: SantaToyCarPos[0] = -629.5334, SantaToyCarPos[1] = 3528.5908, SantaToyCarPos[2] = 6.2900;
        case 1: SantaToyCarPos[0] = -619.0206, SantaToyCarPos[1] = 3552.4846, SantaToyCarPos[2] = 6.2900;
        case 2: SantaToyCarPos[0] = -604.3511, SantaToyCarPos[1] = 3563.2603, SantaToyCarPos[2] = 6.2900;
        case 3: SantaToyCarPos[0] = -607.4111, SantaToyCarPos[1] = 3577.3352,  SantaToyCarPos[2] = 6.2900;
        case 4: SantaToyCarPos[0] = -627.5074, SantaToyCarPos[1] = 3588.3223, SantaToyCarPos[2] = 6.2900;
        case 5: SantaToyCarPos[0] = -619.4536, SantaToyCarPos[1] = 3617.3777, SantaToyCarPos[2] = 6.2900;
        case 6: SantaToyCarPos[0] = -599.4554, SantaToyCarPos[1] = 3613.9038, SantaToyCarPos[2] = 6.2900;
        case 7: SantaToyCarPos[0] = -595.2631, SantaToyCarPos[1] = 3588.1880, SantaToyCarPos[2] = 6.2900;
        case 8: SantaToyCarPos[0] = -632.0173, SantaToyCarPos[1] = 3548.6897, SantaToyCarPos[2] = 6.2900;
        case 9: SantaToyCarPos[0] = -623.1711, SantaToyCarPos[1] = 3543.4541, SantaToyCarPos[2] = 6.2900;
      }
      SantaToyCarPickup = CreatePickup(1247, 2, SantaToyCarPos[0], SantaToyCarPos[1], SantaToyCarPos[2], -1);
	 }
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	new Caption[256]; eString[0]=EOS; PlayerInfo[playerid][ClickedP] = clickedplayerid;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(playerid) && PlayerInfo[playerid][LoggedIn] == 1) return SendError(playerid, "Sorry, but you can't use any command while you're not logged in!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(PlayerInfo[playerid][Language])
	{
		case 1:
		{
		    format(Caption, 256, "{FFFFFF}Ai dat click pe {FF0000}%s", PN(clickedplayerid));
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        format(eString, sizeof(eString),
  		 	"Obtiune                       \tComanda\n\
  		 	{00CC00}Vezi statistici        \t{FFFFFF}/stats\n\
  		 	{00CC00}Vezi statistici clan   \t{FFFFFF}/cinfo\n\
  		 	{00CC00}Vezi statistici gang   \t{FFFFFF}/gstats\n\
  		 	{00CC00}Vezi statistici admin  \t{FFFFFF}/astats\n\
  		 	{00CC00}Trimite PM             \t{FFFFFF}/pm\n\
  		 	{00CC00}Urmareste jucator      \t{FFFFFF}/spec");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SPD(playerid, DIALOG_STATS, HEADERS, Caption, eString, "Selecteaza", "Inchide");
	   		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		}
		case 2:
	    {
	        format(Caption, 256, "{FFFFFF}Clicked on {FF0000}%s", PN(clickedplayerid));
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        format(eString, sizeof(eString),
  		 	"Obtion                        \tCommand\n\
  		 	{00CC00}See statistics         \t{FFFFFF}/stats\n\
  		 	{00CC00}See clan statistics    \t{FFFFFF}/cinfo\n\
  		 	{00CC00}See clan statistics    \t{FFFFFF}/gstats\n\
  		 	{00CC00}See admin statistics   \t{FFFFFF}/astats\n\
  		 	{00CC00}Send PM                \t{FFFFFF}/pm\n\
  		 	{00CC00}Spec player            \t{FFFFFF}/spec");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SPD(playerid, DIALOG_STATS, HEADERS, Caption, eString, "Select", "Close");
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerEnterRaceCheckpoint(playerid)
{
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Race System
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InRace] != 0)
	{
	    new rID = PlayerInfo[playerid][InRace];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(CPProgress[rID][playerid] == Races[rID][TotalCP] -1)
		{
			new Str7[2048];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Races[rID][RaceTimeStamp] = GetTickCount(), Races[rID][TotalRaceTime] = Races[rID][RaceTimeStamp] - Races[rID][RaceTick], Races[rID][Position]++;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			ConvertTime(var, Races[rID][TotalRaceTime], rTime[rID][0], rTime[rID][1], rTime[rID][2]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(Str7, 144, "RACE: {FF0000}%s {0095FF}won the race {FF0000}%s {0095FF}in {FF0000}%d {0095FF}place", PN(playerid), Races[rID][Name], Races[rID][Position]), SCMALL(ORANGE, Str7);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Races[rID][FinishCount]++;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			KillTimer(PlayerInfo[playerid][RaceTextdraw]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			RaceTDHide(playerid);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][boost] == 0)
			{
		      PlayerInfo[playerid][Money] += 10000, PlayerInfo[playerid][Coins] += 30, PlayerInfo[playerid][RacePoints] += 10, PlayerInfo[playerid][RaceMonth] += 10;
			  Announce(playerid, "~y~~h~Race ~g~~h~Finished~n~~y~~h~+30 ~g~~h~Coins~n~~y~~h~+10000~g~~h~$~n~~y~~h~+10 ~g~~h~Race Points", 4000, 4);
			}
			if(PlayerInfo[playerid][boost] == 1)
			{
		      PlayerInfo[playerid][Money] += 10000, PlayerInfo[playerid][Coins] += 30, PlayerInfo[playerid][RacePoints] += 20, PlayerInfo[playerid][RaceMonth] += 20;
			  Announce(playerid, "~y~~h~Race ~g~~h~Finished~n~~y~~h~+30 ~g~~h~Coins~n~~y~~h~+10000~g~~h~$~n~~y~~h~+20 ~g~~h~Race Points~N~~R~~H~with boost!", 4000, 4);
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][InRace] = 0, Joined[rID][playerid] = 0, DestroyVehicle(CreatedRaceVeh[rID][playerid]), DisablePlayerRaceCheckpoint(playerid), SetPlayerVirtualWorld(playerid, 0), CPProgress[rID][playerid]++;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Races[rID][FinishCount] >= Races[rID][JoinCount]) return StopRace(rID);
	   	}
		else CPProgress[rID][playerid]++, CPCoords[rID][CPProgress[rID][playerid]][3]++, SetCP(playerid, rID, CPProgress[rID][playerid], CPProgress[rID][playerid]+1, Races[rID][TotalCP]), PlayerPlaySound(playerid, 1137, 0.0, 0.0, 0.0);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Drift System
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InDrift] == 1)
	{
	    if(PlayerInfo[playerid][DriftCP][0] == 1) 		SetPlayerRaceCheckpoint(playerid, 0, -366.2761,1463.2701,62.9382, -321.9398,1320.9137,53.1078, 5), PlayerInfo[playerid][DriftCP][0] = 2;
	    else if(PlayerInfo[playerid][DriftCP][0] == 2)  SetPlayerRaceCheckpoint(playerid, 0, -321.9398,1320.9137,53.1078, -370.0298,1371.1022,45.2366, 5), PlayerInfo[playerid][DriftCP][0] = 3;
	    else if(PlayerInfo[playerid][DriftCP][0] == 3)  SetPlayerRaceCheckpoint(playerid, 0, -370.0298,1371.1022,45.2366, -439.2814,1443.7495,33.2922, 5), PlayerInfo[playerid][DriftCP][0] = 4;
	    else if(PlayerInfo[playerid][DriftCP][0] == 4)  SetPlayerRaceCheckpoint(playerid, 0, -439.2814,1443.7495,33.2922, -450.0473,1603.8799,35.4184, 5), PlayerInfo[playerid][DriftCP][0] = 5;
		else if(PlayerInfo[playerid][DriftCP][0] == 5)  SetPlayerRaceCheckpoint(playerid, 0, -450.0473,1603.8799,35.4184, -376.9690,1794.3246,47.7402, 5), PlayerInfo[playerid][DriftCP][0] = 6;
		else if(PlayerInfo[playerid][DriftCP][0] == 6)  SetPlayerRaceCheckpoint(playerid, 0, -376.9690,1794.3246,47.7402, -412.3458,1916.7843,57.4094, 5), PlayerInfo[playerid][DriftCP][0] = 7;
		else if(PlayerInfo[playerid][DriftCP][0] == 7)  SetPlayerRaceCheckpoint(playerid, 0, -412.3458,1916.7843,57.4094, -423.4741,1776.6655,71.3454, 5), PlayerInfo[playerid][DriftCP][0] = 8;
		else if(PlayerInfo[playerid][DriftCP][0] == 8)  SetPlayerRaceCheckpoint(playerid, 0, -423.4741,1776.6655,71.3454, -466.9480,1801.5225,75.8297, 5), PlayerInfo[playerid][DriftCP][0] = 9;
		else if(PlayerInfo[playerid][DriftCP][0] == 9)  SetPlayerRaceCheckpoint(playerid, 0, -466.9480,1801.5225,75.8297, -479.1438,1948.7782,85.7037, 5), PlayerInfo[playerid][DriftCP][0] = 10;
		else if(PlayerInfo[playerid][DriftCP][0] == 10) SetPlayerRaceCheckpoint(playerid, 0, -479.1438,1948.7782,85.7037, -378.6241,2066.4387,60.5826, 5), PlayerInfo[playerid][DriftCP][0] = 11;
		else if(PlayerInfo[playerid][DriftCP][0] == 11) SetPlayerRaceCheckpoint(playerid, 0, -378.6241,2066.4387,60.5826, -440.0144,2040.9054,60.6134, 5), PlayerInfo[playerid][DriftCP][0] = 12;
		else if(PlayerInfo[playerid][DriftCP][0] == 12) SetPlayerRaceCheckpoint(playerid, 0, -440.0144,2040.9054,60.6134, -525.4628,1995.1958,59.9174, 5), PlayerInfo[playerid][DriftCP][0] = 13;
		else if(PlayerInfo[playerid][DriftCP][0] == 13) SetPlayerRaceCheckpoint(playerid, 0, -525.4628,1995.1958,59.9174, -870.6439,1919.2079,59.9217, 5), PlayerInfo[playerid][DriftCP][0] = 14;
		else if(PlayerInfo[playerid][DriftCP][0] == 14) SetPlayerRaceCheckpoint(playerid, 0, -870.6439,1919.2079,59.9217, -875.1132,1801.1414,59.9104, 5), PlayerInfo[playerid][DriftCP][0] = 15;
		else if(PlayerInfo[playerid][DriftCP][0] == 15) SetPlayerRaceCheckpoint(playerid, 0, -875.1132,1801.1414,59.9104, -1022.1393,1856.3513,61.0637, 5), PlayerInfo[playerid][DriftCP][0] = 16;
		else if(PlayerInfo[playerid][DriftCP][0] == 16) SetPlayerRaceCheckpoint(playerid, 0, -1022.1393,1856.3513,61.0637, -1181.0801,1798.0341,40.3452, 5), PlayerInfo[playerid][DriftCP][0] = 17;
		else if(PlayerInfo[playerid][DriftCP][0] == 17) SetPlayerRaceCheckpoint(playerid, 1, -1181.0801,1798.0341,40.3452, -1181.0801,1798.0341,40.3452, 5), PlayerInfo[playerid][DriftCP][0] = 18;
		else if(PlayerInfo[playerid][DriftCP][0] == 18)
		{
            new TimeT = gettime() - PlayerInfo[playerid][Drift0], lStr[500];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][boost] == 0)
			{
			 if(TimeT < 40)
			 {
			    PlayerInfo[playerid][DriftPoints] += 50, PlayerInfo[playerid][DriftMonth] += 50, PlayerInfo[playerid][Coins] += 5;
	  			format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 50 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 24 && TimeT < 30)
			 {
			    PlayerInfo[playerid][DriftPoints] += 35, PlayerInfo[playerid][DriftMonth] += 35, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 35 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 29 && TimeT < 35)
			 {
			    PlayerInfo[playerid][DriftPoints] += 25, PlayerInfo[playerid][DriftMonth] += 25, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 25 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 34 && TimeT < 45)
			 {
			    PlayerInfo[playerid][DriftPoints] += 15, PlayerInfo[playerid][DriftMonth] += 15, PlayerInfo[playerid][Coins] += 3;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 3 coins~N~~R~~H~and 15 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 44)
			 {
			    PlayerInfo[playerid][DriftPoints] += 5, PlayerInfo[playerid][DriftMonth] += 5, PlayerInfo[playerid][Coins] += 1;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 1 coins~N~~R~~H~and 5 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 Announce(playerid, lStr, 6000, 3), DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, GivePlayerMoney(playerid, 50000), PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0, PlayerInfo[playerid][InDrift] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, PlayerInfo[playerid][Drift1] = 0, PlayerInfo[playerid][Drift2] = 0, PlayerInfo[playerid][Drift3] = 0, PlayerInfo[playerid][Drift4] = 0, PlayerInfo[playerid][Drift5] = 0, PlayerInfo[playerid][Drift6] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][DriftCP][1] = 0, PlayerInfo[playerid][DriftCP][2] = 0, PlayerInfo[playerid][DriftCP][3] = 0, PlayerInfo[playerid][DriftCP][4] = 0, PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0;
			}
			if(PlayerInfo[playerid][boost] == 1)
			{
			 if(TimeT < 40)
			 {
			    PlayerInfo[playerid][DriftPoints] += 100, PlayerInfo[playerid][DriftMonth] += 100, PlayerInfo[playerid][Coins] += 5;
	  			format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 100 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 24 && TimeT < 30)
			 {
			    PlayerInfo[playerid][DriftPoints] += 70, PlayerInfo[playerid][DriftMonth] += 70, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 70 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 29 && TimeT < 35)
			 {
			    PlayerInfo[playerid][DriftPoints] += 50, PlayerInfo[playerid][DriftMonth] += 50, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 50 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 34 && TimeT < 45)
			 {
			    PlayerInfo[playerid][DriftPoints] += 30, PlayerInfo[playerid][DriftMonth] += 30, PlayerInfo[playerid][Coins] += 3;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 3 coins~N~~R~~H~and 30 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 44)
			 {
			    PlayerInfo[playerid][DriftPoints] += 10, PlayerInfo[playerid][DriftMonth] += 10, PlayerInfo[playerid][Coins] += 1;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 1 coins~N~~R~~H~and 10 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 Announce(playerid, lStr, 6000, 3), DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, GivePlayerMoney(playerid, 50000), PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0, PlayerInfo[playerid][InDrift] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, PlayerInfo[playerid][Drift1] = 0, PlayerInfo[playerid][Drift2] = 0, PlayerInfo[playerid][Drift3] = 0, PlayerInfo[playerid][Drift4] = 0, PlayerInfo[playerid][Drift5] = 0, PlayerInfo[playerid][Drift6] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][DriftCP][1] = 0, PlayerInfo[playerid][DriftCP][2] = 0, PlayerInfo[playerid][DriftCP][3] = 0, PlayerInfo[playerid][DriftCP][4] = 0, PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0;
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][DriftCP][1] == 1) 		SetPlayerRaceCheckpoint(playerid, 0, -892.9836,-1726.3636,76.8200, -881.1993,-1806.1967,89.7611, 5), PlayerInfo[playerid][DriftCP][1] = 2;
		else if(PlayerInfo[playerid][DriftCP][1] == 2)  SetPlayerRaceCheckpoint(playerid, 0, -881.1993,-1806.1967,89.7611, -842.5878,-1836.4392,91.2076, 5), PlayerInfo[playerid][DriftCP][1] = 3;
		else if(PlayerInfo[playerid][DriftCP][1] == 3)  SetPlayerRaceCheckpoint(playerid, 0, -842.5878,-1836.4392,91.2076, -770.3124,-1721.3622,96.3158, 5), PlayerInfo[playerid][DriftCP][1] = 4;
		else if(PlayerInfo[playerid][DriftCP][1] == 4)  SetPlayerRaceCheckpoint(playerid, 0, -770.3124,-1721.3622,96.3158, -758.6806,-1556.1541,93.4272, 5), PlayerInfo[playerid][DriftCP][1] = 5;
		else if(PlayerInfo[playerid][DriftCP][1] == 5)  SetPlayerRaceCheckpoint(playerid, 0, -758.6806,-1556.1541,93.4272, -745.9333,-1274.4333,69.0750, 5), PlayerInfo[playerid][DriftCP][1] = 6;
		else if(PlayerInfo[playerid][DriftCP][1] == 6)  SetPlayerRaceCheckpoint(playerid, 0, -745.9333,-1274.4333,69.0750, -717.0789,-1343.9418,62.3104, 5), PlayerInfo[playerid][DriftCP][1] = 7;
		else if(PlayerInfo[playerid][DriftCP][1] == 7)  SetPlayerRaceCheckpoint(playerid, 0, -717.0789,-1343.9418,62.3104, -718.3033,-1546.9052,56.0051, 5), PlayerInfo[playerid][DriftCP][1] = 8;
		else if(PlayerInfo[playerid][DriftCP][1] == 8)  SetPlayerRaceCheckpoint(playerid, 0, -718.3033,-1546.9052,56.0051, -708.2905,-1716.7451,45.0941, 5), PlayerInfo[playerid][DriftCP][1] = 9;
		else if(PlayerInfo[playerid][DriftCP][1] == 9)  SetPlayerRaceCheckpoint(playerid, 0, -708.2905,-1716.7451,45.0941, -661.5159,-1587.1492,23.8214, 5), PlayerInfo[playerid][DriftCP][1] = 10;
		else if(PlayerInfo[playerid][DriftCP][1] == 10) SetPlayerRaceCheckpoint(playerid, 1, -661.5159,-1587.1492,23.8214, -661.5159,-1587.1492,23.8214, 5), PlayerInfo[playerid][DriftCP][1] = 11;
		else if(PlayerInfo[playerid][DriftCP][1] == 11)
		{
            new TimeT = gettime() - PlayerInfo[playerid][Drift1], lStr[500];
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(PlayerInfo[playerid][boost] == 0)
			{
			 if(TimeT < 40)
			 {
			    PlayerInfo[playerid][DriftPoints] += 50, PlayerInfo[playerid][DriftMonth] += 50, PlayerInfo[playerid][Coins] += 5;
	  			format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 50 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 24 && TimeT < 30)
			 {
			    PlayerInfo[playerid][DriftPoints] += 35, PlayerInfo[playerid][DriftMonth] += 35, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 35 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 29 && TimeT < 35)
			 {
			    PlayerInfo[playerid][DriftPoints] += 25, PlayerInfo[playerid][DriftMonth] += 25, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 25 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 34 && TimeT < 45)
			 {
			    PlayerInfo[playerid][DriftPoints] += 15, PlayerInfo[playerid][DriftMonth] += 15, PlayerInfo[playerid][Coins] += 3;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 3 coins~N~~R~~H~and 15 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 44)
			 {
			    PlayerInfo[playerid][DriftPoints] += 5, PlayerInfo[playerid][DriftMonth] += 5, PlayerInfo[playerid][Coins] += 1;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 1 coins~N~~R~~H~and 5 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 Announce(playerid, lStr, 6000, 3), DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, GivePlayerMoney(playerid, 50000), PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0, PlayerInfo[playerid][InDrift] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, PlayerInfo[playerid][Drift1] = 0, PlayerInfo[playerid][Drift2] = 0, PlayerInfo[playerid][Drift3] = 0, PlayerInfo[playerid][Drift4] = 0, PlayerInfo[playerid][Drift5] = 0, PlayerInfo[playerid][Drift6] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][DriftCP][1] = 0, PlayerInfo[playerid][DriftCP][2] = 0, PlayerInfo[playerid][DriftCP][3] = 0, PlayerInfo[playerid][DriftCP][4] = 0, PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0;
			}
			if(PlayerInfo[playerid][boost] == 1)
			{
			 if(TimeT < 40)
			 {
			    PlayerInfo[playerid][DriftPoints] += 100, PlayerInfo[playerid][DriftMonth] += 100, PlayerInfo[playerid][Coins] += 5;
	  			format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 100 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 24 && TimeT < 30)
			 {
			    PlayerInfo[playerid][DriftPoints] += 70, PlayerInfo[playerid][DriftMonth] += 70, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 70 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 29 && TimeT < 35)
			 {
			    PlayerInfo[playerid][DriftPoints] += 50, PlayerInfo[playerid][DriftMonth] += 50, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 50 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 34 && TimeT < 45)
			 {
			    PlayerInfo[playerid][DriftPoints] += 30, PlayerInfo[playerid][DriftMonth] += 30, PlayerInfo[playerid][Coins] += 3;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 3 coins~N~~R~~H~and 30 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 44)
			 {
			    PlayerInfo[playerid][DriftPoints] += 10, PlayerInfo[playerid][DriftMonth] += 10, PlayerInfo[playerid][Coins] += 1;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 1 coins~N~~R~~H~and 10 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 Announce(playerid, lStr, 6000, 3), DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, GivePlayerMoney(playerid, 50000), PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0, PlayerInfo[playerid][InDrift] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, PlayerInfo[playerid][Drift1] = 0, PlayerInfo[playerid][Drift2] = 0, PlayerInfo[playerid][Drift3] = 0, PlayerInfo[playerid][Drift4] = 0, PlayerInfo[playerid][Drift5] = 0, PlayerInfo[playerid][Drift6] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][DriftCP][1] = 0, PlayerInfo[playerid][DriftCP][2] = 0, PlayerInfo[playerid][DriftCP][3] = 0, PlayerInfo[playerid][DriftCP][4] = 0, PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0;
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][DriftCP][2] == 1) 		SetPlayerRaceCheckpoint(playerid, 0, -2499.8108,-481.5539,94.1763, -2617.0894,-501.9191,71.3239, 5), PlayerInfo[playerid][DriftCP][2] = 2;
		else if(PlayerInfo[playerid][DriftCP][2] == 2)  SetPlayerRaceCheckpoint(playerid, 0, -2617.0894,-501.9191,71.3239, -2555.9055,-466.0525,68.4985, 5), PlayerInfo[playerid][DriftCP][2] = 3;
		else if(PlayerInfo[playerid][DriftCP][2] == 3)  SetPlayerRaceCheckpoint(playerid, 0, -2555.9055,-466.0525,68.4985, -2455.5935,-425.5053,83.6080, 5), PlayerInfo[playerid][DriftCP][2] = 4;
		else if(PlayerInfo[playerid][DriftCP][2] == 4)  SetPlayerRaceCheckpoint(playerid, 0, -2455.5935,-425.5053,83.6080, -2386.9961,-425.8447,82.5065, 5), PlayerInfo[playerid][DriftCP][2] = 5;
		else if(PlayerInfo[playerid][DriftCP][2] == 5)  SetPlayerRaceCheckpoint(playerid, 0, -2386.9961,-425.8447,82.5065, -2333.3108,-464.1006,79.7478, 5), PlayerInfo[playerid][DriftCP][2] = 6;
		else if(PlayerInfo[playerid][DriftCP][2] == 6)  SetPlayerRaceCheckpoint(playerid, 0, -2333.3108,-464.1006,79.7478, -2360.0105,-397.6741,78.4015, 5), PlayerInfo[playerid][DriftCP][2] = 7;
		else if(PlayerInfo[playerid][DriftCP][2] == 7)  SetPlayerRaceCheckpoint(playerid, 0, -2360.0105,-397.6741,78.4015, -2552.7744,-368.1672,52.4132, 5), PlayerInfo[playerid][DriftCP][2] = 8;
		else if(PlayerInfo[playerid][DriftCP][2] == 8)  SetPlayerRaceCheckpoint(playerid, 0, -2552.7744,-368.1672,52.4132, -2673.0156,-418.5255,31.8882, 5), PlayerInfo[playerid][DriftCP][2] = 9;
		else if(PlayerInfo[playerid][DriftCP][2] == 9)  SetPlayerRaceCheckpoint(playerid, 0, -2673.0156,-418.5255,31.8882, -2679.7246,-521.0942,17.0188, 5), PlayerInfo[playerid][DriftCP][2] = 10;
		else if(PlayerInfo[playerid][DriftCP][2] == 10) SetPlayerRaceCheckpoint(playerid, 0, -2679.7246,-521.0942,17.0188, -2781.3250,-489.6580,6.9118, 5), PlayerInfo[playerid][DriftCP][2] = 11;
		else if(PlayerInfo[playerid][DriftCP][2] == 11) SetPlayerRaceCheckpoint(playerid, 1, -2781.3250,-489.6580,6.9118, -2781.3250,-489.6580,6.9118, 5), PlayerInfo[playerid][DriftCP][2]  = 12;
		else if(PlayerInfo[playerid][DriftCP][2] == 12)
		{
            new TimeT = gettime() - PlayerInfo[playerid][Drift2], lStr[500];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][boost] == 0)
			{
			 if(TimeT < 40)
			 {
			    PlayerInfo[playerid][DriftPoints] += 50, PlayerInfo[playerid][DriftMonth] += 50, PlayerInfo[playerid][Coins] += 5;
	  			format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 50 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 24 && TimeT < 30)
			 {
			    PlayerInfo[playerid][DriftPoints] += 35, PlayerInfo[playerid][DriftMonth] += 35, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 35 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 29 && TimeT < 35)
			 {
			    PlayerInfo[playerid][DriftPoints] += 25, PlayerInfo[playerid][DriftMonth] += 25, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 25 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 34 && TimeT < 45)
			 {
			    PlayerInfo[playerid][DriftPoints] += 15, PlayerInfo[playerid][DriftMonth] += 15, PlayerInfo[playerid][Coins] += 3;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 3 coins~N~~R~~H~and 15 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 44)
			 {
			    PlayerInfo[playerid][DriftPoints] += 5, PlayerInfo[playerid][DriftMonth] += 5, PlayerInfo[playerid][Coins] += 1;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 1 coins~N~~R~~H~and 5 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 Announce(playerid, lStr, 6000, 3), DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, GivePlayerMoney(playerid, 50000), PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0, PlayerInfo[playerid][InDrift] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, PlayerInfo[playerid][Drift1] = 0, PlayerInfo[playerid][Drift2] = 0, PlayerInfo[playerid][Drift3] = 0, PlayerInfo[playerid][Drift4] = 0, PlayerInfo[playerid][Drift5] = 0, PlayerInfo[playerid][Drift6] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][DriftCP][1] = 0, PlayerInfo[playerid][DriftCP][2] = 0, PlayerInfo[playerid][DriftCP][3] = 0, PlayerInfo[playerid][DriftCP][4] = 0, PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0;
			}
			if(PlayerInfo[playerid][boost] == 1)
			{
			 if(TimeT < 40)
			 {
			    PlayerInfo[playerid][DriftPoints] += 100, PlayerInfo[playerid][DriftMonth] += 100, PlayerInfo[playerid][Coins] += 5;
	  			format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 100 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 24 && TimeT < 30)
			 {
			    PlayerInfo[playerid][DriftPoints] += 70, PlayerInfo[playerid][DriftMonth] += 70, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 70 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 29 && TimeT < 35)
			 {
			    PlayerInfo[playerid][DriftPoints] += 50, PlayerInfo[playerid][DriftMonth] += 50, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 50 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 34 && TimeT < 45)
			 {
			    PlayerInfo[playerid][DriftPoints] += 30, PlayerInfo[playerid][DriftMonth] += 30, PlayerInfo[playerid][Coins] += 3;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 3 coins~N~~R~~H~and 30 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 44)
			 {
			    PlayerInfo[playerid][DriftPoints] += 10, PlayerInfo[playerid][DriftMonth] += 10, PlayerInfo[playerid][Coins] += 1;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 1 coins~N~~R~~H~and 10 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 Announce(playerid, lStr, 6000, 3), DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, GivePlayerMoney(playerid, 50000), PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0, PlayerInfo[playerid][InDrift] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, PlayerInfo[playerid][Drift1] = 0, PlayerInfo[playerid][Drift2] = 0, PlayerInfo[playerid][Drift3] = 0, PlayerInfo[playerid][Drift4] = 0, PlayerInfo[playerid][Drift5] = 0, PlayerInfo[playerid][Drift6] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][DriftCP][1] = 0, PlayerInfo[playerid][DriftCP][2] = 0, PlayerInfo[playerid][DriftCP][3] = 0, PlayerInfo[playerid][DriftCP][4] = 0, PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0;
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][DriftCP][3] == 1) 		SetPlayerRaceCheckpoint(playerid, 0, 2295.4634,1959.8706,26.0264, 2293.7332,1938.5973,20.5492, 5), PlayerInfo[playerid][DriftCP][3] = 2;
		else if(PlayerInfo[playerid][DriftCP][3] == 2)  SetPlayerRaceCheckpoint(playerid, 0, 2293.7332,1938.5973,20.5492, 2306.0486,1963.4091,20.5492, 5), PlayerInfo[playerid][DriftCP][3] = 3;
		else if(PlayerInfo[playerid][DriftCP][3] == 3)  SetPlayerRaceCheckpoint(playerid, 0, 2306.0486,1963.4091,20.5492, 2295.0872,1939.5348,15.0735, 5), PlayerInfo[playerid][DriftCP][3] = 4;
		else if(PlayerInfo[playerid][DriftCP][3] == 4)  SetPlayerRaceCheckpoint(playerid, 0, 2295.0872,1939.5348,15.0735, 2313.6238,1963.2859,14.6720, 5), PlayerInfo[playerid][DriftCP][3] = 5;
		else if(PlayerInfo[playerid][DriftCP][3] == 5)  SetPlayerRaceCheckpoint(playerid, 0, 2313.6238,1963.2859,14.6720, 2296.9834,1936.1685,9.5942, 5), PlayerInfo[playerid][DriftCP][3]  = 6;
		else if(PlayerInfo[playerid][DriftCP][3] == 6)  SetPlayerRaceCheckpoint(playerid, 0, 2296.9834,1936.1685,9.5942, 2229.1824,1935.8619,9.5942, 5), PlayerInfo[playerid][DriftCP][3]   = 7;
		else if(PlayerInfo[playerid][DriftCP][3] == 7)  SetPlayerRaceCheckpoint(playerid, 0, 2229.1824,1935.8619,9.5942, 2224.7251,1988.7555,9.5331, 5), PlayerInfo[playerid][DriftCP][3]   = 8;
		else if(PlayerInfo[playerid][DriftCP][3] == 8)  SetPlayerRaceCheckpoint(playerid, 0, 2224.7251,1988.7555,9.5331, 2313.3074,1995.2858,5.3673, 5), PlayerInfo[playerid][DriftCP][3]   = 9;
		else if(PlayerInfo[playerid][DriftCP][3] == 9)  SetPlayerRaceCheckpoint(playerid, 0, 2313.3074,1995.2858,5.3673, 2317.6404,1897.6149,10.3996, 5), PlayerInfo[playerid][DriftCP][3]  = 10;
		else if(PlayerInfo[playerid][DriftCP][3] == 10) SetPlayerRaceCheckpoint(playerid, 1, 2317.6404,1897.6149,10.3996, 2317.6404,1897.6149,10.3996, 5), PlayerInfo[playerid][DriftCP][3]= 11;
		else if(PlayerInfo[playerid][DriftCP][3] == 11)
		{
            new TimeT = gettime() - PlayerInfo[playerid][Drift3], lStr[500];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][boost] == 0)
			{
			 if(TimeT < 40)
			 {
			    PlayerInfo[playerid][DriftPoints] += 50, PlayerInfo[playerid][DriftMonth] += 50, PlayerInfo[playerid][Coins] += 5;
	  			format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 50 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 24 && TimeT < 30)
			 {
			    PlayerInfo[playerid][DriftPoints] += 35, PlayerInfo[playerid][DriftMonth] += 35, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 35 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 29 && TimeT < 35)
			 {
			    PlayerInfo[playerid][DriftPoints] += 25, PlayerInfo[playerid][DriftMonth] += 25, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 25 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 34 && TimeT < 45)
			 {
			    PlayerInfo[playerid][DriftPoints] += 15, PlayerInfo[playerid][DriftMonth] += 15, PlayerInfo[playerid][Coins] += 3;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 3 coins~N~~R~~H~and 15 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 44)
			 {
			    PlayerInfo[playerid][DriftPoints] += 5, PlayerInfo[playerid][DriftMonth] += 5, PlayerInfo[playerid][Coins] += 1;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 1 coins~N~~R~~H~and 5 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 Announce(playerid, lStr, 6000, 3), DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, GivePlayerMoney(playerid, 50000), PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0, PlayerInfo[playerid][InDrift] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, PlayerInfo[playerid][Drift1] = 0, PlayerInfo[playerid][Drift2] = 0, PlayerInfo[playerid][Drift3] = 0, PlayerInfo[playerid][Drift4] = 0, PlayerInfo[playerid][Drift5] = 0, PlayerInfo[playerid][Drift6] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][DriftCP][1] = 0, PlayerInfo[playerid][DriftCP][2] = 0, PlayerInfo[playerid][DriftCP][3] = 0, PlayerInfo[playerid][DriftCP][4] = 0, PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0;
			}
			if(PlayerInfo[playerid][boost] == 1)
			{
			 if(TimeT < 40)
			 {
			    PlayerInfo[playerid][DriftPoints] += 100, PlayerInfo[playerid][DriftMonth] += 100, PlayerInfo[playerid][Coins] += 5;
	  			format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 100 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 24 && TimeT < 30)
			 {
			    PlayerInfo[playerid][DriftPoints] += 70, PlayerInfo[playerid][DriftMonth] += 70, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 70 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 29 && TimeT < 35)
			 {
			    PlayerInfo[playerid][DriftPoints] += 50, PlayerInfo[playerid][DriftMonth] += 50, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 50 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 34 && TimeT < 45)
			 {
			    PlayerInfo[playerid][DriftPoints] += 30, PlayerInfo[playerid][DriftMonth] += 30, PlayerInfo[playerid][Coins] += 3;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 3 coins~N~~R~~H~and 30 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 44)
			 {
			    PlayerInfo[playerid][DriftPoints] += 10, PlayerInfo[playerid][DriftMonth] += 10, PlayerInfo[playerid][Coins] += 1;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 1 coins~N~~R~~H~and 10 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 Announce(playerid, lStr, 6000, 3), DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, GivePlayerMoney(playerid, 50000), PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0, PlayerInfo[playerid][InDrift] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, PlayerInfo[playerid][Drift1] = 0, PlayerInfo[playerid][Drift2] = 0, PlayerInfo[playerid][Drift3] = 0, PlayerInfo[playerid][Drift4] = 0, PlayerInfo[playerid][Drift5] = 0, PlayerInfo[playerid][Drift6] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][DriftCP][1] = 0, PlayerInfo[playerid][DriftCP][2] = 0, PlayerInfo[playerid][DriftCP][3] = 0, PlayerInfo[playerid][DriftCP][4] = 0, PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0;
			}
		}
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][DriftCP][4] == 1) 		SetPlayerRaceCheckpoint(playerid, 0, 2283.5173,1513.1539,42.5474, 2276.1602,1395.0610,36.1473, 5), PlayerInfo[playerid][DriftCP][4] = 2;
		else if(PlayerInfo[playerid][DriftCP][4] == 2)  SetPlayerRaceCheckpoint(playerid, 0, 2276.1602,1395.0610,36.1473, 2330.2366,1401.8152,36.1329, 5), PlayerInfo[playerid][DriftCP][4] = 3;
		else if(PlayerInfo[playerid][DriftCP][4] == 3)  SetPlayerRaceCheckpoint(playerid, 0, 2330.2366,1401.8152,36.1329, 2330.3096,1510.0780,29.7505, 5), PlayerInfo[playerid][DriftCP][4] = 4;
		else if(PlayerInfo[playerid][DriftCP][4] == 4)  SetPlayerRaceCheckpoint(playerid, 0, 2330.3096,1510.0780,29.7505, 2278.5171,1511.8125,29.7505, 5), PlayerInfo[playerid][DriftCP][4] = 5;
		else if(PlayerInfo[playerid][DriftCP][4] == 5)  SetPlayerRaceCheckpoint(playerid, 0, 2278.5171,1511.8125,29.7505, 2280.0491,1398.6260,23.3565, 5), PlayerInfo[playerid][DriftCP][4] = 6;
		else if(PlayerInfo[playerid][DriftCP][4] == 6)  SetPlayerRaceCheckpoint(playerid, 0, 2280.0491,1398.6260,23.3565, 2336.2393,1396.0353,23.3521, 5), PlayerInfo[playerid][DriftCP][4] = 7;
		else if(PlayerInfo[playerid][DriftCP][4] == 7)  SetPlayerRaceCheckpoint(playerid, 0, 2336.2393,1396.0353,23.3521, 2335.7024,1509.5243,16.9458, 5), PlayerInfo[playerid][DriftCP][4] = 8;
		else if(PlayerInfo[playerid][DriftCP][4] == 8)  SetPlayerRaceCheckpoint(playerid, 0, 2335.7024,1509.5243,16.9458, 2278.5120,1506.7458,16.9461, 5), PlayerInfo[playerid][DriftCP][4] = 9;
		else if(PlayerInfo[playerid][DriftCP][4] == 9)  SetPlayerRaceCheckpoint(playerid, 0, 2278.5120,1506.7458,16.9461, 2273.5850,1396.8351,10.5474, 5), PlayerInfo[playerid][DriftCP][4] = 10;
		else if(PlayerInfo[playerid][DriftCP][4] == 10) SetPlayerRaceCheckpoint(playerid, 0, 2273.5850,1396.8351,10.5474, 2321.0100,1405.0819,10.5474, 5), PlayerInfo[playerid][DriftCP][4] = 11;
		else if(PlayerInfo[playerid][DriftCP][4] == 11) SetPlayerRaceCheckpoint(playerid, 0, 2321.0100,1405.0819,10.5474, 2309.1758,1531.8423,10.5670, 5), PlayerInfo[playerid][DriftCP][4] = 12;
		else if(PlayerInfo[playerid][DriftCP][4] == 12) SetPlayerRaceCheckpoint(playerid, 1, 2309.1758,1531.8423,10.5670, 2309.1758,1531.8423,10.5670, 5), PlayerInfo[playerid][DriftCP][4] = 13;
		else if(PlayerInfo[playerid][DriftCP][4] == 13)
		{
            new TimeT = gettime() - PlayerInfo[playerid][Drift4], lStr[500];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][boost] == 0)
			{
			 if(TimeT < 40)
			 {
			    PlayerInfo[playerid][DriftPoints] += 50, PlayerInfo[playerid][DriftMonth] += 50, PlayerInfo[playerid][Coins] += 5;
	  			format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 50 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 24 && TimeT < 30)
			 {
			    PlayerInfo[playerid][DriftPoints] += 35, PlayerInfo[playerid][DriftMonth] += 35, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 35 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 29 && TimeT < 35)
			 {
			    PlayerInfo[playerid][DriftPoints] += 25, PlayerInfo[playerid][DriftMonth] += 25, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 25 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 34 && TimeT < 45)
			 {
			    PlayerInfo[playerid][DriftPoints] += 15, PlayerInfo[playerid][DriftMonth] += 15, PlayerInfo[playerid][Coins] += 3;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 3 coins~N~~R~~H~and 15 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 44)
			 {
			    PlayerInfo[playerid][DriftPoints] += 5, PlayerInfo[playerid][DriftMonth] += 5, PlayerInfo[playerid][Coins] += 1;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 1 coins~N~~R~~H~and 5 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 Announce(playerid, lStr, 6000, 3), DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, GivePlayerMoney(playerid, 50000), PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0, PlayerInfo[playerid][InDrift] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, PlayerInfo[playerid][Drift1] = 0, PlayerInfo[playerid][Drift2] = 0, PlayerInfo[playerid][Drift3] = 0, PlayerInfo[playerid][Drift4] = 0, PlayerInfo[playerid][Drift5] = 0, PlayerInfo[playerid][Drift6] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][DriftCP][1] = 0, PlayerInfo[playerid][DriftCP][2] = 0, PlayerInfo[playerid][DriftCP][3] = 0, PlayerInfo[playerid][DriftCP][4] = 0, PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0;
			}
			if(PlayerInfo[playerid][boost] == 1)
			{
			 if(TimeT < 40)
			 {
			    PlayerInfo[playerid][DriftPoints] += 100, PlayerInfo[playerid][DriftMonth] += 100, PlayerInfo[playerid][Coins] += 5;
	  			format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 100 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 24 && TimeT < 30)
			 {
			    PlayerInfo[playerid][DriftPoints] += 70, PlayerInfo[playerid][DriftMonth] += 70, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 70 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 29 && TimeT < 35)
			 {
			    PlayerInfo[playerid][DriftPoints] += 50, PlayerInfo[playerid][DriftMonth] += 50, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 50 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 34 && TimeT < 45)
			 {
			    PlayerInfo[playerid][DriftPoints] += 30, PlayerInfo[playerid][DriftMonth] += 30, PlayerInfo[playerid][Coins] += 3;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 3 coins~N~~R~~H~and 30 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 44)
			 {
			    PlayerInfo[playerid][DriftPoints] += 10, PlayerInfo[playerid][DriftMonth] += 10, PlayerInfo[playerid][Coins] += 1;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 1 coins~N~~R~~H~and 10 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 Announce(playerid, lStr, 6000, 3), DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, GivePlayerMoney(playerid, 50000), PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0, PlayerInfo[playerid][InDrift] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, PlayerInfo[playerid][Drift1] = 0, PlayerInfo[playerid][Drift2] = 0, PlayerInfo[playerid][Drift3] = 0, PlayerInfo[playerid][Drift4] = 0, PlayerInfo[playerid][Drift5] = 0, PlayerInfo[playerid][Drift6] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][DriftCP][1] = 0, PlayerInfo[playerid][DriftCP][2] = 0, PlayerInfo[playerid][DriftCP][3] = 0, PlayerInfo[playerid][DriftCP][4] = 0, PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0;
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][DriftCP][5] == 1) 		SetPlayerRaceCheckpoint(playerid, 0, 1697.8661,-1075.7421,23.9063, 1802.6133,-1065.2660,23.9686, 5), PlayerInfo[playerid][DriftCP][5] = 2;
		else if(PlayerInfo[playerid][DriftCP][5] == 2)  SetPlayerRaceCheckpoint(playerid, 0, 1802.6133,-1065.2660,23.9686, 1747.2184,-1050.8519,23.9609, 5), PlayerInfo[playerid][DriftCP][5] = 3;
		else if(PlayerInfo[playerid][DriftCP][5] == 3)  SetPlayerRaceCheckpoint(playerid, 0, 1747.2184,-1050.8519,23.9609, 1672.5830,-1021.0786,23.8984, 5), PlayerInfo[playerid][DriftCP][5] = 4;
		else if(PlayerInfo[playerid][DriftCP][5] == 4)  SetPlayerRaceCheckpoint(playerid, 0, 1672.5830,-1021.0786,23.8984, 1599.9397,-1027.2545,23.9063, 5), PlayerInfo[playerid][DriftCP][5] = 5;
		else if(PlayerInfo[playerid][DriftCP][5] == 5)  SetPlayerRaceCheckpoint(playerid, 0, 1599.9397,-1027.2545,23.9063, 1647.8746,-1060.5411,23.8984, 5), PlayerInfo[playerid][DriftCP][5] = 6;
		else if(PlayerInfo[playerid][DriftCP][5] == 6)  SetPlayerRaceCheckpoint(playerid, 0, 1647.8746,-1060.5411,23.8984, 1609.6630,-1074.6117,23.9062, 5), PlayerInfo[playerid][DriftCP][5] = 7;
		else if(PlayerInfo[playerid][DriftCP][5] == 7)  SetPlayerRaceCheckpoint(playerid, 0, 1609.6630,-1074.6117,23.9062, 1637.2780,-1128.6415,23.9063, 5), PlayerInfo[playerid][DriftCP][5] = 8;
		else if(PlayerInfo[playerid][DriftCP][5] == 8)  SetPlayerRaceCheckpoint(playerid, 1, 1637.2780,-1128.6415,23.9063, 1637.2780,-1128.6415,23.9063, 5), PlayerInfo[playerid][DriftCP][5] = 9;
		else if(PlayerInfo[playerid][DriftCP][5] == 9)
		{
            new TimeT = gettime() - PlayerInfo[playerid][Drift5], lStr[500];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][boost] == 0)
			{
			 if(TimeT < 40)
			 {
			    PlayerInfo[playerid][DriftPoints] += 50, PlayerInfo[playerid][DriftMonth] += 50, PlayerInfo[playerid][Coins] += 5;
	  			format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 50 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 24 && TimeT < 30)
			 {
			    PlayerInfo[playerid][DriftPoints] += 35, PlayerInfo[playerid][DriftMonth] += 35, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 35 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 29 && TimeT < 35)
			 {
			    PlayerInfo[playerid][DriftPoints] += 25, PlayerInfo[playerid][DriftMonth] += 25, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 25 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 34 && TimeT < 45)
			 {
			    PlayerInfo[playerid][DriftPoints] += 15, PlayerInfo[playerid][DriftMonth] += 15, PlayerInfo[playerid][Coins] += 3;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 3 coins~N~~R~~H~and 15 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 44)
			 {
			    PlayerInfo[playerid][DriftPoints] += 5, PlayerInfo[playerid][DriftMonth] += 5, PlayerInfo[playerid][Coins] += 1;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 1 coins~N~~R~~H~and 5 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 Announce(playerid, lStr, 6000, 3), DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, GivePlayerMoney(playerid, 50000), PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0, PlayerInfo[playerid][InDrift] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, PlayerInfo[playerid][Drift1] = 0, PlayerInfo[playerid][Drift2] = 0, PlayerInfo[playerid][Drift3] = 0, PlayerInfo[playerid][Drift4] = 0, PlayerInfo[playerid][Drift5] = 0, PlayerInfo[playerid][Drift6] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][DriftCP][1] = 0, PlayerInfo[playerid][DriftCP][2] = 0, PlayerInfo[playerid][DriftCP][3] = 0, PlayerInfo[playerid][DriftCP][4] = 0, PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0;
			}
			if(PlayerInfo[playerid][boost] == 1)
			{
			 if(TimeT < 40)
			 {
			    PlayerInfo[playerid][DriftPoints] += 100, PlayerInfo[playerid][DriftMonth] += 100, PlayerInfo[playerid][Coins] += 5;
	  			format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 100 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 24 && TimeT < 30)
			 {
			    PlayerInfo[playerid][DriftPoints] += 70, PlayerInfo[playerid][DriftMonth] += 70, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 70 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 29 && TimeT < 35)
			 {
			    PlayerInfo[playerid][DriftPoints] += 50, PlayerInfo[playerid][DriftMonth] += 50, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 50 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 34 && TimeT < 45)
			 {
			    PlayerInfo[playerid][DriftPoints] += 30, PlayerInfo[playerid][DriftMonth] += 30, PlayerInfo[playerid][Coins] += 3;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 3 coins~N~~R~~H~and 30 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 44)
			 {
			    PlayerInfo[playerid][DriftPoints] += 10, PlayerInfo[playerid][DriftMonth] += 10, PlayerInfo[playerid][Coins] += 1;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 1 coins~N~~R~~H~and 10 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 Announce(playerid, lStr, 6000, 3), DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, GivePlayerMoney(playerid, 50000), PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0, PlayerInfo[playerid][InDrift] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, PlayerInfo[playerid][Drift1] = 0, PlayerInfo[playerid][Drift2] = 0, PlayerInfo[playerid][Drift3] = 0, PlayerInfo[playerid][Drift4] = 0, PlayerInfo[playerid][Drift5] = 0, PlayerInfo[playerid][Drift6] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][DriftCP][1] = 0, PlayerInfo[playerid][DriftCP][2] = 0, PlayerInfo[playerid][DriftCP][3] = 0, PlayerInfo[playerid][DriftCP][4] = 0, PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0;
			}
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][DriftCP][6] == 1) 		SetPlayerRaceCheckpoint(playerid, 0, 1667.2754,943.1505,10.2415, 1691.2776,987.5076,10.3902, 5), PlayerInfo[playerid][DriftCP][6] = 2;
		else if(PlayerInfo[playerid][DriftCP][6] == 2)  SetPlayerRaceCheckpoint(playerid, 0, 1691.2776,987.5076,10.3902, 1628.5242,1011.5881,10.3912, 5), PlayerInfo[playerid][DriftCP][6] = 3;
		else if(PlayerInfo[playerid][DriftCP][6] == 3)  SetPlayerRaceCheckpoint(playerid, 0, 1628.5242,1011.5881,10.3912, 1693.1265,1031.2872,10.3913, 5), PlayerInfo[playerid][DriftCP][6] = 4;
		else if(PlayerInfo[playerid][DriftCP][6] == 4)  SetPlayerRaceCheckpoint(playerid, 0, 1693.1265,1031.2872,10.3913, 1663.8193,1077.3635,10.3903, 5), PlayerInfo[playerid][DriftCP][6] = 5;
		else if(PlayerInfo[playerid][DriftCP][6] == 5)  SetPlayerRaceCheckpoint(playerid, 1, 1663.8193,1077.3635,10.3903, 1667.2754,943.1505,10.2415, 5), PlayerInfo[playerid][DriftCP][6] = 6;
		else if(PlayerInfo[playerid][DriftCP][6] == 6)
		{
            new TimeT = gettime() - PlayerInfo[playerid][Drift6], lStr[500];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][boost] == 0)
			{
			 if(TimeT < 40)
			 {
			    PlayerInfo[playerid][DriftPoints] += 50, PlayerInfo[playerid][DriftMonth] += 50, PlayerInfo[playerid][Coins] += 5;
	  			format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 50 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 24 && TimeT < 30)
			 {
			    PlayerInfo[playerid][DriftPoints] += 35, PlayerInfo[playerid][DriftMonth] += 35, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 35 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 29 && TimeT < 35)
			 {
			    PlayerInfo[playerid][DriftPoints] += 25, PlayerInfo[playerid][DriftMonth] += 25, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 25 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 34 && TimeT < 45)
			 {
			    PlayerInfo[playerid][DriftPoints] += 15, PlayerInfo[playerid][DriftMonth] += 15, PlayerInfo[playerid][Coins] += 3;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 3 coins~N~~R~~H~and 15 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 else if(TimeT > 44)
			 {
			    PlayerInfo[playerid][DriftPoints] += 5, PlayerInfo[playerid][DriftMonth] += 5, PlayerInfo[playerid][Coins] += 1;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 1 coins~N~~R~~H~and 5 driftpoints~N~~W~~H~because you have finished~N~~W~~H~ in~G~~H~ %d seconds", TimeT);
			 }
			 Announce(playerid, lStr, 6000, 3), DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, GivePlayerMoney(playerid, 50000), PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0, PlayerInfo[playerid][InDrift] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, PlayerInfo[playerid][Drift1] = 0, PlayerInfo[playerid][Drift2] = 0, PlayerInfo[playerid][Drift3] = 0, PlayerInfo[playerid][Drift4] = 0, PlayerInfo[playerid][Drift5] = 0, PlayerInfo[playerid][Drift6] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][DriftCP][1] = 0, PlayerInfo[playerid][DriftCP][2] = 0, PlayerInfo[playerid][DriftCP][3] = 0, PlayerInfo[playerid][DriftCP][4] = 0, PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0;
			}
			if(PlayerInfo[playerid][boost] == 1)
			{
			 if(TimeT < 40)
			 {
			    PlayerInfo[playerid][DriftPoints] += 100, PlayerInfo[playerid][DriftMonth] += 100, PlayerInfo[playerid][Coins] += 5;
	  			format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 100 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 24 && TimeT < 30)
			 {
			    PlayerInfo[playerid][DriftPoints] += 70, PlayerInfo[playerid][DriftMonth] += 70, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 70 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 29 && TimeT < 35)
			 {
			    PlayerInfo[playerid][DriftPoints] += 50, PlayerInfo[playerid][DriftMonth] += 50, PlayerInfo[playerid][Coins] += 5;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 5 coins~N~~R~~H~and 50 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 34 && TimeT < 45)
			 {
			    PlayerInfo[playerid][DriftPoints] += 30, PlayerInfo[playerid][DriftMonth] += 30, PlayerInfo[playerid][Coins] += 3;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 3 coins~N~~R~~H~and 30 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 else if(TimeT > 44)
			 {
			    PlayerInfo[playerid][DriftPoints] += 10, PlayerInfo[playerid][DriftMonth] += 10, PlayerInfo[playerid][Coins] += 1;
				format(lStr, 500, "~W~~H~You won~N~~R~~H~$50000, 1 coins~N~~R~~H~and 10 driftpoints~N~~R~~H~with boost!", TimeT);
			 }
			 Announce(playerid, lStr, 6000, 3), DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, GivePlayerMoney(playerid, 50000), PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0, PlayerInfo[playerid][InDrift] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][Drift0] = 0, PlayerInfo[playerid][Drift1] = 0, PlayerInfo[playerid][Drift2] = 0, PlayerInfo[playerid][Drift3] = 0, PlayerInfo[playerid][Drift4] = 0, PlayerInfo[playerid][Drift5] = 0, PlayerInfo[playerid][Drift6] = 0, PlayerInfo[playerid][DriftCP][0] = 0, PlayerInfo[playerid][DriftCP][1] = 0, PlayerInfo[playerid][DriftCP][2] = 0, PlayerInfo[playerid][DriftCP][3] = 0, PlayerInfo[playerid][DriftCP][4] = 0, PlayerInfo[playerid][DriftCP][5] = 0,  PlayerInfo[playerid][DriftCP][6] = 0;
			}
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Lastman System
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	if(PlayerInfo[playerid][InLastCar] == 1)
	{
        new vehicleid = GetPlayerVehicleID(playerid);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[playerid][LastCarCP] == 1)  SetPlayerRaceCheckpoint(playerid, 0, -1531.0474,-212.6278,1050.5518, -1481.2993,-274.1350,1050.0674, 5), PlayerInfo[playerid][LastCarCP] = 2;
		else if(PlayerInfo[playerid][LastCarCP] == 2)  SetPlayerRaceCheckpoint(playerid, 0, -1405.2524,-257.9667,1050.9973, -1392.4979,-161.9886,1051.1273, 5), PlayerInfo[playerid][LastCarCP] = 3;
		else if(PlayerInfo[playerid][LastCarCP] == 3)  SetPlayerRaceCheckpoint(playerid, 0, -1314.5923,-139.2938,1050.0608, -1264.4185,-211.6196,1050.5629, 5), PlayerInfo[playerid][LastCarCP] = 4;
		else if(PlayerInfo[playerid][LastCarCP] == 4)  SetPlayerRaceCheckpoint(playerid, 0, -1331.8685,-279.9832,1046.7928, -1395.7628,-236.4186,1043.2023, 5), PlayerInfo[playerid][LastCarCP] = 5;
		else if(PlayerInfo[playerid][LastCarCP] == 5)  Announce(playerid, "~G~~H~lap~Y~~H~ 1~R~~H~/~Y~~H~5", 5, 1), PlayerInfo[playerid][LastCarCP] = 6;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][LastCarCP] == 6)  SetPlayerRaceCheckpoint(playerid, 0, -1531.0474,-212.6278,1050.5518, -1481.2993,-274.1350,1050.0674, 5), PlayerInfo[playerid][LastCarCP] = 7;
		else if(PlayerInfo[playerid][LastCarCP] == 7)  SetPlayerRaceCheckpoint(playerid, 0, -1405.2524,-257.9667,1050.9973, -1392.4979,-161.9886,1051.1273, 5), PlayerInfo[playerid][LastCarCP] = 8;
		else if(PlayerInfo[playerid][LastCarCP] == 8)  SetPlayerRaceCheckpoint(playerid, 0, -1314.5923,-139.2938,1050.0608, -1264.4185,-211.6196,1050.5629, 5), PlayerInfo[playerid][LastCarCP] = 9;
		else if(PlayerInfo[playerid][LastCarCP] == 9)  SetPlayerRaceCheckpoint(playerid, 0, -1331.8685,-279.9832,1046.7928, -1395.7628,-236.4186,1043.2023, 5), PlayerInfo[playerid][LastCarCP] = 10;
		else if(PlayerInfo[playerid][LastCarCP] == 10)  Announce(playerid, "~G~~H~lap~Y~~H~ 2~R~~H~/~Y~~H~5", 5, 1), PlayerInfo[playerid][LastCarCP] = 11;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][LastCarCP] == 11)  SetPlayerRaceCheckpoint(playerid, 0, -1531.0474,-212.6278,1050.5518, -1481.2993,-274.1350,1050.0674, 5), PlayerInfo[playerid][LastCarCP] = 12;
		else if(PlayerInfo[playerid][LastCarCP] == 12)  SetPlayerRaceCheckpoint(playerid, 0, -1405.2524,-257.9667,1050.9973, -1392.4979,-161.9886,1051.1273, 5), PlayerInfo[playerid][LastCarCP] = 13;
		else if(PlayerInfo[playerid][LastCarCP] == 13)  SetPlayerRaceCheckpoint(playerid, 0, -1314.5923,-139.2938,1050.0608, -1264.4185,-211.6196,1050.5629, 5), PlayerInfo[playerid][LastCarCP] = 14;
		else if(PlayerInfo[playerid][LastCarCP] == 14)  SetPlayerRaceCheckpoint(playerid, 0, -1331.8685,-279.9832,1046.7928, -1395.7628,-236.4186,1043.2023, 5), PlayerInfo[playerid][LastCarCP] = 15;
		else if(PlayerInfo[playerid][LastCarCP] == 15)  Announce(playerid, "~G~~H~lap~Y~~H~ 3~R~~H~/~Y~~H~5", 5, 1), PlayerInfo[playerid][LastCarCP] = 16;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][LastCarCP] == 16)  SetPlayerRaceCheckpoint(playerid, 0, -1531.0474,-212.6278,1050.5518, -1481.2993,-274.1350,1050.0674, 5), PlayerInfo[playerid][LastCarCP] = 17;
		else if(PlayerInfo[playerid][LastCarCP] == 17)  SetPlayerRaceCheckpoint(playerid, 0, -1405.2524,-257.9667,1050.9973, -1392.4979,-161.9886,1051.1273, 5), PlayerInfo[playerid][LastCarCP] = 18;
		else if(PlayerInfo[playerid][LastCarCP] == 18)  SetPlayerRaceCheckpoint(playerid, 0, -1314.5923,-139.2938,1050.0608, -1264.4185,-211.6196,1050.5629, 5), PlayerInfo[playerid][LastCarCP] = 19;
		else if(PlayerInfo[playerid][LastCarCP] == 19)  SetPlayerRaceCheckpoint(playerid, 0, -1331.8685,-279.9832,1046.7928, -1395.7628,-236.4186,1043.2023, 5), PlayerInfo[playerid][LastCarCP] = 20;
		else if(PlayerInfo[playerid][LastCarCP] == 20)  Announce(playerid, "~G~~H~lap~Y~~H~ 4~R~~H~/~Y~~H~5", 5, 1), PlayerInfo[playerid][LastCarCP] = 21;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][LastCarCP] == 21)  SetPlayerRaceCheckpoint(playerid, 0, -1531.0474,-212.6278,1050.5518, -1481.2993,-274.1350,1050.0674, 5), PlayerInfo[playerid][LastCarCP] = 22;
		else if(PlayerInfo[playerid][LastCarCP] == 22)  SetPlayerRaceCheckpoint(playerid, 0, -1405.2524,-257.9667,1050.9973, -1392.4979,-161.9886,1051.1273, 5), PlayerInfo[playerid][LastCarCP] = 23;
		else if(PlayerInfo[playerid][LastCarCP] == 23)  SetPlayerRaceCheckpoint(playerid, 0, -1314.5923,-139.2938,1050.0608, -1264.4185,-211.6196,1050.5629, 5), PlayerInfo[playerid][LastCarCP] = 24;
		else if(PlayerInfo[playerid][LastCarCP] == 24)  SetPlayerRaceCheckpoint(playerid, 0, -1331.8685,-279.9832,1046.7928, -1395.7628,-236.4186,1043.2023, 5), PlayerInfo[playerid][LastCarCP] = 25;
		else if(PlayerInfo[playerid][LastCarCP] == 25)  Announce(playerid, "~g~~H~you won~N~~Y~~H~+15 coins, +5000$", 3000, 3), PlayerInfo[playerid][LastCarCP] = 0, PlayerInfo[playerid][Coins] += 15, PlayerInfo[playerid][Money] += 5000, DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][InLastCar] = 0, SpawnPlayer(playerid), SetPlayerInterior(playerid, 0), SetPlayerVirtualWorld(playerid, 0), DestroyVehicle(vehicleid);
	}
    return true;
}
function GetJobIfFinished(playerid)
{
    if(PlayerInfo[playerid][JobsFinishedCount] == 8)
	{
	    if(PlayerInfo[playerid][GoldVIPTaken] == 0)
	    {
		    Announce(playerid, "~R~~H~Wou will won ~Y~~H~vip gold~N~~R~~H~for completed the~N~~R~~H~jobs for~W~~H~ 8/8~R~~H~!", 6000, 3);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[playerid][GoldVIPTaken] = 1;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[playerid][pVIP] = 2;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(PlayerInfo[playerid][TVip] == 1) PlayerInfo[playerid][VIPTime] = 0, PlayerInfo[playerid][TVip] = 0;
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerEnterCheckpoint(playerid)
{
	if(CPS_IsPlayerInAnyCheckpoint(playerid)) IsPlayerInASpecialCP(playerid);
	else
	{
		new Float:WPos[4]; GetPlayerPos(playerid, WPos[0], WPos[1], WPos[2]), GetPlayerFacingAngle(playerid, WPos[3]); eString[0] = EOS;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// -> Taxi Reuqest Job
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][GoingToFinishTaxi] == 0)
		{
			KillTimer(PlayerInfo[playerid][TaxiUnderTimer]);
			DisablePlayerCheckpoint(playerid);
			FormatMSG(PlayerInfo[playerid][TaxiAcceptedFor], RED, "%s{FFFFFF} a sosit cu {FFFF00}TAXI.{FFFFFF} Te rugam sa intri in masina apasand tasta{FF0000} G{FFFFFF}!", PN(playerid));
		}
		if(PlayerInfo[playerid][GoingToFinishTaxi] == 1)
		{
		    PlayerInfo[PlayerInfo[playerid][TaxiAcceptedFor]][TaxiLiber] = 0;
			PlayerInfo[playerid][TaxiCheckPointSeted] = 0;
			PlayerInfo[playerid][GoingToFinishTaxi] = 0;
		    FormatMSG(PlayerInfo[playerid][TaxiAcceptedFor], RED, "%s{FFFFFF} a ajuns la destinatia dorita! Foloseste {FFFF00}/give money{FFFFFF} sau{FFFF00} /give coins{FFFFFF} pentru al rasplatii!", PN(playerid));
		    PlayerInfo[PlayerInfo[playerid][TaxiAcceptedFor]][TaxiReuquested] = 0;
		    PlayerInfo[playerid][TaxiAcceptedFor] = -1;
		    DisablePlayerCheckpoint(playerid);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// -> Spring Quest
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][InSpringQuest][0] >= 1 && !IsPlayerInAnyVehicle(playerid) && PlayerInfo[playerid][InSpringQuest][1] == 0 && PlayerInfo[playerid][InSpringQuest][2] == 0)
		{
		    ApplyAnimation(playerid, "COP_AMBIENT", "Copbrowse_shake", 4.1, 0, 1, 1, 1, 1, 1);
		    SetTimerEx("GetUpFromSpringQuest", 5000, false, "i", playerid);
		}
		if(PlayerInfo[playerid][InSpringQuest][1] == 1)
		{
		    PlayerInfo[playerid][InSpringQuest][1] = 0;
		    RemovePlayerAttachedObject(playerid, 0);
		    DisablePlayerCheckpoint(playerid);
		    ClearAnimations(playerid);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(PlayerInfo[playerid][InSpringQuest][0] == 1)
		    {
		        SetPlayerCheckpoint(playerid, QUEST_WOOD_2, 1);
				PlayerInfo[playerid][InSpringQuest][0] = 2;
				PlayerInfo[playerid][QuestObjectInVehicle][1] = CreateObject(19636, 0, 0, 0, 0, 0, 0, 80);
				AttachObjectToVehicle(PlayerInfo[playerid][QuestObjectInVehicle][1], PlayerInfo[playerid][SpringQuestVehicle], -0.200000, -0.900000, -0.300000, 0.000000, 0.000000, 0.000000);
		    }
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    else if(PlayerInfo[playerid][InSpringQuest][0] == 2)
		    {
		        SetPlayerCheckpoint(playerid, QUEST_WOOD_3, 1);
				PlayerInfo[playerid][InSpringQuest][0] = 3;
				PlayerInfo[playerid][QuestObjectInVehicle][2] = CreateObject(19636, 0, 0, 0, 0, 0, 0, 80);
				AttachObjectToVehicle(PlayerInfo[playerid][QuestObjectInVehicle][2], PlayerInfo[playerid][SpringQuestVehicle], 0.400000, -0.899999, -0.300000, 0.000000, 0.000000, 0.000000);
		    }
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    else if(PlayerInfo[playerid][InSpringQuest][0] == 3)
		    {
		        SetPlayerCheckpoint(playerid, QUEST_WOOD_4, 1);
				PlayerInfo[playerid][InSpringQuest][0] = 4;
				PlayerInfo[playerid][QuestObjectInVehicle][3] = CreateObject(19636, 0, 0, 0, 0, 0, 0, 80);
				AttachObjectToVehicle(PlayerInfo[playerid][QuestObjectInVehicle][3], PlayerInfo[playerid][SpringQuestVehicle], -0.300000, -1.800000, -0.300000, 0.000000, 0.000000, 0.000000);
		    }
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    else if(PlayerInfo[playerid][InSpringQuest][0] == 4)
		    {
		        SetPlayerCheckpoint(playerid, QUEST_WOOD_5, 1);
				PlayerInfo[playerid][InSpringQuest][0] = 5;
				PlayerInfo[playerid][QuestObjectInVehicle][4] = CreateObject(19636, 0, 0, 0, 0, 0, 0, 80);
				AttachObjectToVehicle(PlayerInfo[playerid][QuestObjectInVehicle][4], PlayerInfo[playerid][SpringQuestVehicle], 0.300000, -1.800000, -0.300000, 0.000000, 0.000000, 0.000000);
		    }
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    else if(PlayerInfo[playerid][InSpringQuest][0] == 5)
		    {
		        SetPlayerCheckpoint(playerid, QUEST_WOOD_6, 1);
				PlayerInfo[playerid][InSpringQuest][0] = 6;
				PlayerInfo[playerid][QuestObjectInVehicle][5] = CreateObject(19636, 0, 0, 0, 0, 0, 0, 80);
				AttachObjectToVehicle(PlayerInfo[playerid][QuestObjectInVehicle][5], PlayerInfo[playerid][SpringQuestVehicle], -0.500000, -1.000000, -0.100000, 0.000000, 0.000000, 0.000000);
		    }
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    else if(PlayerInfo[playerid][InSpringQuest][0] == 6)
		    {
		        SetPlayerCheckpoint(playerid, QUEST_WOOD_7, 1);
				PlayerInfo[playerid][InSpringQuest][0] = 7;
				PlayerInfo[playerid][QuestObjectInVehicle][6] = CreateObject(19636, 0, 0, 0, 0, 0, 0, 80);
				AttachObjectToVehicle(PlayerInfo[playerid][QuestObjectInVehicle][6], PlayerInfo[playerid][SpringQuestVehicle], 0.100000, -1.000000, -0.100000, 0.000000, 0.000000, 0.000000);
		    }
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    else if(PlayerInfo[playerid][InSpringQuest][0] == 7)
		    {
		        SetPlayerCheckpoint(playerid, QUEST_WOOD_8, 1);
				PlayerInfo[playerid][InSpringQuest][0] = 8;
				PlayerInfo[playerid][QuestObjectInVehicle][7] = CreateObject(19636, 0, 0, 0, 0, 0, 0, 80);
				AttachObjectToVehicle(PlayerInfo[playerid][QuestObjectInVehicle][7], PlayerInfo[playerid][SpringQuestVehicle], 0.600000, -1.000000, -0.100000, 0.000000, 0.000000, 0.000000);
		    }
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    else if(PlayerInfo[playerid][InSpringQuest][0] == 8)
		    {
		        SetPlayerCheckpoint(playerid, QUEST_WOOD_9, 1);
				PlayerInfo[playerid][InSpringQuest][0] = 9;
				PlayerInfo[playerid][QuestObjectInVehicle][8] = CreateObject(19636, 0, 0, 0, 0, 0, 0, 80);
				AttachObjectToVehicle(PlayerInfo[playerid][QuestObjectInVehicle][8], PlayerInfo[playerid][SpringQuestVehicle], -0.500000, -1.900000, -0.100000, 0.000000, 0.000000, 0.000000);
		    }
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    else if(PlayerInfo[playerid][InSpringQuest][0] == 9)
		    {
		        SetPlayerCheckpoint(playerid, QUEST_WOOD_10, 1);
				PlayerInfo[playerid][InSpringQuest][0] = 10;
				PlayerInfo[playerid][QuestObjectInVehicle][9] = CreateObject(19636, 0, 0, 0, 0, 0, 0, 80);
				AttachObjectToVehicle(PlayerInfo[playerid][QuestObjectInVehicle][9], PlayerInfo[playerid][SpringQuestVehicle], 0.100000, -1.800000, -0.100000, 0.000000, 0.000000, 0.000000);
		    }
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    else if(PlayerInfo[playerid][InSpringQuest][0] == 10)
		    {
		        SetPlayerCheckpoint(playerid, QUEST_WOOD_11, 1);
				PlayerInfo[playerid][InSpringQuest][0] = 11;
				PlayerInfo[playerid][QuestObjectInVehicle][10] = CreateObject(19636, 0, 0, 0, 0, 0, 0, 80);
				AttachObjectToVehicle(PlayerInfo[playerid][QuestObjectInVehicle][10], PlayerInfo[playerid][SpringQuestVehicle], 0.599999, -1.800000, -0.100000, 0.000000, 0.000000, 0.000000);
		    }
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    else if(PlayerInfo[playerid][InSpringQuest][0] == 11)
		    {
		        SetPlayerCheckpoint(playerid, QUEST_WOOD_12, 1);
				PlayerInfo[playerid][InSpringQuest][0] = 12;
				PlayerInfo[playerid][QuestObjectInVehicle][11] = CreateObject(19636, 0, 0, 0, 0, 0, 0, 80);
				AttachObjectToVehicle(PlayerInfo[playerid][QuestObjectInVehicle][11], PlayerInfo[playerid][SpringQuestVehicle], -0.500000, -1.400000, 0.000000, 0.000000, 0.000000, 0.000000);
		    }
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    else if(PlayerInfo[playerid][InSpringQuest][0] == 12)
		    {
		        SetPlayerCheckpoint(playerid, QUEST_WOOD_13, 1);
				PlayerInfo[playerid][InSpringQuest][0] = 13;
				PlayerInfo[playerid][QuestObjectInVehicle][12] = CreateObject(19636, 0, 0, 0, 0, 0, 0, 80);
				AttachObjectToVehicle(PlayerInfo[playerid][QuestObjectInVehicle][12], PlayerInfo[playerid][SpringQuestVehicle], 0.100000, -1.400000, 0.000000, 0.000000, 0.000000, 0.000000);
		    }
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    else if(PlayerInfo[playerid][InSpringQuest][0] == 13)
		    {
		        PlayerInfo[playerid][QuestObjectInVehicle][13] = CreateObject(19636, 0, 0, 0, 0, 0, 0, 80);
		        AttachObjectToVehicle(PlayerInfo[playerid][QuestObjectInVehicle][13], PlayerInfo[playerid][SpringQuestVehicle], 0.600000, -1.400000, 0.000000, 0.000000, 0.000000, 0.000000);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        eString[0] = EOS;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(eString, sizeof(eString), "{FFFFFF}Ai finalizat culesul de mari!\n\
										  		  {FFFFFF}Acum ti-a fost setat un checkpoint\n\
										   		  {FFFFFF}unde v-a trebuii sa le vinzi! Succes!");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_EMPTY, MSGBOX, "Spring Quest", eString, "Ok", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerInfo[playerid][InSpringQuest][1] = 0;
				PlayerInfo[playerid][QuestAppleAvailable] = 13;
				SetTimerEx("EnableQuest2", 1000, false, "i", playerid);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				RandomQuestToSelling(playerid);
		    }
		}
		if(PlayerInfo[playerid][InSpringQuest][2] == 1)
		{
		    if(PlayerInfo[playerid][QuestAppleAvailable] != 1)
		    {
		        DestroyObject(PlayerInfo[playerid][QuestObjectInVehicle][PlayerInfo[playerid][QuestAppleAvailable]]);
			    PlayerInfo[playerid][QuestAppleAvailable] -= 1;
			    PlayerInfo[playerid][QuestAppleSold] += 1;
			    RandomQuestToSelling(playerid);
				RemovePlayerAttachedObject(playerid, 0);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    eString[0] = EOS;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(eString, sizeof(eString), "{FFFFFF}Ti-a fost setat un nou checkpoint!\n\
										  		  {FFFFFF}Mari vandute:{FFFF00} %d/13", PlayerInfo[playerid][QuestAppleSold]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_EMPTY, MSGBOX, "Spring Quest", eString, "Ok", "");
			}
			else if(PlayerInfo[playerid][QuestAppleAvailable] == 1)
		    {
		        new string[560]; eString[0] = EOS;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        DisablePlayerCheckpoint(playerid);
		        DestroyObject(PlayerInfo[playerid][QuestObjectInVehicle][1]);
		        DestroyVehicle(PlayerInfo[playerid][SpringQuestVehicle]);
		        PlayerInfo[playerid][InSpringQuest][0] = 0;
	    		PlayerInfo[playerid][InSpringQuest][1] = 0;
	    		PlayerInfo[playerid][InSpringQuest][2] = 0;
		        PlayerInfo[playerid][QuestAppleAvailable] = 0;
		        PlayerInfo[playerid][QuestAppleSold] = 0;
		        RemovePlayerAttachedObject(playerid, 0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        new gemsrandom = randomEx(1, 3);
		        new coinsrandom = randomEx(30, 100);
		        new moneyrandom = randomEx(300, 600);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(string, sizeof(string), "%d gems, %d coins & %d money", gemsrandom, coinsrandom, moneyrandom);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] + gemsrandom);
		        UpdatePlayer(PN(playerid), "Coins", PlayerInfo[playerid][Coins] + coinsrandom);
		        UpdatePlayer(PN(playerid), "Money", PlayerInfo[playerid][Coins] + moneyrandom);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerInfo[playerid][Gems] += gemsrandom;
		        PlayerInfo[playerid][Coins] += coinsrandom;
		        PlayerInfo[playerid][Money] += moneyrandom;
		        GivePlayerMoney(playerid, moneyrandom);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(eString, sizeof(eString), "{FFFFFF}Ai vandut toata marfa stransa de tine!\n\
										  		  {FFFFFF}Ai primit{FF0000} %s{FFFFFF}!", string);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_EMPTY, MSGBOX, "Spring Quest", eString, "Ok", "");
		    }
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][InStunt] == 1)
		{
			if(PlayerInfo[playerid][boost] == 0)
		 	{
		        DisablePlayerCheckpoint(playerid), PlayerInfo[playerid][InStunt] = 0, PlayerInfo[playerid][Coins] += 3, PlayerInfo[playerid][StuntMonth] += 5, PlayerInfo[playerid][StuntPoints] += 5;
	            Announce(playerid, "~w~~h~Stunt ~g~~h~~H~Finished~n~~w~~h~+3 ~g~~h~~H~Coins~n~~w~~h~+5 ~g~~h~~H~Stunt Points", 6000, 3);
		 	}
		 	if(PlayerInfo[playerid][boost] == 1)
		 	{
				DisablePlayerCheckpoint(playerid), PlayerInfo[playerid][InStunt] = 0, PlayerInfo[playerid][Coins] += 3, PlayerInfo[playerid][StuntMonth] += 10, PlayerInfo[playerid][StuntPoints] += 10;
	        	Announce(playerid, "~w~~h~Stunt ~g~~h~~H~Finished~n~~w~~h~+6 ~g~~h~~H~Coins~n~~w~~h~+10 ~g~~h~~H~Stunt Points~N~~R~~H~with boost!", 6000, 3);
	 	    }
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][JobID] != 0)
		{
		    if(PlayerInfo[playerid][JobID] == 0) DisablePlayerCheckpoint(playerid), PlayerInfo[playerid][JobID] = 0;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    else if(PlayerInfo[playerid][JobID] == 1) // Pizza Boy
		    {
		    	new randomh = random(MAX_HOUSES);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, HouseInfo[randomh][HX], HouseInfo[randomh][HY], HouseInfo[randomh][HZ], 3);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        new randomcoins = random(100), randommoney = random(10000000);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerInfo[playerid][Coins] = randomcoins;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				GivePlayerMoney(playerid, randommoney), PlayerInfo[playerid][Money] = randommoney;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				MSG(playerid, YELLOW, "You got {FF0000}%d {FFFF00}coins and {00FF22}$%d{FFFF00}!", randomcoins, randommoney);
				Announce(playerid, "~h~~w~Pizza ~r~delivered~n~~y~Please go to next checkpoint!~n~~w~to stop work type ~r~/stopwork~w~!", 5000, 3);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				// -> Job Finished + 1
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(PlayerInfo[playerid][JobFinished][1] != 1) PlayerInfo[playerid][JobFinished][1] = 1, PlayerInfo[playerid][JobsFinishedCount] += 1;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				GetJobIfFinished(playerid);
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    else if(PlayerInfo[playerid][JobID] == 2) // Farmer
		    {
		        if(FarmerCP[playerid] == -1) FarmerCP[playerid] = -1;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else if(FarmerCP[playerid] == 0)
				{
				    if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
		        	{
					    Announce(playerid, "~h~~w~Deabea ai inceput sa muncesti!", 5000, 3);
		        		DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -551.9569, -1383.7980, 16.0930, 3);
		        		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        		FarmerCP[playerid] = 1;
					}
					else Announce(playerid, "~h~~w~Ai uitat sa iei remorca pentru macinat cu tine~n~Intoarce-te inapoi la ferma!", 5000, 3);
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        	else if(FarmerCP[playerid] == 1)
	        	{
	        	    if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
	        		{
		        	    Announce(playerid, "~h~~w~Munceste mai mult!", 5000, 3);
		        		DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -270.9376,-1410.6796,10.8978, 3);
		        		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        		FarmerCP[playerid] = 2;
					}
					else Announce(playerid, "~h~~w~Nu ai remorca atasa te tractor!", 5000, 3);
	        	}
	        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        	else if(FarmerCP[playerid] == 2)
	        	{
	        	    if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
		        	{
		        	    Announce(playerid, "~h~~w~Munceste mai mult!", 5000, 3);
		        		DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -317.8186,-1531.6299,13.0182, 3);
		        		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        		FarmerCP[playerid] = 3;
					}
					else Announce(playerid, "~h~~w~Nu ai remorca atasa te tractor!", 5000, 3);
	        	}
	        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        	else if(FarmerCP[playerid] == 3)
	        	{
	        	    if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
		        	{
		        	    Announce(playerid, "~h~~w~Du-te la ferma!", 5000, 3);
		        		DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -373.2662,-1427.2262,25.7266, 3);
		        		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        		FarmerCP[playerid] = 4;
					}
					else Announce(playerid, "~h~~w~Nu ai remorca atasa te tractor!", 5000, 3);
	        	}
	        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        	else if(FarmerCP[playerid] == 4)
	        	{
	        	    DestroyVehicle(JobVehicle[playerid]), JobVehicle[playerid] = 0;
	        	    DestroyVehicle(JobTrailer[playerid]), JobTrailer[playerid] = 0;
	        	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        	    JobVehicle2[playerid] = 499;
	        	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        	    DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 1342.9952, -1749.5861, 13.0951, 1.5);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        JobVehicle[playerid] = AddStaticVehicleEx(JobVehicle2[playerid], -377.7377, -1445.1321, 25.7194, 359.6982, 1, 1, -1);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        SPD(playerid, DIALOG_EMPTY, MSGBOX, "Farmer", "{FFFF00}Credeai ca ai terminat?\n\n{FFFFFF}Du-te si livreaza marfa in oras pentru a obtine bani pe ele!\n{FFFFFF}Masina pentru livrare se afla in apropriere!\n\n{FFFF00}Odata ce ai terminat de livrat marfa intoarcete inapoi la ferma!", "Continue", "");
	        		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        		FarmerCP[playerid] = 5;
	        	}
	        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        	else if(FarmerCP[playerid] == 5)
	        	{
	        	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == JobVehicle2[playerid])
	        	    {
		        	    Announce(playerid, "~h~~w~Du-te inapoi la ferma!", 5000, 3);
		        	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	    DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -377.0614, -1438.1483, 25.7266, 3);
		        	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	    FarmerCP[playerid] = 6;
					}
					else
					{
	        	    	DisablePlayerCheckpoint(playerid), DestroyVehicle(JobVehicle[playerid]), JobVehicle[playerid] = 0, JobVehicle2[playerid] = 0, PlayerInfo[playerid][JobID] = 0, FarmerCP[playerid] = 0;
	                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
						Announce(playerid, "~h~~w~Nu te alfi in vehiculul de transport de marfa~n~Job esuat!", 5000, 3);
					}
	        	}
	        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        	else if(FarmerCP[playerid] == 6)
	        	{
	        	    new String[256], randomcoins = random(100), randommoney = random(100000000);
	        	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        	    format(String, sizeof(String), "{FFFF00}Esti un adevarat fermier si un bun negustor, ferma este mandra de tine!\n{FFFF00}Ai fost rasplatit cu {FF0000}%d coins si $%d{FFFF00}!\n\n{FFFFFF}Pentru a incepe alt job tasteaza comanda /jobs si incearca alt job!", randomcoins, randommoney);
	        	    SPD(playerid, DIALOG_EMPTY, MSGBOX, "Farmer", String, "Thanks", "");
	        	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        	    PlayerInfo[playerid][Coins] += randomcoins;
	        	    GivePlayerMoney(playerid, randommoney), PlayerInfo[playerid][Money] += randommoney;
	        	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        	    DisablePlayerCheckpoint(playerid), DestroyVehicle(JobVehicle[playerid]), JobVehicle[playerid] = 0, JobVehicle2[playerid] = 0, PlayerInfo[playerid][JobID] = 0, FarmerCP[playerid] = -1;
	        	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					// -> Job Finished + 1
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					if(PlayerInfo[playerid][JobFinished][2] != 1) PlayerInfo[playerid][JobFinished][2] = 1, PlayerInfo[playerid][JobsFinishedCount] += 1;
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					GetJobIfFinished(playerid);
	    		}
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    else if(PlayerInfo[playerid][JobID] == 3) // Trucker
		    {
				if(TruckerCP[playerid] == 0)
				{
		            if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SendError(playerid, "You must have the Trailer Attached to finish this Job!");
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            Announce(playerid, "~h~~w~Ai ajuns la destinatie!~n~Du-te la urmatorul ~y~~h~checkpoint ~w~~h~pentru a-ti primi bani!", 5000, 3);
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					DestroyVehicle(JobTrailer[playerid]), JobTrailer[playerid] = 0, DisablePlayerCheckpoint(playerid);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					TruckerCP[playerid] = 1, TruckerStep[playerid] = 1;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SetPlayerCheckpoint(playerid, 80.3614, -251.1722, 1.5355, 6.0);
				}
				else if(TruckerCP[playerid] == 1)
				{
			        DisablePlayerCheckpoint(playerid), TruckerCP[playerid] = 0, TruckerStep[playerid] = -1;
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    JobTrailer[playerid] = AddStaticVehicleEx(435, 64.9157, -283.4872, 2.2218, 356.4131, 1, 1, -1);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					format(eString, sizeof(eString), "Creek (LV)\nPilson Intersection (LV)\nBattery Point (SF)\nOcean Docks (LS)\n\
					Whetstone (SF)\nFlint County (SF)\nDoherty (SF)\nPalisades (SF)\nBayside (SF)\nCommerce (LS)\n\
					Las Payasadas (LV)\nLas Venturas Airport (LV)\nEast Los Santos (LS)\nLinden Side (LV)\nAngel Pine (SF)");
					SPD(playerid, DIALOG_TRUCKER, LIST, "Mission Selection", eString, "Select", "");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					new randomcoins = random(100), randommoney = random(10000000);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] += randomcoins;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					GivePlayerMoney(playerid, randommoney), PlayerInfo[playerid][Money] += randommoney;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					MSG(playerid, YELLOW, "Ai fost recompesat cu {FF0000}%d {FFFF00}coins si {00FF22}$%d{FFFF00}!", randomcoins, randommoney);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					// -> Job Finished + 1
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					if(PlayerInfo[playerid][JobFinished][3] != 1) PlayerInfo[playerid][JobFinished][3] = 1, PlayerInfo[playerid][JobsFinishedCount] += 1;
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					GetJobIfFinished(playerid);
				}
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			else if(PlayerInfo[playerid][JobID] == 4) // Robber of Cars
			{
			    if(RobberCP[playerid] == -1) RobberCP[playerid] = -1;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(RobberCP[playerid] == 0)
			    {
		            SPD(playerid, DIALOG_EMPTY, MSGBOX, "Robber of Cars", "{FFFF00}Ai furat masina de tip {FF0000}Infernus{FFFF00}!\n\n{FFFFFF}Du-te la dealerul de pe piata neagra!\n{FFFFFF}Ti-am adaugat un checkpoint pe harta catre dealer-ul din Los Santos!", "Continue", "");
		            SetPlayerCheckpoint(playerid, 2784.9260, -2494.0730, 13.3808, 6.0);
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					DestroyVehicle(JobVehicle[playerid]), JobVehicle[playerid] = 0, RobberCP[playerid] = 1;
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else if(RobberCP[playerid] == 1)
				{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == CarTheftID[playerid])
	        	    {
					    DestroyVehicle(CarToTheft[playerid]), CarToTheft[playerid] = 0, DisablePlayerCheckpoint(playerid), PlayerInfo[playerid][JobID] = 0, RobberCP[playerid] = -1;
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
						new randomcoins = random(100), randommoney = random(10000000);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
						PlayerInfo[playerid][Coins] += randomcoins;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
						GivePlayerMoney(playerid, randommoney), PlayerInfo[playerid][Money] += randommoney;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
						MSG(playerid, YELLOW, "Ai fost recompesat pentru furtul masini de tip Infernus cu {FF0000}%d {FFFF00}coins si {00FF22}$%d{FFFF00}!", randomcoins, randommoney);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
						// -> Job Finished + 1
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
						if(PlayerInfo[playerid][JobFinished][4] != 1) PlayerInfo[playerid][JobFinished][4] = 1, PlayerInfo[playerid][JobsFinishedCount] += 1;
	                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
						GetJobIfFinished(playerid);
					}
					else
					{
					    Announce(playerid, "~h~~w~Job Esuat~n~~r~~h~Ai gresit masina!", 5000, 3);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    DestroyVehicle(CarToTheft[playerid]), CarToTheft[playerid] = 0, DisablePlayerCheckpoint(playerid), PlayerInfo[playerid][JobID] = 0, RobberCP[playerid] = -1;
					}
				}
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			else if(PlayerInfo[playerid][JobID] == 5) // Hitman
			{
			    if(HitmanCP[playerid] == -1) HitmanCP[playerid] = -1;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else if(HitmanCP[playerid] == 0)
				{
				    HitmanCP[playerid] = 1;
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    DisablePlayerCheckpoint(playerid);
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    Announce(playerid, "~h~~w~Cauta savantul si ucide-l!", 5000, 3);
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Savant[playerid] = CreateActor(70, 275.2102, 1872.8859, 8.7649, 0.0494);
					SetActorInvulnerable(Savant[playerid], false);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					ApplyActorAnimation(Savant[playerid], "PED", "IDLE_CHAT", 4.1, 0, 1, 1, 1, 1);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					if(IsValidActor(Savant[playerid]))
					{
						SetActorHealth(Savant[playerid], 100);
					}
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else if(HitmanCP[playerid] == 1)
				{
				    DestroyVehicle(JobVehicle[playerid]), JobVehicle[playerid] = 0, DisablePlayerCheckpoint(playerid), PlayerInfo[playerid][JobID] = 0, HitmanCP[playerid] = -1;
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					new randomcoins = random(100), randommoney = random(10000000);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] += randomcoins;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					GivePlayerMoney(playerid, randommoney), PlayerInfo[playerid][Money] += randommoney;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					MSG(playerid, YELLOW, "Ai primit pentru uciderea savantului {FF0000}%d {FFFF00}coins si {00FF22}$%d{FFFF00}!", randomcoins, randommoney);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					// -> Job Finished + 1
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					if(PlayerInfo[playerid][JobFinished][5] != 1) PlayerInfo[playerid][JobFinished][5] = 1, PlayerInfo[playerid][JobsFinishedCount] += 1;
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					GetJobIfFinished(playerid);
				}
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			else if(PlayerInfo[playerid][JobID] == 6) // Stone Quarry
			{
			    if(QuarryCP[playerid] == -1) QuarryCP[playerid] = -1;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(QuarryCP[playerid] == 0)
			    {
			        SPD(playerid, DIALOG_EMPTY, MSGBOX, "Stone quarry", "{FFFFFF}Du-te unde ti-am pus checkpoint si incepe sa muncesti!", "Continue", "");
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 783.2145, 831.8035, 5.5643, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        QuarryCP[playerid] = 1;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(QuarryCP[playerid] == 1)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 737.9605, 935.5964, -7.6853, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        QuarryCP[playerid] = 2;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(QuarryCP[playerid] == 2)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 783.2145, 831.8035, 5.5643, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        QuarryCP[playerid] = 3;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(QuarryCP[playerid] == 3)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 689.3073, 978.0307, -13.0086, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        QuarryCP[playerid] = 4;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(QuarryCP[playerid] == 4)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 720.5282, 916.5456, -19.3595, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        QuarryCP[playerid] = 5;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(QuarryCP[playerid] == 5)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 702.4866, 910.8655, -30.7523, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        QuarryCP[playerid] = 6;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(QuarryCP[playerid] == 6)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 645.5330, 948.2222, -35.2012, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        QuarryCP[playerid] = 7;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(QuarryCP[playerid] == 7)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 635.4319, 906.5839, -43.5157, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        QuarryCP[playerid] = 8;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(QuarryCP[playerid] == 8)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 683.9783, 896.6616, -40.0197, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        QuarryCP[playerid] = 9;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(QuarryCP[playerid] == 9)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 634.8687, 864.9700, -43.2122, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        QuarryCP[playerid] = 10;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(QuarryCP[playerid] == 10)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 634.8615, 864.9908, -43.2033, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        QuarryCP[playerid] = 11;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(QuarryCP[playerid] == 11)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 611.9091, 859.6858, -43.2339, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        QuarryCP[playerid] = 12;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(QuarryCP[playerid] == 12)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 556.7823, 910.3900, -43.2340, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        QuarryCP[playerid] = 13;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(QuarryCP[playerid] == 13)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 586.1929, 916.7755, -43.2971, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        QuarryCP[playerid] = 14;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(QuarryCP[playerid] == 14)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 817.5496, 852.4487, 10.8592, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        QuarryCP[playerid] = 15;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(QuarryCP[playerid] == 15)
			    {
			        DestroyVehicle(JobVehicle[playerid]), JobVehicle[playerid] = 0, DisablePlayerCheckpoint(playerid), PlayerInfo[playerid][JobID] = 0, QuarryCP[playerid] = -1;
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					new String[256], randomcoins = random(100), randommoney = random(10000000);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] += randomcoins;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					GivePlayerMoney(playerid, randommoney), PlayerInfo[playerid][Money] += randommoney;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					format(String, sizeof(String), "{FFFF00}Misiune completa!\n{FFFFFF}Ai primit drept rasplata %d coins si $%d\n\n{FFFFFF}Pentru a incepe alt job foloseste comanda /jobs si alegeti jobul dorit!", randomcoins, randommoney);
					SPD(playerid, DIALOG_EMPTY, MSGBOX, "Stone quarry - Completed", String, "Continue", "");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					// -> Job Finished + 1
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					if(PlayerInfo[playerid][JobFinished][6] != 1) PlayerInfo[playerid][JobFinished][6] = 1, PlayerInfo[playerid][JobsFinishedCount] += 1;
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					GetJobIfFinished(playerid);
			    }
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			else if(PlayerInfo[playerid][JobID] == 7) // Taxi Job
			{
			    if(TaxiCP[playerid] == -1) TaxiCP[playerid] = -1;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 0)
			    {
			        SPD(playerid, DIALOG_EMPTY, MSGBOX, "Taxi Job", "{FFFFFF}Du-te la comanda si incepe munca de taximetrist puturosule!", "Continue", "");
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 1807.8403, -1857.7117, 13.1968, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 1;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 1)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 1818.8966, -1880.1132, 13.1752, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 2;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 2)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 1818.5276, -1920.1067, 13.1577, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 3;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 3)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 1892.4844, -1934.5815, 13.1605, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 4;
			    }
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 4)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 2061.5774, -1934.9336, 13.1315, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 5;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 5)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 2104.4136, -1723.1768, 13.1699, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 6;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 6)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 2132.5320, -1479.0554, 23.6017, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 7;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 7)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 2132.4431, -1453.6533, 23.6103, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 8;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 8)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 2132.3293, -1434.7494, 23.6053, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 9;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 9)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 2132.2815, -1420.2223, 23.6119, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 10;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 10)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 2035.0841, -1414.4260, 16.7849, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 11;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 11)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 1869.9547, -1384.8931, 13.2992, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 12;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 12)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 1312.2656, -1392.2533, 13.0943, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 13;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 13)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 1799.2325, -1584.2833, 13.2581, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 14;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 14)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 1824.6248, -1686.0879, 13.1583, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 15;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 15)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 1803.6932, -1851.9172, 13.1932, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 16;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 16)
			    {
			        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, 1731.2683, -1852.6195, 13.1928, 6.0);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        TaxiCP[playerid] = 17;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(TaxiCP[playerid] == 17)
			    {
	      			DestroyVehicle(JobVehicle[playerid]), JobVehicle[playerid] = 0, DisablePlayerCheckpoint(playerid), PlayerInfo[playerid][JobID] = 0, TaxiCP[playerid] = -1;
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					new String[256], randomcoins = random(100), randommoney = random(10000000);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] += randomcoins;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					GivePlayerMoney(playerid, randommoney), PlayerInfo[playerid][Money] += randommoney;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					format(String, sizeof(String), "{FFFF00}Misiune completa!\n{FFFFFF}Ai primit drept rasplata %d coins si $%d\n\n{FFFFFF}Pentru a incepe alt job foloseste comanda /jobs si alegeti jobul dorit!", randomcoins, randommoney);
					SPD(playerid, DIALOG_EMPTY, MSGBOX, "Taxi Job - Completed", String, "Continue", "");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					// -> Job Finished + 1
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					if(PlayerInfo[playerid][JobFinished][7] != 1) PlayerInfo[playerid][JobFinished][7] = 1, PlayerInfo[playerid][JobsFinishedCount] += 1;
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					GetJobIfFinished(playerid);
			    }
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][JobID] == 8) // Dealer
			{
			    if(DealerCP[playerid] == -1) DealerCP[playerid] = -1;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(DealerCP[playerid] == 0)
			    {
			        CheckDealer(playerid), DealerCP[playerid] = 1;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        DBuyer[playerid][1] = CreateActor(29, -2025.8627, 1222.6434, 31.6484, 0.5419);
					SetPlayerCheckpoint(playerid, -2025.8459, 1223.2876, 31.6484, 1.5);
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(DealerCP[playerid] == 1)
			    {
					CheckDealer(playerid), DealerCP[playerid] = 2;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        DBuyer[playerid][2] = CreateActor(30, -1734.3925, 973.3358, 17.5859, 358.4345);
					SetPlayerCheckpoint(playerid, -1734.3901, 974.2733, 17.5859, 1.5);
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(DealerCP[playerid] == 2)
			    {
			        CheckDealer(playerid), DealerCP[playerid] = 3;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        DBuyer[playerid][3] = CreateActor(33, -1811.1805, 1299.9329, 22.5625, 180.4955);
					SetPlayerCheckpoint(playerid, -1811.1805, 1298.7217, 22.5625, 1.5);
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(DealerCP[playerid] == 3)
			    {
			        CheckDealer(playerid), DealerCP[playerid] = 4;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        DBuyer[playerid][4] = CreateActor(46, -2146.4663, 1213.1686, 47.2734, 357.6838);
					SetPlayerCheckpoint(playerid, -2146.4663, 1214.1884, 47.2734, 1.5);
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(DealerCP[playerid] == 4)
			    {
			        CheckDealer(playerid), DealerCP[playerid] = 5;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        DBuyer[playerid][5] = CreateActor(57, -1771.2659, 874.3885, 25.0859, 93.8960);
					SetPlayerCheckpoint(playerid, -1772.1595, 874.2997, 25.0859, 1.5);
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(DealerCP[playerid] == 5)
			    {
			        CheckDealer(playerid), DealerCP[playerid] = 6;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        DBuyer[playerid][6] = CreateActor(28, -1891.7859, -220.3872, 23.1062, 357.1296);
					SetPlayerCheckpoint(playerid, -1891.8596, -219.5544, 23.1061, 1.5);
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(DealerCP[playerid] == 6)
			    {
			        DestroyVehicle(JobVehicle[playerid]), JobVehicle[playerid] = 0, DisablePlayerCheckpoint(playerid), PlayerInfo[playerid][JobID] = 0, DealerCP[playerid] = -1;
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    for(new i = 0; i < 7; i++) DestroyActor(DBuyer[playerid][i]), DBuyer[playerid][i] = 0;
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					new String[256], randomcoins = random(100), randommoney = random(10000000);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] += randomcoins;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					GivePlayerMoney(playerid, randommoney), PlayerInfo[playerid][Money] += randommoney;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SCM(playerid, YELLOW, "* Misiune indeplinita cu succes! Pentru alt job foloseste comanda /jobs!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					format(String, sizeof(String), "{FFFF00}Misiune completa!\n{FFFFFF}Ai primit drept rasplata %d coins si $%d\n\n{FFFFFF}Pentru a incepe alt job foloseste comanda /jobs si alegeti jobul dorit!", randomcoins, randommoney);
					SPD(playerid, DIALOG_EMPTY, MSGBOX, "Dealer - Completed", String, "Continue", "");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					// -> Job Finished + 1
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					if(PlayerInfo[playerid][JobFinished][8] != 1) PlayerInfo[playerid][JobFinished][8] = 1, PlayerInfo[playerid][JobsFinishedCount] += 1;
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					GetJobIfFinished(playerid);
			    }
			}
			if(PlayerInfo[playerid][JobID] == 9) // Glovo
			{
			    if(GlovoCP[playerid] == -1) GlovoCP[playerid] = -1;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    else if(GlovoCP[playerid] == 0)
			    {
			     	DisablePlayerCheckpoint(playerid);
			     	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        JobVehicle[playerid] = AddStaticVehicle(510,-2456.5417,734.7296,34.6238,195.1243,116,52);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        SetPlayerAttachedObject(playerid, 0, 19559, 1, 0, -0.038, -0.007, 0, 88.8, 0, 1, 1, 1);
			    }
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][InNascar] == 1)
		{
		    if(CPNascar[playerid] == -1) CPNascar[playerid] = -1;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(CPNascar[playerid] == 0)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1503.9474, -262.0329, 1050.2062, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 1;
		    }
	        else if(CPNascar[playerid] == 1)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1331.1167,-133.8631,1050.3929, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 2;
		    }
		    else if(CPNascar[playerid] == 2)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1348.2908,-282.7166,1046.0782, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 3;
		    }
		    else if(CPNascar[playerid] == 3)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1416.2885, -139.0423, 1044.4403, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 4;
		    }
		    else if(CPNascar[playerid] == 4)
		    {
		        Announce(playerid, "~w~1/~r~~h~5 Laps", 6000, 1);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1418.0818, -137.0870, 1044.5697, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 5;
		    }
		    if(CPNascar[playerid] == 5)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1503.9474, -262.0329, 1050.2062, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 6;
		    }
	        else if(CPNascar[playerid] == 6)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1331.1167,-133.8631,1050.3929, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 7;
		    }
		    else if(CPNascar[playerid] == 7)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1348.2908,-282.7166,1046.0782, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 8;
		    }
		    else if(CPNascar[playerid] == 8)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1416.2885, -139.0423, 1044.4403, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 9;
		    }
		    else if(CPNascar[playerid] == 9)
		    {
		        Announce(playerid, "~w~2~y~~h~/~r~~h~5 Laps", 6000, 1);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1416.2885, -139.0423, 1044.4403, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 10;
		    }
		    if(CPNascar[playerid] == 10)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1503.9474, -262.0329, 1050.2062, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 11;
		    }
	        else if(CPNascar[playerid] == 11)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1331.1167,-133.8631,1050.3929, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 12;
		    }
		    else if(CPNascar[playerid] == 12)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1348.2908,-282.7166,1046.0782, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 13;
		    }
		    else if(CPNascar[playerid] == 13)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1416.2885, -139.0423, 1044.4403, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 14;
		    }
		    else if(CPNascar[playerid] == 14)
		    {
		        Announce(playerid, "~w~3~y~~h~/~r~~h~5 Laps", 6000, 1);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1416.2885, -139.0423, 1044.4403, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 15;
		    }
		    if(CPNascar[playerid] == 15)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1503.9474, -262.0329, 1050.2062, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 16;
		    }
	        else if(CPNascar[playerid] == 16)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1331.1167,-133.8631,1050.3929, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 17;
		    }
		    else if(CPNascar[playerid] == 17)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1348.2908,-282.7166,1046.0782, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 18;
		    }
		    else if(CPNascar[playerid] == 18)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1416.2885, -139.0423, 1044.4403, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 19;
		    }
		    else if(CPNascar[playerid] == 19)
		    {
		        Announce(playerid, "~w~4~y~~h~/~r~~h~5 Laps", 6000, 1);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1416.2885, -139.0423, 1044.4403, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 20;
		    }
		    if(CPNascar[playerid] == 20)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1503.9474, -262.0329, 1050.2062, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 21;
		    }
	        else if(CPNascar[playerid] == 21)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1331.1167,-133.8631,1050.3929, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 22;
		    }
		    else if(CPNascar[playerid] == 22)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1348.2908,-282.7166,1046.0782, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 23;
		    }
		    else if(CPNascar[playerid] == 23)
		    {
		        DisablePlayerCheckpoint(playerid), SetPlayerCheckpoint(playerid, -1416.2885, -139.0423, 1044.4403, 20);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CPNascar[playerid] = 24;
		    }
		    else if(CPNascar[playerid] == 24)
		    {
				new String[128];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerPlaySound(playerid,1076,0.0,0.0,0.0);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(NascarWinner == 0)
				{
					format(String, sizeof(String), "NASCAR: {FFFF00}%s {0072FF}a terminat pe primul loc si a primit 50 de monede si 50.000.000 bani!", PN(playerid));
					SCMALL(RED, String);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~w~Ai primit~n~~g~~h~30 coins & 50.000.000$~n~~y~Felicitari!", 6000, 4);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] += 30, GivePlayerMoney(playerid, 50000000), PlayerInfo[playerid][Money] += 50000000;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                NascarWinner = 1;
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else if(NascarWinner == 1)
				{
				    format(String, sizeof(String), "NASCAR: {FFFF00}%s {0072FF}a terminat pe al doilea loc si a primit 30 de monede si 30.000.000 bani!", PN(playerid));
					SCMALL(RED, String);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~w~Ai primit~n~~g~~h~20 coins & 30.000.000$~n~~y~Felicitari!", 6000, 4);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] += 20, GivePlayerMoney(playerid, 30000000), PlayerInfo[playerid][Money] += 30000000;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                NascarWinner = 2;
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else if(NascarWinner == 2)
				{
				    format(String, sizeof(String), "NASCAR: {FFFF00}%s {0072FF}a terminat pe al treilea loc si a primit 15 de monede si 15.000.000 bani!", PN(playerid));
					SCMALL(RED, String);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~w~Ai primit~n~~g~~h~10 coins & 15.000.000$~n~~y~Felicitari!", 6000, 4);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] += 10, GivePlayerMoney(playerid, 15000000), PlayerInfo[playerid][Money] += 15000000;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                NascarWinner = 3;
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else if(NascarWinner == 3)
				{
					Announce(playerid, "~w~Ai primit~n~~g~~h~5 coins & 5.000.000$~n~~y~Felicitari!", 6000, 4);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] += 5, GivePlayerMoney(playerid, 5000000), PlayerInfo[playerid][Money] += 5000000;
	   				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					NascarWinner = 3;
				}
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        CountPlayersInNascar--;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        if(CountPlayersInNascar == 0) CountPlayersInNascar = 0, ServerInfo[NascarStarted] = 0, NascarWinner = 0;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        DisablePlayerCheckpoint(playerid);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        DestroyVehicle(NascarVeh[playerid]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerInfo[playerid][InNascar] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				CPNascar[playerid] = -1;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    SpawnPlayer(playerid);
		    }
		}
	}
    return true;
}
function GetPlayerQRCode(playerid, response_code, data[])
{
	new response[2];
	if(response_code == 200) format(response, 2, "%s", data);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(response, "1", false) != 0)
	{
	    SPD(playerid, DIALOG_EMPTY, MSGBOX, "Autentificare", "{FF0000}Authenticate code error #01!", "Close", "");
	    SetTimerEx("KickPlayer", 500, false, "d", playerid);
	}
	else
	{
	    mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s'", PN(playerid));
   		mysql_tquery(SQL, eQuery, "ReLoadPlayerData", "d", playerid);
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    new Float:X, Float:Y, Float:Z, Float:Angle; GetPlayerPos(playerid, X,Y,Z), GetPlayerFacingAngle(playerid, Angle);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Anti SQL System
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strfind(inputtext,"'") || strfind(inputtext,"'"))
    {
        for(new i; i < strlen(inputtext); i++)
        {
            if(strfind(inputtext[i],"%", true) == 0)
            {
                inputtext[i] = '#';
            }
        }
    }
	switch(dialogid)
	{
	    case DIALOG_LOGIN_TWO_AUTH:
	    {
	        if(response)
		    {
			    eString[0] = EOS;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    sscanf(inputtext, "d", inputtext[0]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    if(inputtext[0])
			    {
				    format(eString, sizeof(eString), "ess-ro.com/includes/checkqrcode.php?user=%s&code=%d", PN(playerid), inputtext[0]);
					HTTP(playerid, HTTP_GET, eString, "", "GetPlayerQRCode");
				}
    			else
				{
        			switch(PlayerInfo[playerid][Language])
				    {
 			    		case 1: SPD(playerid, DIALOG_LOGIN_TWO_AUTH, INPUT, "{FF0000}Autentificare", "{FFCC00}Te rugam sa introduci mai jos numerele generate de aplicatie (1-6)!\n{FF0000}ATENTIE: {FFCC00}codul nu trebuie sa contine spatiu!", "Login", "Nume Nou");
				    	case 2: SPD(playerid, DIALOG_LOGIN_TWO_AUTH, INPUT, "{FF0000}Autentificare", "{FFCC00}Please enter below the numbers what generated the application (1-6)!\n{FF0000}WARNING: {FFCC00}code must not contain space!", "Login", "New Name");
				    }
				}
			}
			if(!response)
			{
			    eString[0] = EOS;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(eString, sizeof(eString), "\
				{00CC00}Hi, {FF0000}%s{00CC00}!\n\
				{00CC00}Please enter the new name before:", PN(playerid));
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_NEWNAME, INPUT, "Change {FF0000}Name", eString, "Change", "Leave");
			}
	    }
	    case TELEPORT_CREATE_D:
		{
		    if(!response) return true;
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SPD(playerid, TELEPORT_CREATE_D+1, INPUT, "{FFFFFF}Create - {FF0000}Teleport #1{FFFFFF}!", "{FFFFFF}Enter below the {FF0000}COMMAND {FFFFFF}text:", "Ok", "Close");
		            case 1: SPD(playerid, TELEPORT_CREATE_D+2, INPUT, "{FFFFFF}Create - {FF0000}Teleport #2{FFFFFF}!", "{FFFFFF}Enter below the {FF0000}COMMAND {FFFFFF}name:", "Ok", "Close");
		            case 2:
		            {
						if(TeleportCmd[playerid][0] && TeleportName[playerid][0])
						{
			                new Float:p[3]; GetPlayerPos(playerid, p[0], p[1], p[2]);
			                mysql_format(SQL, eString, sizeof(eString), "INSERT INTO `ServerTeleports` (`ID`,`TeleportCMD`,`TeleportName`,`PosX`,`PosY`,`PosZ`) VALUES (0,'%s','%s','%f','%f','%f')", TeleportCmd[playerid][0], TeleportName[playerid][0], p[0], p[1], p[2]);
						    mysql_tquery(SQL, eString, "", "");
						    format(eString, sizeof(eString), "Teleport {FF0000}%s{FFFFFF} has been created to your current location!", TeleportCmd[playerid][0]);
						    SCM(playerid, WHITE, eString);
						    TeleportCmd[playerid] = "", TeleportName[playerid] = "";
						}
						else return CheckTeleportCMDInfo(playerid);
		            }
		        }
			}
		}
		case TELEPORT_CREATE_D+1:
		{
		    if(!response) { TeleportCmd[playerid] = "", TeleportName[playerid] = ""; }
		    if(response)
		    {
		        if(sscanf(inputtext, "s[20]", TeleportCmd[playerid][0])) return false;
		        new string[20]; string[0] = TeleportCmd[playerid][0];
				new stringLength = strlen(string);
		        if(strcmp(string[stringLength-1], "/", false) != 0) TeleportCmd[playerid] = "", SPD(playerid, TELEPORT_CREATE_D+1, INPUT, "{FFFFFF}Create - {FF0000}Teleport #1{FFFFFF}!", "{FF0000}ERROR:{FFFFFF} You need to put {FF0000}/{FFFFFF} to top of string!\n{FFFFFF}Enter below the {FF0000}COMMAND {FFFFFF}text:", "Ok", "Close");
		        else
				{
				    mysql_format(SQL, eString, sizeof(eString), "SELECT * FROM `ServerTeleports` WHERE `TeleportCMD` = '%s'", inputtext[0]);
				    mysql_query(SQL, eString);
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					new total; cache_get_row_count(total);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					if(total == 0) { CheckTeleportCMDInfo(playerid); }
					else { TeleportCmd[playerid] = "", SPD(playerid, TELEPORT_CREATE_D+1, INPUT, "{FFFFFF}Create - {FF0000}Teleport #1{FFFFFF}!", "{FF0000}ERROR:{FFFFFF} This teleport CMD already exist!\n{FFFFFF}Enter below the {FF0000}COMMAND {FFFFFF}text:", "Ok", "Close"); }
				}
		    }
		}
		case TELEPORT_CREATE_D+2:
		{
		    if(!response) { TeleportCmd[playerid] = "", TeleportName[playerid] = ""; }
		    if(response)
			{
			    if(sscanf(inputtext, "s[20]", TeleportName[playerid][0])) return false;
				CheckTeleportCMDInfo(playerid);
			}
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> Manage offline admins by an dialog. A great system :)
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_MANAGE_ADMINS:
	    {
	        if(response) return true;
	        if(!response)
	        {
	            new total, String[123]; eString[0] = EOS;
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            mysql_query(SQL, "SELECT * FROM `Accounts` WHERE `Level` > 0 ORDER BY `ID`");
	            cache_get_row_count(total);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				for(new i; i != total; i++)
				{
				    if(listitem == i)
				    {
				        CONTENT(i, "Name", EditingAdminName[playerid]);
				        CACHE(i, "Level", EditingAdminLevel[playerid]);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        format(String, sizeof(String), "{FFFFFF}Manage Admin{FF0000} %s", EditingAdminName[playerid]);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
						strcat(eString, "{00CC00}Set Level\n");
						strcat(eString, "{00CC00}Add Admin Warning Points\n");
						strcat(eString, "{00CC00}Give Level UP\n");
						strcat(eString, "{00CC00}Give Level DOWN\n");
						strcat(eString, "{00CC00}Demote\n");
						strcat(eString, "{00CC00}Set Rcon Type Rank\n");
						strcat(eString, "{00CC00}Show Admin Stats");
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        SPD(playerid, DIALOG_MANAGE_ADMINS+1, LIST, String, eString, "Select", "Close");
				    }
				}
	        }
	    }
	    case DIALOG_MANAGE_ADMINS+1:
	    {
	        if(response)
	        {
	            new String[123], what[50]; eString[0] = EOS;
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            if(listitem == 0) what = "Set Level";
	            else if(listitem == 1) what = "Add Admin Warning Points";
	            else if(listitem == 2) what = "Give Level UP";
	            else if(listitem == 3) what = "Give Level DOWN";
	            else if(listitem == 4) what = "Demote";
	            else if(listitem == 5) what = "Set Rcon Type Rank";
	            else if(listitem == 6) what = "Show Admin Stats";
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            format(String, sizeof(String), "{FFFFFF}Manage Admin{FF0000} %s{FFFFFF} | {00CC00}%s", EditingAdminName[playerid], what);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            switch(listitem)
	            {
	                case 0:
	                {
						strcat(eString, "{00CC00}Level 1\n");
						strcat(eString, "{00CC00}Level 2\n");
						strcat(eString, "{00CC00}Level 3\n");
						strcat(eString, "{00CC00}Level 4\n");
						strcat(eString, "{00CC00}Level 5");
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						SPD(playerid, DIALOG_MANAGE_ADMINS+2, LIST, String, eString, "Set", "Close");
	                }
	                case 1:
	                {
	                    strcat(eString, "{00CC00}Soon");
	                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                    SPD(playerid, DIALOG_MANAGE_ADMINS+3, LIST, String, eString, "Set", "Close");
	                }
	                case 2:
	                {
	                    strcat(eString, "{00CC00}Do you really want to give\n{FFFF00}Level UP{00CC00}?\n{FF0000}This action are ireverssible!");
	                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                    SPD(playerid, DIALOG_MANAGE_ADMINS+4, MSGBOX, String, eString, "Yes", "Close");
	                }
	                case 3:
	                {
	                    strcat(eString, "{00CC00}Do you really want to give\n{FFFF00}Level DOWN{00CC00}?\n{FF0000}This action are ireverssible!");
	                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                    SPD(playerid, DIALOG_MANAGE_ADMINS+5, MSGBOX, String, eString, "Yes", "Close");
	                }
	                case 4:
	                {
	                    strcat(eString, "{00CC00}Do you really want to give {FFFF00}Demote{00CC00}?\n{FF0000}This action are ireverssible!");
	                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                    SPD(playerid, DIALOG_MANAGE_ADMINS+6, MSGBOX, String, eString, "Yes", "Close");
	                }
	                case 5:
	                {
	                    if(PlayerInfo[playerid][RconType] >= 2)
						{
						    strcat(eString, "{00CC00}Remove\n");
							strcat(eString, "{00CC00}Rcon\n");
						}
						if(PlayerInfo[playerid][RconType] >= 3)
						{
							strcat(eString, "{00CC00}Support\n");
							strcat(eString, "{00CC00}Manager\n");
				        }
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        SPD(playerid, DIALOG_MANAGE_ADMINS+7, LIST, String, eString, "Set", "Close");
	                }
	                case 6:
	                {
	                    new abans, akicks, ajails, amutes, areports, aevents, aactivity;
						new atotal, arank, alevel, awarns, asince[24], AdminRank[24];
	                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
						mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s'", EditingAdminName[playerid]);
	                    mysql_query(SQL, eQuery);
	                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                    CACHE(0, "Bans", abans);
	                    CACHE(0, "Kicks", akicks);
	                    CACHE(0, "Jails", ajails);
	                   	CACHE(0, "Mutes", amutes);
	                   	CACHE(0, "ReportsClosed", areports);
	                   	CACHE(0, "EventsMaded", aevents);
	                   	CACHE(0, "HoursAdmin", aactivity);
	                   	CACHE(0, "Activity", atotal);
	                   	CACHE(0, "RconType", arank);
	                   	CACHE(0, "Level", alevel);
	                   	CACHE(0, "AWP", awarns);
	                   	CONTENT(0, "AdminSince", asince);
	                   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                   	switch(arank)
	                   	{
	                   	    case 0: AdminRank ="{0033FF}Admin";
	                   	    case 1: AdminRank ="{FFFFFF}RCON";
	                   	    case 2: AdminRank ="{FFFFFF}Support";
	                   	    case 3: AdminRank ="{FFFFFF}Manager";
	                   	}
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                    format(eString, sizeof(eString), "\
						{FF0000}%s{FFFFFF}'s Admin Statistics\n\n\
						{FF0000}Admin statics:\n\
						{0099FF}Bans: {FFFFFF}%d\n\
						{0099FF}Kicks: {FFFFFF}%d\n\
						{0099FF}Jails: {FFFFFF}%d\n\
						{0099FF}Mutes: {FFFFFF}%d\n\
						{0099FF}Reports: {FFFFFF}%d {0099FF}closed\n\
						{0099FF}Events: {FFFFFF}%d {0099FF}made\n\
						{0099FF}Activity: {FFFFFF}%d {0099FF}hours\n\
				   		{0099FF}Total: {FFFFFF}%d\n\n\
						{FF0000}Other Statics:\n\
						{0099FF}Rank: %s\n\
						{0099FF}Admin level:{FFFFFF} %d\n\
						{0099FF}Admin warning points:{FFFFFF} %d/{FF0000}100\n\
						{0099FF}Admin since:{FFFFFF} %s\n",
 						EditingAdminName[playerid], abans, akicks, ajails,
 						amutes, areports, aevents, aactivity, atotal, AdminRank,
 						alevel, awarns, asince);
 						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
 						SPD(playerid, DIALOG_EMPTY, MSGBOX, String, eString, "Ok", "");
	                }
	            }
	        }
	    }
	    case DIALOG_MANAGE_ADMINS+2: { if(response) SetPlayerLevel(playerid, EditingAdminName[playerid], listitem+1); }
	    case DIALOG_MANAGE_ADMINS+3: { if(response) return true; }
	    case DIALOG_MANAGE_ADMINS+4: { if(response) SetPlayerLevel(playerid, EditingAdminName[playerid], EditingAdminLevel[playerid]+1); }
	    case DIALOG_MANAGE_ADMINS+5: { if(response) SetPlayerLevel(playerid, EditingAdminName[playerid], EditingAdminLevel[playerid]-1); }
	    case DIALOG_MANAGE_ADMINS+6: { if(response) DemoteAdmin(playerid, EditingAdminName[playerid]); }
	    case DIALOG_MANAGE_ADMINS+7:
	    {
	        if(response)
	        {
	            eString[0] = EOS;
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            new PlayerRconType;
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s'", EditingAdminName[playerid]);
	           	mysql_query(SQL, eQuery);
	           	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	           	CACHE(0, "RconType", PlayerRconType);
	           	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	           	if(PlayerInfo[playerid][RconType] == 2) { if(PlayerRconType > PlayerInfo[playerid][RconType]) return Error(playerid, 11); }
	           	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	           	UpdatePlayer(EditingAdminName[playerid], "RconType", listitem);
	           	UpdatePlayer(EditingAdminName[playerid], "AdminChangedBy", PlayerInfo[playerid][AccID]);
	           	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	           	foreach(new i: Player) if(strfind(PN(i), EditingAdminName[playerid], true) != -1)
				{
					FormatMSG(i, ABLUE, "Admin '%s' has seted your RCON to '%s'", PN(playerid), GetRconType(listitem));
					SCM(i, ABLUE, "If you want to make screen-shot press button 'F8'!");
					PlayerInfo[i][RconType] = listitem;
					PlayerInfo[i][temprcontype] = listitem;
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(eString, sizeof(eString), "ACW: Admin '%s' has seted RCON '%s' for '%s'!", PN(playerid), GetRconType(listitem), EditingAdminName[playerid]);
				MessageToAdmins(ABLUE, eString);
	        }
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> Race System
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case Race_D:
		{
			if(response)
			{
			    new string[30]; format(string, sizeof(string), "/race %d", listitem+1);
				CallRemoteFunction("OnPlayerCommandText", "is", playerid, string);
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// -> Quests System
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_QUESTS:
	    {
	        if(response)
	        {
		        switch(listitem)
		        {
			        case 0: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/quest");
			        case 1: TPlayer(playerid, "Spring Quest", "quests", SPRING_QUEST_TELEPORT, false, "Kalashnicov");
			    }
			}
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_BASE_TELEPORT: { if(response) { TeleportToGangBase(playerid, listitem+1); } }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // Crate System
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_CRATE:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	     			case 0:
				    {
				        if(PlayerInfo[playerid][Crate][0] == 0) return SendError(playerid, "You are not have a mystery box!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        OpenCrate(playerid, 1);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        PlayerInfo[playerid][Crate][0]--;
				    }
				    case 1:
				    {
				        if(PlayerInfo[playerid][Crate][1] == 0) return SendError(playerid, "You are not have a mystery box!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        OpenCrate(playerid, 2);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        PlayerInfo[playerid][Crate][1]--;
				    }
				    case 2:
				    {
				        if(PlayerInfo[playerid][Crate][2] == 0) return SendError(playerid, "You are not have a mystery box!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        OpenCrate(playerid, 3);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        PlayerInfo[playerid][Crate][2]--;
				    }
				    case 3:
				    {
				        if(PlayerInfo[playerid][Crate][3] == 0) return SendError(playerid, "You are not have a mystery box!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        OpenCrate(playerid, 4);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        PlayerInfo[playerid][Crate][3]--;
				    }
				    case 4:
				    {
				        if(PlayerInfo[playerid][Crate][4] == 0) return SendError(playerid, "You are not have a mystery box!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        OpenCrate(playerid, 5);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        PlayerInfo[playerid][Crate][4]--;
				    }
				    case 5:
				    {
				        if(PlayerInfo[playerid][Crate][5] == 0) return SendError(playerid, "You are not have a mystery box!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        OpenCrate(playerid, 6);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        PlayerInfo[playerid][Crate][5]--;
				    }
				}
	        }
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_CRATE+1:
	    {
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
				    {
				        if(PlayerInfo[playerid][Coins] < 250) return SendError(playerid, "You are not have enough coins to buy this mystery box!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        PlayerInfo[playerid][Coins] -= 250;
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        SCM(playerid, YELLOW, "You bought a Normal Crate! 250 coins have been withdrawn!");
				        //+++++++++++++++++++++++++++++++++++++++++++++++++++++
				        PlayerInfo[playerid][Crate][0]++;
				    }
				    case 1:
				    {
				        if(PlayerInfo[playerid][Coins] < 1000) return SendError(playerid, "You are not have enough coins to buy this mystery box!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if((gettime() - PlayerInfo[playerid][CratePickupTimer]) < 1800) return SCM(playerid, RED, "Sorry, but you need to wait 30 minutes to buy an another crate!");
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						PlayerInfo[playerid][CratePickupTimer] = gettime();
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						PlayerInfo[playerid][Coins] -= 1000;
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        SCM(playerid, YELLOW, "You bought a Epic Crate! 1000 coins have been withdrawn!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        PlayerInfo[playerid][Crate][1]++;
				    }
				    case 2:
				    {
				        if(PlayerInfo[playerid][Gems] < 20) return SendError(playerid, "You are not have enough gems to buy this mystery box!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] - 20);
				        PlayerInfo[playerid][Gems] -= 20;
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        SCM(playerid, YELLOW, "You bought a Rare Crate! 20 Gems have been withdrawn!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        PlayerInfo[playerid][Crate][2]++;
				    }
				    case 3:
				    {
				        if(PlayerInfo[playerid][Gems] < 40) return SendError(playerid, "You are not have enough gems to buy this mystery box!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] - 40);
				        PlayerInfo[playerid][Gems] -= 40;
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        SCM(playerid, YELLOW, "You bought a Mythic Crate! 40 Gems have been withdrawn!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        PlayerInfo[playerid][Crate][3]++;
				    }
				    case 4:
				    {
				        if(PlayerInfo[playerid][Gems] < 100) return SendError(playerid, "You are not have enough gems to buy this mystery box!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] - 100);
				        PlayerInfo[playerid][Gems] -= 100;
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        SCM(playerid, YELLOW, "You bought a Legendary Crate! 100 Gems have been withdrawn!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        PlayerInfo[playerid][Crate][4]++;
				    }
				    case 5:
				    {
				        if(PlayerInfo[playerid][Gems] < 50) return SendError(playerid, "You are not have enough gems to buy this mystery box!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] - 50);
				        PlayerInfo[playerid][Gems] -= 50;
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        SCM(playerid, YELLOW, "You bought a Vehicle Crate! 50 Gems have been withdrawn!");
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        PlayerInfo[playerid][Crate][5]++;
				    }
			    }
			}
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_GANG:
		{
		    if(response) ShowGangInfo(playerid, listitem+1);
		}
        case DIALOG_GANG + 1:
	    {
            if(response)
            {
                eString[0] = EOS;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                for(new i = 15; i > 0; i--)
                {
	                format(eString, sizeof(eString), "{FFE600}Line {FFFFFF}%d\n\%s", i, eString);
				}
            	SPD(playerid, DIALOG_GANG + 2, DIALOG_STYLE_LIST, "{FF0000}Gang Description", eString, "Select", "Exit");
            }
	    }
	    case DIALOG_GANG + 2:
	    {
			if(response)
			{
			    eString[0] = EOS;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    GangInfoEdit[playerid] = listitem + 1;
			    format(eString, sizeof(eString), "{FFE600}Type below the new description line {FFFFFF}%d:", listitem + 1);
			    SPD(playerid, DIALOG_GANG + 3, DIALOG_STYLE_INPUT, "{FF0000}Gang Description", eString, "Next", "Exit");
			}
	    }
	    case DIALOG_GANG + 3:
	    {
	        if(response)
	        {
	            new string[123]; eString[0] = EOS; eQuery[0] = EOS;
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            format(string, sizeof(string), "Description%d", GangInfoEdit[playerid]);
	            format(eString, sizeof(eString), "~w~Description Line ~r~~h~%d ~n~~g~~h~~h~Updated", GangInfoEdit[playerid]);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SetGVarString(string, inputtext, PlayerInfo[playerid][GangID]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Gangs` SET `%s` = '%s' WHERE `ID` = '%d'", string, inputtext, PlayerInfo[playerid][GangID]);
	            mysql_tquery(SQL, eQuery, "", "");
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            Announce(playerid, eString, 4000, 3);
	        }
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> Santa Lottery
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_LOTTERY:
		{
			if(response)
			{
				if(PlayerInfo[playerid][Coins] < 200) return SendError(playerid, "You don't have enough coins for this action!");
			  	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			  	if(GetChristmasFuncAvailable() == 1)
				{
				  	PlayerInfo[playerid][Coins] -= 200;
				  	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				  	LoadObjectsProtection(playerid);
				  	SetPlayerPos(playerid, -1727.0297,-3818.7656,913.4550);
				  	SetPlayerFacingAngle(playerid, 45.0233);
				  	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				  	PlayerInfo[playerid][InSantaLottery] = 1;
				}
				else return Announce(playerid, "~R~~H~Santa lottery will be available on~N~~Y~22th december", 6000, 3);
			}
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> Santaland
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_SANTALAND:
	 	{
	    	if(!response)
        	{
          		PlayAudioStreamForPlayer(playerid, "http://"SERVER_WEBSITE"/xmas.mp3");
			}
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // XMAS Command
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_XMAS:
	    {
	        if(response)
	        {
				if(listitem == 0)
				{
				    cmd_santaland(playerid, "");
				}
				if(listitem == 1)
				{
                    SetPlayerAttachedObject(playerid, 0, 19065, 2, 0.121128, 0.023578, 0.001139, 222.540847, 90.773872, 211.130859, 1.098305, 1.122310, 1.106640); // SantaHat
				}
			}
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> Gang War
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_GWAR:
	    {
	        new Player = PlayerInfo[playerid][gWarPlayer];
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(response)
			{
				switch(listitem)
	            {
	                case 1:
	                {
					    new arenaname[80];
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    format(arenaname, sizeof(arenaname), "{00FF22}LV police HQ\n\
					    									  {00FF22}Catigula's basement\n\
					    									  {00FF22}Warehouse 2");
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    SPD(playerid, DIALOG_GWAR + 1, LIST, "{FFFFFF}Gang War {FF0000}- {FFFFFF}Arena Select", arenaname, "Select", "Back");
				    }
				    case 2:
				    {
						if(!IsPlayerConnected(Player)) return Error(playerid, 10);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						if(PlayerInfo[playerid][gWarLocation][0] == 0) return SPD(playerid, DIALOG_GWAR, HEADERS, ShowPlayerGwarPlayer(playerid), ShowPlayerGWarStatus(playerid), "Select", "Cancel");
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						InviteToGwar(playerid, Player);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    }
				}
			}
			else ResetGwarVariables(playerid);
	    }
	    case DIALOG_GWAR + 1:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0: SetGwarArenaIdentify(playerid, 1);
	                case 1: SetGwarArenaIdentify(playerid, 2);
	                case 2: SetGwarArenaIdentify(playerid, 3);
	            }
	        }
	        else SPD(playerid, DIALOG_GWAR, HEADERS, ShowPlayerGwarPlayer(playerid), ShowPlayerGWarStatus(playerid), "Select", "Cancel");
	    }
	    case DIALOG_GWAR + 2:
	    {
	        new Player = PlayerInfo[playerid][gWarPlayer];
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(response)
	        {
	            new string[432];
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            format(string, sizeof(string), "{00FF22}Your gang war invitation has been accepted by {FF0000}%s\n\
	            							    {00FF22}Now you need to wait {FF0000}5 {00FF22}seconds!", PN(playerid));
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            SPD(Player, DIALOG_EMPTY, MSGBOX, "{FFFFFF}Gang War {FF0000}- {FFFFFF}Invitation", string, "Ok", "");
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            SetTimerEx("ProgresToGangWar", 5000, false, "i", playerid);
	        }
	        else
			{
			    SendError(Player, "Your gang war invitation has been declined!");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerInfo[Player][gWarPlayer] = -1;
			}
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // BUG
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_BUG:
		{
		    if(response)
		    {
       			if(sscanf(inputtext, "s[512]", inputtext[0])) return false; eQuery[0] = EOS;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Bugs`(`Bug`, `Player`, `Status`) VALUES('%s', '%s', '0')", inputtext[0], PN(playerid));
    			mysql_tquery(SQL, eQuery, "", "");
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SCM(playerid, YELLOW, "Problema ta a fost raportata cu succes! Asteapta ca un Owner/Admin sa se uite peste problema ta!");
		    }
		    else return true;
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_FIX_BUG:
		{
		    if(response)
		    {
		        new String[256], String_Player[24];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    	mysql_query(SQL, "SELECT * FROM `Bugs` WHERE `ID`");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new rows; cache_get_row_count(rows);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        for(new i = 0; i < rows; i++)
		        {
					new z;
					CACHE(i, "ID", z);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					CONTENT(i, "Player", String_Player);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SelectBug[playerid] = z;
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(String, sizeof(String), "{FFFF00}Ai selectat problema lui {FF0000}%s{FFFF00}!\n{FFFF00}Te rugam sa alegi una din optiunile de mai jos!", String_Player);
			    SPD(playerid, DIALOG_FIX_BUG+1, MSGBOX, "#", String, "Fix", "Close");
			}
			else return true;
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_FIX_BUG+1:
		{
		    if(response)
		    {
		        new num = listitem + SelectBug[playerid] + 1; eQuery[0] = EOS;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Bugs` SET `Status` = '1' WHERE `ID` = '%d'", num);
                mysql_tquery(SQL, eQuery, "", "");
		    }
		    else return true;
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // Gang
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_LGANG:
		{
		 	if(!response)
		 	{
          		eString[0] = EOS;
          		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	      		format(eString, sizeof(eString), "%s has left our gang!", PN(playerid));
	      		GangMessageForGwarnAndLeave(PlayerInfo[playerid][GangID], eString);
	      		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	      		Announce(playerid, "~W~~H~Gang~R~~H~ left", 4000, 4);
	      		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	      		if(PlayerInfo[playerid][Capturing] == 1)
			    {
			     	PlayerInfo[playerid][Capturing] = 0;
			      	GangInfo[PlayerInfo[playerid][GangID]][CapturesJoins]--;
			      	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			      	PlayerTextDrawHide(playerid, PlayerText:CaptureTD[1]);
			      	PlayerTextDrawHide(playerid, PlayerText:CaptureTD[2]);
					PlayerTextDrawHide(playerid, PlayerText:CaptureTD[3]);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					if(PlayerInfo[playerid][CaptureStarter] == 0) RemovePlayerFromGang(playerid);
			      	else if(PlayerInfo[playerid][CaptureStarter] == 1)
			      	{
				      	foreach(new i: Player)
					    {
						    if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID])
							{
						  		Announce(i, "~R~~H~Capture failed!~N~~Y~unknown error!", 8000, 3);
						  		//++++++++++++++++++++++++++++++++++++++++++++++
						  		PlayerTextDrawHide(i, PlayerText:CaptureTD[1]);
						  		PlayerTextDrawHide(i, PlayerText:CaptureTD[3]);
						  		//++++++++++++++++++++++++++++++++++++++++++++++
								PlayerInfo[i][Capturing] = 0;
							}
							else if(PlayerInfo[i][GangID] == GangInfo[PlayerInfo[playerid][GangID]][GangTurfe])
							{
								Announce(i, "~G~~H~Your gang defense~N~~Y~was successfully!", 8000, 3);
								//++++++++++++++++++++++++++++++++++++++++++++++
								PlayerTextDrawHide(i, PlayerText:CaptureTD[2]);
								PlayerTextDrawHide(i, PlayerText:CaptureTD[3]);
							}
							//++++++++++++++++++++++++++++++++++++++++++++++++++
							KillTimer(PlayerInfo[playerid][GangCaptureTimer]);
							//++++++++++++++++++++++++++++++++++++++++++++++++++
							GangInfo[GangInfo[PlayerInfo[playerid][GangID]][GangTurfe]][AttackBy] = 0;
							Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][owner] = GangInfo[PlayerInfo[playerid][GangID]][GangTurfe];
							GangZoneStopFlashForAll(Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][ID]);
					  		GangZoneHideForAll(Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][ID]);
							GangZoneShowForAll(Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][ID], GangInfo[GangInfo[PlayerInfo[playerid][GangID]][GangTurfe]][pGangColor]);
							GangInfo[PlayerInfo[playerid][GangID]][CapturesJoins] = 0;
							GangInfo[PlayerInfo[playerid][GangID]][CaptureTimeTurf] = 300;
							GangInfo[PlayerInfo[playerid][GangID]][c_Deaths] = 0;
       						Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][turfingby] = 0;
							GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf] = 0;
							GangInfo[PlayerInfo[playerid][GangID]][CapturingGang] = 0;
							GangInfo[PlayerInfo[playerid][GangID]][GangTurfe] = 0;
							PlayerInfo[playerid][CaptureStarter] = 0;
							RemovePlayerFromGang(playerid);
							OnUpdate(2);
						}
					}
			    }
			    else RemovePlayerFromGang(playerid);
		 	}
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_SETRANK:
	    {
	    	if(response)
		    {
		        switch(listitem)
		        {
		        	case 0:
		        	{
			        	PlayerInfo[liPlayerSetRank][g_Rank] = 1;
			        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        	format(eString, sizeof eString, "%s was made Member Rank 1 in gang by %s", PN(liPlayerSetRank), PN(playerid));
			            SendGangSetRank(PlayerInfo[playerid][GangID], eString);
		        	}
		        	case 1:
		        	{
			        	PlayerInfo[liPlayerSetRank][g_Rank] = 2;
			        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        	format(eString, sizeof eString, "{66FF66}%s was made Member Rank 2 in gang by %s", PN(liPlayerSetRank), PN(playerid));
			            SendGangSetRank(PlayerInfo[playerid][GangID], eString);
		        	}
		        	case 2:
		        	{
			        	PlayerInfo[liPlayerSetRank][g_Rank] = 3;
			        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        	format(eString, sizeof eString, "{66FF66}%s was made Member Rank 3 in gang by %s", PN(liPlayerSetRank), PN(playerid));
			            SendGangSetRank(PlayerInfo[playerid][GangID], eString);
		        	}
		        	case 3:
		        	{
			        	PlayerInfo[liPlayerSetRank][g_Rank] = 4;
			        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        	format(eString, sizeof eString, "{66FF66}%s was made Member Rank 4 in gang by %s", PN(liPlayerSetRank), PN(playerid));
			            SendGangSetRank(PlayerInfo[playerid][GangID], eString);
		        	}
		        	case 4:
		        	{
			        	PlayerInfo[liPlayerSetRank][g_Rank] = 5;
			        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        	format(eString, sizeof eString, "{66FF66}%s was made Member Rank 5 in gang by %s", PN(liPlayerSetRank), PN(playerid));
			            SendGangSetRank(PlayerInfo[playerid][GangID], eString);
		        	}
		        	case 5:
		        	{
                    	PlayerInfo[liPlayerSetRank][g_Rank] = 6;
	                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        	format(eString, sizeof eString, "{66FF66}%s was made Co-Leader in gang by %s", PN(liPlayerSetRank), PN(playerid));
			            SendGangSetRank(PlayerInfo[playerid][GangID], eString);
                    }
					case 6:
					{
						PlayerInfo[liPlayerSetRank][g_Rank] = 7;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    	            format(eString, sizeof eString, "{66FF66}%s was made Leader in gang by %s", PN(liPlayerSetRank), PN(playerid));
			            SendGangSetRank(PlayerInfo[playerid][GangID], eString);
		            }
		            case 7:
					{
						PlayerInfo[liPlayerSetRank][OwnerAcces] = 1;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    	            format(eString, sizeof eString, "{66FF66}%s was accessed Owner in gang by %s", PN(liPlayerSetRank), PN(playerid));
			            SendGangSetRank(PlayerInfo[playerid][GangID], eString);
					}
		        }
		    }
	    }
	    case DIALOG_GSETTINGS:
	    {
	        if(response)

		    switch(listitem)
	        {
			    case 0: SPD(playerid, DIALOG_GSETTINGS+1, INPUT, "{FF0000}Gang Settings - Name", "{FFE600}Type below the new name for your gang:", "Change", "Close");
			    case 1: SPD(playerid, DIALOG_GSETTINGS+7, INPUT, "{FF0000}Gang Settings - Skin", "{FFE600}Type below the new skin ID for your gang:", "Change", "Close");
			    case 2: SPD(playerid, DIALOG_GSETTINGS+8, INPUT, "{FF0000}Gang Settings - Color", "{FFE600}Type below the new color of gang by 'Hex-Color':", "Change", "Close");
				case 3: SPD(playerid, DIALOG_GANGSLOT1, 2, "{FF0000}Gang Settings - Weapons {FFFFFF}#1", "{00CC00}Brass Knuckles\n{0091FF}Gold Club\n{FFE600}Nightstick\n{00CC00}Knife\n{0091FF}BaseBall\n{FFE600}Shovel\n{00CC00}Pool Cue\n{0091FF}Katana\n{FFE600}Chainsaw", "Next", "Exit");
				case 4:
	            {
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                    new reset[500];
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    format(reset, sizeof(reset),
					"Option                          \tDescription\n\
				    {FF0000}Reset Members            \t{FFFFFF}All members will be kicked from this gang\n\
				    {FF0000}Reset Co-Leaders         \t{FFFFFF}All co-leaders will be kicked from this gang\n\
				    {FF0000}Reset Leaders            \t{FFFFFF}All leaders will be kicked from this gang\n\
				    {FF0000}Reset All                \t{FFFFFF}All members, co-leaders and leaders will be kicked from this gang\n\
				    {FF0000}Custom Reset             \t{FFFFFF}Reset by gangpoints");
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    SPD(playerid, DIALOG_RESET, HEADERS, "{FF0000}Gang Resetting", reset, "Select", "Close");
				}
			}
	        return true;
        }
        case DIALOG_GSETTINGS+1:
		{
		    if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            eString[0] = EOS;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(strlen(inputtext) < 4 || strlen(inputtext) > 24) return SendError(playerid, "Invalid name size! Only between 4 and 24 characters!");
			if(strfind(inputtext, "'", true) != -1) return SCM(playerid, RED, "You can't type in the Gang name symbol: (')!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            format(GangInfo[PlayerInfo[playerid][GangID]][GangName], 30, "%s", inputtext);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        format(eString, sizeof(eString), "~w~~h~gang name changed to: ~n~~g~~h~~h~%s", inputtext), Announce(playerid, eString, 4000, 3), OnUpdate(1);
		}
		case DIALOG_GSETTINGS+7:
		{
		    if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            eString[0] = EOS;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(strval(inputtext) < 1 || strval(inputtext) > 311) return SendError(playerid, "Invalid skin ID! Only between 1 and 311 ID's!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            GangInfo[PlayerInfo[playerid][GangID]][pGangSkin] = strval(inputtext);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        format(eString, sizeof(eString), "~w~~h~gang skin~n~~w~~h~ changed to:~g~~h~~h~ %d", strval(inputtext)), Announce(playerid, eString, 4000, 3), OnUpdate(1);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	          if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID])
		      {
				SetPlayerSkin(i, strval(inputtext));
		      }
			}
		}
		case DIALOG_GSETTINGS+8:
		{
		    if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    eQuery[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(strlen(inputtext) != 6)
		    return SPD(playerid, DIALOG_GSETTINGS+8, INPUT, "{FF0000}Gang Settings - Color", "{FFE600}Type below the new color of gang by 'Hex-Color':", "Change", "Close");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(sscanf(inputtext, "h", inputtext[0]))
		    return SPD(playerid, DIALOG_GSETTINGS+8, INPUT, "{FF0000}Gang Settings - Color", "{FFE600}Type below the new color of gang by 'Hex-Color':", "Change", "Close");
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            inputtext[4] = (inputtext[0] * 256) + 0xAA;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            GangInfo[PlayerInfo[playerid][GangID]][pGangColor] = inputtext[4];
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Gangs` SET `pGangColor` = '%d' WHERE `ID` = '%d'", inputtext[4], PlayerInfo[playerid][GangID]);
            mysql_tquery(SQL, eQuery, "", "");
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            for(new i = 0; i < MAX_PLAYERS; i++)
            {
	           if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID])
		       {
                 inputtext[2] = (inputtext[0] * 256) + 0xAA;
	             //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				 SetPlayerColor(i, inputtext[2]), Announce(playerid, "~w~~h~Gang color ~n~~g~~h~~h~updated!", 4000, 4);
		       }
		    }
		}
	    case DIALOG_RESET:
	    {
			eQuery[0] = EOS;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(response)
		    switch(listitem)
	        {
				case 0:
				{
                   foreach(new i: Player) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID]) SavePlayer(i);
				   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                   mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `GangID` = '%d' AND `GangRank` = '1' AND '2' AND '3' AND '4' AND '5'", PlayerInfo[playerid][GangID]);
	               mysql_tquery(SQL, eQuery, "ResetGMembers", "dd", playerid, PlayerInfo[playerid][GangID]), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	               //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                   mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `GangID` = 0, `GangRank` = 0, `GangKills` = 0, `GangDeaths` = 0, `GangWarns` = 0, `GangCaptures` = 0, `GangPoints` = 0, `GangSkin` = 0 WHERE `GangID` = '%d' AND `GangRank` = '1'", PlayerInfo[playerid][GangID]);
	               mysql_tquery(SQL, eQuery, "", "");
                   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                   foreach(new i: Player) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID] && PlayerInfo[i][g_Rank] == 1)
				   {
				   		PlayerInfo[i][GangID] = 0, PlayerInfo[i][g_Rank] = 0, PlayerInfo[i][g_Kills] = 0, PlayerInfo[i][g_Deaths] = 0, PlayerInfo[i][g_Captures] = 0, PlayerInfo[i][g_Points] = 0, PlayerInfo[i][g_Skin] = 0, SpawnPlayer(i);
				   		for(new s = 0; s < MAX_GANGS; s++) PlayerInfo[i][gWarnInGang][s] = 0;
				   }
                   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				}
				case 1:
			    {
                   foreach(new i: Player) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID]) SavePlayer(i);
				   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                   mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `GangID` = '%d' AND `GangRank` = '6'", PlayerInfo[playerid][GangID]);
	               mysql_tquery(SQL, eQuery, "ResetGMembers", "dd", playerid, PlayerInfo[playerid][GangID]), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
                   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                   mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `GangID` = 0, `GangRank` = 0, `GangKills` = 0, `GangDeaths` = 0, `GangWarns` = 0, `GangCaptures` = 0, `GangPoints` = 0, `GangSkin` = 0 WHERE `GangID` = '%d' AND `GangRank` = '2'", PlayerInfo[playerid][GangID]);
	               mysql_tquery(SQL, eQuery, "", "");
	               //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	               foreach(new i: Player) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID] && PlayerInfo[i][g_Rank] == 2)
				   {
				   		PlayerInfo[i][GangID] = 0, PlayerInfo[i][g_Rank] = 0, PlayerInfo[i][g_Kills] = 0, PlayerInfo[i][g_Deaths] = 0, PlayerInfo[i][g_Captures] = 0, PlayerInfo[i][g_Points] = 0, PlayerInfo[i][g_Skin] = 0, SpawnPlayer(i);
				   		for(new s = 0; s < MAX_GANGS; s++) PlayerInfo[i][gWarnInGang][s] = 0;
				   }
                   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            }
	            case 2:
			    {
				   foreach(new i: Player) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID]) SavePlayer(i);
				   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                   mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `GangID` = '%d' AND `GangRank` = '7'", PlayerInfo[playerid][GangID]);
	               mysql_tquery(SQL, eQuery, "ResetGMembers", "dd", playerid, PlayerInfo[playerid][GangID]), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
                   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                   mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `GangID` = 0, `GangRank` = 0, `GangKills` = 0, `GangDeaths` = 0, `GangWarns` = 0, `GangCaptures` = 0, `GangPoints` = 0, `GangSkin` = 0 WHERE `GangID` = '%d' AND `GangRank` = '3'", PlayerInfo[playerid][GangID]);
	               mysql_tquery(SQL, eQuery, "", "");
                   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	               foreach(new i: Player) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID] && PlayerInfo[i][g_Rank] == 3)
				   {
				   		PlayerInfo[i][GangID] = 0, PlayerInfo[i][g_Rank] = 0, PlayerInfo[i][g_Kills] = 0, PlayerInfo[i][g_Deaths] = 0, PlayerInfo[i][g_Captures] = 0, PlayerInfo[i][g_Points] = 0, PlayerInfo[i][g_Skin] = 0, SpawnPlayer(i);
				   		for(new s = 0; s < MAX_GANGS; s++) PlayerInfo[i][gWarnInGang][s] = 0;
				   }
                   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            }
				case 3:
				{
				   foreach(new i: Player) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID]) SavePlayer(i);
				   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                   mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `GangID` = '%d' AND `GangRank` = '6' AND '7'", PlayerInfo[playerid][GangID]);
	               mysql_tquery(SQL, eQuery, "ResetGMembers", "dd", playerid, PlayerInfo[playerid][GangID]), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
                   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                   mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `GangID` = 0, `GangRank` = 0, `GangKills` = 0, `GangDeaths` = 0, `GangWarns` = 0, `GangCaptures` = 0, `GangPoints` = 0, `GangSkin` = 0 WHERE `GangID` = '%d' AND `GangRank` < '4'", PlayerInfo[playerid][GangID]);
	               mysql_tquery(SQL, eQuery, "", "");
                   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	               foreach(new i: Player) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID] && PlayerInfo[i][g_Rank] < 4)
				   {
				   		PlayerInfo[i][GangID] = 0, PlayerInfo[i][g_Rank] = 0, PlayerInfo[i][g_Kills] = 0, PlayerInfo[i][g_Deaths] = 0, PlayerInfo[i][g_Captures] = 0, PlayerInfo[i][g_Points] = 0, PlayerInfo[i][g_Skin] = 0, SpawnPlayer(i);
				   		for(new s = 0; s < MAX_GANGS; s++) PlayerInfo[i][gWarnInGang][s] = 0;
				   }
                   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

	            }
	            case 4:
				{
				   SPD(playerid, DIALOG_RESET2, INPUT, "{FF0000}Gang Settings - Custom Reset", "{FFE600}Please enter the minimum gang member gangpoints for members not to be reseted:", "Ok", "Close");
	            }
	        }
	    }
	    case DIALOG_RESET2:
	    {
	        if(!response) return true;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        new reset;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			reset = strval(inputtext);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(reset < 0) return SendError(playerid, "Invalid minimum gangpoints ammount!");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        foreach(new i: Player) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID]) SavePlayer(i);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `GangID` = '%d' AND `GangRank` < '4' AND `GangPoints` < '%d'", PlayerInfo[playerid][GangID], reset);
	        mysql_tquery(SQL, eQuery, "ResetGMembers", "dd", playerid, PlayerInfo[playerid][GangID]), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `GangID` = 0, `GangRank` = 0, `GangKills` = 0, `GangDeaths` = 0, `GangWarns` = 0, `GangCaptures` = 0, `GangPoints` = 0, `GangSkin` = 0 WHERE `GangID` = '%d' AND `GangRank` < '4' AND `GangPoints` < '%d'", PlayerInfo[playerid][GangID], reset);
            mysql_tquery(SQL, eQuery, "", "");
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            foreach(new i: Player) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID] && PlayerInfo[i][g_Rank] < 4 && PlayerInfo[i][g_Points] < reset)
		    {
		   		PlayerInfo[i][GangID] = 0, PlayerInfo[i][g_Rank] = 0, PlayerInfo[i][g_Kills] = 0, PlayerInfo[i][g_Deaths] = 0, PlayerInfo[i][g_Captures] = 0, PlayerInfo[i][g_Points] = 0, PlayerInfo[i][g_Skin] = 0, SpawnPlayer(i);
		   		for(new s = 0; s < MAX_GANGS; s++) PlayerInfo[i][gWarnInGang][s] = 0;
		    }
        }
        case DIALOG_GANGSLOT1:
		{
		    if(response)
		    {
		        new wslot[] = {1,2,3,4,5,6,7,8,9};
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        foreach(Player, i) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID]) GivePlayerWeapon(i, wslot[listitem], 9999), GangInfo[PlayerInfo[playerid][GangID]][GangWeapon1] = wslot[listitem];
		        return SPD(playerid, DIALOG_GANGSLOT2, 2, "{FF0000}Gang Settings - Weapons {FFFFFF}#2", "{00CC00}Pistol\n{0091FF}Silenced Pistol\n{FFE600}DesertEagle", "Next Slot", "Cancel");
			}
		}
		case DIALOG_GANGSLOT2:
		{
		    if(response)
		    {
		        new wslot[]= {22,23,24};
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				foreach(Player, i) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID]) GivePlayerWeapon(i, wslot[listitem], 9999), GangInfo[PlayerInfo[playerid][GangID]][GangWeapon2] = wslot[listitem];
		        return SPD(playerid, DIALOG_GANGSLOT3, 2, "{FF0000}Gang Settings - Weapons {FFFFFF}#3", "{00CC00}ShotGun\n{0091FF}Sawn-Off-Shotgun\n{FFE600}SPAZ-12", "Next Slot", "Cancel");
    		}
		}
		case DIALOG_GANGSLOT3:
		{
		    if(response)
		    {
		        new wslot[]= {25,26,27};
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				foreach(Player, i) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID]) GivePlayerWeapon(i, wslot[listitem], 9999), GangInfo[PlayerInfo[playerid][GangID]][GangWeapon3] = wslot[listitem];
				return SPD(playerid, DIALOG_GANGSLOT4, 2, "{FF0000}Gang Settings - Weapons {FFFFFF}#4", "{00CC00}Micro UZI\n{0091FF}MP5\n{FFE600}TEC-9", "Next", "Cancel");
			}
		}
		case DIALOG_GANGSLOT4:
		{
		    if(response)
		    {
		        new wslot[]= {28,29,32};
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				foreach(Player, i) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID]) GivePlayerWeapon(i, wslot[listitem], 9999), GangInfo[PlayerInfo[playerid][GangID]][GangWeapon4] = wslot[listitem];
		        return SPD(playerid, DIALOG_GANGSLOT5, 2, "{FF0000}Gang Settings - Weapons {FFFFFF}#5", "{00CC00}AK-47\n{0091FF}M4", "Next", "Cancel");
			}
		}
		case DIALOG_GANGSLOT5:
		{
		    if(response)
			{
	        	new wslot[]= {30,31};
	        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				foreach(Player, i) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID]) GivePlayerWeapon(i, wslot[listitem], 9999), GangInfo[PlayerInfo[playerid][GangID]][GangWeapon5] = wslot[listitem];
				return SPD(playerid, DIALOG_GANGSLOT6, 2, "{FF0000}Gang Settings - Weapons {FFFFFF}#6", "{00CC00}Country Rifle\n{0091FF}Sniper Rifle", "Next", "Cancel");
			}
		}
		case DIALOG_GANGSLOT6:
		{
		    if(response)
			{
		        new wslot[]= {33,34};
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				foreach(Player, i) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID]) GivePlayerWeapon(i, wslot[listitem], 9999), GangInfo[PlayerInfo[playerid][GangID]][GangWeapon6] = wslot[listitem];
	            Announce(playerid, "~w~~h~Gang Weapons ~n~~g~~h~~h~updated~w~~h~!", 4000, 3);
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> Edit Gang
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_EDITGANG:
	    {
		    if(!response) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			eQuery[0] = EOS; eString[0] = EOS;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    new Float:p[4]; GetPlayerPos(playerid, p[0], p[1], p[2]); GetPlayerFacingAngle(playerid, p[3]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			switch(listitem)
	        {
	            case 0:
	            {
	                new string[123];
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                format(string, sizeof(string), "\
					{FF0000}Please type below the checkpoint text\n\
					{FFFFFF}If you want to color the text, use {FF0000}{HEX CODE}{FFFF00}TEXT");
                 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                SPD(playerid, DIALOG_EDITGANG+2, INPUT, "Edit Gang Checkpoint", string, "Ok", "Close");
	            }
	            case 1:
                {
                    new string[123];
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    format(string, sizeof(string), "{FF0000}Edit{00CC00} %s's{FF0000} gang! {FFFFFF}- Pickups", GangInfo[PlayerInfo[playerid][EditingGang]][GangName]);
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    strcat(eString, "\
					Item\tDescription\n\
					{FF0000}Minigun\t{FFFFFF}Add minigun pickup\n\
					{FF0000}Rocket\t{FFFFFF}Add rocket pickup\n\
					{FF0000}Health\t{FFFFFF}Add health pickup\n\
					{FF0000}Armour\t{FFFFFF}Add armour pickup");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    SPD(playerid, DIALOG_EDITGANG+9, HEADERS, string, eString, "Select", "Close");
	            }
	            case 2:
				{
				    new string[123];
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    format(string, sizeof(string), "{FF0000}Edit{00CC00} %s's{FF0000} gang! {FFFFFF}- Delete", GangInfo[PlayerInfo[playerid][EditingGang]][GangName]);
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    strcat(eString, "\
					Item\tDescription\n\
					{FF0000}All\t{FFFFFF}Delete all items\n\
					{FF0000}Custom\t{FFFFFF}Custom delete");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    SPD(playerid, DIALOG_EDITGANG+6, HEADERS, string, eString, "Select", "Close");
	            }
	            case 3:
	            {
					mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Gangs` SET `GangX` = '%f', `GangY` = '%f', `GangZ` = '%f', `GangA` = '%f' WHERE `ID` = '%d'", p[0], p[1], p[2], p[3], PlayerInfo[playerid][GangID]);
					mysql_tquery(SQL, eQuery, "", "");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					GangInfo[PlayerInfo[playerid][EditingGang]][GangX] = p[0];
					GangInfo[PlayerInfo[playerid][EditingGang]][GangY] = p[1];
					GangInfo[PlayerInfo[playerid][EditingGang]][GangZ] = p[2];
					GangInfo[PlayerInfo[playerid][EditingGang]][GangA] = p[3];
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~R~~H~~H~Gang spawn changed!", 3000, 3);
	            }
	            case 4:
	            {
	                if(IsPlayerInAnyVehicle(playerid))
					{
						new vehicleid = GetPlayerVehicleID(playerid), vehiclemodel = GetVehicleModel(vehicleid);
						new Float:vehP[4], count;
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    for(new i = 0; i < MAX_VEH; i++) { if(Vehicles[i][vehicleData] == vehicleid) { count++; } }
					    if(count >= 1) return SCM(playerid, RED, "Sorry, but you cannot use this vehicle!");
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    GetVehiclePos(vehicleid, vehP[0], vehP[1], vehP[2]);
		        		GetVehicleZAngle(vehicleid, vehP[3]);
		        		//++++++++++++++++++++++++++++++++++++++++++++++++++++++
		                mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `GangCars`(`ID`,`GangID`,`VehModel`,`VehPosX`,`VehPosY`,`VehPosZ`,`VehPosA`) VALUES(0, '%d', '%d', '%f', '%f', '%f', '%f')", PlayerInfo[playerid][EditingGang], vehiclemodel, vehP[0], vehP[1], vehP[2], vehP[3]);
			            mysql_tquery(SQL, eQuery, "CreateGangCar", "ddddffff", playerid, PlayerInfo[playerid][EditingGang], vehicleid, vehiclemodel, vehP[0], vehP[1], vehP[2], vehP[3]);
			            //++++++++++++++++++++++++++++++++++++++++++++++++++++++
			            Announce(playerid, "~R~~H~~H~Car added to this gang!", 3000, 3);
					}
					else return SendError(playerid, "You need to be in any vehicle to create a gang car! | Use /car or /v to spawn a vehicle!");
	            }
	            case 5:
	            {
					mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `GangHouses` SET `HouseX` = '%f', `HouseY` = '%f', `HouseZ` = '%f' WHERE `ID` = '%d'", p[0], p[1], p[2], PlayerInfo[playerid][EditingGang]);
					mysql_tquery(SQL, eQuery, "EditeGangHousePickup", "dfff", PlayerInfo[playerid][EditingGang], p[0], p[1], p[2]);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~R~~H~~H~Gang House pickup updated!", 3000, 3);
	            }
	            case 6:
	            {
	                TerryData[playerid][0] = Teritories[PlayerInfo[playerid][EditingGang]][minx];
	                TerryData[playerid][1] = Teritories[PlayerInfo[playerid][EditingGang]][miny];
	                TerryData[playerid][2] = Teritories[PlayerInfo[playerid][EditingGang]][maxx];
	                TerryData[playerid][3] = Teritories[PlayerInfo[playerid][EditingGang]][maxy];
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                OnTerryEdit[playerid] = PlayerInfo[playerid][EditingGang];
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                GangZoneHideForAll(Teritories[PlayerInfo[playerid][EditingGang]][ID]);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                SCM(playerid, YELLOW, "GangEDIT:{FF0000} Press the button{FFFF00} 'F'{FF0000} to start editing this gang territory position!");
	                SCM(playerid, YELLOW, "GangEDIT:{FF0000} If you want to cancel press the button{FFFF00} 'H'{FF0000}!");
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                TerryEditStage[playerid] = 1;
	            }
	            case 7:
	            {
	                if(GangInfo[PlayerInfo[playerid][EditingGang]][Gate_Status] == 0)
	                {
		                OnGangEdit[playerid] = 1;
		                //++++++++++++++++++++++++++++++++++++++++++++++++++++++
		                DestroyDynamic3DTextLabel(Gang3DGate[PlayerInfo[playerid][EditingGang]]);
		                //++++++++++++++++++++++++++++++++++++++++++++++++++++++
		                SetDynamicObjectRot(GangGate[PlayerInfo[playerid][EditingGang]], 0, 0, 0);
		                //++++++++++++++++++++++++++++++++++++++++++++++++++++++
		                SetDynamicObjectPos(GangGate[PlayerInfo[playerid][EditingGang]], p[0]+5, p[1], p[2]);
	                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
		                EditDynamicObject(playerid, GangGate[PlayerInfo[playerid][EditingGang]]);
		                //++++++++++++++++++++++++++++++++++++++++++++++++++++++
		                SCM(playerid, YELLOW, "GangEDIT:{FF0000} You have selected to edit the gate position{FFFF00} use{FF0000} 'ESC'{FFFF00} button to cancel!");
		            }
		            else return SendError(playerid, "You cannot edit this gang gate! | The gate are destroyed!");
	            }
	            case 8:
	            {
	                mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Gangs` SET `LootX` = '%f', `LootY` = '%f', `LootZ` = '%f' WHERE `ID` = '%d'", p[0], p[1], p[2], PlayerInfo[playerid][EditingGang]);
					mysql_tquery(SQL, eQuery, "EditeGangLootPickup", "dfff", PlayerInfo[playerid][EditingGang], p[0], p[1], p[2]);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~R~~H~~H~Gang Loot pickup updated!", 3000, 3);
	            }
	            case 9:
	            {
	                new string[123];
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                format(string, sizeof(string), "{FF0000}Edit{00CC00} %s's{FF0000} gang! {FFFFFF}- Settings", GangInfo[PlayerInfo[playerid][EditingGang]][GangName]);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                strcat(eString, "Item\tDescription\n\
	                				{FF0000}Virtual World\t{FFFFFF}Edit virtual world ID\n\
	                				{FF0000}Interior\t{FFFFFF}Edit interior ID");
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                SPD(playerid, DIALOG_EDITGANG+3, HEADERS, string, eString, "Select", "Close");
	            }
	            case 10:
	            {
	                GangBaseEdit[playerid] = PlayerInfo[playerid][EditingGang];
	                OnGangEdit[playerid] = 1;
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                SCM(playerid, YELLOW, "GangEDIT:{FF0000} Press the button{FFFF00} 'F'{FF0000} to set the gang base teleport position!");
	                SCM(playerid, YELLOW, "GangEDIT:{FF0000} If you want to cancel press the button{FFFF00} 'H'{FF0000}!");
	            }
	            case 11:
	            {
	                GangCameraEdit[playerid] = 1;
	                OnGangEdit[playerid] = 1;
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                SCM(playerid, YELLOW, "GangEDIT:{FF0000} Press the button{FFFF00} 'F'{FF0000} for the starter point");
	                SCM(playerid, YELLOW, "GangEDIT:{FF0000} If you want to cancel press the button{FFFF00} 'H'{FF0000}!");
	            }
	            case 12:
	            {
	                if(!response) return true;
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                new string[123];
		    		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    		format(string, sizeof(string), "{FF0000}Edit{00CC00} %s's{FF0000} gang! {FFFFFF}- Delete gang*", GangInfo[PlayerInfo[playerid][EditingGang]][GangName]);
		    		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					format(eString, sizeof(eString), "\
					{FFFFFF}Are you really want to delete permanently gang {FF0000}%s{FFFFFF}?\n\
					{FFFF00}Note: {FFFFFF}This action is {FF0000}ireverssible{FFFFFF}!\n\
					{FFFFFF}If your action are wrong.. you can get instatly {FF0000}DEMOTE{FFFFFF}!\n\
					{FFFFFF}* Press {FF0000}Yes{FFFFFF} for {FF0000}delete{FFFFFF}!\n\
					{FFFFFF}* Press {FF0000}No{FFFFFF} for close this dialog!", GangInfo[PlayerInfo[playerid][EditingGang]][GangName]);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SPD(playerid, DIALOG_EDITGANG+10, MSGBOX, string, eString, "No", "Yes");
	            }
	        }
	    }
	    case DIALOG_EDITGANG+1: { }
		case DIALOG_EDITGANG+2:
		{
		    if(!response) return true;
		    if(response)
			{
   				GetPlayerPos(playerid, CPPos[playerid][0], CPPos[playerid][1], CPPos[playerid][2]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    if(sscanf(inputtext, "s[30]", inputtext[0])) return false;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(CPPosText[playerid], 30, "%s", inputtext[0]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    InCheckPointEdit[playerid] = 1;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    OnGangEdit[playerid] = 1;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    SetPlayerInterior(playerid, 0);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    SCM(playerid, YELLOW, "GangEDIT:{FF0000} Checkpoint added | Use button{FFFF00} 'F'{FF0000} where you want to teleport this checkpoint{FFFF00}!");
			}
		}
		case DIALOG_EDITGANG+3:
		{
		    eString[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(!response) return true;
		    if(response)
		    {
		        switch(listitem)
		        {
		      		case 0: SPD(playerid, DIALOG_EDITGANG+4, INPUT, "Edit Gang Virtual World", "{FF0000}Please type below the virtual world ID:", "Set", "Close");
		      		case 1: SPD(playerid, DIALOG_EDITGANG+5, INPUT, "Edit Gang Interior", "{FF0000}Please type below the interior ID:", "Set", "Close");
		        }
		    }
		}
		case DIALOG_EDITGANG+4:
		{
			eString[0] = EOS;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(!response) return true;
		    if(response)
		    {
		        if(IsNumeric(inputtext))
		        {
		            GangInfo[PlayerInfo[playerid][EditingGang]][GangWorld] = strval(inputtext);
		            OnUpdate(1);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            format(eString, sizeof(eString), "~w~~h~Gang world changed to: ~n~~g~~h~~h~%d", strval(inputtext));
		            Announce(playerid, eString, 6000, 3);
		        }
		        else SPD(playerid, DIALOG_EDITGANG+4, INPUT, "Edit Gang Virtual World", "{FF0000}Please type below the virtual world ID:", "Set", "Close");
		    }
		}
		case DIALOG_EDITGANG+5:
		{
		    eString[0] = EOS;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(!response) return true;
		    if(response)
		    {
		        if(IsNumeric(inputtext))
		        {
		            GangInfo[PlayerInfo[playerid][EditingGang]][GangInt] = strval(inputtext);
		            OnUpdate(1);
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            format(eString, sizeof(eString), "~w~~h~Gang interior changed to: ~n~~g~~h~~h~%d", strval(inputtext));
		            Announce(playerid, eString, 6000, 3);
		        }
		        else SPD(playerid, DIALOG_EDITGANG+5, INPUT, "Edit Gang Interior", "{FF0000}Please type below the interior ID:", "Set", "Close");
		    }
		}
		case DIALOG_EDITGANG+6:
		{
		    if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    new string[123], valuestring[24];
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(listitem == 0) valuestring = "Delete all";
		    else if(listitem == 1) valuestring = "Delete custom";
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(string, sizeof(string), "{FF0000}Edit{00CC00} %s's{FF0000} gang! {FFFFFF}- %s", GangInfo[PlayerInfo[playerid][EditingGang]][GangName], valuestring);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    switch(listitem)
		    {
		        case 0:
		        {
					strcat(eString, "\
					Item\tDescription\n\
					{FF0000}Checkpoints\t{FFFFFF}Delete checkpoints\n\
					{FF0000}Pickups\t{FFFFFF}Delete pickups");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            SPD(playerid, DIALOG_EDITGANG+7, HEADERS, string, eString, "Select", "Close");
		        }
		        case 1:
		        {
		            strcat(eString, "\
					Item\tDescription\n\
					{FF0000}Pickup\t{FFFFFF}Delete pickup");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            SPD(playerid, DIALOG_EDITGANG+8, HEADERS, string, eString, "Select", "Close");
		        }
		    }
		}
		case DIALOG_EDITGANG+7:
		{
		    if(!response) return true; eQuery[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    switch(listitem)
		    {
		        case 0:
		        {
		            mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `GangCheckpoints` WHERE `GangID` = '%d'", PlayerInfo[playerid][EditingGang]);
					mysql_tquery(SQL, eQuery, "DeletegCheckpoints", "d", PlayerInfo[playerid][EditingGang]);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                Announce(playerid, "~R~~H~~H~Gang checkpoints was deleted!", 3000, 3);
		        }
		        case 1:
		        {
		            mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `GangPickups` WHERE `GangID` = '%d'", PlayerInfo[playerid][EditingGang]);
					mysql_tquery(SQL, eQuery, "DeletegPickups", "d", PlayerInfo[playerid][EditingGang]);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                Announce(playerid, "~R~~H~~H~Gang pickups was deleted!", 3000, 3);
		        }
		    }
		}
		case DIALOG_EDITGANG+8:
		{
		    if(!response) return true; eQuery[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    switch(listitem)
		    {
		        case 0:
		        {
		            new pickupid = GetGangPickupID(playerid);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					if(pickupid == -1) return SendError(playerid, "You are not in a Gang Pickup!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					DestroyDynamicPickup(GangPickups[pickupid]);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					foreach(new i: Player)
					{
					    if(PlayerInfo[i][GangID] == PlayerInfo[playerid][EditingGang])
					    {
					   		PlayerInfo[i][GangPickupTimer][pickupid] = 0;
					   		KillTimer(PlayerInfo[i][GangTimerSet]);
					   	}
					}
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PickupInfo[pickupid][PickupPos][1] = 0;
					PickupInfo[pickupid][PickupPos][2] = 0;
					PickupInfo[pickupid][PickupPos][3] = 0;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `GangPickups` WHERE `ID` = '%d'", pickupid);
					mysql_tquery(SQL, eQuery, "", "");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~R~~H~~H~Gang Pickup ~N~~R~~H~~H~has been removed!", 3000, 3);
		        }
		    }
		}
		case DIALOG_EDITGANG+9:
		{
		    if(!response) return true; eQuery[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			new modelid, weaponid, Float:p[3]; GetPlayerPos(playerid, p[0], p[1], p[2]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			switch(listitem) {
			case 0: modelid = 362, weaponid = 38;
			case 1: modelid = 359, weaponid = 35;
			case 2: modelid = 1240, weaponid = 0;
			case 3: modelid = 1242, weaponid = 0; }
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `GangPickups`(`ID`,`GangID`,`PickupType`,`ModelID`,`WeaponID`,`PosX`,`PosY`,`PosZ`) VALUES(0, '%d', '%d', '%d', '%d', '%f', '%f', '%f')", PlayerInfo[playerid][EditingGang], listitem+1, modelid, weaponid, p[0], p[1], p[2]);
			mysql_tquery(SQL, eQuery, "CreateGangPickup", "ddddfff", PlayerInfo[playerid][EditingGang], listitem+1, modelid, weaponid, p[0], p[1], p[2]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Announce(playerid, "~R~~H~~H~Pickup added to this gang!", 3000, 3);
		}
		case DIALOG_EDITGANG+10:
		{
		    if(response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    eLog[0] = EOS; format(eLog, sizeof(eLog), "RCON: \"%s\" has delete gang \"%s\"!", PN(playerid), GangInfo[PlayerInfo[playerid][EditingGang]][GangName]), SendRconLog(eLog);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    eString[0] = EOS; format(eString, sizeof(eString), "ACW: Admin '%s' has deleted gang '%s(%d)!'", PN(playerid), GangInfo[PlayerInfo[playerid][EditingGang]][GangName], PlayerInfo[playerid][EditingGang]); MessageToAdmins(ABLUE, eString);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    DeleteGang(PlayerInfo[playerid][EditingGang]);
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> DJ STUDIO
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_DJ_STUDIO:
	    {
	        if(response)
	        {
	            if(listitem == 0) SPD(playerid, DIALOG_DJ_STUDIO + 1, INPUT, "Add MP3 Music #1", "{FFFF00}Type below the music name:", "Ok", "Close");
	            if(listitem >= 1) PlayMP3StreamByDB(playerid, listitem+2);
	        }
	    }
		case DIALOG_DJ_STUDIO + 1:
		{
			if(response)
			{
			    if(sscanf(inputtext, "s[256]", inputtext[0])) return false;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(DJArtist[playerid], 256, "%s", inputtext[0]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    SPD(playerid, DIALOG_DJ_STUDIO + 2, INPUT, "Add MP3 Music #2", "{FFFF00}Please type below the music link:\n\
																				{00CC00}Recomanded:{FFFF00} https://kiwi6.com", "Ok", "Close");
			}
		}
		case DIALOG_DJ_STUDIO + 2:
		{
		    if(response)
		    {
				eQuery[0] = EOS;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        if(sscanf(inputtext, "s[256]", inputtext[0])) return false;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    if(strfind(inputtext[0], "http://k007.kiwi6.com", false) == 0)
			    {
				    format(DJLink[playerid], 256, "%s", inputtext);
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					new Count = 1;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					mysql_query(SQL, "SELECT * FROM `DJMP3`");
					new total; cache_get_row_count(total);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				 	for(new i, x = total; i < x; i++) Count++;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `DJMP3`(`ID`, `MusicName`, `MusicLink`, `MusicBy`, `MusicDate`) VALUES(%d, '%s', '%s', '%s', '%s')", Count, DJArtist[playerid], DJLink[playerid], PN(playerid), GetCurrentDate(2));
					mysql_tquery(SQL, eQuery, "", "");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~You music has been added~N~~G~~H~check~Y~~H~ /djs~G~~H~ for more~Y~~H~!", 6000, 3);
				}
				else return SendError(playerid, "You need to use the kiwi site!");
		    }
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// Config - /Config
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_CONFIG:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
	                {
	                    if(ServerInfo[ServerHNC] == 1) ServerInfo[ServerHNC] = 0, OnUpdate(4), SCM(playerid, -1, "SERVER: Hostname changer: off");
	                    else if(ServerInfo[ServerHNC] == 0) ServerInfo[ServerHNC] = 1, OnUpdate(4), SCM(playerid, -1, "SERVER: Hostname changer: on");
	                }
	                case 1:
	                {
	                    SPD(playerid, DIALOG_CONFIG+1, INPUT, "\
						{FF0000}Config{FFFFFF} - {FFFF00}Hostname",
						"{00CC00}Type below the hostname what you want to {FF0000}add{00CC00}:", "Change", "Close");
	                }
	                case 2:
	                {
	                    if(ServerInfo[AntiVersionOutData] == 1) ServerInfo[AntiVersionOutData] = 0, OnUpdate(4), SCM(playerid, -1, "SERVER: Anti-version-outdata: off");
	                    else if(ServerInfo[AntiVersionOutData] == 0) ServerInfo[AntiVersionOutData] = 1, OnUpdate(4), SCM(playerid, -1, "SERVER: Anti-version-outdata: on");
	                }
	                case 3:
	                {
	                	new Count = 1; StrH[0] = '\0'; StrH2[0] = '\0'; eString[0] = EOS;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						mysql_query(SQL, "SELECT * FROM `SpawnZones` ORDER BY `ID`");
						new total; cache_get_row_count(total);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
					 	for(new i, x = total; i < x; i++)
					    {
						    new sName[50];
						    //++++++++++++++++++++++++++++++++++++++++++++++++++
							CONTENT(i, "SpawnName", sName);
							//++++++++++++++++++++++++++++++++++++++++++++++++++
						 	format(StrH2, sizeof(StrH2), "%s\n{00CC00}%s\n", StrH2, sName);
						 	format(eString, sizeof(eString), "%s", StrH2);
					 		format(StrH, sizeof(StrH), "\tName\n%s", eString);
						 	Count++;
						}
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						SPD(playerid, DIALOG_CONFIG+2, HEADERS, "{FF0000}Config {FFFFFF}- {FFFF00}Edit Spawn Zones", StrH, "Select", "Close");
	                }
	            }
	        }
	    }
	    case DIALOG_CONFIG+1:
	    {
	        if(response)
	        {
	            new string[128];
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    if(sscanf(inputtext, "s[128]", inputtext[0])) return false;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(ServerInfo[HostNameChangedBy], 24, "%s", PN(playerid));
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       			format(string, sizeof(string), "hostname %s", inputtext[0]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    SendRconCommand(string);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    SCM(playerid, -1, "SERVER: The hostname has been updated!");
	        }
	    }
	    case DIALOG_CONFIG+2:
	    {
	        if(!response) return true;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        eString[0] = EOS; format(eString, sizeof(eString), "{FF0000}Edit Spawn Zone {FFFFFF}| {FFFF00}%s", SpawnZones[listitem+1][SpawnName]);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        EditingSpawnZoneID[playerid] = listitem+1;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SPD(playerid, DIALOG_CONFIG+3, LIST, eString, "{00CC00}Edit Spawn Position\n{00CC00}Edit Spawn Checkpoint", "Select", "Close");
	    }
	    case DIALOG_CONFIG+3:
	    {
	        if(response)
			{
				switch(listitem)
				{
					case 0: EditSpawnZone(playerid, EditingSpawnZoneID[playerid]);
					case 1: EditSpawnCP(playerid, EditingSpawnZoneID[playerid]);
				}
			}
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // Raport Config
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_RAPORT_CONFIG:
	    {
	        if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
						SPD(playerid, DIALOG_RAPORT_CONFIG+1, INPUT, "Raport Config - Max Bans", "{FFFFFF}Enter the maximum bans report per day!", "Enter", "Back");
		            }
		            case 1:
		            {
						SPD(playerid, DIALOG_RAPORT_CONFIG+2, INPUT, "Raport Config - Max Warns", "{FFFFFF}Enter the maximum warns report per day!", "Enter", "Back");
		            }
		            case 2:
		            {
						SPD(playerid, DIALOG_RAPORT_CONFIG+3, INPUT, "Raport Config - Max Kicks", "{FFFFFF}Enter the maximum kicks report per day!", "Enter", "Back");
		            }
		            case 3:
		            {
						SPD(playerid, DIALOG_RAPORT_CONFIG+4, INPUT, "Raport Config - Max Jails", "{FFFFFF}Enter the maximum jails report per day!", "Enter", "Back");
		            }
		            case 4:
		            {
						SPD(playerid, DIALOG_RAPORT_CONFIG+5, INPUT, "Raport Config - Max Mutes", "{FFFFFF}Enter the maximum mutes report per day!", "Enter", "Back");
		            }
		            case 5:
		            {
						SPD(playerid, DIALOG_RAPORT_CONFIG+6, INPUT, "Raport Config - Reports max. Solved", "{FFFFFF}Enter the maximum reports max per day!", "Enter", "Back");
		            }
		            case 6:
		            {
						SPD(playerid, DIALOG_RAPORT_CONFIG+7, INPUT, "Raport Config - Events Made max.", "{FFFFFF}Enter the maximum events max per day!", "Enter", "Back");
		            }
		            case 7:
		            {
						SPD(playerid, DIALOG_RAPORT_CONFIG+8, INPUT, "Raport Config - Raport Maximum Inactivity", "{FFFFFF}Enter the maximum inactivity days!", "Enter", "Back");
		            }
		            case 8:
		            {
						SPD(playerid, DIALOG_RAPORT_CONFIG+9, INPUT, "Raport Config - Raport Maximum (Per day)", "{FFFFFF}Enter the maximum raports max per day!", "Enter", "Back");
		            }
		            case 9:
		            {
						Announce(playerid, "~r~~H~~H~Raport System ~N~~G~~H~~H~has been reloaded~R~~H~~H~!", 6000, 4);
		            }
		        }
			}
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_RAPORT_CONFIG+1:
		{
		    if(response)
		    {
		        eQuery[0] = EOS;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        sscanf(inputtext, "d", inputtext[0]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        Raport[RBans] = inputtext[0];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Raports` SET `Bans` = '%d' WHERE `ID`", Raport[RBans]);
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				FormatMSG(playerid, YELLOW, "Bans Raport setted to %d!", Raport[RBans]);
			}
			else PlayerInfo[playerid][Variable] = 1, CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/rconfig");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_RAPORT_CONFIG+2:
		{
		    if(response)
		    {
		        eQuery[0] = EOS;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        sscanf(inputtext, "d", inputtext[0]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        Raport[RWarns] = inputtext[0];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Raports` SET `Warns` = '%d' WHERE `ID`", Raport[RWarns]);
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				FormatMSG(playerid, YELLOW, "Warns Raport setted to %d!", Raport[RWarns]);
			}
			else PlayerInfo[playerid][Variable] = 1, CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/rconfig");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_RAPORT_CONFIG+3:
		{
		    if(response)
		    {
		        eQuery[0] = EOS;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        sscanf(inputtext, "d", inputtext[0]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        Raport[RKicks] = inputtext[0];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Raports` SET `Warns` = '%d' WHERE `ID`", Raport[RKicks]);
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				FormatMSG(playerid, YELLOW, "Kicks Raport setted to %d!", Raport[RKicks]);
			}
			else PlayerInfo[playerid][Variable] = 1, CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/rconfig");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_RAPORT_CONFIG+4:
		{
		    if(response)
		    {
		        eQuery[0] = EOS;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        sscanf(inputtext, "d", inputtext[0]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        Raport[RJails] = inputtext[0];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Raports` SET `Jails` = '%d' WHERE `ID`", Raport[RJails]);
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				FormatMSG(playerid, YELLOW, "Kicks Raport setted to %d!", Raport[RJails]);
			}
			else PlayerInfo[playerid][Variable] = 1, CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/rconfig");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_RAPORT_CONFIG+5:
		{
		    if(response)
		    {
		        eQuery[0] = EOS;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        sscanf(inputtext, "d", inputtext[0]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        Raport[RMutes] = inputtext[0];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Raports` SET `Mutes` = '%d' WHERE `ID`", Raport[RMutes]);
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				FormatMSG(playerid, YELLOW, "Mutes Raport setted to %d!", Raport[RMutes]);
			}
			else PlayerInfo[playerid][Variable] = 1, CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/rconfig");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_RAPORT_CONFIG+6:
		{
		    if(response)
		    {
		        eQuery[0] = EOS;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        sscanf(inputtext, "d", inputtext[0]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        Raport[RReports] = inputtext[0];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Raports` SET `Reports` = '%d' WHERE `ID`", Raport[RReports]);
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				FormatMSG(playerid, YELLOW, "Reports Solved max. Setted to %d!", Raport[RReports]);
			}
			else PlayerInfo[playerid][Variable] = 1, CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/rconfig");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_RAPORT_CONFIG+7:
		{
		    if(response)
		    {
		        eQuery[0] = EOS;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        sscanf(inputtext, "d", inputtext[0]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        Raport[REvents] = inputtext[0];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Raports` SET `Events` = '%d' WHERE `ID`", Raport[REvents]);
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				FormatMSG(playerid, YELLOW, "Events Made max. setted to %d!", Raport[REvents]);
			}
			else PlayerInfo[playerid][Variable] = 1, CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/rconfig");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_RAPORT_CONFIG+8:
		{
		    if(response)
		    {
		        eQuery[0] = EOS;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        sscanf(inputtext, "d", inputtext[0]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        Raport[RMax] = inputtext[0];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Raports` SET `Inactivity` = '%d' WHERE `ID`", Raport[RMax]);
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				FormatMSG(playerid, YELLOW, "Raport Inactivity max. setted to %d!", Raport[RMax]);
			}
			else PlayerInfo[playerid][Variable] = 1, CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/rconfig");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_RAPORT_CONFIG+9:
		{
		    if(response)
		    {
		        eQuery[0] = EOS;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        sscanf(inputtext, "d", inputtext[0]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        Raport[RMaxRaport] = inputtext[0];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Raports` SET `MaxRaports` = '%d' WHERE `ID`", Raport[RMaxRaport]);
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				FormatMSG(playerid, YELLOW, "Raport max. setted to %d!", Raport[RMaxRaport]);
			}
			else PlayerInfo[playerid][Variable] = 1, CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/rconfig");
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // party
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_TELES_PARTY:
	    {
            if(response)
		    {
		        switch(listitem)
		        {
		            case 0: TPlayer(playerid, "Party 1", "party 1", -805.4929,-1920.9489,6.8689,   0, true);
					case 1: TPlayer(playerid, "Party 2", "party 2", 1240.6552,-1190.5601,126.6394, 0, true);
					case 2: TPlayer(playerid, "Party 3", "party 3", -1846.2693,1004.8452,46.0872,  0, true);
					case 3: TPlayer(playerid, "Party 4", "party 4", 1246.7513,-2418.4761,11.2263,  0, true);
					case 4: TPlayer(playerid, "Swimming Pool", "sp", 34.7349,-3370.0093,5.4689,324.6043, true);
				}
			}
			else PlayerInfo[playerid][Variable] = 1, CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/teles");
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // Jobs
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_JOBS:
		{
		    if(!response) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			switch(listitem)
			{
			    case 0: // Pizza Job
			    {
					Announce(playerid, "~y~~h~Enter in a pizza boy vehicle.", 4000, 4);
					SetPlayerPos(playerid, 2088.6782,-1806.5980,13.5469);
					SetPlayerFacingAngle(playerid, 270.6918);
				}
				case 1: // Farmer Job
			    {
					Announce(playerid, "~y~~h~Farmer Job", 4000, 4);
					SetPlayerPos(playerid, -382.7727,-1426.4601,26.2678);
					SetPlayerFacingAngle(playerid, 91.4289);
				}
				case 2: // Trucker Job
			    {
					Announce(playerid, "~y~~h~Trucker Job", 4000, 4);
					SetPlayerPos(playerid, 76.4239,-222.3698,1.5781);
					SetPlayerFacingAngle(playerid, 0.3178);
				}
				case 3: // Robber of cars Job
			    {
					Announce(playerid, "~y~~h~Robber of Cars", 4000, 4);
					SetPlayerPos(playerid, 1712.4908,-1544.3226,13.5469);
					SetPlayerFacingAngle(playerid, 50.3591);
				}
				case 4: // Hitman Job
			    {
					Announce(playerid, "~y~~h~Hitman Job", 4000, 4);
					SetPlayerPos(playerid, 2278.7854, 2526.7324, 10.8203);
					SetPlayerFacingAngle(playerid, 269.3367);
				}
				case 5: // Stone Quarry Job
			    {
					Announce(playerid, "~y~~h~Stone Quarry", 4000, 4);
					SetPlayerPos(playerid, 831.0613, 860.0721, 12.53987);
					SetPlayerFacingAngle(playerid, 112.548);
				}
				case 6: // Taxi Job
			    {
					Announce(playerid, "~y~~h~Taxi Job", 4000, 4);
					SetPlayerPos(playerid, 1743.2067, -1847.8767, 13.5797);
					SetPlayerFacingAngle(playerid, 180.1425);
				}
				case 7: // Dealer
			    {
					Announce(playerid, "~y~~h~Dealer", 4000, 4);
					SetPlayerPos(playerid, -2110.6445, -486.5569, 35.5313);
					SetPlayerFacingAngle(playerid, 117.3232);
				}
				case 8: // Glovo
				{
				    Announce(playerid, "~y~~h~Glovo", 4000, 4);
					SetPlayerPos(playerid, -2468.6577, 750.1985, 35.1719);
					SetPlayerFacingAngle(playerid, 4.8039);
				}
			}
			return true;
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_TRUCKER:
		{
		    if(response)
			{
				TruckerRoute[playerid] = listitem, TruckerCP[playerid] = 0, TruckerStep[playerid] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SetPlayerCheckpoint(playerid, TruckerPos[listitem][0], TruckerPos[listitem][1], TruckerPos[listitem][2], 6.0);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				FormatMSG(playerid, YELLOW, "Transporta marfa catre {FF0000}%s {FFFF00}- ({00FF22}%0.1f {FFFF00}m) pentru a-ti primi bani!", LocationsName[TruckerRoute[playerid]], GetPlayerDistanceFromPoint(playerid, TruckerPos[TruckerRoute[playerid]][0], TruckerPos[TruckerRoute[playerid]][1], TruckerPos[TruckerRoute[playerid]][2]));
			}
			if(!response)
			{
			    TruckerRoute[playerid] = 15, DestroyVehicle(JobVehicle[playerid]), JobVehicle[playerid] = 0, TruckerStep[playerid] = -1;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    DisablePlayerRaceCheckpoint(playerid), DestroyVehicle(JobTrailer[playerid]), JobTrailer[playerid] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    PlayerInfo[playerid][JobID] = 0;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    Announce(playerid, "~r~~h~Job Canceled!~n~~w~Type /jobs for more!", 5000, 3);
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// Offline Clan Members
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CLAN_MEMBERS:
		{
		    if(!response)
		    {
		        if(PlayerInfo[playerid][ClanID] >= 1)
		        {
			        eQuery[0] = EOS;
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			      	StrH[0] = EOS; StrH2[0] = EOS; new s, String3[248], MemberName[24],
				    MemberRank, MembRank[123], Clan_p, Online, OnlineText[50], LastActive[24];
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    			format(eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `ClanID` = '%d' ORDER BY `ClanRank`", PlayerInfo[playerid][ClanID]);
    				mysql_query(SQL, eQuery);
    				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					new total; cache_get_row_count(total);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					for(new i; i != total; i++)
					{
						CACHE(i, "ClanRank", MemberRank);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						switch(MemberRank)
    					{
							case 0: MembRank = "{FFFFFF}None";
							case 1: MembRank = "{375FFF}Member";
					        case 2: MembRank = "{00FF22}Co-Leader";
					        case 3: MembRank = "{FF9900}Leader";
					        case 4: MembRank = "{FF0000}Founder";
					    }
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
						CACHE(i, "LoggedIn", Online);
                        CACHE(i, "ClanPoints", Clan_p);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    CONTENT(i, "Name", MemberName);
					    CONTENT(i, "LastOn", LastActive);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    if(Online == 1) OnlineText = "{00CC00}Online";
					    else if(Online == 0) format(OnlineText, 50, "{FF0000}Offline{FFFFFF} - Last Active: %s", LastActive);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                    format(StrH2, sizeof(StrH2), "{FFFFFF}%s   \t{FFFFFF}%s   \t{FFFFFF}%d  \t%s\n%s", MemberName, MembRank, Clan_p, OnlineText, StrH2);
				 		format(StrH, sizeof(StrH), "\tPlayer Name  \tClan Rank    \tPoints  	\tStatus\n\%s", StrH2);
					 	s++;
					}
					format(String3, sizeof(String3), "{FFFFFF}Clan members - {FF0000}%d {FFFFFF}Online and {FF0000}%d {FFFFFF}Total!", GetConnectedClanPlayers(playerid), total);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SPD(playerid, DIALOG_EMPTY, HEADERS, String3, StrH, "Close", "");
					return true;
				}
		    }
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // Cars - /v
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_VEHICLES:
	    {
	        if(!response) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			switch(listitem)
			{
			    case 0: ShowModelSelectionMenu(playerid, v_bycikles, "Bicycles", 0x00000044, 0x00000088, 0x0080FF99);
			    case 1: ShowModelSelectionMenu(playerid, v_bikes, "Bikes", 0x00000044, 0x00000088, 0x0080FF99);
			    case 2: ShowModelSelectionMenu(playerid, v_mtrucks, "Monsters", 0x00000044, 0x00000088, 0x0080FF99);
			    case 3: ShowModelSelectionMenu(playerid, v_boats, "Boats", 0x00000044, 0x00000088, 0x0080FF99);
				case 4: ShowModelSelectionMenu(playerid, v_helicopters, "Helis", 0x00000044, 0x00000088, 0x0080FF99);
				case 5: ShowModelSelectionMenu(playerid, v_planes, "Planes", 0x00000044, 0x00000088, 0x0080FF99);
				case 6: ShowPlayerDialog(playerid, DIALOG_CARS, LIST, "Cars", "{FFFFFF}Lowriders\n{FFFFFF}Street racers\n{FFFFFF}Muscle cars\n{FFFFFF}Suvs & Wagons\n{FFFFFF}Sport Cars\n{FFFFFF}Recreational\n{FFFFFF}Civil Servant\n{FFFFFF}Government\n{FFFFFF}4 door luxury\n{FFFFFF}2 door sedans\n{FFFFFF}Heavy trucks\n{FFFFFF}Light trucks", "Select", "Cancel");
				case 7: ShowModelSelectionMenu(playerid, v_rcs, "RC Vehicles", 0x00000044, 0x00000088, 0x0080FF99);
				case 8:
				{
					new String[512];
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					strcat(String, "{FFFFFF}Special Infernus\n\
				 					{FFFFFF}Special Elegy\n\
								    {FFFFFF}Special Police Car\n\
								    {FFFFFF}Special Saddler\n\
				                    {FFFFFF}Burrito Tunned\n\
								    {FFFFFF}VIP Taxi\n\
								    {FFFFFF}Stratum Tunned\n\
								    {FFFFFF}Party Everywhere\n\
								    {FFFFFF}BMW - ESS EDITION\n\
                                    {FFFFFF}WTF HUMMER\n\
								    {FFFFFF}Machete");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SPD(playerid, DIALOG_SPECIAL_VEHICLES, LIST, "Special vehicles", String, "Select", "Close");
				}
			}
	        return true;
	    }
	    case DIALOG_SPECIAL_VEHICLES:
	    {
	        if(!response) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			switch(listitem)
	        {
	            case 0: SpecialCar1(playerid);
	            case 1: SpecialCar2(playerid);
	            case 2: SpecialCar3(playerid);
	            case 3: SpecialCar4(playerid);
	            case 4: SpecialCar5(playerid);
	            case 5: SpecialCar6(playerid);
	            case 6: SpecialCar7(playerid);
	            case 7: SpecialBus(playerid);
	            case 8: SpecialCar8(playerid);
	            case 9: SpecialCar9(playerid);
	            case 10: SpecialCar10(playerid);
	        }
		}
	    case DIALOG_CARS:
	    {
	        if(!response) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            switch(listitem)
            {
                case 0: ShowModelSelectionMenu(playerid, Cars[0], "Lowriders", 0x00000044, 0x00000088, 0x0080FF99);
                case 1: ShowModelSelectionMenu(playerid, Cars[1], "Street Racers", 0x00000044, 0x00000088, 0x0080FF99);
                case 2: ShowModelSelectionMenu(playerid, Cars[2], "Muscle cars", 0x00000044, 0x00000088, 0x0080FF99);
                case 3: ShowModelSelectionMenu(playerid, Cars[3], "Suvs & Wagons", 0x00000044, 0x00000088, 0x0080FF99);
                case 4: ShowModelSelectionMenu(playerid, Cars[4], "Sport Cars", 0x00000044, 0x00000088, 0x0080FF99);
                case 5: ShowModelSelectionMenu(playerid, Cars[5], "Recreational", 0x00000044, 0x00000088, 0x0080FF99);
                case 6: ShowModelSelectionMenu(playerid, Cars[6], "Civil Servant", 0x00000044, 0x00000088, 0x0080FF99);
                case 7: ShowModelSelectionMenu(playerid, Cars[7], "Government", 0x00000044, 0x00000088, 0x0080FF99);
                case 8: ShowModelSelectionMenu(playerid, Cars[8], "Luxury cars", 0x00000044, 0x00000088, 0x0080FF99);
                case 9: ShowModelSelectionMenu(playerid, Cars[9], "TwoDoor", 0x00000044, 0x00000088, 0x0080FF99);
                case 10:ShowModelSelectionMenu(playerid, Cars[10], "Heavy", 0x00000044, 0x00000088, 0x0080FF99);
                case 11:ShowModelSelectionMenu(playerid, Cars[11], "Light", 0x00000044, 0x00000088, 0x0080FF99);
			}
	        return true;
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // Clan Position
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_CLAN_SPAWN:
	    {
	        if(!response) return true;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(Clan[PlayerInfo[playerid][ClanID]][ClanPos][0] != 0.0 && Clan[PlayerInfo[playerid][ClanID]][ClanPos][1] != 0.0) return SendError(playerid, "You can use this command just once you contact a founder for more details!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        new Float:SpawnPos[4]; eQuery[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GetPlayerPos(playerid, SpawnPos[0], SpawnPos[1], SpawnPos[2]);
			GetPlayerFacingAngle(playerid, SpawnPos[3]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[PlayerInfo[playerid][ClanID]][ClanPos][0] = SpawnPos[0], Clan[PlayerInfo[playerid][ClanID]][ClanPos][1] = SpawnPos[1], Clan[PlayerInfo[playerid][ClanID]][ClanPos][2] = SpawnPos[2], Clan[PlayerInfo[playerid][ClanID]][ClanPos][3] = SpawnPos[3];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Clans` SET `X` = '%f', `Y` = '%f', `Z` = '%f', `A` = '%f' WHERE `ID` = '%d'", SpawnPos[0], SpawnPos[1], SpawnPos[2], SpawnPos[3], PlayerInfo[playerid][ClanID]);
		    mysql_tquery(SQL, eQuery, "", "");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    CreateClanPickUp(PlayerInfo[playerid][ClanID]), SCM(playerid, YELLOW, "Spawn successfully setted to your current {FF0000}Position{FFFF00}!");
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// => RADIO & MP3 (/v)
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case MP3_D: // Home Menu
	    {
			if(response)
			{
		        switch(listitem)
		   		{
		     		case 0: // Preferences
			       	{
			       	    if(response)
			       	    {
			          		StrH[0] = '\0';
				           	//++++++++++++++++++++++++++++++++++++++++++++++++++
				           	if(PlayerInfo[playerid][Language] == 1)
							{
				    			strcat(StrH, "{0072FF}Porneste Radioul cand ma urc in masina/opreste-l cand cobor\n{FFFF00}Porneste Radioul cand ma Spawnez\n{FF0000}Dezactivare Preferinte", 1900);
						    	SPD(playerid, MP3_D + 1, LIST, "MP3 - {FF0000}Preferinte", StrH, "Selecteaza", "Inapoi");
							}
							//++++++++++++++++++++++++++++++++++++++++++++++++++
							else if(PlayerInfo[playerid][Language] == 2)
							{
					  			strcat(StrH, "{0072FF}Start Radio while entering a car & stop while exiting\n{FFFF00}Start Radio on Spawn\n{FF0000}Deactivate Preference", 1900);
						    	SPD(playerid, MP3_D + 1, LIST, "MP3 - {FF0000}Preferences", StrH, "Select", "Back");
							}
						}
						else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/mp3");
		     		}
		        	case 1: // Radio List
			       	{
			       	    if(response)
			       	    {
		       				StrH[0] = '\0';
				           	//++++++++++++++++++++++++++++++++++++++++++++++++++
			    			format(StrH, sizeof(StrH), "\
							Name\tListeners\n\
							{00CC00}Radio ZU\t%s\n\
							{00CC00}Pro FM\t%s\n\
							{00CC00}Magic FM\t%s\n\
							{00CC00}Radio HiT\t%s\n\
							{00CC00}Radio Mafia\t%s\n\
							{00CC00}Radio Wish\t%s\n\
							{00CC00}Radio Fun Manele\t%s\n\
							{00CC00}Radio Lautaru\t%s\n\
							{00CC00}Radio Greu de Difuzat\t%s\n\
							{00CC00}Radio Club Mix\t%s\n\
							{00CC00}Radio Star DJ Hip-Hop\t%s\n\
							{00CC00}Radio GMusic Rock\t%s",
							GetListeners(1), GetListeners(2), GetListeners(3),
							GetListeners(4), GetListeners(5), GetListeners(6),
							GetListeners(7), GetListeners(8), GetListeners(9),
							GetListeners(10), GetListeners(11), GetListeners(12));
							//++++++++++++++++++++++++++++++++++++++++++++++++++
						    SPD(playerid, MP3_D + 2, HEADERS, "MP3 - {FF0000}Radios", StrH, "Selecteaza", "Inapoi");
						}
						else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/mp3");
		    	 	}
			        case 2: // Stop Radio
			        {
			            if(response)
			            {
			         		StopAudioStreamForPlayerEx(playerid);
				           	//++++++++++++++++++++++++++++++++++++++++++++++++++
				           	new RoMessage[300] = "Ai oprit Muzica! Scrie {FF0000}/MP3 {FFFF00}pentru a o repornii!";
						    new EnMessage[300] = "You have deactivated the Music! Type {FF0000}/MP3 {FFFF00}to reactivate!";
						    //++++++++++++++++++++++++++++++++++++++++++++++++++
						    SCM(playerid, YELLOW, (PlayerInfo[playerid][Language] == 1) ? RoMessage : EnMessage);
						    PlayerInfo[playerid][RadioListen] = 0;
						}
						else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/mp3");
					}
				}
			}
		}
		case MP3_D + 1: // Preferences
		{
		    switch(listitem)
			{
			    case 0: // Radio just in vehicle.
			    {
			        if(response)
			        {
				        StrH[0] = '\0'; StrH2[0] = '\0';
	           			//++++++++++++++++++++++++++++++++++++++++++++++++++++++
			            if(PlayerInfo[playerid][Language] == 1)
						{
						    strcat(StrH,  "{0072FF}Radio ZU\n{0072FF}Pro FM\n{0072FF}Radio HiT\n{0072FF}Radio Mafia\n{FFFF00}Radio Wish\n{FFFF00}Radio Fun Manele\n{FFFF00}Radio Lautaru\n{FFFF00}Radio Greu de Difuzat\n{FF0000}Radio Club Mix\n{FF0000}Radio Star DJ Hip-Hop\n{FF0000}Radio GMusic Rock", 1900);
						    strcat(StrH2, "Te rugam sa alegi un {FF0000}Post de Radio{AFAFAF}!", 400);
						    //++++++++++++++++++++++++++++++++++++++++++++++++++
						    SPD(playerid, MP3_D + 3, LIST, StrH2, StrH, "Selecteaza", "Inapoi");
						}
						else if(PlayerInfo[playerid][Language] == 2)
						{
						    strcat(StrH,  "{0072FF}Radio ZU\n{0072FF}Pro FM\n{0072FF}Radio HiT\n{0072FF}Radio Mafia\n{FFFF00}Radio Wish\n{FFFF00}Radio Fun Manele\n{FFFF00}Radio Lautaru\n{FFFF00}Radio Greu de Difuzat\n{FF0000}Radio Club Mix\n{FF0000}Radio Star DJ Hip-Hop\n{FF0000}Radio GMusic Rock", 1900);
						    strcat(StrH2, "Please select a {FF0000}Radio Station{AFAFAF}!", 400);
						    //++++++++++++++++++++++++++++++++++++++++++++++++++
						    SPD(playerid, MP3_D + 3, LIST, StrH2, StrH, "Select", "Back");
						}
					}
    				else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/mp3");
		   		}
		    	case 1: // Always Radio when Spawning.
			    {
					if(response)
					{
				   		StrH[0] = '\0'; StrH2[0] = '\0';
	        			//++++++++++++++++++++++++++++++++++++++++++++++++++++++
	           			if(PlayerInfo[playerid][Language] == 1)
						{
						    strcat(StrH,  "{0072FF}Radio ZU\n{0072FF}Pro FM\n{0072FF}Radio HiT\n{0072FF}Radio Mafia\n{FFFF00}Radio Wish\n{FFFF00}Radio Fun Manele\n{FFFF00}Radio Lautaru\n{FFFF00}Radio Greu de Difuzat\n{FF0000}Radio Club Mix\n{FF0000}Radio Star DJ Hip-Hop\n{FF0000}Radio GMusic Rock", 1900);
						    strcat(StrH2, "Te rugam sa alegi un {FF0000}Post de Radio{AFAFAF}!", 400);
						    //++++++++++++++++++++++++++++++++++++++++++++++++++
						    SPD(playerid, MP3_D + 4, LIST, StrH2, StrH, "Selecteaza", "Inapoi");
						}
						else if(PlayerInfo[playerid][Language] == 2)
						{
						    strcat(StrH,  "{0072FF}Radio ZU\n{0072FF}Pro FM\n{0072FF}Radio HiT\n{0072FF}Radio Mafia\n{FFFF00}Radio Wish\n{FFFF00}Radio Fun Manele\n{FFFF00}Radio Lautaru\n{FFFF00}Radio Greu de Difuzat\n{FF0000}Radio Club Mix\n{FF0000}Radio Star DJ Hip-Hop\n{FF0000}Radio GMusic Rock", 1900);
						    strcat(StrH2, "Please select a {FF0000}Radio Station{AFAFAF}!", 400);
						    //++++++++++++++++++++++++++++++++++++++++++++++++++
						    SPD(playerid, MP3_D + 4, LIST, StrH2, StrH, "Select", "Back");
						}
					}
					else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/mp3");
		   		}
			    case 2: // Deactivate Preference.
			    {
			        if(response)
			        {
						PlayerInfo[playerid][RPreference] = -1, PlayerInfo[playerid][RadioFav] = -1;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
	      				new RoMessage[300] = "{FFFF00}Ai dezactivat preferintele Radio-ului! Scrie {FF0000}/MP3 {FFFF00}pentru a adauga altele!";
					    new EnMessage[300] = "{FFFF00}You have deactivated Radio's Preference! Type {FF0000}/MP3 {FFFF00}to add another!";
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    SCM(playerid, -1, (PlayerInfo[playerid][Language] == 1) ? RoMessage : EnMessage);
					}
					else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/mp3");
				}
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case MP3_D + 2: // Start a Radio from the List.
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:  PlayAudioStreamForPlayerEx(playerid, "http://stream.radiozu.ro:8020/listen.pls");
		            case 1:  PlayAudioStreamForPlayerEx(playerid, "http://stream.profm.ro:8012/profm.mp3");
		            case 2:  PlayAudioStreamForPlayerEx(playerid, "http://80.86.106.136:8088/listen.pls");
		            case 3:  PlayAudioStreamForPlayerEx(playerid, "http://www.radio-hit.ro/asculta.m3u");
		            case 4:  PlayAudioStreamForPlayerEx(playerid, "http://www.radiomafia.ro/listen.m3u");
		            case 5:  PlayAudioStreamForPlayerEx(playerid, "http://www.radiowish.ro/live.m3u");
		            case 6:  PlayAudioStreamForPlayerEx(playerid, "http://radio-fun.ro/asculta.m3u");
		            case 7:  PlayAudioStreamForPlayerEx(playerid, "http://www.radiolautaru.ro/live.m3u");
		            case 8:  PlayAudioStreamForPlayerEx(playerid, "http://www.greudedifuzat.eu/greudedifuzat.m3u");
		            case 9:  PlayAudioStreamForPlayerEx(playerid, "http://www.radioclubmix.ro/live.m3u");
		            case 10: PlayAudioStreamForPlayerEx(playerid, "http://radiostardj.ro/lst/hip/listen.pls");
		            case 11: PlayAudioStreamForPlayerEx(playerid, "http://www.radiogmusic.com/rock.m3u");
				}
				PlayerInfo[playerid][RadioListen] = listitem+1;
			}
			else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/mp3");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case MP3_D + 3: // Radio just in vehicle.
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:  PlayerInfo[playerid][RPreference] = 1, PlayerInfo[playerid][RadioFav] =  0;
		            case 1:  PlayerInfo[playerid][RPreference] = 1, PlayerInfo[playerid][RadioFav] =  1;
		            case 2:  PlayerInfo[playerid][RPreference] = 1, PlayerInfo[playerid][RadioFav] =  2;
		            case 3:  PlayerInfo[playerid][RPreference] = 1, PlayerInfo[playerid][RadioFav] =  3;
		            case 4:  PlayerInfo[playerid][RPreference] = 1, PlayerInfo[playerid][RadioFav] =  4;
		            case 5:  PlayerInfo[playerid][RPreference] = 1, PlayerInfo[playerid][RadioFav] =  5;
		            case 6:  PlayerInfo[playerid][RPreference] = 1, PlayerInfo[playerid][RadioFav] =  6;
		            case 7:  PlayerInfo[playerid][RPreference] = 1, PlayerInfo[playerid][RadioFav] =  7;
		            case 8:  PlayerInfo[playerid][RPreference] = 1, PlayerInfo[playerid][RadioFav] =  8;
		            case 9:  PlayerInfo[playerid][RPreference] = 1, PlayerInfo[playerid][RadioFav] =  9;
		            case 10: PlayerInfo[playerid][RPreference] = 1, PlayerInfo[playerid][RadioFav] = 10;
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				Announce(playerid, "~w~~h~Preference ~g~~h~~h~Activated", 4000, 4);
			}
			else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/mp3");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case MP3_D + 4: // Always Radio when Spawning.
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:  PlayerInfo[playerid][RPreference] = 2, PlayerInfo[playerid][RadioFav] =  0;
		            case 1:  PlayerInfo[playerid][RPreference] = 2, PlayerInfo[playerid][RadioFav] =  1;
		            case 2:  PlayerInfo[playerid][RPreference] = 2, PlayerInfo[playerid][RadioFav] =  2;
		            case 3:  PlayerInfo[playerid][RPreference] = 2, PlayerInfo[playerid][RadioFav] =  3;
		            case 4:  PlayerInfo[playerid][RPreference] = 2, PlayerInfo[playerid][RadioFav] =  4;
		            case 5:  PlayerInfo[playerid][RPreference] = 2, PlayerInfo[playerid][RadioFav] =  5;
		            case 6:  PlayerInfo[playerid][RPreference] = 2, PlayerInfo[playerid][RadioFav] =  6;
		            case 7:  PlayerInfo[playerid][RPreference] = 2, PlayerInfo[playerid][RadioFav] =  7;
		            case 8:  PlayerInfo[playerid][RPreference] = 2, PlayerInfo[playerid][RadioFav] =  8;
		            case 9:  PlayerInfo[playerid][RPreference] = 2, PlayerInfo[playerid][RadioFav] =  9;
		            case 10: PlayerInfo[playerid][RPreference] = 2, PlayerInfo[playerid][RadioFav] = 10;
    			}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				Announce(playerid, "~w~~h~Preference ~g~~h~~h~Activated", 4000, 4);
			}
			else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/mp3");
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// => Help Dialog
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_HELP_SELECTION:
		{
		    if(response)
		    {
				switch(listitem)
				{
					case 0: return cmd_aboutserver(playerid);
					case 1: return cmd_cmds(playerid);
					case 2: return SPD(playerid, DIALOG_HELP_SELECTION+1, INPUT, "Need help from the administrators?", "{FFA500}Please write your next question in this box so that it can be resolved", "Send", "Cancel");
				}
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_HELP_SELECTION+1:
		{
		    if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    sscanf(inputtext, "s[128]", inputtext[0]);
		    return InputHelp(playerid, inputtext);
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // => Trade System - A great system by [PhX]Exc1siOn[PhX] & Johnny
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_TRADE:
		{
		    if(response)
			{
			    if(!strval(inputtext)) return true;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(!IsPlayerConnected(strval(inputtext))) return Error(playerid, 10);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerInfo[playerid][BuyerID] = strval(inputtext), PlayerInfo[PlayerInfo[playerid][BuyerID]][SellerID] = playerid;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    if(PlayerInfo[strval(inputtext)][BuyerID] != playerid)
			    {
					switch(PlayerInfo[playerid][Language])
					{
					    case 1: SPD(playerid, DIALOG_TRADE, INPUT, "{FFFFFF}Trade", "{FF0000}Jucatorul cu ID-ul care l-ai scris in dialog, nu are {00CC00}/atrade {FF0000}activat pe ID-ul tau.", "Continue", "Cancel");
					    case 2: SPD(playerid, DIALOG_TRADE, INPUT, "{FFFFFF}Trade", "{FF0000}Player id what you typed in the dialog haven't activated {00CC00}/atrade {FF0000}on your ID", "Continue", "Cancel");
					}
				}
				else SPD(playerid, DIALOG_TRADE+1, LIST, "Trade", "{FF9900}Adauga Item\n{FF9900}Pasul Urmator\n", "Select", "Cancel");
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_TRADE+1:
		{
		    if(!response) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(listitem == 0)
			{
			    new String[248];
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				strcat(String, "Sell Money\n\
		        				Sell Hours\n\
		        				Sell Coins\n\
		        				Sell Kills & Deaths\n\
		        				Sell VIP\n\
		        				Sell Stunt Points\n\
		        				Sell Drift Points\n\
		        				Sell Race Points\n");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_TRADE+2, LIST, "Trade", String, "Select", "Close");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(listitem == 1) SPD(playerid, DIALOG_TRADE+3, LIST, "Trade - Ce vrei sa primesti?", "{FF9900}Adauga Item\n{FF9900}Trimite Cererea", "Selecteaza", "Inchide");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_TRADE+2:
		{
		    if(!response) return true;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(listitem == 0)
			{
			    SellOption[playerid][0] = 1, SPD(playerid, DIALOG_TRADE+4, INPUT, "Trade - Sell Items", "Cat de multi bani?", "Next", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(listitem == 1)
			{
			    SellOption[playerid][1] = 1, SPD(playerid, DIALOG_TRADE+4, INPUT, "Trade - Sell Items", "Cat de multe ore?", "Next", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(listitem == 2)
			{
			    SellOption[playerid][2] = 1, SPD(playerid, DIALOG_TRADE+4, INPUT, "Trade - Sell Items", "Cat de multe monede(coins)?", "Next", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(listitem == 3)
			{
			    new String[128], String2[512], String3[512];
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    if(PlayerInfo[playerid][Kills] == 0) return SendError(playerid, "You don't have enough kills!");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(String, sizeof(String), "%d Kills & %d Deaths", PlayerInfo[playerid][Kills], PlayerInfo[playerid][Deaths]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    SellOption[playerid][3] = 1, SellName[playerid][3] = String;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    SellAmount[PlayerInfo[playerid][SellerID]][3] = PlayerInfo[PlayerInfo[playerid][SellerID]][Kills];
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   			format(String3, sizeof(String3),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												SellName[playerid][0], SellName[playerid][1],
											    SellName[playerid][2], SellName[playerid][3],
											    SellName[playerid][4], SellName[playerid][5],
											    SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String2, sizeof(String2),"{FF9900}Adauga Item\n\
								    		     {FF9900}Pasul Urmator\n\
								    			 %s", String3);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_TRADE+1, LIST, "Trade - Sell Items", String2, "Select", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(listitem == 4)
			{
			    new String[128], String2[248], String3[248];
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    if(PlayerInfo[playerid][VIP] == 0) return SendError(playerid, "You don't have VIP!");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(String, sizeof(String), "VIP Level %d", PlayerInfo[playerid][VIP]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    SellOption[playerid][4] = 1, SellName[playerid][4] = String;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    SellAmount[PlayerInfo[playerid][SellerID]][4] = PlayerInfo[PlayerInfo[playerid][SellerID]][VIP];
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       			format(String3, sizeof(String3),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												SellName[playerid][0], SellName[playerid][1],
											    SellName[playerid][2], SellName[playerid][3],
											    SellName[playerid][4], SellName[playerid][5],
											    SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String2, sizeof(String2),"{FF9900}Adauga Item\n\
								   				 {FF9900}Pasul Urmator\n\
								    			 %s", String3);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    			SPD(playerid, DIALOG_TRADE+1, LIST, "Trade - Sell Items", String2, "Select", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(listitem == 5)
			{
			    SellOption[playerid][5] = 1, SPD(playerid, DIALOG_TRADE+4, INPUT, "Trade - Sell Items", "Cat de multe puncte stunt?", "Next", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(listitem == 6)
			{
			    SellOption[playerid][6] = 1, SPD(playerid, DIALOG_TRADE+4, INPUT, "Trade - Sell Items", "Cat de multe puncte drift?", "Next", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(listitem == 7)
			{
			    SellOption[playerid][7] = 1, SPD(playerid, DIALOG_TRADE+4, INPUT, "Trade - Sell Items", "Cat de multe puncte race?", "Next", "Cancel");
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_TRADE+3:
		{
		    if(!response) return true;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(listitem == 0)
			{
			    new String[512];
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				strcat(String, "Buy Money\n\
		        				Buy Hours\n\
		        				Buy Coins\n\
		        				Buy Kills & Deaths\n\
		        				Buy VIP\n\
		        				Buy Stunt Points\n\
		        				Buy Drift Points\n\
		        				Buy Race Points\n");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_TRADE+7, LIST, "Trade", String, "Select", "Close");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(listitem == 1)
			{
			    new String[1024], String1[512], String2[512], String3[512], String4[512];
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    for(new i = 0; i < 10; i++)
			    {
			        if(!strlen(SellName[playerid][i])) continue;
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    	format(String1, sizeof(String1), "%s\n", SellName[playerid][i]);
			    	strcat(String2, String1);
				}
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            for(new i = 0; i < 10; i++)
			    {
			        if(strlen(BuyName[playerid][i]) == EOS) continue;
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    	format(String3, sizeof(String3), "%s\n", BuyName[playerid][i]);
			    	strcat(String4, String3);
				}
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(String, sizeof(String), "{FF0000}%s {FFFF00}vrea sa iti vinda urmatoarele statistici:\n\n\
												 {FF0000}%s\n\
												 {FFFF00}Pentru statisticile tale:\n\n\
												 {FF0000}%s\n\n\
												 {FFFF00}Vrei sa accepti acest transfer?\n\
												 {FFFF00}Acest transfer se face pe propria raspundere fara drept de recuperare a statisticilor\n\
												 {FFFF00}Admininistratori/Owneri nu sunt raspunzatori daca a-ti primit teapa!", PN(playerid), String2, String4);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(PlayerInfo[playerid][BuyerID], DIALOG_TRADE+6, MSGBOX, "Trade", String, "Accept", "Refuse");
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_TRADE+7:
		{
		    if(!response) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(listitem == 0)
			{
			    BuyOption[playerid][0] = 1;
			    SPD(playerid, DIALOG_TRADE+5, INPUT, "Trade", "Cat de multi bani?", "Next", "Cancel");
			}
			if(listitem == 1)
			{
			    BuyOption[playerid][1] = 1;
			    SPD(playerid, DIALOG_TRADE+5, INPUT, "Trade", "Cat de multe ore?", "Next", "Cancel");
			}
			if(listitem == 2)
			{
			    BuyOption[playerid][2] = 1;
			    SPD(playerid, DIALOG_TRADE+5, INPUT, "Trade", "Cat de multe monede(coins)?", "Next", "Cancel");
			}
			if(listitem == 3)
			{
	         	new String[128], String1[248], String2[248], String3[248], String4[248];
	         	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String, sizeof(String), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
										        BuyName[playerid][0], BuyName[playerid][1],
											    BuyName[playerid][2], BuyName[playerid][3],
											    BuyName[playerid][4], BuyName[playerid][5],
										        BuyName[playerid][6], BuyName[playerid][7],
										        BuyName[playerid][8], BuyName[playerid][9]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String1, sizeof(String1), "{FF9900}Adauga Item\n\
											      {FF9900}Trimite Cererea\n\
											      %s", String);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(PlayerInfo[PlayerInfo[playerid][BuyerID]][Kills] <= 0) return SPD(playerid, DIALOG_TRADE+3, LIST, "Trade - Invalid Trade Amount!", String1, "Select", "Cancel");
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(String2, sizeof(String2), "%d Kills & %d Death", PlayerInfo[PlayerInfo[playerid][BuyerID]][Kills], PlayerInfo[PlayerInfo[playerid][BuyerID]][Deaths]);
			   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    BuyOption[playerid][3] = 1, BuyName[playerid][3] = String2;
			   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                SellAmount[PlayerInfo[playerid][SellerID]][3] = PlayerInfo[PlayerInfo[playerid][BuyerID]][Kills];
               	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String3, sizeof(String3), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
											      BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7],
											      BuyName[playerid][8], BuyName[playerid][9]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String4, sizeof(String4), "{FF9900}Adauga Item\n\
											      {FF9900}Trimite Cererea\n\
											      %s", String3);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_TRADE+3, LIST, "Trade", String4, "Select", "Cancel");
			}
			if(listitem == 4)
			{
			    new String[128], String1[248], String2[248], String3[248], String4[248];
	         	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String, sizeof(String), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
										        BuyName[playerid][0], BuyName[playerid][1],
											    BuyName[playerid][2], BuyName[playerid][3],
											    BuyName[playerid][4], BuyName[playerid][5],
										        BuyName[playerid][6], BuyName[playerid][7],
										        BuyName[playerid][8], BuyName[playerid][9]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String1, sizeof(String1), "{FF9900}Adauga Item\n\
											      {FF9900}Trimite Cererea\n\
											      %s", String);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(PlayerInfo[PlayerInfo[playerid][BuyerID]][VIP] <= 0) return SPD(playerid, DIALOG_TRADE+3, LIST, "Trade - Invalid Trade Amount!", String1, "Select", "Cancel");
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(String2, sizeof(String2), "VIP Level %d", PlayerInfo[PlayerInfo[playerid][BuyerID]][VIP]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    BuyOption[playerid][4] = 1, BuyName[playerid][4] = String2;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    SellAmount[PlayerInfo[playerid][SellerID]][4] = PlayerInfo[PlayerInfo[playerid][BuyerID]][VIP];
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String3, sizeof(String3), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
											      BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7],
											      BuyName[playerid][8], BuyName[playerid][9]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String4, sizeof(String4), "{FF9900}Adauga Item\n\
											      {FF9900}Trimite Cererea\n\
											      %s", String3);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_TRADE+3, LIST, "Trade", String4, "Select", "Cancel");
			}
			if(listitem == 5)
			{
			    BuyOption[playerid][5] = 1;
			    SPD(playerid, DIALOG_TRADE+5, INPUT, "Trade", "Cat de multe puncte stunt?", "Next", "Cancel");
			}
			if(listitem == 6)
			{
			    BuyOption[playerid][6] = 1;
			    SPD(playerid, DIALOG_TRADE+5, INPUT, "Trade", "Cat de multe puncte drift?", "Next", "Cancel");
			}
			if(listitem == 7)
			{
			    BuyOption[playerid][7] = 1;
			    SPD(playerid, DIALOG_TRADE+5, INPUT, "Trade", "Cat de multe puncte race?", "Next", "Cancel");
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_TRADE+4:
		{
		    if(!response) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    for(new i = 0; i < 10; i++) SellAmount[playerid][i] = strval(inputtext);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			for(new i = 0; i < 10; i++)
			{
				if(SellAmount[playerid][i] <= 0)
				{
			 		SendError(playerid, "Invalid Trade Amount!");
			 		return true;
				}
			}
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			new String[256];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(SellOption[playerid][0] == 1)
		    {
		        new String2[1024], String3[1024];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String2, sizeof(String2), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  SellName[playerid][0], SellName[playerid][1],
											      SellName[playerid][2], SellName[playerid][3],
											      SellName[playerid][4], SellName[playerid][5],
											      SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String3, sizeof(String3), "{FF9900}Adauga Item\n\
											      {FF9900}Pasul Urmator\n\
											      %s", String2);
		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        if(PlayerInfo[playerid][Money] < SellAmount[playerid][0]) return SPD(playerid, DIALOG_TRADE+1, LIST, "Trade - Invalid Trade Amount!", String3, "Select", "Cancel");
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "%d Money", SellAmount[playerid][0]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SellName[playerid][0] = String;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SellAmount[PlayerInfo[playerid][SellerID]][0] = SellAmount[playerid][0];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new StrX[512], StrY[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  SellName[playerid][0], SellName[playerid][1],
											      SellName[playerid][2], SellName[playerid][3],
											      SellName[playerid][4], SellName[playerid][5],
											      SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
								    			  {FF9900}Pasul Urmator\n\
								    			  %s", StrX);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   			SPD(playerid, DIALOG_TRADE+1, LIST, "Trade", StrY, "Select", "Cancel");
	      	}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(SellOption[playerid][1] == 1)
			{
			    new String2[1024], String3[1024];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String2, sizeof(String2), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  SellName[playerid][0], SellName[playerid][1],
											      SellName[playerid][2], SellName[playerid][3],
											      SellName[playerid][4], SellName[playerid][5],
											      SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String3, sizeof(String3), "{FF9900}Adauga Item\n\
											      {FF9900}Pasul Urmator\n\
											      %s", String2);
	  			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    	if(PlayerInfo[playerid][hours] < SellAmount[playerid][1]) return SPD(playerid, DIALOG_TRADE+1, LIST, "Trade - Invalid Trade Amount!", String3, "Select", "Cancel");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "%d Hours", SellAmount[playerid][1]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SellName[playerid][1] = String;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SellAmount[PlayerInfo[playerid][SellerID]][1] = SellAmount[playerid][1];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new StrX[512], StrY[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  SellName[playerid][0], SellName[playerid][1],
											      SellName[playerid][2], SellName[playerid][3],
											      SellName[playerid][4], SellName[playerid][5],
											      SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
								    			  {FF9900}Pasul Urmator\n\
								    			  %s", StrX);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   			SPD(playerid, DIALOG_TRADE+1, LIST, "Trade", StrY, "Select", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(SellOption[playerid][2] == 1)
			{
			    new String2[1024], String3[1024];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String2, sizeof(String2), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  SellName[playerid][0], SellName[playerid][1],
											      SellName[playerid][2], SellName[playerid][3],
											      SellName[playerid][4], SellName[playerid][5],
											      SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String3, sizeof(String3), "{FF9900}Adauga Item\n\
											      {FF9900}Pasul Urmator\n\
											      %s", String2);
	  			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    	if(PlayerInfo[playerid][Coins] < SellAmount[playerid][2]) return SPD(playerid, DIALOG_TRADE+1, LIST, "Trade - Invalid Trade Amount!", String3, "Select", "Cancel");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "%d Coins", SellAmount[playerid][2]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SellName[playerid][2] = String;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SellAmount[PlayerInfo[playerid][SellerID]][2] = SellAmount[playerid][2];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new StrX[512], StrY[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  SellName[playerid][0], SellName[playerid][1],
											      SellName[playerid][2], SellName[playerid][3],
											      SellName[playerid][4], SellName[playerid][5],
											      SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
								    			  {FF9900}Pasul Urmator\n\
								    			  %s", StrX);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   			SPD(playerid, DIALOG_TRADE+1, LIST, "Trade", StrY, "Select", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(SellOption[playerid][3] == 1)
			{
			    new String2[1024], String3[1024];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String2, sizeof(String2), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  SellName[playerid][0], SellName[playerid][1],
											      SellName[playerid][2], SellName[playerid][3],
											      SellName[playerid][4], SellName[playerid][5],
											      SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String3, sizeof(String3), "{FF9900}Adauga Item\n\
											      {FF9900}Pasul Urmator\n\
											      %s", String2);
	  			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    	if(PlayerInfo[playerid][Kills] < SellAmount[playerid][3]) return SPD(playerid, DIALOG_TRADE+1, LIST, "Trade - Invalid Trade Amount!", String3, "Select", "Cancel");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "%d Kills - %d Deaths", PlayerInfo[playerid][Kills], PlayerInfo[playerid][Deaths]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SellName[playerid][3] = String;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SellAmount[PlayerInfo[playerid][SellerID]][3] = SellAmount[playerid][3];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new StrX[512], StrY[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  SellName[playerid][0], SellName[playerid][1],
											      SellName[playerid][2], SellName[playerid][3],
											      SellName[playerid][4], SellName[playerid][5],
											      SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
								    			  {FF9900}Pasul Urmator\n\
								    			  %s", StrX);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   			SPD(playerid, DIALOG_TRADE+1, LIST, "Trade", StrY, "Select", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(SellOption[playerid][4] == 1)
			{
			    new String2[1024], String3[1024];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String2, sizeof(String2), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  SellName[playerid][0], SellName[playerid][1],
											      SellName[playerid][2], SellName[playerid][3],
											      SellName[playerid][4], SellName[playerid][5],
											      SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String3, sizeof(String3), "{FF9900}Adauga Item\n\
											      {FF9900}Pasul Urmator\n\
											      %s", String2);
	  			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    	if(PlayerInfo[playerid][VIP] < SellAmount[playerid][4]) return SPD(playerid, DIALOG_TRADE+1, LIST, "Trade - Invalid Trade Amount!", String3, "Select", "Cancel");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "%s", GetPlayerVipEx(playerid));
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SellName[playerid][4] = String;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SellAmount[PlayerInfo[playerid][SellerID]][4] = SellAmount[playerid][4];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new StrX[512], StrY[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  SellName[playerid][0], SellName[playerid][1],
											      SellName[playerid][2], SellName[playerid][3],
											      SellName[playerid][4], SellName[playerid][5],
											      SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
								    			  {FF9900}Pasul Urmator\n\
								    			  %s", StrX);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   			SPD(playerid, DIALOG_TRADE+1, LIST, "Trade", StrY, "Select", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(SellOption[playerid][5] == 1)
			{
			    new String2[1024], String3[1024];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String2, sizeof(String2), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  SellName[playerid][0], SellName[playerid][1],
											      SellName[playerid][2], SellName[playerid][3],
											      SellName[playerid][4], SellName[playerid][5],
											      SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String3, sizeof(String3), "{FF9900}Adauga Item\n\
											      {FF9900}Pasul Urmator\n\
											      %s", String2);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(PlayerInfo[playerid][StuntPoints] < SellAmount[playerid][5]) return SPD(playerid, DIALOG_TRADE+1, LIST, "Trade - Invalid Trade Amount!", String3, "Select", "Cancel");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "%d Stunt Points", SellAmount[playerid][5]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SellName[playerid][5] = String;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SellAmount[PlayerInfo[playerid][SellerID]][5] = SellAmount[playerid][5];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new StrX[512], StrY[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  SellName[playerid][0], SellName[playerid][1],
											      SellName[playerid][2], SellName[playerid][3],
											      SellName[playerid][4], SellName[playerid][5],
											      SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
								    			  {FF9900}Pasul Urmator\n\
								    			  %s", StrX);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   			SPD(playerid, DIALOG_TRADE+1, LIST, "Trade", StrY, "Select", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(SellOption[playerid][6] == 1)
			{
			    new  String2[1024], String3[1024];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String2, sizeof(String2), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  SellName[playerid][0], SellName[playerid][1],
											      SellName[playerid][2], SellName[playerid][3],
											      SellName[playerid][4], SellName[playerid][5]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String3, sizeof(String3), "{FF9900}Adauga Item\n\
											      {FF9900}Pasul Urmator\n\
											      %s", String2);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(PlayerInfo[playerid][DriftPoints] < SellAmount[playerid][6]) return SPD(playerid, DIALOG_TRADE+1, LIST, "Trade - Invalid Trade Amount!", String3, "Select", "Cancel");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "%d Drift Points", SellAmount[playerid][6]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SellName[playerid][6] = String;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SellAmount[PlayerInfo[playerid][SellerID]][6] = SellAmount[playerid][6];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new StrX[512], StrY[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  SellName[playerid][0], SellName[playerid][1],
											      SellName[playerid][2], SellName[playerid][3],
											      SellName[playerid][4], SellName[playerid][5],
											      SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
								    			  {FF9900}Pasul Urmator\n\
								    			  %s", StrX);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   			SPD(playerid, DIALOG_TRADE+1, LIST, "Trade", StrY, "Select", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(SellOption[playerid][7] == 1)
			{
			    new String2[1024], String3[1024];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String2, sizeof(String2), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  SellName[playerid][0], SellName[playerid][1],
											      SellName[playerid][2], SellName[playerid][3],
											      SellName[playerid][4], SellName[playerid][5],
											      SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String3, sizeof(String3), "{FF9900}Adauga Item\n\
											      {FF9900}Pasul Urmator\n\
											      %s", String2);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(PlayerInfo[playerid][RacePoints] < SellAmount[playerid][7]) return SPD(playerid, DIALOG_TRADE+1, LIST, "Trade - Invalid Trade Amount!", String3, "Select", "Cancel");
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "%d Race Points", SellAmount[playerid][7]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SellName[playerid][7] = String;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SellAmount[PlayerInfo[playerid][SellerID]][7] = SellAmount[playerid][7];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new StrX[512], StrY[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  SellName[playerid][0], SellName[playerid][1],
											      SellName[playerid][2], SellName[playerid][3],
											      SellName[playerid][4], SellName[playerid][5],
											      SellName[playerid][6], SellName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
								    			  {FF9900}Pasul Urmator\n\
								    			  %s", StrX);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   			SPD(playerid, DIALOG_TRADE+1, LIST, "Trade", StrY, "Select", "Cancel");
			}
			new StrX[512], StrY[512];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
											  SellName[playerid][0], SellName[playerid][1],
										      SellName[playerid][2], SellName[playerid][3],
										      SellName[playerid][4], SellName[playerid][5],
										      SellName[playerid][6], SellName[playerid][7]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
							    			  {FF9900}Pasul Urmator\n\
							    			  %s", StrX);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   			SPD(playerid, DIALOG_TRADE+1, LIST, "Trade", StrY, "Select", "Cancel");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_TRADE+5:
		{
		    if(!response) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    for(new i = 0; i < 10; i++) BuyAmount[playerid][i] = strval(inputtext);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			for(new i = 0; i < 10; i++)
			{
				if(BuyAmount[playerid][i] <= 0)
				{
			 		SendError(playerid, "Invalid Trade Amount!");
			 		return true;
				}
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			new String[256];
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(BuyOption[playerid][0] == 1)
		    {
		        new String1[248], String2[248];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String1, sizeof(String1), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String2, sizeof(String2), "{FF9900}Adauga Item\n\
											      {FF9900}Trimite Cererea\n\
											      %s", String1);
		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        if(PlayerInfo[PlayerInfo[playerid][BuyerID]][Money] < BuyAmount[playerid][0]) return SPD(playerid, DIALOG_TRADE+3, LIST, "Trade - Invalid Trade Amount!", String2, "Select", "Cancel");
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "%d Money", BuyAmount[playerid][0]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        BuyName[playerid][0] = String;
       			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new StrX[512], StrY[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
								    			  {FF9900}Trimite Cererea\n\
								    			  %s", StrX);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_TRADE+3, LIST, "Trade", StrY, "Select", "Cancel");
	      	}
	      	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(BuyOption[playerid][1] == 1)
			{
      		    new String1[512], String2[512];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String1, sizeof(String1), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String2, sizeof(String2), "{FF9900}Adauga Item\n\
											      {FF9900}Trimite Cererea\n\
											      %s", String1);
		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        if(PlayerInfo[PlayerInfo[playerid][BuyerID]][hours] < BuyAmount[playerid][1]) return SPD(playerid, DIALOG_TRADE+3, LIST, "Trade - Invalid Trade Amount!", String2, "Select", "Cancel");
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "%d Hours", BuyAmount[playerid][1]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        BuyName[playerid][1] = String;
       			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new StrX[512], StrY[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
								    			  {FF9900}Trimite Cererea\n\
								    			  %s", StrX);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_TRADE+3, LIST, "Trade", StrY, "Select", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(BuyOption[playerid][2] == 1)
			{
			    new String1[248], String2[248];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String1, sizeof(String1), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String2, sizeof(String2), "{FF9900}Adauga Item\n\
											      {FF9900}Trimite Cererea\n\
											      %s", String1);
		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        if(PlayerInfo[PlayerInfo[playerid][BuyerID]][Coins] < BuyAmount[playerid][2]) return SPD(playerid, DIALOG_TRADE+3, LIST, "Trade - Invalid Trade Amount!", String2, "Select", "Cancel");
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "%d Coins", BuyAmount[playerid][2]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        BuyName[playerid][2] = String;
    			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new StrX[512], StrY[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
								    			  {FF9900}Trimite Cererea\n\
								    			  %s", StrX);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_TRADE+3, LIST, "Trade", StrY, "Select", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(BuyOption[playerid][3] == 1)
			{
			    new String1[248], String2[248];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String1, sizeof(String1), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String2, sizeof(String2), "{FF9900}Adauga Item\n\
											      {FF9900}Trimite Cererea\n\
											      %s", String1);
		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        if(PlayerInfo[PlayerInfo[playerid][BuyerID]][Kills] < BuyAmount[playerid][3]) return SPD(playerid, DIALOG_TRADE+3, LIST, "Trade - Invalid Trade Amount!", String2, "Select", "Cancel");
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "%d Kills - %d Deaths", PlayerInfo[playerid][Kills], PlayerInfo[playerid][Deaths]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        BuyName[playerid][3] = String;
       			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new StrX[512], StrY[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
								    			  {FF9900}Trimite Cererea\n\
								    			  %s", StrX);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_TRADE+3, LIST, "Trade", StrY, "Select", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(BuyOption[playerid][4] == 1)
			{
			    new String1[248], String2[248];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String1, sizeof(String1), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String2, sizeof(String2), "{FF9900}Adauga Item\n\
											      {FF9900}Trimite Cererea\n\
											      %s", String1);
		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        if(PlayerInfo[PlayerInfo[playerid][BuyerID]][VIP] < BuyAmount[playerid][4]) return SPD(playerid, DIALOG_TRADE+3, LIST, "Trade - Invalid Trade Amount!", String2, "Select", "Cancel");
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "%s", GetPlayerVipEx(playerid));
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        BuyName[playerid][4] = String;
       			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new StrX[512], StrY[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
								    			  {FF9900}Trimite Cererea\n\
								    			  %s", StrX);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_TRADE+3, LIST, "Trade", StrY, "Select", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(BuyOption[playerid][5] == 1)
			{
			    new String1[248], String2[248];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String1, sizeof(String1), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String2, sizeof(String2), "{FF9900}Adauga Item\n\
											      {FF9900}Trimite Cererea\n\
											      %s", String1);
		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        if(PlayerInfo[PlayerInfo[playerid][BuyerID]][StuntPoints] < BuyAmount[playerid][5]) return SPD(playerid, DIALOG_TRADE+3, LIST, "Trade - Invalid Trade Amount!", String2, "Select", "Cancel");
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "%d Stunt Points", BuyAmount[playerid][5]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        BuyName[playerid][5] = String;
       			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new StrX[512], StrY[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
								    			  {FF9900}Trimite Cererea\n\
								    			  %s", StrX);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_TRADE+3, LIST, "Trade", StrY, "Select", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(BuyOption[playerid][6] == 1)
			{
			    new String1[248], String2[248];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String1, sizeof(String1), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String2, sizeof(String2), "{FF9900}Adauga Item\n\
											      {FF9900}Trimite Cererea\n\
											      %s", String1);
		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        if(PlayerInfo[PlayerInfo[playerid][BuyerID]][DriftPoints] < BuyAmount[playerid][6]) return SPD(playerid, DIALOG_TRADE+3, LIST, "Trade - Invalid Trade Amount!", String2, "Select", "Cancel");
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "%d Drift Points", BuyAmount[playerid][6]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        BuyName[playerid][6] = String;
       			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new StrX[512], StrY[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
								    			  {FF9900}Trimite Cererea\n\
								    			  %s", StrX);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_TRADE+3, LIST, "Trade", StrY, "Select", "Cancel");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(BuyOption[playerid][7] == 1)
			{
      		    new String1[248], String2[248];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(String1, sizeof(String1), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String2, sizeof(String2), "{FF9900}Adauga Item\n\
											      {FF9900}Trimite Cererea\n\
											      %s", String1);
		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        if(PlayerInfo[PlayerInfo[playerid][BuyerID]][RacePoints] < BuyAmount[playerid][7]) return SPD(playerid, DIALOG_TRADE+3, LIST, "Trade - Invalid Trade Amount!", String2, "Select", "Cancel");
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "%d Race Points", BuyAmount[playerid][7]);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        BuyName[playerid][7] = String;
       			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new StrX[512], StrY[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
												  BuyName[playerid][0], BuyName[playerid][1],
											      BuyName[playerid][2], BuyName[playerid][3],
											      BuyName[playerid][4], BuyName[playerid][5],
											      BuyName[playerid][6], BuyName[playerid][7]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
								    			  {FF9900}Trimite Cererea\n\
								    			  %s", StrX);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_TRADE+3, LIST, "Trade", StrY, "Select", "Cancel");
			}
			new StrX[512], StrY[512];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		format(StrX, sizeof(StrX), "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n",
											  BuyName[playerid][0], BuyName[playerid][1],
										      BuyName[playerid][2], BuyName[playerid][3],
										      BuyName[playerid][4], BuyName[playerid][5],
										      BuyName[playerid][6], BuyName[playerid][7]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(StrY, sizeof(StrY), "{FF9900}Adauga Item\n\
							    			  {FF9900}Trimite Cererea\n\
							    			  %s", StrX);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SPD(playerid, DIALOG_TRADE+3, LIST, "Trade", StrY, "Select", "Cancel");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_TRADE+6:
		{
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			// Trade Refused - Canceled!
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(!response)
			{
			    new String[128];
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(String, sizeof(String), "{FFFF00}Trade refused because {FF0000}%s {FFFF00}has been canceled the current trade!\n\n\
												{FF0000}If you think it may be a try, please post on the forum!", PN(PlayerInfo[playerid][BuyerID]));
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(PlayerInfo[playerid][SellerID], DIALOG_EMPTY, MSGBOX, "Trade Failed!", String, "Close", "");
				return true;
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			// Seller Option
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(SellOption[PlayerInfo[playerid][SellerID]][0] == 1)
			{
				GivePlayerMoney(playerid, SellAmount[PlayerInfo[playerid][SellerID]][0]);
				GivePlayerMoney(PlayerInfo[playerid][SellerID], (0 - SellAmount[PlayerInfo[playerid][SellerID]][0]));
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(SellOption[PlayerInfo[playerid][SellerID]][1] == 1)
			{
				PlayerInfo[playerid][hours] += SellAmount[PlayerInfo[playerid][SellerID]][1];
				PlayerInfo[PlayerInfo[playerid][SellerID]][hours] -= SellAmount[PlayerInfo[playerid][SellerID]][1];
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(SellOption[PlayerInfo[playerid][SellerID]][2] == 1)
			{
				PlayerInfo[playerid][Coins] += SellAmount[PlayerInfo[playerid][SellerID]][2];
				PlayerInfo[PlayerInfo[playerid][SellerID]][Coins] -= SellAmount[PlayerInfo[playerid][SellerID]][2];
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(SellOption[PlayerInfo[playerid][SellerID]][3] == 1)
			{
				PlayerInfo[playerid][Kills] += PlayerInfo[PlayerInfo[playerid][SellerID]][Kills];
				PlayerInfo[PlayerInfo[playerid][SellerID]][Kills] = 0;
				PlayerInfo[playerid][Deaths] += PlayerInfo[PlayerInfo[playerid][SellerID]][Deaths];
				PlayerInfo[PlayerInfo[playerid][SellerID]][Deaths] = 0;
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(SellOption[PlayerInfo[playerid][SellerID]][4] == 1)
			{
				PlayerInfo[playerid][VIP] = PlayerInfo[PlayerInfo[playerid][SellerID]][VIP];
				PlayerInfo[PlayerInfo[playerid][SellerID]][VIP] = 0;
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(SellOption[PlayerInfo[playerid][SellerID]][5] == 1)
			{
				PlayerInfo[playerid][StuntPoints] += SellAmount[PlayerInfo[playerid][SellerID]][5];
				PlayerInfo[PlayerInfo[playerid][SellerID]][StuntPoints] -= SellAmount[PlayerInfo[playerid][SellerID]][5];
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(SellOption[PlayerInfo[playerid][SellerID]][6] == 1)
			{
				PlayerInfo[playerid][DriftPoints] += SellAmount[PlayerInfo[playerid][SellerID]][6];
				PlayerInfo[PlayerInfo[playerid][SellerID]][DriftPoints] -= SellAmount[PlayerInfo[playerid][SellerID]][6];
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(SellOption[PlayerInfo[playerid][SellerID]][7] == 1)
			{
				PlayerInfo[playerid][RacePoints] += SellAmount[PlayerInfo[playerid][SellerID]][7];
				PlayerInfo[PlayerInfo[playerid][SellerID]][RacePoints] -= SellAmount[PlayerInfo[playerid][SellerID]][7];
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			// Buyer Option
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(BuyOption[PlayerInfo[playerid][SellerID]][0] == 1)
	        {
				GivePlayerMoney(PlayerInfo[playerid][SellerID], BuyAmount[PlayerInfo[playerid][SellerID]][0]);
				GivePlayerMoney(playerid, (0 - BuyAmount[PlayerInfo[playerid][SellerID]][0]));
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(BuyOption[PlayerInfo[playerid][SellerID]][1] == 1)
	        {
				PlayerInfo[PlayerInfo[playerid][SellerID]][hours] += BuyAmount[PlayerInfo[playerid][SellerID]][1];
				PlayerInfo[playerid][hours] -= BuyAmount[PlayerInfo[playerid][SellerID]][1];
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(BuyOption[PlayerInfo[playerid][SellerID]][2] == 1)
	        {
				PlayerInfo[PlayerInfo[playerid][SellerID]][Coins] += BuyAmount[PlayerInfo[playerid][SellerID]][2];
				PlayerInfo[playerid][Coins] -= BuyAmount[PlayerInfo[playerid][SellerID]][2];
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(BuyOption[PlayerInfo[playerid][SellerID]][3] == 1)
	        {
				PlayerInfo[PlayerInfo[playerid][SellerID]][Kills] += PlayerInfo[playerid][Kills];
				PlayerInfo[playerid][Kills] = 0;
				PlayerInfo[PlayerInfo[playerid][SellerID]][Deaths] += PlayerInfo[playerid][Deaths];
				PlayerInfo[playerid][Deaths] = 0;
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(BuyOption[PlayerInfo[playerid][SellerID]][4] == 1)
	        {
				PlayerInfo[PlayerInfo[playerid][SellerID]][VIP] = PlayerInfo[playerid][VIP];
				PlayerInfo[playerid][VIP] = 0;
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(BuyOption[PlayerInfo[playerid][SellerID]][5] == 1)
	        {
				PlayerInfo[PlayerInfo[playerid][SellerID]][StuntPoints] += BuyAmount[PlayerInfo[playerid][SellerID]][5];
				PlayerInfo[playerid][StuntPoints] -= BuyAmount[PlayerInfo[playerid][SellerID]][5];
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(BuyOption[PlayerInfo[playerid][SellerID]][6] == 1)
	        {
				PlayerInfo[PlayerInfo[playerid][SellerID]][DriftPoints] += BuyAmount[PlayerInfo[playerid][SellerID]][6];
				PlayerInfo[playerid][DriftPoints] -= BuyAmount[PlayerInfo[playerid][SellerID]][6];
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(BuyOption[PlayerInfo[playerid][SellerID]][7] == 1)
	        {
				PlayerInfo[PlayerInfo[playerid][SellerID]][RacePoints] += BuyAmount[PlayerInfo[playerid][SellerID]][7];
				PlayerInfo[playerid][RacePoints] -= BuyAmount[PlayerInfo[playerid][SellerID]][7];
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			// Trade Accepted - Send Dialog with accepted trade!
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			new String2[256];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(String2, sizeof(String2), "{FF0000}Trade Accepted!\n\n\
											  {FFFF00}Your trade with {FF0000}%s {FFFF00}has been accepted!\n\
											  {FF0000}If you think you've gotten on, please file a complaint with this business on the forum!", PN(PlayerInfo[playerid][BuyerID]));
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SPD(PlayerInfo[playerid][SellerID], DIALOG_EMPTY, MSGBOX, "Trade succesfully", String2, "Close", "");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			// Reset
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			for(new i = 0; i < MAX_TRADE; i++)
			{
			    BuyOption[PlayerInfo[playerid][SellerID]][i] = EOS, SellOption[PlayerInfo[playerid][SellerID]][i] = EOS;
		 		BuyName[PlayerInfo[playerid][SellerID]][i] = "", SellName[PlayerInfo[playerid][SellerID]][i] = "";
			    SellOption[PlayerInfo[playerid][SellerID]][i] = 0, BuyOption[PlayerInfo[playerid][SellerID]][i] = 0;
			    BuyAmount[PlayerInfo[playerid][SellerID]][i] = 0, SellAmount[PlayerInfo[playerid][SellerID]][i] = 0;
		   	}
			PlayerInfo[PlayerInfo[playerid][SellerID]][ATrade] = -1, PlayerInfo[PlayerInfo[playerid][SellerID]][BuyerID] = -1, PlayerInfo[PlayerInfo[playerid][SellerID]][SellerID] = -1;
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // PERSONAL CAR WITH GEMS
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_BUY_CAR:
	    {
	        if(response)
			{
				new modelid, Float:cX, Float:cY, Float:cZ, Float:cangle;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] - 50);
				PlayerInfo[playerid][Gems] -= 50;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(IsNumeric(inputtext)) modelid = strval(inputtext);
				else modelid = GetVehicleModelIDFromName(inputtext);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(modelid < 400 || modelid > 611) return PlayerInfo[playerid][Gems] += 50, SendError(playerid, "Invalid vehicle ID!");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				GetPlayerPos(playerid, cX, cY, cZ), GetPlayerFacingAngle(playerid, cangle),	cX += floatmul(floatsin(-cangle, degrees), 4.0), cY += floatmul(floatcos(-cangle, degrees), 4.0);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				CreatePersonalCar2(modelid, playerid, cX, cY, cZ, cangle);
			}
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // Login & Register System
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_LANG: // Select Language OnPlayerConnect
		{
			if(response) PlayerInfo[playerid][Language] = 1; // Romana
			if(!response) PlayerInfo[playerid][Language] = 2; // English
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    new String1[300]; eQuery[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			mysql_escape_string(PN(playerid), String1);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s' LIMIT 1", String1);
			mysql_tquery(SQL, eQuery, "OnPlayerLogin", "d", playerid);
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_NEWNAME: // Change Name
		{
			if(response)
   			{
   			    StrH[0] = '\0';
   			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    	if(strlen(inputtext) < 3 || strlen(inputtext) > 24) return SPD(playerid, DIALOG_NEWNAME, INPUT, "Change {FF0000}Name", "{FF0000}Sorry, but the name length is invalid! Min. 3 - Max. 24 Characters!", "Change", "Leave");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_escape_string(inputtext, StrH), SetPlayerName(playerid, StrH);
				return OnPlayerConnect(playerid);
			}
			if(!response) return SetTimerEx("KickPlayer", 50, false, "d", playerid);
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_LOGIN: // Login
	    {
		    if(response)
		    {
			    StrH[0] = '\0'; eQuery[0] = EOS;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_escape_string(inputtext, StrH);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s' AND `Password` = '%s'", PN(playerid), MD5_Hash(StrH)),
				mysql_tquery(SQL, eQuery, "CheckPassword", "d", playerid);
			}
			if(!response)
			{
			    StrH[0] = '\0';
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(StrH, 450, "{00CC00}Hi, {FF0000}%s{00CC00}!\n{00CC00}Please enter the new name before:", PN(playerid));
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_NEWNAME, INPUT, "Change {FF0000}Name", StrH, "Change", "Leave");
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_REGISTER: // Register
        {
		    if(response)
		    {
			    StrH[0] = '\0'; StrH2[0] = '\0'; new String[25];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        if(sscanf(inputtext, "s[25]", String))
				{
					if(PlayerInfo[playerid][Language] == 1)
					{
						format(StrH, 300, "{FFFF00}Salut, {FF0000}%s{FFFF00}!\n\n{FFCC00}Numele tau nu este inregistrat. Te rugam sa-l inregistrezi pentru a-ti salva statisticile!\n{FFFF00}Introdu o parola grea pe care doar tu sa o stii pentru a te autentifica! ({FF0000}intre 3-25 de caractere{FFFF00}):", PN(playerid));
				  		SPD(playerid, DIALOG_REGISTER, PASS, "Inregistreaza-te!", StrH, "Register", "");
					}
					else if(PlayerInfo[playerid][Language] == 2)
					{
					    format(StrH, 300, "{FFFF00}Hi, {FF0000}%s{FFFF00}!\n\n{FFCC00}You name is not registered. Please register it to save your statistics!\n{FFFF00}Enter a hard password before ({FF0000}Min. 3 - Max. 25 characters{FFFF00}):", PN(playerid));
						SPD(playerid, DIALOG_REGISTER, PASS, "Register", StrH, "Register", "");
					}
				}
				if(strlen(String) < 3 || strlen(String) > 25)
				{
					if(PlayerInfo[playerid][Language] == 1) SPD(playerid, DIALOG_REGISTER, PASS, "Inregistrare", "{FF0000}Inregistrare esuata!\n\n{FFCC00}Ai introdus o parola gresita! Te rugam sa incerci dinnou!\n{FFFF00}Lungime parola: {FF0000}Min. 3 - Max. 25 Caractere", "Inregistrare", "");
					else if(PlayerInfo[playerid][Language] == 2) SPD(playerid, DIALOG_REGISTER, PASS, "Register", "{FF0000}Register failed!\n\n{FFCC00}You have entered a wrong password! Please try again!\n{FFFF00}Password length: {FF0000}Min. 3 - Max. 25 Characters", "Register", "");
				}
				mysql_escape_string(inputtext, StrH);
			    RegisterPlayer(playerid, String);
			}
			if(!response) return SetTimerEx("KickPlayer", 50, false, "d", playerid);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_SELECT_AGE:
		{
			new tmppass[64]; eQuery[0] = EOS;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			mysql_escape_string(inputtext, tmppass);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			new age = strval(tmppass);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(age > 7 && age < 50 && response)
			{
				PlayerInfo[playerid][Age] = age;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `Age` = '%d' WHERE `Name` = '%s'", PlayerInfo[playerid][Age], PN(playerid));
				mysql_tquery(SQL, eQuery, "", "");
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    			if(PlayerInfo[playerid][Language] == 1) return SPD(playerid, DIALOG_SELECT_EMAIL, INPUT, "E-Mail", "{FFE100}Se pare ca nu ai un {FF0000}E-Mail {FFE100}in cont!\n{FFCC00}In cazul in care iti vei uita parola, nu o vei putea recupera!\n\n{FF0000}Daca doresti sa iti adaugi un E-Mail in cont, te rugam sa il introduci mai jos:", "Adauga", "Mai tarziu");
			 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else if(PlayerInfo[playerid][Language] == 2) return SPD(playerid, DIALOG_SELECT_EMAIL, INPUT, "E-Mail", "{FFE100}It looks like you don't have any {FF0000}E-Mail {FFE100}in your account!\n{FFCC00}If you will forgot your password, you will be not able to recover it!\n\n{FF0000}If you want to add an E-Mail in your account, please type it before:", "Add", "Later");
			}
			else return SPD(playerid, DIALOG_SELECT_AGE, INPUT, "Register - Varsta / Age", "{00FF22}Introdu varsta pe care doresti s-o aiba caracterul tau:", "Continue", "");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_SELECT_EMAIL:
		{
			if(IsMail(inputtext) && response && strlen(inputtext) < 30)
			{
				new emailtext[128], String[2048]; eQuery[0] = EOS;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_escape_string(inputtext, emailtext);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				strmid(PlayerInfo[playerid][EMail], emailtext, 0, strlen(emailtext), 128);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `E-Mail` = '%s' WHERE `Name` = '%s'", PlayerInfo[playerid][EMail], PN(playerid));
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String, sizeof(String), "{FF9900}Salut {FF0000}%s{FF9900}!\n\
												{FF9900}Te-ai inregistrat cu succes pe server-ul "SERVER_NAME"{FF9900}!\n\n\
											    {FF9900}Parola contului tau este {FF0000}%s {FF9900}incearca sa nu o impartasesti nimanui!\n\
												{FF9900}Varsta ta este de {FF0000}%d {FF9900}ani iar email-ul este setat {FF0000}%s{FF9900}!\n\
											    {FF9900}Te rugam sa citesti regulamentele de pe server pentru a putea respecta conditiile server-ului!\n\
							                    {FF9900}Regulamentul server-ului este afisat pe comanda ({00CC00}/rules{FF9900}) va rugam sa-l vizionati frecvent!\n\
										 	    {FF9900}Daca nu cunosti comenzile de pe acest server poti folosi comanda ({00CC00}/help{FF9900}) pentru mai multe informati!\n\
										  	    {FF9900}Pentru a vedea cine a contribuit la crearea acestui server poti folosi ({00CC00}/credits{FF9900}) pentru mai multe detalii!\n\
                                                {FF9900}Pentru a vedea toate comenzile pentru teleportare poti folosi comanda ({00CC00}/teles{FF9900}) pentru absolut toate teleporturile!\n\
                                                {FF9900}Pentru a conduce un vehicul poti folosi comanda ({00CC00}/v{FF9900}, {00CC00}/car{FF9900}) pentru a teleporta o masina la tine!\n\n\
                                                {00FF22}Pentru orice intrebare, problema sau alt lucru foloseste comanda {FF0000}/HELP [MESSAGE]{00FF22} si o sa fi ajutat!\n\
                                                {00FF22}Iti dorim distractie placuta pe server-ul nostru!", PN(playerid), GetPlayerPassword, PlayerInfo[playerid][Age], PlayerInfo[playerid][EMail]);
				SPD(playerid, DIALOG_SUCCES_REGISTER, MSGBOX, "Register - Completed registration!", String, "Help", "Close");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerInfo[playerid][Registered] = 1;
				IsPlayerLogged[playerid] = 1;
			}
			else SPD(playerid, DIALOG_SELECT_EMAIL, INPUT, "E-Mail", "{FFE100}It looks like you don't have any {FF0000}E-Mail {FFE100}in your account!\n{FFCC00}If you will forgot your password, you will be not able to recover it!\n\n{FF0000}If you want to add an E-Mail in your account, please type it before:", "Add", "Later");
			if(!response)
			{
			    new String[2048]; eQuery[0] = EOS;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_escape_string(inputtext, "None");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				strmid(PlayerInfo[playerid][EMail], "None", 0, strlen("None"), 64);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `E-Mail` = 'None' WHERE `Name` = '%s'", PN(playerid));
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String, sizeof(String), "{FF9900}Salut {FF0000}%s{FF9900}!\n\
												{FF9900}Te-ai inregistrat cu succes pe server-ul "SERVER_NAME"{FF9900}!\n\n\
												{FF9900}Parola contului tau este {FF0000}%s {FF9900}incearca sa nu o impartasesti nimanui!\n\
											    {FF9900}Varsta ta este de {FF0000}%d {FF9900}ani iar email-ul nu a fost setat in cont!\n\
											    {FF9900}Te rugam sa citesti regulamentele de pe server pentru a putea respecta conditiile server-ului!\n\
							                    {FF9900}Regulamentul server-ului este afisat pe comanda ({00CC00}/rules{FF9900}) va rugam sa-l vizionati frecvent!\n\
										 	    {FF9900}Daca nu cunosti comenzile de pe acest server poti folosi comanda ({00CC00}/help{FF9900}) pentru mai multe informati!\n\
										  	    {FF9900}Pentru a vedea cine a contribuit la crearea acestui server poti folosi ({00CC00}/credits{FF9900}) pentru mai multe detalii!\n\
                                                {FF9900}Pentru a vedea toate comenzile pentru teleportare poti folosi comanda ({00CC00}/teles{FF9900}) pentru absolut toate teleporturile!\n\
                                                {FF9900}Pentru a conduce un vehicul poti folosi comanda ({00CC00}/v{FF9900}, {00CC00}/car{FF9900}) pentru a teleporta o masina la tine!\n\n\
                                                {00FF22}Pentru orice intrebare, problema sau alt lucru foloseste comanda {FF0000}/HELP [MESSAGE]{00FF22} si o sa fi ajutat!\n\
                                                {00FF22}Iti dorim distractie placuta pe server-ul nostru!", PN(playerid), GetPlayerPassword, PlayerInfo[playerid][Age]);
				SPD(playerid, DIALOG_SUCCES_REGISTER, MSGBOX, "Register - Completed registration!", String, "Help", "Close");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerInfo[playerid][Registered] = 1;
				IsPlayerLogged[playerid] = 1;
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_SUCCES_REGISTER: // End Register
		{
     		if(response) return CMD(playerid, "/help");
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // ADMINS
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_ADMINS:
		{
  			if(response) return true;
		    if(!response)
		    {
     			ShowOfflineAdmins(playerid);
				return true;
		    }
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // News
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case D_NEWS:
		{
		    eString[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(response) // Romana
		    {
				strcat(eString, "{FFFFFF}10 Mai, 2020:\n\
				                {00CC00}- A fost adaugata o noua mapa la{FF0000} /minigun{00CC00}.\n\
				                {00CC00}Creditele de la mapa se duc la{FF0000} [9mm]LimiTlesS{00CC00}.\n\
				                \n\
								{FFFFFF}9 Mai, 2020:\n\
				                {00CC00}- A fost adaugat un sistem de taxi.\n\
				                {00CC00}Pentru mai multe detalii foloseste comanda{FF0000} /taxi{00CC00}.\n\
				                \n\
								{FFFFFF}7 Mai, 2020:\n\
				                {00CC00}- Au fost criptate toate parolele principale & secundare.\n\
				                \n\
								{FFFFFF}4 Mai, 2020:\n\
				                {00CC00}- Au fost rezolvate niste bug-uri de la masiniile personale.\n\
				                {00CC00}- Acum masiniile personale se loadeaza doar atunci cand esti conectat\n\
				                {00CC00}pe server, cand te deconectezi vor fi sterse automat.\n\
				                \n\
				                {FFFFFF}2 Mai, 2020:\n\
				                {00CC00}- A fost adaugat mapa {FF0000}/VipIsland{00CC00}.\n\
				                \n\
								{FFFFFF}1 Mai, 2020:\n\
				                {00CC00}- A fost adaugat un nou TextDraw la conectare.\n\
				                {00CC00}- Au fost rezolvate niste probleme de la MYSQL.\n\
				                \n\
								{FFFFFF}30 Aprilie, 2020:\n\
								{00CC00}- A fost schimbat TextDraw-ul server-ului.\n\
								{00CC00}- Au fost adaugate niste obiecte la {FF0000}/sg{00CC00}.\n\
								{00CC00}- Am adaugat niste detalii avansate la {FF0000}/djs{00CC00}.\n\
								\n\
								{FFFFFF}Ai gasit un bug pe server? Foloseste comanda {FF0000}/bug{FFFFFF}!\n\
								{FFFFFF}Pentru mai multe detalii, viziteaza {FF0000}"SERVER_WEBSITE"{FFFFFF}!");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_EMPTY, MSGBOX, "Noutati", eString, "Ok", "");
			}
			if(!response) // English
			{
				strcat(eString, "{FFFFFF}10 May, 2020:\n\
				                {00CC00}- We was added a new map for{FF0000} /minigun{00CC00}.\n\
				                {00CC00}The credits of this map are go to{FF0000} [9mm]LimiTlesS{00CC00}.\n\
				                \n\
								{FFFFFF}9 May, 2020:\n\
				                {00CC00}- We was added a taxi sistem.\n\
				                {00CC00}For more details use command{FF0000} /taxi{00CC00}.\n\
				                \n\
								{FFFFFF}7 May, 2020:\n\
				                {00CC00}- We was cripted all main & secondary passwords.\n\
				                \n\
								{FFFFFF}4 May, 2020:\n\
				                {00CC00}- We was fixed any bugs for personal vehicles.\n\
				                {00CC00}- Now the personal vehicles can be loaded if you are online\n\
				                {00CC00}in the server, if you disconnect, the vehicles will be deleted autoamtically.\n\
				                \n\
								{FFFFFF}2 May, 2020:\n\
				                {00CC00}- We was added map {FF0000}/VipIsland{00CC00}.\n\
				                \n\
								{FFFFFF}1 May, 2020:\n\
				                {00CC00}- We was added a TextDraw when a player connect.\n\
				                {00CC00}- We was fixed a problem with MYSQL.\n\
				                \n\
								{FFFFFF}30 April, 2020:\n\
								{00CC00}- We was added a TextDraw.\n\
								{00CC00}- We was added any new objets at {FF0000}/sg{00CC00}.\n\
								{00CC00}- We was added advanced details at {FF0000}/djs{00CC00}.\n\
								\n\
								{FFFFFF}Have you got any bugs on server? Use command {FF0000}/bug{FFFFFF}!\n\
								{FFFFFF}For more informations visit {FF0000}"SERVER_WEBSITE"{FFFFFF}!");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_EMPTY, MSGBOX, "News", eString, "Ok", "");
			}
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // Clan System => Creating...
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CREATECLAN: // Clan Name
		{
		    if(!response) return true; eQuery[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(sscanf(inputtext, "s[25]", inputtext[0])) return SPD(playerid, DIALOG_CREATECLAN, INPUT, "{FFFFFF}Create a clan", "\t\t{FF0000}An ERROR has Occurred!\n\n{FFFFFF}For contiune on next steps, please type the {FF0000}clan name {FFFFFF}below:", "Next", "Exit");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(strlen(inputtext[0]) < 0 || strlen(inputtext[0]) > 24) return SPD(playerid, DIALOG_CREATECLAN, INPUT, "{FFFFFF}Create a clan", "\t\t{FF0000}An ERROR has Occurred!\n\n{FFFFFF}The clan name must be lower that 25 characters and biggest that 1!\n\nPlease re-type it:", "Next", "Exit");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    	mysql_escape_string(inputtext[0], inputtext[0]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT `Name` FROM `Clans` WHERE `Name` = '%s' LIMIT 1", inputtext[0]);
            mysql_tquery(SQL, eQuery, "CheckClanName", "ds", playerid, inputtext[0]);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CREATECLAN + 1: // Clan Members Skin
		{
			if(!response) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			switch(listitem)
			{
			    case 0: ShowModelSelectionMenu(playerid, mskinlist, "Members Skin");
		        case 1:
		        {
		            switch(PlayerInfo[playerid][Language])
		            {
		            	case 1: SPD(playerid, DIALOG_CREATECLAN + 2, 1, "{FFFFFF}Default Skin", "{FFFFFF}Ok, deci ai ales sa {FF0000}scrii {FFFFFF}ID-ul skinului, acum te rugam seteaza skinul membrilor.\n\n{FF0000}Skinuri avabile doar intre 0 si 311.", "Schimba", "Iesire");
		                case 2: SPD(playerid, DIALOG_CREATECLAN + 2, 1, "{FFFFFF}Default Skin", "{FFFFFF}Ok, so you selected to {FF0000}type {FFFFFF}the skin ID, now please set the members skin.\n\n{FF0000}Only between 0 and 311 skins are avaible.", "Change", "Close");
					}
				}
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CREATECLAN + 2: // Default Skin
		{
		    if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            sscanf(inputtext, "d", inputtext[0]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(inputtext[0] < 0 || inputtext[0] > 311)
      		{
      			if(PlayerInfo[playerid][Language] == 1) return SPD(playerid, DIALOG_CREATECLAN + 2, INPUT, "{FF0000}Skin Invalid <Skin 1-311>", "{00CC00}Te rugam sa introduci {FF0000}ID-ul skin-ului {00CC00}pentru membrii!", "Continuare", "Inchide");
        		else if(PlayerInfo[playerid][Language] == 2) return SPD(playerid, DIALOG_CREATECLAN + 2, INPUT, "{FF0000}Invalid Skin <Skin 1-311>",  "{00CC00}Invalid Skin ID (0-311)!\n{00CC00}Enter below the {FF0000}Skin ID {00CC00}for members:", "Next", "Close");
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			else
			{
				pClanSkin[playerid] = inputtext[0];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(PlayerInfo[playerid][Language] == 1) return SPD(playerid, DIALOG_CREATECLAN + 3, INPUT, "{FFFFFF}Create Clan{FF0000} - Alege Culoarea", "{FFE600}Please enter a 'HEX' color! EX {FF0000}FF0000{FFE600}!", "Enter", "Inchide");
				if(PlayerInfo[playerid][Language] == 2) return SPD(playerid, DIALOG_CREATECLAN + 3, INPUT, "{FFFFFF}Create Clan{FF0000} - Choose The Color", "{FFE600}Please enter a 'HEX' color! EX {FF0000}FF0000{FFE600}!", "Enter", "Inchide");
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CREATECLAN + 3: // Clan Color
		{
		    if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(strlen(inputtext) != 6) return SPD(playerid, DIALOG_CREATECLAN + 3, INPUT, "{FFFFFF}Create Clan{FF0000} - Pasul #4{FFFFFF} - Alege Culoarea", "{FFE600}Please enter a 'HEX' color! EX {FF0000}FF0000{FFE600}!", "Enter", "Inchide");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(sscanf(inputtext, "h", inputtext[0])) return SPD(playerid, DIALOG_CREATECLAN + 3, INPUT, "{FFFFFF}Create Clan{FF0000} - Alege Culoarea", "{FFE600}Please enter a 'HEX' color! EX {FF0000}FF0000{FFE600}!", "Enter", "Inchide");
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            inputtext[4] = (inputtext[0] * 256) + 0xAA;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            pClanColor[playerid] = inputtext[4];
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			inputtext[2] = (inputtext[0] * 256) + 0xAA;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SetPlayerColor(playerid, inputtext[2]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(PlayerInfo[playerid][Language] == 1) return SPD(playerid, DIALOG_CREATECLAN + 4, LIST, "{FFFFFF}Create Clan{FF0000} - Alege-ti Arma #1", "{00CC00}Brass Knuckles\n{0091FF}Gold Club\n{FFE600}Nightstick\n{00CC00}Knife\n{0091FF}BaseBall\n{FFE600}Shovel\n{00CC00}Pool Cue\n{0091FF}Katana\n{FFE600}Chainsaw", "Next", "Exit");
			if(PlayerInfo[playerid][Language] == 2) return SPD(playerid, DIALOG_CREATECLAN + 4, LIST, "{FFFFFF}Create Clan{FF0000} - Choose a Weapon #1", "{00CC00}Brass Knuckles\n{0091FF}Gold Club\n{FFE600}Nightstick\n{00CC00}Knife\n{0091FF}BaseBall\n{FFE600}Shovel\n{00CC00}Pool Cue\n{0091FF}Katana\n{FFE600}Chainsaw", "Next", "Exit");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CREATECLAN + 4:
		{
		    if(response)
		    {
		        new wslot[] = {1,2,3,4,5,6,7,8,9};
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        GivePlayerWeapon(playerid, wslot[listitem], 9999);
		        pClanWeapon[playerid][0] = wslot[listitem];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        if(PlayerInfo[playerid][Language] == 1) return SPD(playerid, DIALOG_CREATECLAN + 5, LIST, "{FFFFFF}Create Clan{FF0000} - Alege-ti Arma #2", "{00CC00}Pistol\n{0091FF}Silenced Pistol\n{FFE600}DesertEagle", "Next Slot", "Cancel");
		        if(PlayerInfo[playerid][Language] == 2) return SPD(playerid, DIALOG_CREATECLAN + 5, LIST, "{FFFFFF}Create Clan{FF0000} - Choose a Weapon #2", "{00CC00}Pistol\n{0091FF}Silenced Pistol\n{FFE600}DesertEagle", "Next Slot", "Cancel");
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CREATECLAN + 5:
		{
		    if(response)
		    {
		        new wslot[]= {22,23,24};
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				GivePlayerWeapon(playerid, wslot[listitem], 9999);
				pClanWeapon[playerid][1] = wslot[listitem];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                if(PlayerInfo[playerid][Language] == 1) return SPD(playerid, DIALOG_CREATECLAN + 6, LIST, "{FFFFFF}Create Clan{FF0000} - Alege-ti Arma #3", "{00CC00}ShotGun\n{0091FF}Sawn-Off-Shotgun\n{FFE600}SPAZ-12", "Next Slot", "Cancel");
				if(PlayerInfo[playerid][Language] == 2) return SPD(playerid, DIALOG_CREATECLAN + 6, LIST, "{FFFFFF}Create Clan{FF0000} - Choose a Weapon #3", "{00CC00}ShotGun\n{0091FF}Sawn-Off-Shotgun\n{FFE600}SPAZ-12", "Next Slot", "Cancel");
    		}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CREATECLAN + 6:
		{
		    if(response)
		    {
		        new wslot[]= {25,26,27};
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				GivePlayerWeapon(playerid, wslot[listitem], 9999);
				pClanWeapon[playerid][2] = wslot[listitem];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                if(PlayerInfo[playerid][Language] == 1) return SPD(playerid, DIALOG_CREATECLAN + 7, LIST, "{FFFFFF}Create Clan{FF0000} - Alege-ti Arma #4", "{00CC00}Micro UZI\n{0091FF}MP5\n{FFE600}TEC-9", "Next", "Cancel");
				if(PlayerInfo[playerid][Language] == 2) return SPD(playerid, DIALOG_CREATECLAN + 7, LIST, "{FFFFFF}Create Clan{FF0000} - Choose a Weapon #4", "{00CC00}Micro UZI\n{0091FF}MP5\n{FFE600}TEC-9", "Next", "Cancel");
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CREATECLAN + 7:
		{
		    if(response)
		    {
		        new wslot[]= {28,29,32};
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				GivePlayerWeapon(playerid, wslot[listitem], 9999);
				pClanWeapon[playerid][3] = wslot[listitem];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                if(PlayerInfo[playerid][Language] == 1) return SPD(playerid, DIALOG_CREATECLAN + 8, 2, "{FFFFFF}Create Clan{FF0000} - Alege-ti Arma #5", "{00CC00}AK-47\n{0091FF}M4", "Next", "Cancel");
				if(PlayerInfo[playerid][Language] == 2) return SPD(playerid, DIALOG_CREATECLAN + 8, 2, "{FFFFFF}Create Clan{FF0000} - Choose a Weapon #5", "{00CC00}AK-47\n{0091FF}M4", "Next", "Cancel");
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CREATECLAN + 8:
		{
		    if(response)
			{
	        	new wslot[]= {30,31};
	        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				GivePlayerWeapon(playerid, wslot[listitem], 9999);
				pClanWeapon[playerid][4] = wslot[listitem];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                if(PlayerInfo[playerid][Language] == 1) return SPD(playerid, DIALOG_CREATECLAN + 9, LIST, "{FFFFFF}Create Clan{FF0000} - Alege-ti Arma #6", "{00CC00}Country Rifle\n{0091FF}Sniper Rifle", "Next", "Cancel");
				if(PlayerInfo[playerid][Language] == 2) return SPD(playerid, DIALOG_CREATECLAN + 9, LIST, "{FFFFFF}Create Clan{FF0000} - Choose a Weapon #6", "{00CC00}Country Rifle\n{0091FF}Sniper Rifle", "Next", "Cancel");
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CREATECLAN + 9: // Finish Create Clan
		{
		    if(response)
			{
		        new wslot[]= {33,34}; eQuery[0] = EOS;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				GivePlayerWeapon(playerid, wslot[listitem], 9999);
				pClanWeapon[playerid][5] = wslot[listitem];
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(PlayerInfo[playerid][Language] == 1)
				{
				    StrH[0] = '\0'; StrH2[0] = '\0'; new Str3[100] = "{FFFFFF}Create Clan {FF0000}- #Finish";
				    //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    format(StrH, 150, "{FFFFFF}Felicitari {FF0000}%s{FFFFFF}!\n\n", PN(playerid)),
				    strcat(StrH2, StrH, 500),
					format(StrH, 150, "{FFFFFF}Clanul {FF0000}%s{FFFFFF} a fost creat cu succes!\n", pClanName[playerid]),
					strcat(StrH2, StrH, 500),
					strcat(StrH2,     "{FFFFFF}Toate comenzile de care ai nevoie le gasesti in comanda {FF0000}/clan{FFFFFF}.\n\n\
									  {FFFFFF}Distractie placuta!", 500);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SPD(playerid, DIALOG_CREATECLAN + 10, DIALOG_STYLE_MSGBOX, Str3, StrH2, "Inchide", "Comenzi");
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else if(PlayerInfo[playerid][Language] == 2)
				{
				    StrH[0] = '\0'; StrH2[0] = '\0'; new Str3[100] = "{FFFFFF}Create Clan{FF0000}- #Finish";
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    format(StrH, 150, "{FFFFFF}Good job {FF0000}%s{FFFFFF}!\n\n", PN(playerid)),
				    strcat(StrH2, StrH, 500),
					format(StrH, 150, "{FFFFFF}The Clan {FF0000}%s{FFFFFF} was successfully created!\n", pClanName[playerid]),
					strcat(StrH2, StrH, 500),
					strcat(StrH2,     "{FFFFFF}All the commands you need can be found on {FF0000}/clan{BBFF00}.\n\n\
									  {FFFFFF}Have fun!", 500);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SPD(playerid, DIALOG_CREATECLAN + 10, DIALOG_STYLE_MSGBOX, Str3, StrH2, "Close", "Commands");
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new szYear, szMonth, szDay;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				getdate(szYear, szMonth, szDay);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(pClanSince[playerid], 30, "%02d/%02d/%02d", szDay, szMonth, szYear);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Clans`(`ID`) VALUES(0)");
				mysql_tquery(SQL, eQuery, "OnClanCreate", "d", playerid);
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CREATECLAN + 10: // Clan Successfully Created
		{
		    if(!response) return cmd_clan(playerid);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CLAN_RANK:
		{
			if(response)
			{
			    switch(listitem)
			    {
			    	case 0:
			    	{
			        	PlayerInfo[SetPlayerClanRank][c_Rank] = 1;
			        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        	UpdatePlayer(PN(SetPlayerClanRank), "ClanRank", 1);
			        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        	format(eString, sizeof eString, "%s was made Member in clan by %s", PN(SetPlayerClanRank), PN(playerid));
			            SendClanSetRank(PlayerInfo[playerid][ClanID], eString);
			    	}
			    	case 1:
			    	{
			    		PlayerInfo[SetPlayerClanRank][c_Rank] = 2;
			        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        	UpdatePlayer(PN(SetPlayerClanRank), "ClanRank", 2);
			        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        	format(eString, sizeof eString, "%s was made Co-Leader in clan by %s", PN(SetPlayerClanRank), PN(playerid));
			            SendClanSetRank(PlayerInfo[playerid][ClanID], eString);
			    	}
			    	case 2:
			    	{
			    		PlayerInfo[SetPlayerClanRank][c_Rank] = 3;
			        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        	UpdatePlayer(PN(SetPlayerClanRank), "ClanRank", 3);
			        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        	format(eString, sizeof eString, "%s was made Leader in clan by %s", PN(SetPlayerClanRank), PN(playerid));
			            SendClanSetRank(PlayerInfo[playerid][ClanID], eString);
			    	}
			    }
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_LEAVE_CLAN:
	    {
			if(!response)
		 	{
  				new String[128];
         	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	     	    format(String, sizeof(String), "%s has left our clan!", PN(playerid));
	     	    SendClanMessage(PlayerInfo[playerid][ClanID], String);
	      		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	      		Announce(playerid, "~W~~H~Clan~R~~H~ left", 4000, 4);
	      		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	      		RemovePlayerFromClan(playerid);
		 	}
	    }
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case Int_D:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:	SPD(playerid, Int_D+1, LIST, "Interiors", "{FFFFFF}24/7 Interior 1 \n{FFFFFF}24/7 Interior 2 \n{FFFFFF}24/7 Interior 3 \n{FFFFFF}24/7 Interior 4 \n{FFFFFF}24/7 Interior 5 \n{FFFFFF}24/7 Interior 6 ", "Select", "Back");
					case 1: SPD(playerid, Int_D+2, LIST, "Interiors", "{FFFFFF}Francis Ticket Sales Airport \n{FFFFFF}Francis Baggage Claim Airport \n{FFFFFF}Andromada Cargo Hold \n{FFFFFF}Shamal Cabin \n{FFFFFF}LS Airport Baggage Claim \n{FFFFFF}Interernational Airport \n{FFFFFF}Abandoned AC Tower ", "Select", "Back");
					case 2: SPD(playerid, Int_D+3, LIST, "Interiors", "{FFFFFF}Ammunation 1 \n{FFFFFF}Ammunation 2 \n{FFFFFF}Ammunation 3 \n{FFFFFF}Ammunation 4 \n{FFFFFF}Ammunation 5 \n{FFFFFF}Booth Ammunation \n{FFFFFF}Range Ammunation ", "Select", "Back");
		   			case 3: SPD(playerid, Int_D+4, LIST, "Interiors", "{FFFFFF}B Dup Apartment\n{FFFFFF}B Dup Crack Palace \n{FFFFFF}OG Loc House \n{FFFFFF}Ryder house \n{FFFFFF}Sweet house \n{FFFFFF}Madd Dogg Mansion \n{FFFFFF}Big Smoke Crack Palace ", "Select", "Back");
		   			case 4: SPD(playerid, Int_D+5, LIST, "Interiors", "{FFFFFF}Johnson House \n{FFFFFF}Angel Pine Trailer \n{FFFFFF}Safe House \n{FFFFFF}Safe House 2 \n{FFFFFF}Safe House 3 \n{FFFFFF}Safe House 4 \n{FFFFFF}Verdant Bluffs Safehouse \n{FFFFFF}Willowfield Safehouse \n{FFFFFF}The Camel's Toe Safehouse ", "Select", "Back");
		   			case 5: SPD(playerid, Int_D+6, LIST, "Interiors", "{FFFFFF}Atrium \n{FFFFFF}Burning Desire Building \n{FFFFFF}Colonel Furhberger \n{FFFFFF}Welcome Pump \n{FFFFFF}Wu Zi Mu's Apartement \n{FFFFFF}Jizzy's \n{FFFFFF}Dillimore Gas Station \n{FFFFFF}Jefferson Motel \n{FFFFFF}Liberty City \n{FFFFFF}Sherman Dam ", "Select", "Back");
	   				case 6: SPD(playerid, Int_D+7, LIST, "Interiors", "{FFFFFF}RC War Arena \n{FFFFFF}Racing Stadium \n{FFFFFF}Racing Stadium 2 \n{FFFFFF}Bloodbowl Stadium \n{FFFFFF}Kickstart Stadium ", "Select", "Back");
		   			case 7: SPD(playerid, Int_D+8, LIST, "Interiors", "{FFFFFF}Caligulas Casino \n{FFFFFF}4 Dragons Casino \n{FFFFFF}Redsands Casino \n{FFFFFF}4 Dragons Managerial Suite \n{FFFFFF}Inside Track Betting \n{FFFFFF}Caligulas Roof \n{FFFFFF}Rosenberg's Caligulas Office \n{FFFFFF}4 Dragons Janitors Office ", "Select", "Back");
					case 8: SPD(playerid, Int_D+9, LIST, "Interiors", "{FFFFFF}Tattoo \n{FFFFFF}Burger Shot \n{FFFFFF}Well Stacked Pizza \n{FFFFFF}Cluckin' Bell \n{FFFFFF}Rusty Donut's \n{FFFFFF}Zero's RC Shop \n{FFFFFF}Sex Shop ", "Select", "Back");
					case 9: SPD(playerid, Int_D+10, LIST, "Interiors", "{FFFFFF}Loco Low Co. \n{FFFFFF}Wheel Arch Angels \n{FFFFFF}Transfender \n{FFFFFF}Doherty Garage ", "Select", "Back");
		   			case 10:SPD(playerid, Int_D+11, LIST, "Interiors", "{FFFFFF}Denises Bedroom \n{FFFFFF}Helena's Barn \n{FFFFFF}Barbara's Love Nest \n{FFFFFF}Katie's Lovenest \n{FFFFFF}Michelle's Love Nest \n{FFFFFF}Millie's Bedroom ", "Select", "Back");
   					case 11:SPD(playerid, Int_D+12, LIST, "Interiors", "{FFFFFF}Barber Shop \n{FFFFFF}Pro-Laps \n{FFFFFF}Victim \n{FFFFFF}SubUrban \n{FFFFFF}Reece's Barber Shop \n{FFFFFF}Zip \n{FFFFFF}Didier Sachs \n{FFFFFF}Binco \n{FFFFFF}Barber Shop 2 \n{FFFFFF}Wardrobe ", "Select", "Back");
	   				case 12:SPD(playerid, Int_D+13, LIST, "Interiors", "{FFFFFF}Brothel \n{FFFFFF}Brothel 2 \n{FFFFFF}The Big Spread Ranch \n{FFFFFF}Dinner \n{FFFFFF}World Of Coq \n{FFFFFF}The Pig Pen \n{FFFFFF}Club \n{FFFFFF}Jay's Diner \n{FFFFFF}Secret Valley Diner \n{FFFFFF}Fanny Batter's Whore House ", "Select", "Back");
	   				case 13:SPD(playerid, Int_D+14, LIST, "Interiors", "{FFFFFF}Blastin' Fools Records \n{FFFFFF}Warehouse \n{FFFFFF}Warehouse 2 \n{FFFFFF}Budget Inn Motel Room \n{FFFFFF}Lil' Probe Inn \n{FFFFFF}Crack Den \n{FFFFFF}Meat Factory \n{FFFFFF}Bike School \n{FFFFFF}Driving School ", "Select", "Back");
	   				case 14:SPD(playerid, Int_D+15, LIST, "Interiors", "{FFFFFF}Burglary House 1 \n{FFFFFF}Burglary House 2 \n{FFFFFF}Burglary House 3 \n{FFFFFF}Burglary House 4 \n{FFFFFF}Burglary House 5 \n{FFFFFF}Burglary House 6 \n{FFFFFF}Burglary House 7 \n{FFFFFF}Burglary House 8 \n{FFFFFF}Burglary House 9 \n{FFFFFF}Burglary House 10 ", "Select", "Back");
		   			case 15:SPD(playerid, Int_D+16, LIST, "Interiors", "{FFFFFF}Burglary House 11 \n{FFFFFF}Burglary House 12 \n{FFFFFF}Burglary House 13 \n{FFFFFF}Burglary House 14 \n{FFFFFF}Burglary House 15 \n{FFFFFF}Burglary House 16 ", "Select", "Back");
		   			case 16:SPD(playerid, Int_D+17, LIST, "Interiors", "{FFFFFF}Los Santos Gym \n{FFFFFF}San Fierro Gym \n{FFFFFF}Las Venturas Gym ", "Select", "Back");
		   			case 17:SPD(playerid, Int_D+18, LIST, "Interiors", "{FFFFFF}SF Police Department \n{FFFFFF}LS Police Department \n{FFFFFF}LV Police Department \n{FFFFFF}Planning Department", "Select", "Back");
	   			}
			}
			else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/teles");
		}
		case Int_D + 1: // 24/7's
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0: return InteriorTele(playerid, 17, -25.884499,-185.868988,1003.549988);
					case 1: return InteriorTele(playerid, 10, -6.091180,-29.271898,1003.549988);
					case 2: return InteriorTele(playerid, 18, -30.946699,-89.609596,1003.549988);
					case 3: return InteriorTele(playerid, 16, -25.132599,-139.066986,1003.549988);
					case 4: return InteriorTele(playerid, 4, -27.312300,-29.277599,1003.549988);
					case 5: return InteriorTele(playerid, 6, -26.691599,-55.714897,1003.549988);
				}
  			}
  			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 2: // Airport Interiors
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0: return InteriorTele(playerid, 14, -1827.147338,7.207418,1061.143554);
				    case 1: return InteriorTele(playerid, 14, -1855.568725,41.263156,1061.143554);
					case 2: return InteriorTele(playerid, 9, 315.856170,1024.496459,1949.797363);
					case 3: return InteriorTele(playerid, 1, 2.384830,33.103397,1199.849976);
					case 4: return InteriorTele(playerid, 14, -1870.80,59.81,1056.25);
					case 5: return InteriorTele(playerid, 14, -1830.81,16.83,1061.14);
					case 6: return InteriorTele(playerid, 10, 419.8936, 2537.1155, 10);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 3: // Ammunations
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: return InteriorTele(playerid, 1, 286.148987,-40.644398,1001.569946);
			    	case 1: return InteriorTele(playerid, 4, 286.800995,-82.547600,1001.539978);
			    	case 2: return InteriorTele(playerid, 6, 296.919983,-108.071999,1001.569946);
			    	case 3: return InteriorTele(playerid, 7, 314.820984,-141.431992,999.661987);
			    	case 4: return InteriorTele(playerid, 6, 316.524994,-167.706985,999.661987);
			    	case 5: return InteriorTele(playerid, 7, 302.292877,-143.139099,1004.062500);
			    	case 6: return InteriorTele(playerid, 7, 280.795104,-135.203353,1004.062500);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 4: // Houses
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: return InteriorTele(playerid, 3, 1527.0468, -12.0236, 1002.0971);
			    	case 1: return InteriorTele(playerid, 2, 1523.5098, -47.8211, 1002.2699);
			    	case 2: return InteriorTele(playerid, 3, 512.9291, -11.6929, 1001.5653);
			    	case 3: return InteriorTele(playerid, 2, 2447.8704, -1704.4509, 1013.5078);
			    	case 4: return InteriorTele(playerid, 1, 2527.0176, -1679.2076, 1015.4986);
			    	case 5: return InteriorTele(playerid, 5, 1267.8407, -776.9587, 1091.9063);
			    	case 6: return InteriorTele(playerid, 2, 2536.5322, -1294.8425, 1044.125);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 5: // Houses
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: return InteriorTele(playerid, 3, 2496.0549, -1695.1749, 1014.7422);
			    	case 1: return InteriorTele(playerid, 2, 1.1853, -3.2387, 999.4284);
			    	case 2: return InteriorTele(playerid, 5, 2233.6919, -1112.8107, 1050.8828);
			    	case 3: return InteriorTele(playerid, 6, 2194.7900, -1204.3500, 1049.0234);
			    	case 4: return InteriorTele(playerid, 9, 2319.1272, -1023.9562, 1050.2109);
			    	case 5: return InteriorTele(playerid, 10, 2262.4797,-1138.5591,1050.6328);
			    	case 6: return InteriorTele(playerid, 8, 2365.1089, -1133.0795, 1050.875);
			    	case 7: return InteriorTele(playerid, 11, 2282.9099, -1138.2900, 1050.8984);
			    	case 8: return InteriorTele(playerid, 1, 2216.1282, -1076.3052, 1050.4844);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 6: // Missions
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0: return InteriorTele(playerid, 18, 1726.18,-1641.00,20.23);
			    	case 1: return InteriorTele(playerid, 5, 2338.32,-1180.61,1027.98);
			    	case 2: return InteriorTele(playerid, 8, 2807.63,-1170.15,1025.57);
			    	case 3: return InteriorTele(playerid, 1, 681.66,-453.32,-25.61);
			    	case 4: return InteriorTele(playerid, 1, -2158.72,641.29,1052.38);
			    	case 5: return InteriorTele(playerid, 3, -2637.69,1404.24,906.46);
			    	case 6: return InteriorTele(playerid, 0, 664.19,-570.73,16.34);
			    	case 7: return InteriorTele(playerid, 15, 2220.26,-1148.01,1025.80);
			    	case 8: return InteriorTele(playerid, 1, -750.80,491.00,1371.70);
			    	case 9: return InteriorTele(playerid, 17, -944.2402, 1886.1536, 5.0051);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 7: //
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0: return InteriorTele(playerid, 10, -1079.99,1061.58,1343.04);
			    	case 1: return InteriorTele(playerid, 7, -1395.958,-208.197,1051.170);
			    	case 2: return InteriorTele(playerid, 4, -1424.9319,-664.5869,1059.8585);
			    	case 3: return InteriorTele(playerid, 15, -1394.20,987.62,1023.96);
			    	case 4: return InteriorTele(playerid, 14, -1410.72,1591.16,1052.53);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 8: // Casino Interiors
		{
			if(response)
			{
                switch(listitem)
			    {
			        case 0: return InteriorTele(playerid, 1, 2233.8032,1712.2303,1011.7632);
			    	case 1: return InteriorTele(playerid, 10, 2016.2699,1017.7790,996.8750);
			    	case 2: return InteriorTele(playerid, 12, 1132.9063,-9.7726,1000.6797);
			    	case 3: return InteriorTele(playerid, 11, 2003.1178, 1015.1948, 33.008);
			    	case 4: return InteriorTele(playerid, 3, 830.6016, 5.9404, 1004.1797);
			    	case 5: return InteriorTele(playerid, 1, 2268.5156, 1647.7682, 1084.2344);
			    	case 6: return InteriorTele(playerid, 2, 2182.2017, 1628.5848, 1043.8723);
			    	case 7: return InteriorTele(playerid, 10, 1893.0731, 1017.8958, 31.8828);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 9: // Shop Interiors
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: return InteriorTele(playerid, 16, -203.0764,-24.1658,1002.2734);
			    	case 1: return InteriorTele(playerid, 10, 365.4099,-73.6167,1001.5078);
			    	case 2: return InteriorTele(playerid, 5, 372.3520,-131.6510,1001.4922);
			    	case 3: return InteriorTele(playerid, 9, 365.7158,-9.8873,1001.8516);
			    	case 4: return InteriorTele(playerid, 17, 378.026,-190.5155,1000.6328);
			    	case 5: return InteriorTele(playerid, 6, -2240.1028, 136.973, 1035.4141);
			    	case 6: return InteriorTele(playerid, 3, -100.2674, -22.9376, 1000.71883);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 10: //
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: return InteriorTele(playerid, 2, 616.7820,-74.8151,997.6350);
			    	case 1: return InteriorTele(playerid, 3, 615.2851,-124.2390,997.6350);
			    	case 2: return InteriorTele(playerid, 1, 617.5380,-1.9900,1000.6829);
			    	case 3: return InteriorTele(playerid, 1, -2041.2334, 178.3969, 28.8465);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 11: //
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: return InteriorTele(playerid, 1, 245.2307, 304.7632, 999.1484);
			    	case 1: return InteriorTele(playerid, 3, 290.623, 309.0622, 999.1484);
			    	case 2: return InteriorTele(playerid, 5, 322.5014, 303.6906, 999.1484);
			    	case 3: return InteriorTele(playerid, 2, 269.6405, 305.9512, 999.1484);
			    	case 4: return InteriorTele(playerid, 4, 306.1966, 307.819, 1003.3047);
			    	case 5: return InteriorTele(playerid, 6, 344.9984, 307.1824, 999.1557);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 12: //
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: return InteriorTele(playerid, 3, 418.4666, -80.4595, 1001.8047);
			    	case 1: return InteriorTele(playerid, 3, 206.4627, -137.7076, 1003.0938);
			    	case 2: return InteriorTele(playerid, 5, 225.0306, -9.1838, 1002.218);
			    	case 3: return InteriorTele(playerid, 1, 204.1174, -46.8047, 1001.8047);
			    	case 4: return InteriorTele(playerid, 2, 414.2987, -18.8044, 1001.8047);
			    	case 5: return InteriorTele(playerid, 18, 161.4048, -94.2416, 1001.8047);
			    	case 6: return InteriorTele(playerid, 14, 204.1658, -165.7678, 1000.5234);
			    	case 7: return InteriorTele(playerid, 15, 207.5219, -109.7448, 1005.1328);
			    	case 8: return InteriorTele(playerid, 12, 411.9707, -51.9217, 1001.8984);
			    	case 9: return InteriorTele(playerid, 14, 256.9047, -41.6537, 1002.0234);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 13: //
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: return InteriorTele(playerid, 3, 974.0177, -9.5937, 1001.1484);
			    	case 1: return InteriorTele(playerid, 3, 961.9308, -51.9071, 1001.1172);
			    	case 2: return InteriorTele(playerid, 3, 1212.0762,-28.5799,1000.9531);
			    	case 3: return InteriorTele(playerid, 5, 454.9853, -107.2548, 999.4376);
			    	case 4: return InteriorTele(playerid, 1, 445.6003, -6.9823, 1000.7344);
			    	case 5: return InteriorTele(playerid, 2, 1204.9326,-8.1650,1000.9219);
			    	case 6: return InteriorTele(playerid, 17, 490.2701,-18.4260,1000.6797);
			    	case 7: return InteriorTele(playerid, 4, 449.0172, -88.9894, 999.5547);
			    	case 8: return InteriorTele(playerid, 6, 442.1295, -52.4782, 999.7167);
			    	case 9: return InteriorTele(playerid, 6, 748.4623, 1438.2378, 1102.9531);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 14: //
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0: return InteriorTele(playerid, 3, 1037.8276, 0.397, 1001.2845);
			    	case 1: return InteriorTele(playerid, 18, 1290.4106, 1.9512, 1001.0201);
			    	case 2: return InteriorTele(playerid, 1, 1411.4434,-2.7966,1000.9238);
			    	case 3: return InteriorTele(playerid, 12, 446.3247, 509.9662, 1001.4195);
			    	case 4: return InteriorTele(playerid, 18, -227.5703, 1401.5544, 27.7656);
			    	case 5: return InteriorTele(playerid, 5, 318.5645, 1118.2079, 1083.8828);
			    	case 6: return InteriorTele(playerid, 1, 963.0586, 2159.7563, 1011.0303);
			    	case 7: return InteriorTele(playerid, 3, 1494.8589, 1306.48, 1093.2953);
			    	case 8: return InteriorTele(playerid, 3, -2031.1196, -115.8287, 1035.1719);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 15: //
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: return InteriorTele(playerid, 3, 234.6087, 1187.8195, 1080.2578);
	                case 1: return InteriorTele(playerid, 2, 225.5707, 1240.0643, 1082.1406);
			    	case 2: return InteriorTele(playerid, 1, 224.288, 1289.1907, 1082.1406);
			    	case 3: return InteriorTele(playerid, 5, 239.2819, 1114.1991, 1080.9922);
			    	case 4: return InteriorTele(playerid, 15, 295.1391, 1473.3719, 1080.2578);
			    	case 5: return InteriorTele(playerid, 4, 261.1165, 1287.2197, 1080.2578);
			    	case 6: return InteriorTele(playerid, 10, 24.3769, 1341.1829, 1084.375);
			    	case 7: return InteriorTele(playerid, 4, -262.1759, 1456.6158, 1084.3672);
			    	case 8: return InteriorTele(playerid, 5, 22.861, 1404.9165, 1084.4297);
			    	case 9: return InteriorTele(playerid, 5, 140.3679, 1367.8837, 1083.8621);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 16: //
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: return InteriorTele(playerid, 6, 234.2826, 1065.229, 1084.2101);
			    	case 1: return InteriorTele(playerid, 6, -68.5145, 1353.8485, 1080.2109);
			    	case 2: return InteriorTele(playerid, 15, -285.2511, 1471.197, 1084.375);
			    	case 3: return InteriorTele(playerid, 8, -42.5267, 1408.23, 1084.4297);
					case 4: return InteriorTele(playerid, 9, 84.9244, 1324.2983, 1083.8594);
			    	case 5: return InteriorTele(playerid, 9, 260.7421, 1238.2261, 1084.2578);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 17: //
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0: return InteriorTele(playerid, 6, 234.2826, 1065.229, 1084.2101);
					case 1: return InteriorTele(playerid, 6, 771.8632,-40.5659,1000.6865);
					case 2: return InteriorTele(playerid, 7, 774.0681,-71.8559,1000.6484);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case Int_D + 18:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: return InteriorTele(playerid, 10, 246.40,110.84,1003.22);
					case 1: return InteriorTele(playerid, 6, 246.6695, 65.8039, 1003.6406);
					case 2: return InteriorTele(playerid, 3, 288.4723, 170.0647, 1007.1794);
					case 3: return InteriorTele(playerid, 3, 386.5259, 173.6381, 1008.3828);
				}
			}
			if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
		}
		case SPECIAL_VEHICLE:
	    {
	        if(!response)
				return true;

			switch(listitem)
	        {
	            case 0: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/scar1");
	            case 1: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/scar2");
	            case 2: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/scar3");
	            case 3: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/scar4");
	            case 4: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/scar5");
	            case 5: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/scar6");
	            case 6: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/scar7");
	        }
	        return true;
         }
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_LOGIN_SPASSWORD: // Secondary Password Login
	    {
		    if(response)
		    {
			    StrH[0] = '\0'; eQuery[0] = EOS;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    mysql_escape_string(inputtext, StrH);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s' AND `SPassword` = '%s'", PN(playerid), MD5_Hash(StrH));
				mysql_tquery(SQL, eQuery, "CheckSPassword", "d", playerid);
			}
			if(!response) return SetTimerEx("KickPlayer", 50, false, "d", playerid);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_ADD_SPASSWORD: // Add a Secondary Password
		{
			if(response)
			{
			    StrH[0] = '\0'; mysql_escape_string(inputtext, StrH);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    if(strfind(inputtext[0], "Null", true) == 0) return SendError(playerid, "You cannot use this string!");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    if(strlen(StrH) < 3 || strlen(StrH) > 24)
			    {
			        if(PlayerInfo[playerid][Language] == 1) return SPD(playerid, DIALOG_REGISTER, PASS, "Secondary Password", "{FF0000}Inregistrarea unei Parole Secundare a esuat!\n\n{FFCC00}Ai introdus o parola gresita! Te rugam sa incerci dinnou!\n{FFE100}Lungime parola: {FF0000}Min. 3 - Max. 25 Caractere", "Ok", "Cancel");
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        else if(PlayerInfo[playerid][Language] == 2) return SPD(playerid, DIALOG_ADD_SPASSWORD, PASS, "Secondary Password", "{FF0000}Registering a Secondary Password was failed!\n\n{FFCC00}You have entered a wrong password! Please try again!\n{FFE100}Password length: {FF0000}Min. 3 - Max. 25 Characters", "Ok", "Cancel");
				}
				else
				{
				    new String[128]; eQuery[0] = EOS;
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					format(PlayerInfo[playerid][SPassword], 30, "%s", StrH);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `SPassword` = '%s' WHERE `Name` = '%s'", MD5_Hash(StrH), PN(playerid)),
					mysql_tquery(SQL, eQuery, "", "");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					format(String, sizeof(String), "Secondary password: %s - Remember this password!", StrH);
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    SCM(playerid, YELLOW, String);
				}
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    case DIALOG_FISH:
		{
		    if(response)
		    {
		        if(listitem == 0)
				{
				    if(GetPlayerMoney(playerid) < 3000) return SendError(playerid, "You don't have enough money!");
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Rod] = 1, MSGLang(playerid, YELLOW, "You bought a rod!", "Ai cumparat o undita!"), GivePlayerMoney(playerid, -3000);
				}
		        if(listitem == 1)
				{
				    if(GetPlayerMoney(playerid) < 1000) return SendError(playerid, "You don't have enough money!");
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Bait] = 5, MSGLang(playerid, YELLOW, "You bought 5 routs!", "Ai cumparat 5 râme!"), GivePlayerMoney(playerid, -1000);
				}
			}
		}
		case DIALOG_NEON:
	    {
	        if(response)
            {
                if(listitem == 0)
                {
					if(PlayerNeon[playerid] == 1) return SendError(playerid, "You already have a neon attach on car!");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                SetPVarInt(playerid, "neon", CreateObject(18648,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon1", CreateObject(18648,0,0,0,0,0,0));
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerNeon[playerid] = 1;
                }
                if(listitem == 1)
                {
                    if(PlayerNeon[playerid] == 1) return SendError(playerid, "You already have a neon attach on car!");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                    SetPVarInt(playerid, "neon2", CreateObject(18647,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon3", CreateObject(18647,0,0,0,0,0,0));
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon2"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon3"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerNeon[playerid] = 1;
        		}
                if(listitem == 2)
                {
                    if(PlayerNeon[playerid] == 1) return SendError(playerid, "You already have a neon attach on car!");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            SetPVarInt(playerid, "neon4", CreateObject(18649,0,0,0,0,0,0));
		            SetPVarInt(playerid, "neon5", CreateObject(18649,0,0,0,0,0,0));
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            AttachObjectToVehicle(GetPVarInt(playerid, "neon4"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		            AttachObjectToVehicle(GetPVarInt(playerid, "neon5"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerNeon[playerid] = 1;
	            }
             	if(listitem == 3)
                {
                    if(PlayerNeon[playerid] == 1) return SendError(playerid, "You already have a neon attach on car!");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                SetPVarInt(playerid, "neon6", CreateObject(18652,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon7", CreateObject(18652,0,0,0,0,0,0));
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon6"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon7"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerNeon[playerid] = 1;
        		}
          		if(listitem == 4)
                {
                    if(PlayerNeon[playerid] == 1) return SendError(playerid, "You already have a neon attach on car!");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                SetPVarInt(playerid, "neon8", CreateObject(18651,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon9", CreateObject(18651,0,0,0,0,0,0));
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon8"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon9"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerNeon[playerid] = 1;
        		}
          		if(listitem == 5)
                {
                    if(PlayerNeon[playerid] == 1) return SendError(playerid, "You already have a neon attach on car!");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                SetPVarInt(playerid, "neon10", CreateObject(18650,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon11", CreateObject(18650,0,0,0,0,0,0));
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon10"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon11"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerNeon[playerid] = 1;
        		}
        		if(listitem == 6)
          		{
          		    if(PlayerNeon[playerid] == 1) return SendError(playerid, "You already have a neon attach on car!");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            	SetPVarInt(playerid, "neon12", CreateObject(18648,0,0,0,0,0,0));
	            	SetPVarInt(playerid, "neon13", CreateObject(18648,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon14", CreateObject(18649,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon15", CreateObject(18649,0,0,0,0,0,0));
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon12"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon13"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon14"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon15"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerNeon[playerid] = 1;
        		}
         		if(listitem == 7)
           		{
           		    if(PlayerNeon[playerid] == 1) return SendError(playerid, "You already have a neon attach on car!");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            SetPVarInt(playerid, "neon16", CreateObject(18648,0,0,0,0,0,0));
		            SetPVarInt(playerid, "neon17", CreateObject(18648,0,0,0,0,0,0));
		            SetPVarInt(playerid, "neon18", CreateObject(18652,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon19", CreateObject(18652,0,0,0,0,0,0));
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon16"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon17"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon18"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon19"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerNeon[playerid] = 1;
		        }
		        if(listitem == 8)
          		{
          		    if(PlayerNeon[playerid] == 1) return SendError(playerid, "You already have a neon attach on car!");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                SetPVarInt(playerid, "neon20", CreateObject(18647,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon21", CreateObject(18647,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon22", CreateObject(18652,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon23", CreateObject(18652,0,0,0,0,0,0));
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon20"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon21"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon22"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon23"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerNeon[playerid] = 1;
		        }
	         	if(listitem == 9)
           		{
           		    if(PlayerNeon[playerid] == 1) return SendError(playerid, "You already have a neon attach on car!");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                SetPVarInt(playerid, "neon24", CreateObject(18647,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon25", CreateObject(18647,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon26", CreateObject(18650,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon27", CreateObject(18650,0,0,0,0,0,0));
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon24"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon25"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon26"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon27"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerNeon[playerid] = 1;
		        }
		        if(listitem == 10)
          		{
          		    if(PlayerNeon[playerid] == 1) return SendError(playerid, "You already have a neon attach on car!");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                SetPVarInt(playerid, "neon28", CreateObject(18649,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon29", CreateObject(18649,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon30", CreateObject(18652,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon31", CreateObject(18652,0,0,0,0,0,0));
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon28"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon29"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon30"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon31"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerNeon[playerid] = 1;
		        }
		        if(listitem == 11)
          		{
          		    if(PlayerNeon[playerid] == 1) return SendError(playerid, "You already have a neon attach on car!");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                SetPVarInt(playerid, "neon32", CreateObject(18652,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon33", CreateObject(18652,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon34", CreateObject(18650,0,0,0,0,0,0));
	                SetPVarInt(playerid, "neon35", CreateObject(18650,0,0,0,0,0,0));
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon32"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon33"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon34"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                AttachObjectToVehicle(GetPVarInt(playerid, "neon35"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
                 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerNeon[playerid] = 1;
          		}
				if(listitem == 12)
				{
					DestroyObject(GetPVarInt(playerid, "neon")); DestroyObject(GetPVarInt(playerid, "neon1")); DestroyObject(GetPVarInt(playerid, "neon2")); DestroyObject(GetPVarInt(playerid, "neon3"));
			        DestroyObject(GetPVarInt(playerid, "neon4")); DestroyObject(GetPVarInt(playerid, "neon5")); DestroyObject(GetPVarInt(playerid, "neon6")); DestroyObject(GetPVarInt(playerid, "neon7"));
           			DestroyObject(GetPVarInt(playerid, "neon8")); DestroyObject(GetPVarInt(playerid, "neon9")); DestroyObject(GetPVarInt(playerid, "neon10")); DestroyObject(GetPVarInt(playerid, "neon11"));
			        DestroyObject(GetPVarInt(playerid, "neon12")); DestroyObject(GetPVarInt(playerid, "neon13")); DestroyObject(GetPVarInt(playerid, "neon14")); DestroyObject(GetPVarInt(playerid, "neon15"));
			        DestroyObject(GetPVarInt(playerid, "neon16")); DestroyObject(GetPVarInt(playerid, "neon17")); DestroyObject(GetPVarInt(playerid, "neon18")); DestroyObject(GetPVarInt(playerid, "neon19"));
			        DestroyObject(GetPVarInt(playerid, "neon20")); DestroyObject(GetPVarInt(playerid, "neon21")); DestroyObject(GetPVarInt(playerid, "neon22")); DestroyObject(GetPVarInt(playerid, "neon23"));
           			DestroyObject(GetPVarInt(playerid, "neon24")); DestroyObject(GetPVarInt(playerid, "neon25")); DestroyObject(GetPVarInt(playerid, "neon26")); DestroyObject(GetPVarInt(playerid, "neon27"));
			        DestroyObject(GetPVarInt(playerid, "neon28")); DestroyObject(GetPVarInt(playerid, "neon29")); DestroyObject(GetPVarInt(playerid, "neon30")); DestroyObject(GetPVarInt(playerid, "neon31"));
			        DestroyObject(GetPVarInt(playerid, "neon32")); DestroyObject(GetPVarInt(playerid, "neon33")); DestroyObject(GetPVarInt(playerid, "neon34")); DestroyObject(GetPVarInt(playerid, "neon35"));
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerNeon[playerid] = 0;
                }
            }
	    }
	    case DIALOG_PM:
	    {
	        if(response)
	        {
	 			if(strlen(inputtext) < 0 || strlen(inputtext) > 80) return SendError(playerid, "Invalid Text Lenght!");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else return OnPMReceived(playerid, PlayerInfo[playerid][PMID], inputtext);
			}
		}
		case DIALOG_ADMIN_PM:
	    {
	        if(response)
	        {
	 			if(strlen(inputtext) < 0 || strlen(inputtext) > 80) return SendError(playerid, "Invalid Text Lenght!");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else return OnPMReceivedFromAdmin(playerid, PlayerInfo[playerid][PMID], inputtext);
			}
		}
		case DIALOG_REPLY_ADMIN_PM:
	    {
	        if(response)
	        {
	 			if(strlen(inputtext) < 0 || strlen(inputtext) > 80) return SendError(playerid, "Invalid Text Lenght!");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else return OnPMReplyFromAdmin(playerid, PlayerInfo[playerid][PMID], inputtext);
			}
		}
	    case DIALOG_AREGISTER:
	    {
	        if(!response) return CMD(playerid, "/help");
		}
        case DIALOG_STATS:
		{
		    if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       		new TAB_Cmd[6][30];
       		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			switch(listitem)
			{
			    case 0: return format(TAB_Cmd[0], 30, "/stats %d", PlayerInfo[playerid][ClickedP]), CallLocalFunction("OnPlayerCommandText", "is", playerid, TAB_Cmd[0]);
				case 1: return format(TAB_Cmd[1], 30, "/cinfo %d", PlayerInfo[playerid][ClickedP]), CallLocalFunction("OnPlayerCommandText", "is", playerid, TAB_Cmd[1]);
				case 2: return format(TAB_Cmd[2], 30, "/gstats %d", PlayerInfo[playerid][ClickedP]), CallLocalFunction("OnPlayerCommandText", "is", playerid, TAB_Cmd[2]);
				case 3: return format(TAB_Cmd[3], 30, "/astats %d", PlayerInfo[playerid][ClickedP]), CallLocalFunction("OnPlayerCommandText", "is", playerid, TAB_Cmd[3]);
				case 4: return format(TAB_Cmd[4], 30, "/pm %d", PlayerInfo[playerid][ClickedP]), CallLocalFunction("OnPlayerCommandText", "is", playerid, TAB_Cmd[4]);
				case 5: return format(TAB_Cmd[5], 30, "/spec %d", PlayerInfo[playerid][ClickedP]), CallLocalFunction("OnPlayerCommandText", "is", playerid, TAB_Cmd[5]);
			}
			return true;
		}
		case DIALOG_MRF:
		{
		    if(response)
		    {
				switch(listitem)
				{
				    case 0: return PlayerInfo[playerid][MRFWeaponSelected] = 1, PlayerInfo[playerid][MRFWeapon] = 38, GivePlayerWeapon(playerid, 38, 99999999);
				    case 1: return PlayerInfo[playerid][MRFWeaponSelected] = 1, PlayerInfo[playerid][MRFWeapon] = 35, GivePlayerWeapon(playerid, 35, 99999999);
				    case 2: return PlayerInfo[playerid][MRFWeaponSelected] = 1, PlayerInfo[playerid][MRFWeapon] = 37, GivePlayerWeapon(playerid, 37, 99999999);

				}
			}
			if(!response)
			{
			    new WeaponEx = random(3); switch(WeaponEx)
	            {
                  case 0: PlayerInfo[playerid][MRFWeaponSelected] = 1, PlayerInfo[playerid][MRFWeapon] = 38, GivePlayerWeapon(playerid, 38, 99999999);
                  case 1: PlayerInfo[playerid][MRFWeaponSelected] = 1, PlayerInfo[playerid][MRFWeapon] = 35, GivePlayerWeapon(playerid, 35, 99999999);
                  case 2: PlayerInfo[playerid][MRFWeaponSelected] = 1, PlayerInfo[playerid][MRFWeapon] = 37, GivePlayerWeapon(playerid, 37, 99999999);
	            }
			}
			return true;
		}
		case DIALOG_MINIGAMES:
	    {
	        if(response)
	        {
				switch(listitem)
				{
				    case 0: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/maze");
				    case 1: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/football");
				    case 2: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/hns");
				    case 3: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/stealcar");
				    case 4: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/sumo");
				    case 5: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/skyclimb");
				    case 6: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/targets");
				    case 7: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/sanchez");
				    case 8: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/bmx");
				    case 9: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/fallout");
				}
	        }
	        else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/teles");
		}
		case Stunt_D:
        {
	        if(response)
	        {
	            if(listitem == 0) 	TPToStunt(playerid,1843.689941,1455.381835,11.197062);
				if(listitem == 1) 	TPToStunt(playerid,1838.994873,1586.723144,8.527256);
				if(listitem == 2) 	TPToStunt(playerid,2335.312255,2149.432128,10.249174);
				if(listitem == 3) 	TPToStunt(playerid,1922.183959,2008.699096,10.116531);
				if(listitem == 4) 	TPToStunt(playerid,1943.340087,2199.185791,10.392769);
				if(listitem == 5) 	TPToStunt(playerid,2876.097167,1579.139160,10.393080);
				if(listitem == 6) 	TPToStunt(playerid,-2264.446044,320.152679,34.956920);
				if(listitem == 7) 	TPToStunt(playerid,-2490.424072,441.591400,27.666994);
				if(listitem == 8) 	TPToStunt(playerid,1872.261840,-1427.949462,10.135522);
				if(listitem == 9)	TPToStunt(playerid,-2003.273559,-283.168212,34.892936);
				if(listitem == 10) 	TPToStunt(playerid,2008.712158,900.844909,10.390938);
				if(listitem == 11)	TPToStunt(playerid,2218.766113,2406.661132,10.385766);
				if(listitem == 12)	TPToStunt(playerid,-1795.686645,730.918395,34.581394);
				if(listitem == 13)	TPToStunt(playerid,1536.790649,-1742.266601,13.120272);
				if(listitem == 14)	TPToStunt(playerid, 1855.901489, -1467.969238, 12.967999);
				if(listitem == 15)	TPToStunt(playerid, -2267.8716,-102.2001,35.3203);
				if(listitem == 16)	TPToStunt(playerid, 1874.7556,-1444.6968,13.5510);
				if(listitem == 17)	TPToStunt(playerid, 2066.1096,-1340.9332,23.8203);
				if(listitem == 18)	TPToStunt(playerid, 2140.0549,-2223.0105,13.3899);
				if(listitem == 19)	TPToStunt(playerid, 1453.5579,-1300.2125,13.3828);
				if(listitem == 20)	TPToStunt(playerid, 1618.0244,-1592.3458,13.5469);
				if(listitem == 21)	TPToStunt(playerid, 2168.9238,1213.3776,10.8203);
				if(listitem == 22)	TPToStunt(playerid, 1878.1779,933.1486,10.6719);
				if(listitem == 23)	TPToStunt(playerid, -2291.7871,726.4196,49.4384);
				if(listitem == 24)	TPToStunt(playerid, 1373.9473,-939.9419,34.1875);
				if(listitem == 25)	TPToStunt(playerid, 1338.1860,-1282.4750,13.3828);
				if(listitem == 26)	TPToStunt(playerid, -2706.2795,77.7037,4.2400);
				if(listitem == 27)	TPToStunt(playerid, -1721.1564,1103.3379,45.2969);
				if(listitem == 28)	TPToStunt(playerid, 343.6186,-1467.6818,35.5760);
	        }
	        if(!response) return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/teles");
		}
		case DIALOG_JUMPS:
		{
		    if(response)
		    {
			    switch(listitem)
			    {
					case 0: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/wj");
					case 1: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/jj");
					case 2: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/dj");
					case 3: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/nj");
					case 4: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/tj");
					case 5: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/mj");
					case 6: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/basejump");
					case 7: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/bcar");
				}
			}
			else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/teles");
		}
		case Teles_D:
		{
		    if(response)
		    {
			    switch(listitem)
			    {
			        case 0: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/stunts");
					case 1: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/dm");
					case 2: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/int");
					case 3: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/drifts");
					case 4: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/minigames");
					case 5: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/sz");
					case 6: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/race");
					case 7: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/jumps");
					case 8: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/parkour");
					case 9: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/others");

				}
			}
		}
		case Teles_D + 1: // Stunt Zones
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/aa");
		            case 1: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/sfair");
		            case 2: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/lvair");
		            case 3: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/chilliad");
                    case 4: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/sc");
		            case 5: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/sg");
		            case 6: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/sj");
	                case 7: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/lsair");
		            case 8: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/jj");
		            case 9: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/dam");
		            case 10: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/sstunts");
				}
			}
			else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/teles");
		}
		case Teles_D + 2: // Death Match
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/mg");
		            case 1: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/de");
		            case 2: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/m4");
		            case 3: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/sniper");
		            case 4: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/mrf");
		            case 5: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/prodm");
		            case 6: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/rocket");
		            case 7: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/oh");
		            case 8: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/gg");
				}
			}
			else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/teles");
		}
		case Teles_D + 3: // Others
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:  CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/ls");
		            case 1:  CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/sf");
		            case 2:  CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/lv");
		            case 3:  CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/vinewood");
		            case 4:  CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/beach");
		            case 5:  CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/grove");
					case 6:  CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/planes");
					case 7:  CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/pimps");
				 	case 8: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/lspd");
        			case 9: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/sfpd");
         			case 10: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/lvpd");
        			case 11: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/ramp");
				}
			}
			else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/teles");
		}
		case Teles_D + 5: // Special Zones
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/a51");
					case 1: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/park");
					case 2: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/drag");
					case 3: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/drag2");
					case 4: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/kart");
					case 5: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/as");
					case 6: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/mc");
					case 7: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/th");
					case 8: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/th2");
					case 9: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/interstellar");
					case 10: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/hh");
				}
			}
			else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/teles");
		}
		case Teles_D + 6: // Parkour Zones
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0: CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/quad");
				}
			}
			else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/teles");
		}
		case Drifts_D:
		{
		    if(response)
		    {
		        if(listitem == 0) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/drift");
		        if(listitem == 1) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/drift2");
		        if(listitem == 2) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/drift3");
		        if(listitem == 3) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/drift4");
		        if(listitem == 4) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/drift5");
		        if(listitem == 5) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/drift6");
		        if(listitem == 6) CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/sdrift");
			}
			else return CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/teles");
		}
	    case DIALOG_SPEEDBOOST2:
	    {
	        if(response)
	        {
				switch(listitem)
				{
	   				case 0:
					{
						if(PlayerInfo[playerid][SpeedB] == 0) PlayerInfo[playerid][SpeedSize] = 5, PlayerInfo[playerid][SpeedB] = 1, SpeedTime[playerid] = 10, Announce(playerid, "~w~~H~speed~G~~H~ activated~N~~Y~~H~press~R~~H~ click~Y~~H~ to use!", 4000, 3);
						else if(PlayerInfo[playerid][SpeedB] == 1) PlayerInfo[playerid][SpeedSize] = 0, PlayerInfo[playerid][SpeedB] = 0, SpeedTime[playerid] = 0, Announce(playerid, "~w~~h~speed~R~~H~ deactivated", 4000, 3);
					}
					case 1: Announce(playerid, "~w~~H~Default~G~~H~ speed~W~~H~ limit~N~~W~~H~ is~R~~H~ 10~W~~H~ seconds", 6000, 3);
				}
			}
	        return true;
     	}
		case DIALOG_STAREVENT:
		{
			if(response)
			{
				if(strval(inputtext) >= 1)
			    {
			    	new Float:x, Float:y, Float:z;
			    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                	if(ServerInfo[StarEventStarted] == -1)
					{
						ServerInfo[StarEventStarted] = 1, GetPlayerPos(playerid, x, y, z), ServerInfo[StarID] = CreatePickup(strval(inputtext), 2, x+4, y, z), AdminCMD(playerid, "EVENT #1"), format(eString, sizeof(eString), "'Hidden pickup' event was started! Use /announce to announce the event!"), SCM(playerid, ABLUE, eString), ServerInfo[StarEventAdmin] = playerid, PlayerInfo[playerid][EventsMaded] += 1;
                    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						if(PlayerInfo[playerid][r_Events] == Raport[REvents]) return true;
						else PlayerInfo[playerid][r_Events]++;
					}
	            	else return SendError(playerid, "Sorry, but another Admin already Started a Star Event!");
			  	}
			  	if(strval(inputtext) == 0)
			  	{
                	new Float:x, Float:y, Float:z;
			    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                	if(ServerInfo[StarEventStarted] == -1)
					{
				    	ServerInfo[StarEventStarted] = 1, GetPlayerPos(playerid, x, y, z), ServerInfo[StarID] = CreatePickup(1247, 2, x+4, y, z), AdminCMD(playerid, "EVENT #1"), format(eString, sizeof(eString), "'Hidden pickup' event was started! Use /announce to announce the event!"), SCM(playerid, ABLUE, eString), ServerInfo[StarEventAdmin] = playerid, PlayerInfo[playerid][EventsMaded] += 1;
				    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						if(PlayerInfo[playerid][r_Events] == Raport[REvents]) return true;
						else PlayerInfo[playerid][r_Events]++;
					}
					else return SendError(playerid, "Sorry, but another Admin already Started a Star Event!");
			  	}
			}
			else if(!response) ServerInfo[StarEventStarted] = -1;
		}
	    case DIALOG_C4:
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			    	{
	                	if(PlayerInfo[playerid][Coins] < 10) SCM(playerid, RED, "Sorry, but you don't have enought coins!");
			        	else PlayerInfo[playerid][Coins] -= 10, PlayerInfo[playerid][C4] += 1, SCM(playerid, YELLOW, "You was succesfully purchased 1 C4");
					}
			    	case 1:
			    	{
			        	if(PlayerInfo[playerid][C4] != 0)
			        	{
			        	    if(Planted[playerid] == 1) return SCM(playerid, RED, "Sorry, but you already planted an C4! Please detonate it and try again!");
			        		if(GetPlayerState(playerid) == 1) GetPlayerPos(playerid, bx[playerid], by[playerid], bz[playerid]), Planted[playerid] = 1, SCM(playerid, YELLOW, "C4 has been planted succesfully!");
							else return SCM(playerid, RED, "Sorry, but you need to be in foot to use this option!");
						}
						else return SCM(playerid, RED, "Sorry, but you don't have available C4'S in your account!");
			    	}
			    	case 2:
			    	{
			    	    if(PlantC4Spam[playerid] == 1) return SCM(playerid, RED, "Sorry, but your C4 are already in detonate mode! Please wait a while and try again!");
			    	    if(Planted[playerid] == 1) return SCM(playerid, YELLOW, "C4 will be detonate in 5 seconds!"), PlantC4Spam[playerid] = 1, SetTimerEx("Explode", 5000, false, "i", playerid);
						else return SCM(playerid, RED, "Sorry, but you doesn't planted a C4 to use this option!");
			    	}
				}
        	}
			return true;
		}
		case Question_D:
		{
			if(response)
			{
   				format(ServerInfo[Question], sizeof(ServerInfo[Question]), "%s", inputtext), SPD(playerid, Question_D + 1, INPUT, "{00CC00}Create an event -{FF0000} Question & answer", "{0066FF}Now write below the answer of your question!\n(Example:{FFFF00} Ghost & Johnny is the owner of ESS{0066FF})", "Continue", "Cancel");
			}
		}
		case Question_D + 1:
		{
			if(response)
			{
   				format(ServerInfo[QAnswer], sizeof(ServerInfo[QAnswer]), "%s", inputtext), SPD(playerid, Question_D + 2, INPUT, "{00CC00}Create an event -{FF0000} Question & answer", "{0066FF}Insert below the prize for the winner ({FFFF00}coins{0066FF}).\n{0066FF}The prize has automaticaly give to player!", "Next", "Close");
			}
		}
		case Question_D + 2:
		{
		    if(response)
		    {
				new Str[1024];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(ServerInfo[QReward], sizeof(ServerInfo[QReward]), "%s", inputtext);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				AdminCMD(playerid, "EVENT #4"), PlayerInfo[playerid][EventsMaded] += 1, format(eString, sizeof(eString), "'Question & response' event was started!"), SCM(playerid, ABLUE, eString), ServerInfo[QAdmin] = playerid;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerInfo[playerid][r_Events]++;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				foreach(new i: Player)
				{
				    switch(PlayerInfo[i][Language])
				    {
				        case 1:
				        {
							format(Str, sizeof(Str), "~R~~H~%s~N~~Y~~H~castiga:~G~~H~%s", ServerInfo[Question], ServerInfo[QReward]);
				        }
				        case 2:
				        {
							format(Str, sizeof(Str), "~R~~H~%s~N~~Y~~H~wins:~G~~H~%s", ServerInfo[Question], ServerInfo[QReward]);
				        }
				    }
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    Announce(i, Str, 10000, 1);
					ServerInfo[QStarted] = 1;
				}
			}
		}
		case SkyClimbEvent_D:
		{
		    if(response)
		    {
		        if(ServerInfo[SkyClimbEventStarted] == 1) return false;
		        else
				{
				 	ServerInfo[SkyClimbEventStarted] = 1, ServerInfo[SkyClimbAdmin] = playerid;
				 	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				 	AdminCMD(playerid, "Event #7" ), format(eString, sizeof(eString), "'SkyClimb' event was started! Use /announce to announce the event!"), SCM(playerid, ABLUE, eString);
                  	//----------------------------------------------------------
				}
		    }
		}
		case WhoSayFirst_D:
		{
			if(response)
			{
   				format(ServerInfo[WhoSayFirst], sizeof(ServerInfo[WhoSayFirst]), "%s", inputtext), SPD(playerid, WhoSayFirst_D + 1, INPUT, "{FF0000}Create an event -{00CC00} Who say first {FF0000}?", "{0066FF}Insert below the prize for the winner ({FFFF00}coins{0066FF})\nThis prize needs to be given by you after the event ends!", "Start", "Close");
			}
		}
		case WhoSayFirst_D + 1:
		{
			if(response)
			{
                new Str[1024];
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                format(ServerInfo[WReward], sizeof(ServerInfo[WReward]), "%s", inputtext);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                ServerInfo[WAdmin] = playerid;
    			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                AdminCMD(playerid, "EVENT #5"), PlayerInfo[playerid][EventsMaded] += 1, format(eString, sizeof(eString), "'Who say first' event was started!"), SCM(playerid, ABLUE, eString);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerInfo[playerid][r_Events]++;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				foreach(new i: Player)
				{
					switch(PlayerInfo[i][Language])
					{
			  			case 1:
						{
							format(Str, sizeof(Str), "~G~~H~Cine spune primul~N~~R~~H~%s~N~~Y~~H~castiga:~G~~H~%s", ServerInfo[WhoSayFirst], ServerInfo[WReward]);
				        }
					    case 2:
						{
							format(Str, sizeof(Str), "~G~~H~Who say first~N~~R~~H~%s~N~~Y~~H~wins:~G~~H~%s", ServerInfo[WhoSayFirst], ServerInfo[WReward]);
						}
					}
					Announce(i, Str, 10000, 1);
					ServerInfo[WStarted] = 1;
				}
			}
		}
		case WhoMakeMostKills_D:
		{
			if(response)
			{
			    switch(listitem)
		        {
		        	case 0:
		        	{
                        ShowPlayerDialog(playerid, WhoMakeMostKills_D + 1, DIALOG_STYLE_INPUT, "{FF0000}Create an event -{00CC00} Who makes most kills", "{0066FF}Insert below the amount of kills a player need to make in order to win the event!", "Start", "Close");
		        	}
		        	case 1:
		        	{
			        	ShowPlayerDialog(playerid, WhoMakeMostKills_D + 2, DIALOG_STYLE_INPUT, "{FF0000}Create an event -{00CC00} Who makes most kills", "{0066FF}Insert below the amount of kills a player need to make in order to win the event!", "Start", "Close");
		        	}
		        	case 2:
		        	{
			        	ShowPlayerDialog(playerid, WhoMakeMostKills_D + 3, DIALOG_STYLE_INPUT, "{FF0000}Create an event -{00CC00} Who makes most kills", "{0066FF}Insert below the amount of kills a player need to make in order to win the event!", "Start", "Close");
		        	}
		        	case 3:
		        	{
			        	ShowPlayerDialog(playerid, WhoMakeMostKills_D + 4, DIALOG_STYLE_INPUT, "{FF0000}Create an event -{00CC00} Who makes most kills", "{0066FF}Insert below the amount of kills a player need to make in order to win the event!", "Start", "Close");
		        	}
		        	case 4:
		        	{
			        	ShowPlayerDialog(playerid, WhoMakeMostKills_D + 5, DIALOG_STYLE_INPUT, "{FF0000}Create an event -{00CC00} Who makes most kills", "{0066FF}Insert below the amount of kills a player need to make in order to win the event!", "Start", "Close");
		        	}
		        	case 5:
		        	{
						ShowPlayerDialog(playerid, WhoMakeMostKills_D + 6, DIALOG_STYLE_INPUT, "{FF0000}Create an event -{00CC00} Who makes most kills", "{0066FF}Insert below the amount of kills a player need to make in order to win the event!", "Start", "Close");
		        	}
		        	case 6:
		        	{
						ShowPlayerDialog(playerid, WhoMakeMostKills_D + 7, DIALOG_STYLE_INPUT, "{FF0000}Create an event -{00CC00} Who makes most kills", "{0066FF}Insert below the amount of kills a player need to make in order to win the event!", "Start", "Close");
		        	}
		        	case 7:
		        	{
						ShowPlayerDialog(playerid, WhoMakeMostKills_D + 8, DIALOG_STYLE_INPUT, "{FF0000}Create an event -{00CC00} Who makes most kills", "{0066FF}Insert below the amount of kills a player need to make in order to win the event!", "Start", "Close");
		        	}
		        }

			}
		}
		case WhoMakeMostKills_D + 1:
		{
			if(response)
			{
                  ServerInfo[WhoMakesMostKillsAmmount][1] = strval(inputtext);
                  //------------------------------------------------------------
                  AdminCMD(playerid, "Event #6" ), format(eString, sizeof(eString), "'Who makes most kills' event was started! Use /announce to announce the event!"), SCM(playerid, ABLUE, eString);
                  //------------------------------------------------------------
                  ServerInfo[WhoMakeMostKillsStarted] = 1;
                  ServerInfo[WhoMakeMostKillsType] = 1;
                  //------------------------------------------------------------
                  ServerInfo[WhoMakeMostKillsAdmin] = playerid;
                  //------------------------------------------------------------
			}
		}
		case WhoMakeMostKills_D + 2:
		{
			if(response)
			{
                  ServerInfo[WhoMakesMostKillsAmmount][2] = strval(inputtext);
                  //------------------------------------------------------------
                  AdminCMD(playerid, "Event #6" ), format(eString, sizeof(eString), "'Who makes most kills' event was started! Use /announce to announce the event!"), SCM(playerid, ABLUE, eString);
                  //------------------------------------------------------------
                  ServerInfo[WhoMakeMostKillsStarted] = 1;
                  ServerInfo[WhoMakeMostKillsType] = 2;
                  //------------------------------------------------------------
                  ServerInfo[WhoMakeMostKillsAdmin] = playerid;
                  //------------------------------------------------------------
			}
		}
		case WhoMakeMostKills_D + 3:
		{
			if(response)
			{
                  ServerInfo[WhoMakesMostKillsAmmount][3] = strval(inputtext);
                  //------------------------------------------------------------
                  AdminCMD(playerid, "Event #6" ), format(eString, sizeof(eString), "'Who makes most kills' event was started! Use /announce to announce the event!"), SCM(playerid, ABLUE, eString);
                  //------------------------------------------------------------
                  ServerInfo[WhoMakeMostKillsStarted] = 1;
                  ServerInfo[WhoMakeMostKillsType] = 3;
                  //------------------------------------------------------------
                  ServerInfo[WhoMakeMostKillsAdmin] = playerid;
                  //------------------------------------------------------------
			}
		}
		case WhoMakeMostKills_D + 4:
		{
			if(response)
			{
                  ServerInfo[WhoMakesMostKillsAmmount][4] = strval(inputtext);
                  //------------------------------------------------------------
                  AdminCMD(playerid, "Event #6" ), format(eString, sizeof(eString), "'Who makes most kills' event was started! Use /announce to announce the event!"), SCM(playerid, ABLUE, eString);
                  //------------------------------------------------------------
                  ServerInfo[WhoMakeMostKillsStarted] = 1;
                  ServerInfo[WhoMakeMostKillsType] = 4;
                  //------------------------------------------------------------
                  ServerInfo[WhoMakeMostKillsAdmin] = playerid;
                  //------------------------------------------------------------
			}
		}
		case WhoMakeMostKills_D + 5:
		{
			if(response)
			{
                  ServerInfo[WhoMakesMostKillsAmmount][5] = strval(inputtext);
                  //------------------------------------------------------------
                  AdminCMD(playerid, "Event #6" ), format(eString, sizeof(eString), "'Who makes most kills' event was started! Use /announce to announce the event!"), SCM(playerid, ABLUE, eString);
                  //------------------------------------------------------------
                  ServerInfo[WhoMakeMostKillsStarted] = 1;
                  ServerInfo[WhoMakeMostKillsType] = 5;
                  //------------------------------------------------------------
                  ServerInfo[WhoMakeMostKillsAdmin] = playerid;
                  //------------------------------------------------------------
			}
		}
		case WhoMakeMostKills_D + 6:
		{
			if(response)
			{
                  ServerInfo[WhoMakesMostKillsAmmount][6] = strval(inputtext);
                  //------------------------------------------------------------
                  AdminCMD(playerid, "Event #6" ), format(eString, sizeof(eString), "'Who makes most kills' event was started! Use /announce to announce the event!"), SCM(playerid, ABLUE, eString);
                  //------------------------------------------------------------
                  ServerInfo[WhoMakeMostKillsStarted] = 1;
                  ServerInfo[WhoMakeMostKillsType] = 6;
                  //------------------------------------------------------------
                  ServerInfo[WhoMakeMostKillsAdmin] = playerid;
                  //------------------------------------------------------------
			}
		}
		case WhoMakeMostKills_D + 7:
		{
			if(response)
			{
                  ServerInfo[WhoMakesMostKillsAmmount][7] = strval(inputtext);
                  //------------------------------------------------------------
                  AdminCMD(playerid, "Event #6" ), format(eString, sizeof(eString), "'Who makes most kills' event was started! Use /announce to announce the event!"), SCM(playerid, ABLUE, eString);
                  //------------------------------------------------------------
                  ServerInfo[WhoMakeMostKillsStarted] = 1;
                  ServerInfo[WhoMakeMostKillsType] = 7;
                  //------------------------------------------------------------
                  ServerInfo[WhoMakeMostKillsAdmin] = playerid;
                  //------------------------------------------------------------
			}
		}
		case WhoMakeMostKills_D + 8:
		{
			if(response)
			{
                  ServerInfo[WhoMakesMostKillsAmmount][8] = strval(inputtext);
                  //------------------------------------------------------------
                  AdminCMD(playerid, "Event #6" ), format(eString, sizeof(eString), "'Who makes most kills' event was started! Use /announce to announce the event!"), SCM(playerid, ABLUE, eString);
                  //------------------------------------------------------------
                  ServerInfo[WhoMakeMostKillsStarted] = 1;
                  ServerInfo[WhoMakeMostKillsType] = 8;
                  //------------------------------------------------------------
                  ServerInfo[WhoMakeMostKillsAdmin] = playerid;
                  //------------------------------------------------------------
			}
		}
		case DIALOG_TUNE:
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: return SPD(playerid, DIALOG_PAINTJOBS, LIST, "Paint Jobs", "{0072ff}Paint Job 1\n{ffff00}Paint Job 2\n{ff0000}Paint Job 3\n", "Select", "Cancel"); //Paintjobs
					case 1: return SPD(playerid, DIALOG_COLORS, LIST, "Colors", "{0072FF}Black\n{0072FF}White\n{0072FF}Red\n{FFFF00}Blue\n{FFFF00}Green\n{FF0000}Yellow\n{FF0000}Pink\n{FF0000}Brown\n", "Select", "Cancel");  //Colors
					case 2: return SPD(playerid, DIALOG_EXHAUSTS, LIST, "Exhausts", "{0072FF}Wheel Arch Alien Exhaust\n{FFFF00}Wheel Arch X-Flow Exhaust\n{FFFF00}Locos Low Chromer Exhaust\n{FF0000}Locos Low Slamin Exhaust\n", "Select", "Cancel"); //Exhausts
					case 3: return SPD(playerid, DIALOG_FRONT, LIST, "Front Bumpers", "{0072FF}Wheel Arch Alien bumper\n{FFFF00}Wheel Arch X-Flow bumper\n{FFFF00}Locos Low Chromer bumper\n{FF0000}Locos Low Slamin bumper\n", "Select", "Cancel"); //Front Bumpers
					case 4: return SPD(playerid, DIALOG_REAR, LIST, "Rear Bumpers", "{0072FF}Wheel Arch Alien bumper\n{FFFF00}Wheel Arch X-Flow bumper\n{FFFF00}Locos Low Chromer bumper\n{FF0000}Locos Low Slamin bumper\n", "Select", "Cancel"); //Rear Bumpers
					case 5: return SPD(playerid, DIALOG_ROOFS, LIST, "Roofs", "{0072FF}Wheel Arch Alien Roof Vent\n{FFFF00}Wheel Arch X-Flow Roof Vent\n{FFFF00}Locos Low Hardtop Roof\n{FF0000}Locos Low Softtop Roof\n", "Select", "Cancel"); //Roofs
					case 6: return SPD(playerid, DIALOG_SPOILERS, LIST, "Spoilers", "{0072FF}Alien {FFFF00}Spoiler\n{FFFF00}X-Flow {FF0000}Spoiler\n", "Select", "Cancel"); //Spoilers
					case 7: return SPD(playerid, DIALOG_SIDE, LIST, "SideSkirts", "{0072FF}Wheel Arch Alien Side Skirts\n{0072FF}Wheel Arch X-Flow Side Skirts\n{FFFF00}Locos Low Chrome Strip\n{FFFF00}Locos Low Chrome Flames\n{FFFF00}Locos Low Chrome Arches\n{FF0000}Locos Low Chrome Trim\n{FF0000}Locos Low Wheelcovers\n", "Select", "Cancel"); //SideSkirts
					case 8: return SPD(playerid, DIALOG_BULBARS, LIST, "Bullbars", "{0072FF}Locos Low Chrome Grill\n{FFFF00}Locos Low Chrome Bars\n{FFFF00}Locos Low Chrome Lights\n{FF0000}Locos Low Chrome Bullbar\n", "Select", "Cancel"); //Bullbars
					case 9:
					{
						SPD(playerid, DIALOG_WHEELS, LIST, "Wheels",
																								"{0072FF}Offroad\n\
																								 {0072FF}Mega\n\
																								 {0072FF}Wires\n\
																							 	 {0072FF}Twist\n\
						 																		 {0072FF}Grove\n\
																								 {0072FF}Import\n\
																								 {0072FF}Atomic\n\
																								 {0072FF}Ahab\n\
																								 {0072FF}Virtual\n\
																								 {FFFF00}Access\n\
																								 {FFFF00}Trance\n\
																								 {FFFF00}Shadow\n\
																								 {FFFF00}Rimshine\n\
																								 {FFFF00}Classic\n\
																								 {FFFF00}Cutter\n\
																								 {FFFF00}Switch\n\
																								 {FFFF00}Dollar\n\
																								 {FF0000}Trance\n\
																								 {FF0000}Shadow\n\
																								 {FF0000}Rimshine\n\
																								 {FF0000}Classic\n\
																								 {FF0000}Cutter\n\
																							     {FF0000}Switch\n", "Select", "Cancel"); //Wheels
					}
					case 10: return SPD(playerid, DIALOG_STEREO, LIST, "Car stereo", "{0072FF}Bass Boost\n{FFFF00}Super Bass Boost\n{FFFF00}Ultra Bass Boost\n{FF0000}King Bass Boost\n", "Select", "Exit"); //Car stereo
					case 11: { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1087); }
					case 12: { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1010); }
					case 13: { new car2 = GetPlayerVehicleID(playerid); SetVehicleHealth(car2, 1000); }
				}
			}
		}
		case DIALOG_PAINTJOBS:
		{
			if(response)
			{
				if(listitem == 0)
				{
					if(pmodelid [playerid] == 562 || pmodelid [playerid] == 565 || pmodelid [playerid] == 559 || pmodelid [playerid] == 561 || pmodelid [playerid] == 560 || pmodelid [playerid] == 575 ||
					pmodelid [playerid] == 534 || pmodelid [playerid] == 567 || pmodelid [playerid] == 536 || pmodelid [playerid] == 535 || pmodelid [playerid] == 576 || pmodelid [playerid] == 558)
			   	 	{
						new car2 = GetPlayerVehicleID(playerid); ChangeVehiclePaintjob(car2, 0);
					}
					else SendError(playerid, "This Paintjob is only for Wheel Arch Angel and Loco Low Co. types of cars!");
				}
				if(listitem == 1)
				{
					if(pmodelid [playerid] == 562 || pmodelid [playerid] == 565 || pmodelid [playerid] == 559 || pmodelid [playerid] == 561 || pmodelid [playerid] == 560 || pmodelid [playerid] == 575 ||
					pmodelid [playerid] == 534 || pmodelid [playerid] == 567 || pmodelid [playerid] == 536 || pmodelid [playerid] == 535 || pmodelid [playerid] == 576 || pmodelid [playerid] == 558)
                	{
						new car2 = GetPlayerVehicleID(playerid); ChangeVehiclePaintjob(car2, 1);
					}
					else SendError(playerid, "This Paintjob is only for Wheel Arch Angel and Loco Low Co. types of cars!");
				}
				if(listitem == 2)
				{
					if(pmodelid [playerid] == 562 || pmodelid [playerid] == 565 || pmodelid [playerid] == 559 || pmodelid [playerid] == 561 || pmodelid [playerid] == 560 || pmodelid [playerid] == 575 ||
					pmodelid [playerid] == 534 || pmodelid [playerid] == 567 || pmodelid [playerid] == 536 || pmodelid [playerid] == 535 || pmodelid [playerid] == 576 || pmodelid [playerid] == 558)
			   	 	{
						new car2 = GetPlayerVehicleID(playerid); ChangeVehiclePaintjob(car2, 2);
					}
					else SendError(playerid, "This Paintjob is only for Wheel Arch Angel and Loco Low Co. types of cars!");
				}
			}
		}
		case DIALOG_COLORS:
		{
			if(response)
			{
			    new car2 = GetPlayerVehicleID(playerid);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(listitem == 0) { ChangeVehicleColor(car2, 0, 0); }
				if(listitem == 1) { ChangeVehicleColor(car2, 1, 1); }
				if(listitem == 2) { ChangeVehicleColor(car2, 3, 3); }
				if(listitem == 3) { ChangeVehicleColor(car2, 79, 79); }
				if(listitem == 4) { ChangeVehicleColor(car2, 86 ,86); }
				if(listitem == 5) { ChangeVehicleColor(car2, 6 ,6); }
				if(listitem == 6) { ChangeVehicleColor(car2, 126 ,126); }
				if(listitem == 7) { ChangeVehicleColor(car2, 66 ,66); }
			}
		}
		case DIALOG_EXHAUSTS:
		{
			if(response)
			{
				if(listitem == 0)//Wheel Arch Cars Alien Exausts
				{
	                if(pmodelid [playerid] == 562 || pmodelid [playerid] == 565 || pmodelid [playerid] == 559 || pmodelid [playerid] == 561 || pmodelid [playerid] == 560)
			        {
			            new car2 = GetPlayerVehicleID(playerid);
			            //++++++++++++++++++++++++++++++++++++++++++++++++++++++
			            if(pmodelid [playerid] == 562) AddVehicleComponent(car2, 1034);
						else if(pmodelid[playerid] == 565) AddVehicleComponent(car2, 1046);
						else if(pmodelid [playerid] == 559) AddVehicleComponent(car2, 1065);
						else if(pmodelid [playerid] == 561) AddVehicleComponent(car2, 1064);
						else if(pmodelid [playerid] == 560) AddVehicleComponent(car2, 1028);
						else if(pmodelid [playerid] == 558) AddVehicleComponent(car2, 1089);
		    		}
		  			else SendError(playerid, "You can only add this component to Wheel Arch Angels Car types!");
	            }
				if(listitem == 1)//Wheel Arch Cars X-Flow Exausts
	            {
	                if(pmodelid [playerid] == 562 || pmodelid [playerid] == 565 || pmodelid [playerid] == 559 || pmodelid [playerid] == 561 || pmodelid [playerid] == 560)
	                {
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 562) AddVehicleComponent(car2, 1037);
						else if(pmodelid [playerid] == 565) AddVehicleComponent(car2, 1045);
						else if(pmodelid [playerid] == 559) AddVehicleComponent(car2, 1066);
						else if(pmodelid [playerid] == 561) AddVehicleComponent(car2, 1059);
						else if(pmodelid [playerid] == 560) AddVehicleComponent(car2, 1029);
						else if(pmodelid [playerid] == 558) AddVehicleComponent(car2, 1092);
					}
					else SendError(playerid, "You can only add this component to Wheel Arch Angels Car types!");
	            }
				if(listitem == 2)//Locos Low Co. Cars Chromer Exausts
	            {
	                if(pmodelid [playerid] == 575 || pmodelid [playerid] == 534 || pmodelid [playerid] == 567 || pmodelid [playerid] == 536 || pmodelid [playerid] == 576 || pmodelid [playerid] == 535)
				    {
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 575) AddVehicleComponent(car2, 1044);
						else if(pmodelid [playerid] == 534) AddVehicleComponent(car2, 1126);
						else if(pmodelid [playerid] == 567) AddVehicleComponent(car2, 1129);
						else if(pmodelid [playerid] == 536) AddVehicleComponent(car2, 1104);
						else if(pmodelid [playerid] == 535) AddVehicleComponent(car2, 1113);
						else if(pmodelid [playerid] == 576) AddVehicleComponent(car2, 1136);
					}
					else SendError(playerid, "You can only add this component to Locos Low Car types!");
	            }
				if(listitem == 3)//Locos Low Co. Cars Salmin Exausts
	            {
	                if(pmodelid [playerid] == 575 || pmodelid [playerid] == 534 || pmodelid [playerid] == 567 || pmodelid [playerid] == 536 || pmodelid [playerid] == 576 || pmodelid [playerid] == 535)
				    {
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 575) AddVehicleComponent(car2, 1043);
						else if(pmodelid [playerid] == 534) AddVehicleComponent(car2, 1127);
						else if(pmodelid [playerid] == 567) AddVehicleComponent(car2, 1132);
                        else if(pmodelid [playerid] == 536) AddVehicleComponent(car2, 1105);
						else if(pmodelid [playerid] == 535) AddVehicleComponent(car2, 1114);
						else if(pmodelid [playerid] == 576) AddVehicleComponent(car2, 1135);
	                }
					else SendError(playerid, "You can only add this component to Locos Low Car types!");
	    		}
	    	}
		}
		case DIALOG_FRONT:
	   	{
			if(response)
			{
				if(listitem == 0)//Wheel Arch Cars Alien Front Bumper
				{
					if(pmodelid [playerid] == 562 || pmodelid [playerid] == 565 || pmodelid [playerid] == 559 || pmodelid [playerid] == 561 || pmodelid [playerid] == 560)
					{
						new car2 = GetPlayerVehicleID(playerid);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						if(pmodelid [playerid] == 562) AddVehicleComponent(car2, 1171);
						else if(pmodelid [playerid] == 565) AddVehicleComponent(car2, 1153);
						else if(pmodelid [playerid] == 559) AddVehicleComponent(car2, 1153);
						else if(pmodelid [playerid] == 561) AddVehicleComponent(car2, 1155);
						else if(pmodelid [playerid] == 560) AddVehicleComponent(car2, 1169);
						else if(pmodelid [playerid] == 558) AddVehicleComponent(car2, 1166);
					}
					else SendError(playerid, "You can only add this component to Wheel Arch Angels Car types!");
	            }
				if(listitem == 1)//Wheel Arch Cars X-Flow Front Bumper
	            {
					if(pmodelid [playerid] == 562 || pmodelid [playerid] == 565 || pmodelid [playerid] == 559 || pmodelid [playerid] == 561 || pmodelid [playerid] == 560)
					{
						new car2 = GetPlayerVehicleID(playerid);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 562) AddVehicleComponent(car2, 1172);
						else if(pmodelid [playerid] == 565) AddVehicleComponent(car2, 1152);
						else if(pmodelid [playerid] == 559) AddVehicleComponent(car2, 1173);
						else if(pmodelid [playerid] == 561) AddVehicleComponent(car2, 1157);
						else if(pmodelid [playerid] == 560) AddVehicleComponent(car2, 1170);
						else if(pmodelid [playerid] == 558) AddVehicleComponent(car2, 1165);
					}
                    else SendError(playerid, "You can only add this component to Wheel Arch Angels Car types!");
			    }
				if(listitem == 2)//Locos Low Co. Car Chromer Front Bumper
	            {
	                if(pmodelid [playerid] == 575 || pmodelid [playerid] == 534 || pmodelid [playerid] == 567 || pmodelid [playerid] == 536 || pmodelid [playerid] == 576 || pmodelid [playerid] == 535)
					{
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 575) AddVehicleComponent(car2, 1174);
						else if(pmodelid [playerid] == 534) AddVehicleComponent(car2, 1179);
						else if(pmodelid [playerid] == 567) AddVehicleComponent(car2, 1189);
						else if(pmodelid [playerid] == 536) AddVehicleComponent(car2, 1182);
						else if(pmodelid [playerid] == 535) AddVehicleComponent(car2, 1115);
						else if(pmodelid [playerid] == 576) AddVehicleComponent(car2, 1191);
					}
					else SendError(playerid, "You can only add this component to Locos Low Car types!");
				}
				if(listitem == 3)//Locos Low Co. Salmin Front Bumper
	            {
	                if(pmodelid [playerid] == 575 || pmodelid [playerid] == 534 || pmodelid [playerid] == 567 || pmodelid [playerid] == 536 || pmodelid [playerid] == 576 || pmodelid [playerid] == 576)
				    {
				        new car2 = GetPlayerVehicleID(playerid);
                        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 575) AddVehicleComponent(car2, 1175);
						else if(pmodelid [playerid] == 534) AddVehicleComponent(car2, 1185);
						else if(pmodelid [playerid] == 567) AddVehicleComponent(car2, 1188);
						else if(pmodelid [playerid] == 536) AddVehicleComponent(car2, 1181);
	                    else if(pmodelid [playerid] == 535) AddVehicleComponent(car2, 1116);
						else if(pmodelid [playerid] == 576) AddVehicleComponent(car2, 1190);
					}
					else SendError(playerid, "You can only add this component to Locos Low Car types!");
	            }
	        }
	   	}
		case DIALOG_REAR:
		{
			if(response)
			{
				if(listitem == 0)//Wheel Arch Cars Alien Rear Bumper
				{
	                if(pmodelid [playerid] == 562 || pmodelid [playerid] == 565 || pmodelid [playerid] == 559 || pmodelid [playerid] == 561 || pmodelid [playerid] == 560)
			        {
	                    new car2 = GetPlayerVehicleID(playerid);
	                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
			            if(pmodelid [playerid] == 562) AddVehicleComponent(car2, 1149);
						else if(pmodelid [playerid] == 565) AddVehicleComponent(car2, 1150);
						else if(pmodelid [playerid] == 559) AddVehicleComponent(car2, 1159);
						else if(pmodelid [playerid] == 561) AddVehicleComponent(car2, 1154);
						else if(pmodelid [playerid] == 560) AddVehicleComponent(car2, 1141);
						else if(pmodelid [playerid] == 558) AddVehicleComponent(car2, 1168);
					}
					else SendError(playerid, "You can only add this component to Wheel Arch Angels Car types!");
	            }
				if(listitem == 1)//Wheel Arch Cars X-Flow Rear Bumper
	            {
	                if(pmodelid [playerid] == 562 || pmodelid [playerid] == 565 || pmodelid [playerid] == 559 || pmodelid [playerid] == 561 || pmodelid [playerid] == 560)
			        {
						new car2 = GetPlayerVehicleID(playerid);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 562) AddVehicleComponent(car2, 1149);
						else if(pmodelid [playerid] == 565) AddVehicleComponent(car2, 1151);
						else if(pmodelid [playerid] == 559) AddVehicleComponent(car2, 1161);
						else if(pmodelid [playerid] == 561) AddVehicleComponent(car2, 1156);
						else if(pmodelid [playerid] == 560) AddVehicleComponent(car2, 1140);
						else if(pmodelid [playerid] == 558) AddVehicleComponent(car2, 1167);
					}
					else SendError(playerid, "You can only add this component to Wheel Arch Angels Car types!");
	            }
				if(listitem == 2) //Locos Low Co. Cars Chromer Rear Bumper
	            {
	                if(pmodelid [playerid] == 575 || pmodelid [playerid] == 534 || pmodelid [playerid] == 567 || pmodelid [playerid] == 536 || pmodelid [playerid] == 576 || pmodelid [playerid] == 535)
				    {
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 575) AddVehicleComponent(car2, 1176);
						else if(pmodelid [playerid] == 534) AddVehicleComponent(car2, 1180);
						else if(pmodelid [playerid] == 567) AddVehicleComponent(car2, 1187);
						else if(pmodelid [playerid] == 536) AddVehicleComponent(car2, 1184);
						else if(pmodelid [playerid] == 535) AddVehicleComponent(car2, 1109);
						else if(pmodelid [playerid] == 576) AddVehicleComponent(car2, 1192);
					}
					else SendError(playerid, "You can only add this component to Locos Low Car types!");
	            }
				if(listitem == 3) //Locos Low Co. Cars Salmin Rear Bumper
	            {
	                if(pmodelid [playerid] == 575 || pmodelid [playerid] == 534 || pmodelid [playerid] == 567 || pmodelid [playerid] == 536 || pmodelid [playerid] == 576 || pmodelid [playerid] == 535)
				    {
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 575) AddVehicleComponent(car2, 1177);
						else if(pmodelid [playerid] == 534) AddVehicleComponent(car2, 1178);
						else if(pmodelid [playerid] == 567) AddVehicleComponent(car2, 1186);
						else if(pmodelid [playerid] == 536) AddVehicleComponent(car2, 1183);
						else if(pmodelid [playerid] == 535) AddVehicleComponent(car2, 1110);
						else if(pmodelid [playerid] == 576) AddVehicleComponent(car2, 1193);
	                }
					else SendError(playerid, "You can only add this component to Locos Low Car types!");
	            }
	        }
		}
		case DIALOG_ROOFS:
	   	{
			if(response)
			{
				if(listitem == 0) //Wheel Arch Cars Alien Roof Vent
				{
	                if(pmodelid [playerid] == 562 || pmodelid [playerid] == 565 || pmodelid [playerid] == 559 || pmodelid [playerid] == 561 || pmodelid [playerid] == 560)
			        {
			            new car2 = GetPlayerVehicleID(playerid);
			            //++++++++++++++++++++++++++++++++++++++++++++++++++++++
			            if(pmodelid [playerid] == 562) AddVehicleComponent(car2, 1035);
						else if(pmodelid [playerid] == 565) AddVehicleComponent(car2, 1054);
						else if(pmodelid [playerid] == 559) AddVehicleComponent(car2, 1067);
						else if(pmodelid [playerid] == 561) AddVehicleComponent(car2, 1055);
						else if(pmodelid [playerid] == 560) AddVehicleComponent(car2, 1032);
						else if(pmodelid [playerid] == 558) AddVehicleComponent(car2, 1088);
					}
					else SendError(playerid, "You can only add this component to Wheel Arch Angels Car types!");
	            }
		        if(listitem == 1) //Wheel Arch Cars X-Flow Roof Vent
				{
	                if(pmodelid [playerid] == 562 || pmodelid [playerid] == 565 || pmodelid [playerid] == 559 || pmodelid [playerid] == 561 || pmodelid [playerid] == 560)
			        {
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 562) AddVehicleComponent(car2, 1035);
						else if(pmodelid [playerid] == 565) AddVehicleComponent(car2, 1053);
						else if(pmodelid [playerid] == 559) AddVehicleComponent(car2, 1068);
						else if(pmodelid [playerid] == 561) AddVehicleComponent(car2, 1061);
						else if(pmodelid [playerid] == 560) AddVehicleComponent(car2, 1033);
						else if(pmodelid [playerid] == 558) AddVehicleComponent(car2, 1091);
					}
					else SendError(playerid, "You can only add this component to Wheel Arch Angels Car types!");
				}
				if(listitem == 2) //Locos Low Co. Cars Hardtop Roof
				{
	                if(pmodelid [playerid] == 567 || pmodelid [playerid] == 536)
				    {
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 567) AddVehicleComponent(car2, 1130);
		   				else if(pmodelid [playerid] == 536) AddVehicleComponent(car2, 1128);
					}
					else SendError(playerid, "You can only add this component to Locos Low Car types Savanna and Blade!");
	            }
			    if(listitem == 3) //Locos Low Co. Cars Softtop Roof
				{
	                if(pmodelid [playerid] == 567 || pmodelid [playerid] == 536)
				    {
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 567) AddVehicleComponent(car2, 1131);
		   				else if(pmodelid [playerid] == 536) AddVehicleComponent(car2, 1103);
					}
					else SendError(playerid, "You can only add this component to Locos Low Car types Savanna and Blade!");
	            }
			}
		}
		case DIALOG_SPOILERS:
	   	{
			if(response)
			{
				if(listitem == 0)//Wheel Arch Cars Alien Spoilers
				{
	                if(pmodelid [playerid] == 562 || pmodelid [playerid] == 565 || pmodelid [playerid] == 559 || pmodelid [playerid] == 561 || pmodelid [playerid] == 560)
			        {
			            new car2 = GetPlayerVehicleID(playerid);
			            //++++++++++++++++++++++++++++++++++++++++++++++++++++++
			            if(pmodelid [playerid] == 562) AddVehicleComponent(car2, 1147);
						else if(pmodelid [playerid] == 565) AddVehicleComponent(car2, 1049);
						else if(pmodelid [playerid] == 559) AddVehicleComponent(car2, 1162);
						else if(pmodelid [playerid] == 561) AddVehicleComponent(car2, 1158);
						else if(pmodelid [playerid] == 560) AddVehicleComponent(car2, 1138);
						else if(pmodelid [playerid] == 558) AddVehicleComponent(car2, 1164);
					}
					else SendError(playerid, "You can only add this component to Wheel Arch Angels Car types!");
	    	    }
	            if(listitem == 1)//Wheel Arch Cars X-Flow Spoilers
				{
	                if(pmodelid [playerid] == 562 || pmodelid [playerid] == 565 || pmodelid [playerid] == 559 || pmodelid [playerid] == 561 || pmodelid [playerid] == 560)
			        {
	                    new car2 = GetPlayerVehicleID(playerid);
	                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 562) AddVehicleComponent(car2, 1146);
						else if(pmodelid [playerid] == 565) AddVehicleComponent(car2, 1150);
						else if(pmodelid [playerid] == 559) AddVehicleComponent(car2, 1158);
						else if(pmodelid [playerid] == 561) AddVehicleComponent(car2, 1060);
						else if(pmodelid [playerid] == 560) AddVehicleComponent(car2, 1139);
						else if(pmodelid [playerid] == 558) AddVehicleComponent(car2, 1163);
					}
					else SendError(playerid, "You can only add this component to X-Flow Arch Angels Car types!");
	            }
			}
		}
		case DIALOG_SIDE:
	   	{
			if(response)
			{
				if(listitem == 0)//Wheel Arch Cars Alien Sideskirts
				{
	                if(pmodelid [playerid] == 562 || pmodelid [playerid] == 565 || pmodelid [playerid] == 559 || pmodelid [playerid] == 561 || pmodelid [playerid] == 560)
			        {
			            new car2 = GetPlayerVehicleID(playerid);
               			//++++++++++++++++++++++++++++++++++++++++++++++++++++++
			            if(pmodelid [playerid] == 562) 	AddVehicleComponent(car2, 1036), AddVehicleComponent(car2, 1040);
						else if(pmodelid [playerid] == 565) AddVehicleComponent(car2, 1047), AddVehicleComponent(car2, 1051);
						else if(pmodelid [playerid] == 559) AddVehicleComponent(car2, 1069), AddVehicleComponent(car2, 1071);
						else if(pmodelid [playerid] == 561) AddVehicleComponent(car2, 1056), AddVehicleComponent(car2, 1062);
						else if(pmodelid [playerid] == 560) AddVehicleComponent(car2, 1026), AddVehicleComponent(car2, 1027);
						else if(pmodelid [playerid] == 558) AddVehicleComponent(car2, 1090), AddVehicleComponent(car2, 1094);
					}
					else SendError(playerid, "You can only add this component to Wheel Arch Angels Car types!");
			    }
		   	    if(listitem == 1)//Wheel Arch Cars X-Flow Sideskirts
				{
	                if(pmodelid [playerid] == 562 || pmodelid [playerid] == 565 || pmodelid [playerid] == 559 || pmodelid [playerid] == 561 || pmodelid [playerid] == 560)
			        {
					    new car2 = GetPlayerVehicleID(playerid);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 562) AddVehicleComponent(car2, 1039), AddVehicleComponent(car2, 1041);
						else if(pmodelid [playerid] == 565) AddVehicleComponent(car2, 1048), AddVehicleComponent(car2, 1052);
						else if(pmodelid [playerid] == 559) AddVehicleComponent(car2, 1070), AddVehicleComponent(car2, 1072);
						else if(pmodelid [playerid] == 561) AddVehicleComponent(car2, 1057), AddVehicleComponent(car2, 1063);
						else if(pmodelid [playerid] == 560) AddVehicleComponent(car2, 1031), AddVehicleComponent(car2, 1030);
						else if(pmodelid [playerid] == 558) AddVehicleComponent(car2, 1093), AddVehicleComponent(car2, 1095);
					}
					else SendError(playerid, "You can only add this component to Wheel Arch Angels Car types!");
			    }
			    if(listitem == 2)//Locos Low Co. Cars Chrome Strip Sideskirts
				{
	   				if(pmodelid [playerid] == 575 || pmodelid [playerid] == 536 || pmodelid [playerid] == 576 || pmodelid [playerid] == 567)
					{
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 575) AddVehicleComponent(car2, 1042), AddVehicleComponent(car2, 1099);
		   				else if(pmodelid [playerid] == 567) AddVehicleComponent(car2, 1102), AddVehicleComponent(car2, 1133);
		                else if(pmodelid [playerid] == 576) AddVehicleComponent(car2, 1134), AddVehicleComponent(car2, 1137);
		                else if(pmodelid [playerid] == 536) AddVehicleComponent(car2, 1108), AddVehicleComponent(car2, 1107);
					}
					else SendError(playerid, "You can only add this component to Locos Low Car types Brodway, Savanna Tornado and Blade!");
		        }
		  	    if(listitem == 3)//Locos Low Co. Cars Chrome Flames Sideskirts
				{
	                if(pmodelid [playerid] == 534 || pmodelid [playerid] == 534)
				    {
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 534) AddVehicleComponent(car2, 1122), AddVehicleComponent(car2, 1101);
					}
					else SendError(playerid, "You can only add this component to Locos Low Car type Remington!");
				}
				if(listitem == 4)//Locos Low Co. Cars Chrome Arches Sideskirts
				{
	                if(pmodelid [playerid] == 534 || pmodelid [playerid] == 534)
				    {
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 534) AddVehicleComponent(car2, 1106), AddVehicleComponent(car2, 1124);
					}
					else SendError(playerid, "You can only add this component to Locos Low Car type Remington!");
				}
				if(listitem == 5)//Locos Low Co. Cars Chrome Trim Sideskirts
				{
	                if(pmodelid [playerid] == 535)
				    {
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 535) AddVehicleComponent(car2, 1118), AddVehicleComponent(car2, 1120);
					}
					else SendError(playerid, "You can only add this component to Locos Low Car type Slamvan!");
				}
				if(listitem == 6)//Locos Low Co. Cars Chrome Wheelcovers Sideskirts
				{
	                if(pmodelid [playerid] == 535)
				    {
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 535) AddVehicleComponent(car2, 1119), AddVehicleComponent(car2, 1121);
					}
					else SendError(playerid, "You can only add this component to Locos Low Car type Slamvan!");
				}
			}
		}
		case DIALOG_BULBARS:
	   	{
			if(response)
			{
				if(listitem == 0)//Locos Low Co. Cars Chrome Grill
				{
	                if(pmodelid [playerid] == 534)
				    {
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 534) AddVehicleComponent(car2, 1100);
					}
					else SendError(playerid, "You can only add this component to Locos Low Car type Remington!");
				}
				if(listitem == 1)//Locos Low Co. Cars Chrome Bars
				{
					if(pmodelid [playerid] == 534)
				    {
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 534) AddVehicleComponent(car2, 1123);
					}
					else SendError(playerid, "You can only add this component to Locos Low Car type Remington!");
				}
				if(listitem == 2)//Locos Low Co. Cars Chrome Lights
				{
	                if(pmodelid [playerid] == 534)
				    {
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 534) AddVehicleComponent(car2, 1125);
					}
					else SendError(playerid, "You can only add this component to Locos Low Car type Remington!");
				}
				if(listitem == 3)//Locos Low Co. Cars Chrome Bullbar
				{
	                if(pmodelid [playerid] == 535)
				    {
				        new car2 = GetPlayerVehicleID(playerid);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        if(pmodelid [playerid] == 535) AddVehicleComponent(car2, 1117);
					}
					else SendError(playerid, "You can only add this component to Locos Low Car type Slamvan!");
				}
			}
		}
		case DIALOG_WHEELS:
	   	{
			if(response)
			{
				if(listitem == 0) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1025); }
	            if(listitem == 1) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1074); }
	            if(listitem == 2) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1076); }
		        if(listitem == 3) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1078); }
				if(listitem == 4) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1081); }
				if(listitem == 5) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1082); }
				if(listitem == 6) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1085); }
				if(listitem == 7) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1096); }
				if(listitem == 8) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1097); }
				if(listitem == 9) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1098); }
				if(listitem == 10) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1084); }
	            if(listitem == 11) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1073); }
	            if(listitem == 12) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1075); }
	            if(listitem == 13) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1077); }
	            if(listitem == 14) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1079); }
	            if(listitem == 15) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1080); }
	            if(listitem == 16) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1083); }
	            if(listitem == 17) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1084); }
	            if(listitem == 18) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1073); } //PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0); - Sa nu uit cacatul asta:))
	            if(listitem == 19) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1075); }
	            if(listitem == 20) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1077); }
	            if(listitem == 21) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1079); }
	            if(listitem == 22) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1080); }
			}
		}
		case DIALOG_STEREO:
	   	{
			if(response)
			{
				if(listitem == 0) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1086); }
				if(listitem == 1) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1086); }
				if(listitem == 2) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1086); }
				if(listitem == 3) { new car2 = GetPlayerVehicleID(playerid); AddVehicleComponent(car2, 1086); }
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// Clan Settings
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CLAN_SETTINGS:
		{
		    if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    switch(listitem)
	        {
	            case 0: SPD(playerid, DIALOG_CLAN_SETTINGS+1, INPUT, "{FF0000}Clan Settings - Name", "{FFE600}Type below the new name for your Clan:", "Change", "Close");
			    case 1: SPD(playerid, DIALOG_CLAN_SETTINGS+2, INPUT, "{FF0000}Clan Settings - Skin", "{FFE600}Type below the new Skin ID for your Clan:", "Change", "Close");
			    case 2: SPD(playerid, DIALOG_CLAN_SETTINGS+3, INPUT, "{FF0000}Clan Settings - Color", "{FFE600}Type below the new color of clan by 'Hex-Color':", "Change", "Close");
				case 3: SPD(playerid, DIALOG_CLAN_SETTINGS+4, LIST, "{FF0000}Clan Settings - Weapons {FFFFFF}#1", "{00CC00}Brass Knuckles\n{0091FF}Gold Club\n{FFE600}Nightstick\n{00CC00}Knife\n{0091FF}BaseBall\n{FFE600}Shovel\n{00CC00}Pool Cue\n{0091FF}Katana\n{FFE600}Chainsaw", "Next", "Exit");
				case 4:
	            {
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                    new reset[500];
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    format(reset, sizeof(reset),
					"Option                          \tDescription\n\
				    {FF0000}Reset Members            \t{FFFFFF}All members will be kicked from this Clan\n\
				    {FF0000}Reset Co-Leaders         \t{FFFFFF}All co-leaders will be kicked from this Clan\n\
				    {FF0000}Reset Leaders            \t{FFFFFF}All leaders will be kicked from this Clan\n\
				    {FF0000}Reset All                \t{FFFFFF}All members, co-leaders and leaders will be kicked from this Clan\n\
				    {FF0000}Custom Reset             \t{FFFFFF}Reset by Clan Points");
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    SPD(playerid, DIALOG_CLAN_SETTINGS+5, HEADERS, "{FF0000}Clan Resetting", reset, "Select", "Close");
				}
				case 5:
				{
				    SPD(playerid, DIALOG_CLAN_SETTINGS+10, MSGBOX, "{FFFFFF}Clan Update - Price {FF0000}100 Gems{FFFFFF}!", "{00FF22}Salut, esti nerabdator sa iti actualizezi clanul? Iti vom oferi posibilitatea sa ti-l poti actualiza\nLa stadiul de Premium!\n\n\
					{FFFF00}Esti pe cale sa iti actualizezi clanul la stadiul de '{FF0000}Premium{FFFF00}'\n\
					{FFFF00}Pentru a putea merge mai departe trebuie sa deti ({FF0000}100 Gems{FFFF00}) in cont si sa fi fondatorul clanului!\n\n\
					{FF9900}Pentru a putea merge mai departe apasa pe butonul '{FF0000}Continue{FF9900}'!", "Continue", "Close");
				}
			}
	        return true;
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CLAN_SETTINGS+1:
		{
		    if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            eString[0] = EOS;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(strlen(inputtext) < 4 || strlen(inputtext) > 30) return SCM(playerid, RED,"ERROR: Invalid name size! Only between 4 and 30 characters!");
			if(strfind(inputtext, "'", true) != -1) return SCM(playerid, RED, "You can't type in the Clan name symbol: (')!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            format(Clan[PlayerInfo[playerid][ClanID]][ClanName], 30, "%s", inputtext);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            format(PlayerInfo[playerid][ClanName], 30, "%s", inputtext);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            UpdateNEx("Clans", "Name", inputtext, PlayerInfo[playerid][ClanID]);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        format(eString, sizeof(eString), "~w~~h~Clan Name changed to: ~n~~g~~h~~h~%s", inputtext);
		    Announce(playerid, eString, 4000, 3);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    UpdateClan3D();
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CLAN_SETTINGS+2:
		{
		    if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            eString[0] = EOS;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(strval(inputtext) < 1 || strval(inputtext) > 311) return SendError(playerid, "Invalid skin ID! Only between 1 and 311 ID's!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            Clan[PlayerInfo[playerid][ClanID]][Skin] = strval(inputtext);
            PlayerInfo[playerid][c_Skin] = strval(inputtext);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        format(eString, sizeof(eString), "~w~~h~Clan Skin~n~~w~~h~ changed to:~g~~h~~h~ %d", strval(inputtext));
		    Announce(playerid, eString, 4000, 3);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    UpdateClan("Skin", strval(inputtext), PlayerInfo[playerid][ClanID]);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        foreach(new i : Player)
	        {
    			if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID])
		        {
					SetPlayerSkin(i, strval(inputtext));
		        }
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CLAN_SETTINGS+3:
		{
		    if(!response) return true; eQuery[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(strlen(inputtext) != 6) return SPD(playerid, DIALOG_CLAN_SETTINGS+3, INPUT, "{FF0000}Clan Settings - Color", "{FFE600}Type below the new color of Clan by 'Hex-Color':", "Change", "Close");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(sscanf(inputtext, "h", inputtext[0])) return SPD(playerid, DIALOG_CLAN_SETTINGS+3, INPUT, "{FF0000}Clan Settings - Color", "{FFE600}Type below the new color of Clan by 'Hex-Color':", "Change", "Close");
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            inputtext[4] = (inputtext[0] * 256) + 0xAA;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            Clan[PlayerInfo[playerid][ClanID]][ClanColor] = inputtext[4];
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Clans` SET `Color` = '%d' WHERE `ID` = '%d'", inputtext[4], PlayerInfo[playerid][ClanID]);
            mysql_tquery(SQL, eQuery, "", "");
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            foreach(new i : Player)
            {
				if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID])
				{
					inputtext[2] = (inputtext[0] * 256) + 0xAA;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SetPlayerColor(i, inputtext[2]), Announce(playerid, "~w~~h~Clan Color ~n~~g~~h~~h~Updated!", 4000, 4);
		        }
		    }
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    UpdateClan3D();
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CLAN_SETTINGS+4:
		{
		    if(response)
		    {
		        new wslot[] = {1,2,3,4,5,6,7,8,9};
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        foreach(Player, i) if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID]) GivePlayerWeapon(i, wslot[listitem], 9999), Clan[PlayerInfo[playerid][ClanID]][Weapon][0] = wslot[listitem];
		        return SPD(playerid, DIALOG_CLAN_SETTINGS+5, 2, "{FF0000}Clan Settings - Weapons {FFFFFF}#2", "{00CC00}Pistol\n{0091FF}Silenced Pistol\n{FFE600}Desert Eagle", "Next Slot", "Cancel");
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CLAN_SETTINGS+5:
		{
		    if(response)
		    {
		        new wslot[]= {22,23,24};
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				foreach(Player, i) if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID]) GivePlayerWeapon(i, wslot[listitem], 9999), Clan[PlayerInfo[playerid][ClanID]][Weapon][1] = wslot[listitem];
		        return SPD(playerid, DIALOG_CLAN_SETTINGS+6, 2, "{FF0000}Clan Settings - Weapons {FFFFFF}#3", "{00CC00}ShotGun\n{0091FF}Sawn-Off-Shotgun\n{FFE600}SPAZ-12", "Next Slot", "Cancel");
    		}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CLAN_SETTINGS+6:
		{
		    if(response)
		    {
		        new wslot[]= {25,26,27};
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				foreach(Player, i) if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID]) GivePlayerWeapon(i, wslot[listitem], 9999), Clan[PlayerInfo[playerid][ClanID]][Weapon][2] = wslot[listitem];
				return SPD(playerid, DIALOG_CLAN_SETTINGS+7, 2, "{FF0000}Clan Settings - Weapons {FFFFFF}#4", "{00CC00}Micro UZI\n{0091FF}MP5\n{FFE600}TEC-9", "Next", "Cancel");
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CLAN_SETTINGS+7:
		{
		    if(response)
		    {
		        new wslot[]= {28,29,32};
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				foreach(Player, i) if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID]) GivePlayerWeapon(i, wslot[listitem], 9999), Clan[PlayerInfo[playerid][ClanID]][Weapon][3] = wslot[listitem];
		        return SPD(playerid, DIALOG_CLAN_SETTINGS+8, 2, "{FF0000}Clan Settings - Weapons {FFFFFF}#5", "{00CC00}AK-47\n{0091FF}M4", "Next", "Cancel");
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CLAN_SETTINGS+8:
		{
		    if(response)
			{
	        	new wslot[]= {30,31};
	        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				foreach(Player, i) if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID]) GivePlayerWeapon(i, wslot[listitem], 9999), Clan[PlayerInfo[playerid][ClanID]][Weapon][4] = wslot[listitem];
				return SPD(playerid, DIALOG_CLAN_SETTINGS+9, 2, "{FF0000}Clan Settings - Weapons {FFFFFF}#6", "{00CC00}Country Rifle\n{0091FF}Sniper Rifle", "Next", "Cancel");
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CLAN_SETTINGS+9:
		{
		    if(response)
			{
		        new wslot[]= {33,34};
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				foreach(new i : Player)
				{
					if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID])
					{
			 			GivePlayerWeapon(i, wslot[listitem], 9999), Clan[PlayerInfo[playerid][ClanID]][Weapon][5] = wslot[listitem];
	            		Announce(playerid, "~w~~h~Clan Weapons ~n~~g~~h~~h~updated~w~~h~!", 4000, 3);
			            //++++++++++++++++++++++++++++++++++++++++++++++++++++++
			            UpdateClan("W1", Clan[PlayerInfo[playerid][ClanID]][Weapon][0], PlayerInfo[playerid][ClanID]);
			            UpdateClan("W2", Clan[PlayerInfo[playerid][ClanID]][Weapon][1], PlayerInfo[playerid][ClanID]);
		                UpdateClan("W3", Clan[PlayerInfo[playerid][ClanID]][Weapon][2], PlayerInfo[playerid][ClanID]);
		                UpdateClan("W4", Clan[PlayerInfo[playerid][ClanID]][Weapon][3], PlayerInfo[playerid][ClanID]);
		                UpdateClan("W5", Clan[PlayerInfo[playerid][ClanID]][Weapon][4], PlayerInfo[playerid][ClanID]);
		                UpdateClan("W6", Clan[PlayerInfo[playerid][ClanID]][Weapon][5], PlayerInfo[playerid][ClanID]);
					}
				}
			}
			return true;
		}
		case DIALOG_CLAN_SETTINGS+10:
		{
		    if(response)
			{
			    if(Clan[PlayerInfo[playerid][ClanID]][ClanLevel] == 2) return SendError(playerid, "Your clan are be already in stage 'Premium'!");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    if(PlayerInfo[playerid][Gems] < 100) return SendError(playerid, "You are not have enough gems to upgrade your clan to stage 'Premium'!");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] - 100);
			    PlayerInfo[playerid][Gems] -= 100;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    Clan[PlayerInfo[playerid][ClanID]][ClanLevel] = 2;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    UpdateClan("Level", Clan[PlayerInfo[playerid][ClanID]][ClanLevel], PlayerInfo[playerid][ClanID]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    UpdateClan3D(), Announce(playerid, "~w~~h~Clan Stage ~n~~g~~h~~h~updated to ~r~~h~premium!~w~~h~!", 4000, 3);
			}
		}
		case DIALOG_EVENTS:
		{
			if(!response) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            switch(listitem)
            {
			    case 0:
			    {
			     	if(ServerInfo[StarEventStarted] == -1)
	             	{
			       		if(response)
		           		{
		              		new sestr[300];
		              		//++++++++++++++++++++++++++++++++++++++++++++++++++
		              		if(listitem == 0)
                      		{
				          		ServerInfo[PrizeID] = 0;
				          		//++++++++++++++++++++++++++++++++++++++++++++++
					      		strcat(sestr, "{0066FF}A hidden pickup ({FFFF00}Star{0066FF}) will be placed in front of you.\nIf you want to place another pickup istead of a star, type below it's ID.");
					      		//++++++++++++++++++++++++++++++++++++++++++++++
					      		SPD(playerid, DIALOG_STAREVENT, INPUT, "{FF0000}Create an event -{00CC00} Hidden Pickup", sestr, "Yes", "Cancel");
				      		}
		            	}
				 	}
				 	else ServerInfo[StarEventStarted] = -1, DestroyPickup(ServerInfo[StarID]), AdminCMD(playerid, "EVENT STOP"), format(eString, sizeof(eString), "'Hidden pickup' event was stopped by Admin!"), MessageToAdmins(ABLUE, eString);
				}
                case 1:
                {
					if(ServerInfo[ReactionTest] == 1) return ServerInfo[ReactionTest] = 0, AdminCMD(playerid, "EVENT STOP"), format(eString, sizeof(eString), "'Reaction test' event was stopped by Admin!"), MessageToAdmins(ABLUE, eString);
				 	{
						AdminCMD(playerid, "EVENT #2");
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						Contest_Function(0), PlayerInfo[playerid][PReactions]++;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						ServerInfo[ReactionTest] = 1, PlayerInfo[playerid][EventsMaded] += 1;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						if(PlayerInfo[playerid][r_Events] == Raport[REvents]) return true;
						else PlayerInfo[playerid][r_Events]++;
                 	}
                }
                case 2:
                {
					if(ServerInfo[MathTest] == 1) return ServerInfo[MathTest] = 0, AdminCMD(playerid, "EVENT STOP"), format(eString, sizeof(eString), "'Math test' event was stopped by Admin!"), MessageToAdmins(ABLUE, eString);
				 	{
						AdminCMD(playerid, "EVENT #3");
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						Contest_Function(1), PlayerInfo[playerid][PMaths]++, ServerInfo[MathTest] = 1, PlayerInfo[playerid][EventsMaded] += 1;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						if(PlayerInfo[playerid][r_Events] == Raport[REvents]) return true;
						else PlayerInfo[playerid][r_Events]++;
                 	}
                }
				case 3:
				{
					if(ServerInfo[QStarted] == 1) return ServerInfo[QStarted] = 0, AdminCMD(playerid, "EVENT STOP"), format(eString, sizeof(eString), "'Question & answer' event was stopped by Admin!"), MessageToAdmins(ABLUE, eString);
				 	{
				   		SPD(playerid, Question_D, INPUT, "{FF0000}Create an event -{00CC00} Question & answer", "{0066FF}Insert below a question which you want to put to the players!\n(Example:{FFFF00} Who is the owner of ESS ?{0066FF})", "Continue", "Close");
				 	}
				}
				case 4:
				{
				 	if(ServerInfo[WStarted] == 1) return ServerInfo[WStarted] = 0, AdminCMD(playerid, "EVENT STOP"), format(eString, sizeof(eString), "'Who say first' event was stopped by Admin!"), MessageToAdmins(ABLUE, eString);
				 	{
				   		SPD(playerid, WhoSayFirst_D, INPUT, "{FF0000}Create an event -{00CC00} Who say first {FF0000}?", "{0066FF}Insert below a world which you want to be said!\n(Example:{FFFF00} I'm the best!{0066FF})", "Continue", "Close");
				 	}
				}
				case 5:
				{
				 	if(ServerInfo[WhoMakeMostKillsStarted] == 1) return ServerInfo[WhoMakeMostKillsStarted] = 0, AdminCMD(playerid, "EVENT STOP"), format(eString, sizeof(eString), "'Who makes most kills' event was stopped by Admin!"), MessageToAdmins(ABLUE, eString);
				 	{
				   		SPD(playerid, WhoMakeMostKills_D, LIST, "{FF0000}Create an event -{00CC00} Who makes most kills {FF0000}at:", "{0066FF}Minigun - {00CC00}/minigun\n{0066FF}M4 Death Match - {00CC00}/m4\n{0066FF}Rocket Death Match - {00CC00}/rocket\n{0066FF}Sniper Death Match - {00CC00}/sniper\n{0066FF}Minigun-Rocket-Flame - {00CC00}/mrf\n{0066FF}Deagle Death Match - {00CC00}/de\n{0066FF}Pro Death Match - {00CC00}/prodm\n{0066FF}Targets - {00CC00}/targets", "Select", "Close");
				 	}
				}
				case 6:
				{
				    if(ServerInfo[SkyClimbEventStarted] == 1) return ServerInfo[SkyClimbEventStarted] = 0, AdminCMD(playerid, "EVENT STOP"), format(eString, sizeof(eString), "'SkyClimb' event was stopped by Admin!"), MessageToAdmins(ABLUE, eString);
				    {
				        SPD(playerid, SkyClimbEvent_D, MSGBOX, "{FF0000}Create an event -{00CC00} SkyClimb {FF0000}?", "{0066FF}Do you really want to start the SkyClimb event?", "Yes", "No");
				    }
				}
            }
		}
	    case DIALOG_BIGWEAPONS:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    if(PlayerInfo[playerid][Coins] < 200) return SendError(playerid, "Don't have enough coins! You need 200 coins.");
			            else return GivePlayerWeapon(playerid, 35, 5), PlayerInfo[playerid][Coins] -= 200, SCM(playerid, YELLOW, "You bought an Rocket Launcher for 200 coins.");
					}
					case 1:
					{
					    if(PlayerInfo[playerid][Coins] < 500) return SendError(playerid, "Don't have enough coins! You need 500 coins.");
			            else return GivePlayerWeapon(playerid, 37, 2000), PlayerInfo[playerid][Coins] -= 500, SCM(playerid, YELLOW, "You bought an HS Rocket Launcher for 500 coins.");
					}
					case 2:
					{
					    if(PlayerInfo[playerid][Coins] < 300) return SendError(playerid, "Don't have enough coins! You need 300 coins.");
			            else return GivePlayerWeapon(playerid, 36, 5), PlayerInfo[playerid][Coins] -= 300, SCM(playerid, YELLOW, "You bought an Flame Thrower for 300 coins.");
					}
					case 3:
					{
					    if(PlayerInfo[playerid][Coins] < 100) return SendError(playerid, "Don't have enough coins! You need 100 coins.");
			            else return GivePlayerWeapon(playerid, 18, 10), PlayerInfo[playerid][Coins] -= 100, SCM(playerid, YELLOW, "You bought an Flame Thrower for 100 coins.");
					}
					case 4:
					{
					    if(PlayerInfo[playerid][Coins] < 200) return SendError(playerid, "Don't have enough coins! You need 200 coins.");
			            else return GivePlayerWeapon(playerid, 16, 10), PlayerInfo[playerid][Coins] -= 200, SCM(playerid, YELLOW, "You bought an Flame Thrower for 200 coins.");
					}
				}
			}
			return true;
		}
		case PCar_D:
        {
              if(!response) return true;
              //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
              if(strlen(inputtext) > 10 || strlen(inputtext) < 3)
              {
                   SendError(playerid, "Please insert a number plate between 3 and 10 caracters!");
              }
              else
              {
                   new i = PlayerInfo[playerid][CarVCP];
                   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                   if(i == INVALID_VEHICLE_ID)
                   {
                        SendError(playerid, "There's a problem with your personal vehicle! Try to contact an owner in order to solve this problem!");
                        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
                        return true;
                   }
                   format(Vehicles[i][vehPlate], 16, "%s", inputtext);
                   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                   SetVehicleNumberPlate(Vehicles[i][vehicleData], Vehicles[i][vehPlate]);
                   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                   CreatePersonalCar1(i, true);
                   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                   new Float:X1, Float:Y1, Float:Z1, Float:A1;
				   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	               GetPlayerPos(playerid, X1, Y1, Z1);
	               GetPlayerFacingAngle(playerid, A1);
	               //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                   SetVehiclePos(Vehicles[i][vehicleData], X1, Y1, Z1);
	               SetVehicleZAngle(Vehicles[i][vehicleData], A1);
	               PutPlayerInVehicle(playerid, Vehicles[i][vehicleData], 0);
              }
        }
        case PCar_D+1:
        {
			if(!response) return true;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(strval(inputtext) >= 0 && strval(inputtext) <= 255)
            {
				new i = PlayerInfo[playerid][CarVCP];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(strval(inputtext) > 127)
				{
				    if(Vehicles[i][vehLevel] == 0) return SendError(playerid, "Color (128 - 255) is available for Personal Vehicles (Premium)");
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    Vehicles[i][vehColor][0] = strval(inputtext);
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					ChangeVehicleColor(Vehicles[i][vehicleData], Vehicles[i][vehColor][0], Vehicles[i][vehColor][1]);
				}
                Vehicles[i][vehColor][0] = strval(inputtext);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                VehUpdate(PlayerInfo[playerid][AccID], "VehColor1", Vehicles[i][vehColor][0]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				ChangeVehicleColor(Vehicles[i][vehicleData], Vehicles[i][vehColor][0], Vehicles[i][vehColor][1]);
            }
            else SendError(playerid, "Please insert a model between 0 and 255 caracters!");
        }
        case PCar_D+2:
        {
            if(!response) return true;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(strval(inputtext) >= 0 && strval(inputtext) <= 255)
            {
				new i = PlayerInfo[playerid][CarVCP];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(strval(inputtext) > 127)
				{
				    if(Vehicles[i][vehLevel] == 0) return SendError(playerid, "Color (128 - 255) is available for Personal Vehicles (Premium)");
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    Vehicles[i][vehColor][1] = strval(inputtext);
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					ChangeVehicleColor(Vehicles[i][vehicleData], Vehicles[i][vehColor][0], Vehicles[i][vehColor][1]);
				}
                Vehicles[i][vehColor][1] = strval(inputtext);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                VehUpdate(PlayerInfo[playerid][AccID], "VehColor2", Vehicles[i][vehColor][1]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				ChangeVehicleColor(Vehicles[i][vehicleData], Vehicles[i][vehColor][0], Vehicles[i][vehColor][1]);
    		}
            else SendError(playerid, "Please insert a model between 0 and 255 caracters!");
        }
        case PCar_D+3:
        {
        	if(!response) return true;
         	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
         	ShowPersonalCarOptions(playerid, listitem);
			PlayerInfo[playerid][VehSelect] = listitem;
        }
        case PCar_D+4:
        {
			if(!response) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
           	switch(listitem)
		   	{
		     	case 0:
		     	{
		     		if(PlayerInfo[playerid][InPersGarage] == 0)
		     	    {
		                new Float:X1, Float:Y1, Float:Z1, Float:A1;
		                //++++++++++++++++++++++++++++++++++++++++++++++++++++++
		                new i = PlayerInfo[playerid][CarVCP];
		                //++++++++++++++++++++++++++++++++++++++++++++++++++++++
		                if(IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You must be out of your vehicle in order to call your personal car!");
		                //++++++++++++++++++++++++++++++++++++++++++++++++++++++
			            GetPlayerPos(playerid, X1, Y1, Z1);
			            GetPlayerFacingAngle(playerid, A1);
			            //++++++++++++++++++++++++++++++++++++++++++++++++++++++
		                SetVehiclePos(Vehicles[i][vehicleData], X1, Y1, Z1);
			            SetVehicleZAngle(Vehicles[i][vehicleData], A1);
			            PutPlayerInVehicle(playerid, Vehicles[i][vehicleData], 0);
			            //++++++++++++++++++++++++++++++++++++++++++++++++++++++
			            Announce(playerid, "~y~Personal ~r~~h~car~n~~g~~h~~h~teleported to you!", 4000, 3);
			         }
			         else return SendError(playerid, "You cannot use this option here | leave garage and try again!");
             	}
             	case 1:
			 	{
			 		if(PlayerInfo[playerid][InPersGarage] == 0)
		     	    {
						for(new i = 0; i < MAX_VEH; i++)
	                	{
	                   		if(Vehicles[i][vehicleData] == GetPlayerVehicleID(playerid) && Vehicles[i][vehStatus])
	                   		{
	                   		    if(Vehicles[i][vehOwner] == PlayerInfo[playerid][AccID])
	                        	{
									new Float:x, Float:y, Float:z, Float:a;
									//++++++++++++++++++++++++++++++++++++++++++
									new j = PlayerInfo[playerid][CarVCP];
									new b = GetPlayerVehicleID(playerid);
									//++++++++++++++++++++++++++++++++++++++++++
									GetVehiclePos(b, x, y, z);
									GetVehicleZAngle(b, a);
									//++++++++++++++++++++++++++++++++++++++++++
									ParkPersonalCar(playerid, j, x, y, z, a, true);
	      						}
	                        	else SendError(playerid, "This personal car isn't yours!");
							}
	                	}
	                	if(!IsPlayerInAnyVehicle(playerid)) SendError(playerid, "You must be in your personal car to use this option!");
	                }
			     	else return SendError(playerid, "You cannot use this option here | leave garage and try again!");
             	}
	   			case 2:
             	{
             	    new String[512], String2[128];
             	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					if(StartedRainbow[playerid] == 0) String2 = "{FF0000}Disabled";
					else if(StartedRainbow[playerid] == 1) String2 = "{FF0000}Activated";
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					format(String, sizeof(String), "Option\tInformation\n\
													{FFFF00}Vehicle Rainbow\t{00FF22}%s", String2);
             	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                	SPD(playerid, DIALOG_VEHICLE_SETTINGS, HEADERS, "Vehicle Settings", String, "Select", "Back");
		   		}
             	case 3:
             	{
				    new String[256];
	     			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                format(String, sizeof(String), "{FFE600}Type below the new color 1 for the personal car:");
	                SPD(playerid, PCar_D+1, INPUT, "{FF0000}Change Personal Car Color {FFFFFF}#1", String, "Change", "Cancel");
             	}
             	case 4:
             	{
					new String[256];
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					format(String, sizeof(String), "{FFE600}Type below the new color 2 for the personal car:");
					SPD(playerid, PCar_D+2, INPUT, "{FF0000}Change Personal Car Color {FFFFFF}#2", String, "Change", "Cancel");
             	}
             	case 5:
             	{
					new String[256];
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					format(String, sizeof(String), "{FFE600}Type below the new plate for the personal car:");
					SPD(playerid, PCar_D, INPUT, "{FF0000}Change Personal Car Plate", String, "Change", "Cancel");
             	}
             	case 6: SPD(playerid, PCar_D+5, LIST, "Vehicle Decorations", "{FFFF00}Texts\n{FFFF00}Objects", "Select", "Close");
		   		case 7:
             	{
                	if(Vehicles[PlayerInfo[playerid][CarVCP]][vehLevel] == 1) return SendError(playerid, "You already have the premium type car!");
                	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                	SPD(playerid, DIALOG_UPGRADE_VEHICLE, MSGBOX, "Upgrade your vehicle", "{FFFF00}Do you agree to upgrade your car to the premium car?\n{FF9900}The cost of the premium car is 50 gems to continue\n\n{FF0000}Do you want to continue?", "Continue", "Cancel");
		   		}
		   		case 8:
		   		{
		   		    new i = PlayerInfo[playerid][CarVCP];
		   		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		   		    if(PlayerInfo[playerid][InPersGarage] == 0)
		   		    {
		   		        if(IsPlayerInAnyDynamicArea(playerid)) return SendError(playerid, "You cannot use this option if you are in a gang territory. Please leave it and try again!");
		   		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
		   		        GetPlayerPos(playerid, PlayerInfo[playerid][LastPos][1], PlayerInfo[playerid][LastPos][2], PlayerInfo[playerid][LastPos][3]);
		   		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
						Announce(playerid, "~Y~Welcome to ~R~~H~vehicle edit garage~N~~Y~use~G~~H~ /mycar~Y~ to teleport back!", 6000, 3);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						SetVehiclePos(Vehicles[i][vehicleData], 1384.2122,-30.4099,1000.7783);
						SetVehicleZAngle(Vehicles[i][vehicleData], 180.5524);
						SetVehicleVirtualWorld(Vehicles[i][vehicleData], playerid + 1069);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						SetPlayerPos(playerid, 1377.4425,-40.4676,1001.0511);
						SetPlayerVirtualWorld(playerid, playerid + 1069);
						SetPlayerInterior(playerid, 0); 
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						PlayerInfo[playerid][InPersGarage] = 1;
				    }
					else if(PlayerInfo[playerid][InPersGarage] == 1)
					{
						SetVehiclePos(Vehicles[i][vehicleData], PlayerInfo[playerid][LastPos][1], PlayerInfo[playerid][LastPos][2], PlayerInfo[playerid][LastPos][3]);
						PutPlayerInVehicle(playerid, Vehicles[i][vehicleData], 0);
						SetVehicleVirtualWorld(Vehicles[i][vehicleData], 0);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						SetPlayerVirtualWorld(playerid, 0);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						PlayerInfo[playerid][InPersGarage] = 0;
					}
		   		}
			}
		}
		case PCar_D+5:
		{
		    if(!response) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			eString[0] = EOS;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			switch(listitem)
			{
			    case 0:
			    {
			        for(new i = 0; i < MAX_VEH; i++)
                	{
                   		if(Vehicles[i][vehicleData] == GetPlayerVehicleID(playerid) && Vehicles[i][vehStatus])
                   		{
                   		    if(Vehicles[i][vehOwner] == PlayerInfo[playerid][AccID])
                        	{
						        if(Vehicles[PlayerInfo[playerid][CarVCP]][vehLevel] == 0) return SendError(playerid, "You are not Premium Vehicle to use this option!");
					    		//++++++++++++++++++++++++++++++++++++++++++++++
						        new vehicleid = PlayerInfo[playerid][CarVCP];
						        //++++++++++++++++++++++++++++++++++++++++++++++
						        new vtext1[200], vtext2[200], vtext3[200], vtext4[200], vtext5[200];
						        //++++++++++++++++++++++++++++++++++++++++++++++
						        if(strcmp(Vehicles[vehicleid][vehText1], "-1", false)) format(vtext1, sizeof(vtext1), "%s", Vehicles[vehicleid][vehText1]);
						        if(strcmp(Vehicles[vehicleid][vehText2], "-1", false)) format(vtext2, sizeof(vtext2), "%s", Vehicles[vehicleid][vehText2]);
						        if(strcmp(Vehicles[vehicleid][vehText3], "-1", false)) format(vtext3, sizeof(vtext3), "%s", Vehicles[vehicleid][vehText3]);
						        if(strcmp(Vehicles[vehicleid][vehText4], "-1", false)) format(vtext4, sizeof(vtext4), "%s", Vehicles[vehicleid][vehText4]);
						        if(strcmp(Vehicles[vehicleid][vehText5], "-1", false)) format(vtext5, sizeof(vtext5), "%s", Vehicles[vehicleid][vehText5]);
						        //++++++++++++++++++++++++++++++++++++++++++++++
						        if(strfind(Vehicles[vehicleid][vehText1], "-1", true) == 0) vtext1 = "None";
						        if(strfind(Vehicles[vehicleid][vehText2], "-1", true) == 0) vtext2 = "None";
						        if(strfind(Vehicles[vehicleid][vehText3], "-1", true) == 0) vtext3 = "None";
						        if(strfind(Vehicles[vehicleid][vehText4], "-1", true) == 0) vtext4 = "None";
						        if(strfind(Vehicles[vehicleid][vehText5], "-1", true) == 0) vtext5 = "None";
						        //++++++++++++++++++++++++++++++++++++++++++++++
						        format(eString, sizeof(eString), "Slot\tCurent Text\n\
							                                  {FFFF00}#1\t{00FF22}%s\n\
					  										  {FFFF00}#2\t{00FF22}%s\n\
					  										  {FFFF00}#3\t{00FF22}%s\n\
														  	  {FFFF00}#4\t{00FF22}%s\n\
													  		  {FFFF00}#5\t{00FF22}%s", vtext1, vtext2, vtext3, vtext4, vtext5);
								SPD(playerid, PCar_D+6, HEADERS, "Add/Edit Vehicle Text", eString, "Ok", "Close");
				            }
				            else SendError(playerid, "This personal car isn't yours!");
				        }
				    }
			    }
			}
		}
		case PCar_D+6:
		{
		    if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(response)
		    {
			    if(Vehicles[PlayerInfo[playerid][CarVCP]][vehLevel] == 0) return SendError(playerid, "You are not Premium Vehicle to use this option!");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    new vehicleid = PlayerInfo[playerid][CarVCP];
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    new string[123]; eString[0] = EOS;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    strcat(eString, "{FFFF00}Change Vehicle Text\n");
				strcat(eString, "{FFFF00}Change Vehicle Text Position\n");
				strcat(eString, "{FFFF00}Delete Vehicle Text\n");
				strcat(eString, "{FFFF00}Edit Vehicle Text Size");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    switch(listitem)
			    {
			        case 0:
			        {
			            if(!strcmp(Vehicles[vehicleid][vehText1], "-1", true))
			            {
			                TextVehicleCase[playerid] = 1;
			                //++++++++++++++++++++++++++++++++++++++++++++++++++
			                SPD(playerid, PCar_D+7, INPUT, "Add/Edit Vehicle Text", "{FFFF00}Type below a text for your vehicle{00FF22} Slot #1", "Ok", "Close");
			            }
			            else
			            {
			                TextVehicleCase[playerid] = 1;
			                //++++++++++++++++++++++++++++++++++++++++++++++++++
							string = "{FFFF00}Vehicle text settings | slot{00CC00} #1";
							//++++++++++++++++++++++++++++++++++++++++++++++++++
			                SPD(playerid, PCar_D+8, LIST, string, eString, "Ok", "Close");
			            }
			        }
			        case 1:
			        {
			            if(!strcmp(Vehicles[vehicleid][vehText2], "-1", true))
			            {
			                TextVehicleCase[playerid] = 2;
			                //++++++++++++++++++++++++++++++++++++++++++++++++++
			                SPD(playerid, PCar_D+7, INPUT, "Add/Edit Vehicle Text", "{FFFF00}Type below a text for your vehicle{00FF22} Slot #2", "Ok", "Close");
			            }
			            else
			            {
			                TextVehicleCase[playerid] = 2;
			                //++++++++++++++++++++++++++++++++++++++++++++++++++
							string = "{FFFF00}Vehicle text settings | slot{00CC00} #2";
							//++++++++++++++++++++++++++++++++++++++++++++++++++
			                SPD(playerid, PCar_D+8, LIST, string, eString, "Ok", "Close");
			            }
			        }
			        case 2:
			        {
			            if(!strcmp(Vehicles[vehicleid][vehText3], "-1", true))
			            {
			                TextVehicleCase[playerid] = 3;
			                //++++++++++++++++++++++++++++++++++++++++++++++++++
			                SPD(playerid, PCar_D+7, INPUT, "Add/Edit Vehicle Text", "{FFFF00}Type below a text for your vehicle{00FF22} Slot #3", "Ok", "Close");
			            }
			            else
			            {
			                TextVehicleCase[playerid] = 3;
			                //++++++++++++++++++++++++++++++++++++++++++++++++++
							string = "{FFFF00}Vehicle text settings | slot{00CC00} #3";
							//++++++++++++++++++++++++++++++++++++++++++++++++++
			                SPD(playerid, PCar_D+8, LIST, string, eString, "Ok", "Close");
			            }
			        }
			        case 3:
			        {
			            if(!strcmp(Vehicles[vehicleid][vehText4], "-1", true))
			            {
			                TextVehicleCase[playerid] = 4;
			                //++++++++++++++++++++++++++++++++++++++++++++++++++
			                SPD(playerid, PCar_D+7, INPUT, "Add/Edit Vehicle Text", "{FFFF00}Type below a text for your vehicle{00FF22} Slot #4", "Ok", "Close");
			            }
			            else
			            {
			                TextVehicleCase[playerid] = 4;
			                //++++++++++++++++++++++++++++++++++++++++++++++++++
							string = "{FFFF00}Vehicle text settings | slot{00CC00} #4";
							//++++++++++++++++++++++++++++++++++++++++++++++++++
			                SPD(playerid, PCar_D+8, LIST, string, eString, "Ok", "Close");
			            }
			        }
					case 4:
					{
					    if(!strcmp(Vehicles[vehicleid][vehText5], "-1", true))
			            {
			                TextVehicleCase[playerid] = 5;
			                //++++++++++++++++++++++++++++++++++++++++++++++++++
			                SPD(playerid, PCar_D+7, INPUT, "Add/Edit Vehicle Text", "{FFFF00}Type below a text for your vehicle{00FF22} Slot #5", "Ok", "Close");
			            }
			            else
			            {
			                TextVehicleCase[playerid] = 5;
			                //++++++++++++++++++++++++++++++++++++++++++++++++++
							string = "{FFFF00}Vehicle text settings | slot{00CC00} #5";
							//++++++++++++++++++++++++++++++++++++++++++++++++++
			                SPD(playerid, PCar_D+8, LIST, string, eString, "Ok", "Close");
			            }
					}
			    }
			 }
		}
		case PCar_D+7:
		{
		    if(!response) VehicleCaseForText[playerid] = 0;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(response)
		    {
			    if(Vehicles[PlayerInfo[playerid][CarVCP]][vehLevel] == 0) return SendError(playerid, "You are not Premium Vehicle to use this option!");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    if(sscanf(inputtext, "s[200]", inputtext[0])) return false;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        VehicleIDEdit[playerid] = GetPlayerVehicleID(playerid);
			    new vehicleid = GetPlayerVehicleID(playerid);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    new Float:p[3], Float:OldP[6];
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    GetVehiclePos(vehicleid, p[0], p[1], p[2]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    if(TextVehicleCase[playerid] == 1)
			    {
			        if(IsPlayerInAnyVehicle(playerid))
			        {
				        if(VehicleCaseForText[playerid] == 1)
				        {
				            if(strfind(inputtext[0], "-1", true) == 0) return SendError(playerid, "You cannot use this character!");
						    //++++++++++++++++++++++++++++++++++++++++++++++++++
	               			DestroyObject(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				            format(Vehicles[PlayerInfo[playerid][CarVCP]][vehText1], 200, "%s", inputtext[0]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				            UpdateVehicleText(PlayerInfo[playerid][CarVCP], "VehicleText1", inputtext[0]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				            OldP[0] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][0];
				            OldP[1] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][1];
				            OldP[2] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][2];
				            OldP[3] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][3];
				            OldP[4] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][4];
				            OldP[5] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][5];
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1] = CreateObject(19329, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1], inputtext[0], 0, 40, "Quartz MS", Vehicles[PlayerInfo[playerid][CarVCP]][VehTextSize][1], 1, 0xFFFFFFFF, 0, 1);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    AttachObjectToVehicle(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1], vehicleid, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				            VehicleCaseForText[playerid] = 0;
				        }
				        else
						{
						    if(strfind(inputtext[0], "-1", true) == 0) return SendError(playerid, "You cannot use this character!");
						    //++++++++++++++++++++++++++++++++++++++++++++++++++
						    format(Vehicles[PlayerInfo[playerid][CarVCP]][vehText1], 200, "%s", inputtext[0]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1] = CreateObject(19329, p[0], p[1], p[2], 0, 0, 0);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1], inputtext[0], 0, 40, "Quartz MS", 30, 1, 0xFFFFFFFF, 0, 1);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    EditObject(playerid, Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1]), EditingObject[playerid] = 1;
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][VehTextSize][1] = 30;
						}
					}
			    }
			    else if(TextVehicleCase[playerid] == 2)
			    {
			        if(IsPlayerInAnyVehicle(playerid))
			        {
				        if(VehicleCaseForText[playerid] == 1)
				        {
				            if(strfind(inputtext[0], "-1", true) == 0) return SendError(playerid, "You cannot use this character!");
						    //++++++++++++++++++++++++++++++++++++++++++++++++++
	               			DestroyObject(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][2]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				            format(Vehicles[PlayerInfo[playerid][CarVCP]][vehText2], 200, "%s", inputtext[0]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				            UpdateVehicleText(PlayerInfo[playerid][CarVCP], "VehicleText2", inputtext[0]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				            OldP[0] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][0];
				            OldP[1] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][1];
				            OldP[2] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][2];
				            OldP[3] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][3];
				            OldP[4] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][4];
				            OldP[5] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][5];
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][2] = CreateObject(19329, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][2], inputtext[0], 0, 40, "Quartz MS", Vehicles[PlayerInfo[playerid][CarVCP]][VehTextSize][2], 1, 0xFFFFFFFF, 0, 1);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    AttachObjectToVehicle(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][2], vehicleid, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				            VehicleCaseForText[playerid] = 0;
				        }
				        else
						{
						    if(strfind(inputtext[0], "-1", true) == 0) return SendError(playerid, "You cannot use this character!");
						    //++++++++++++++++++++++++++++++++++++++++++++++++++
						    format(Vehicles[PlayerInfo[playerid][CarVCP]][vehText2], 200, "%s", inputtext[0]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][2] = CreateObject(19329, p[0], p[1], p[2], 0, 0, 0);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][2], inputtext[0], 0, 40, "Quartz MS", 30, 1, 0xFFFFFFFF, 0, 1);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    EditObject(playerid, Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][2]), EditingObject[playerid] = 2;
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][VehTextSize][2] = 30;
						}
					}
			    }
			    else if(TextVehicleCase[playerid] == 3)
			    {
			        if(IsPlayerInAnyVehicle(playerid))
			        {
				        if(VehicleCaseForText[playerid] == 1)
				        {
				            if(strfind(inputtext[0], "-1", true) == 0) return SendError(playerid, "You cannot use this character!");
						    //++++++++++++++++++++++++++++++++++++++++++++++++++
	               			DestroyObject(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][3]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				            format(Vehicles[PlayerInfo[playerid][CarVCP]][vehText3], 200, "%s", inputtext[0]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				            UpdateVehicleText(PlayerInfo[playerid][CarVCP], "VehicleText3", inputtext[0]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				            OldP[0] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][0];
				            OldP[1] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][1];
				            OldP[2] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][2];
				            OldP[3] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][3];
				            OldP[4] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][4];
				            OldP[5] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][5];
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][3] = CreateObject(19329, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][3], inputtext[0], 0, 40, "Quartz MS", Vehicles[PlayerInfo[playerid][CarVCP]][VehTextSize][3], 1, 0xFFFFFFFF, 0, 1);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    AttachObjectToVehicle(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][3], vehicleid, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				            VehicleCaseForText[playerid] = 0;
				        }
				        else
						{
						    if(strfind(inputtext[0], "-1", true) == 0) return SendError(playerid, "You cannot use this character!");
						    //++++++++++++++++++++++++++++++++++++++++++++++++++
						    format(Vehicles[PlayerInfo[playerid][CarVCP]][vehText3], 200, "%s", inputtext[0]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][3] = CreateObject(19329, p[0], p[1], p[2], 0, 0, 0);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][3], inputtext[0], 0, 40, "Quartz MS", 30, 1, 0xFFFFFFFF, 0, 1);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    EditObject(playerid, Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][3]), EditingObject[playerid] = 3;
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][VehTextSize][3] = 30;
						}
					}
			    }
			    else if(TextVehicleCase[playerid] == 4)
			    {
			        if(IsPlayerInAnyVehicle(playerid))
			        {
				        if(VehicleCaseForText[playerid] == 1)
				        {
				            if(strfind(inputtext[0], "-1", true) == 0) return SendError(playerid, "You cannot use this character!");
						    //++++++++++++++++++++++++++++++++++++++++++++++++++
	               			DestroyObject(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][4]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				            format(Vehicles[PlayerInfo[playerid][CarVCP]][vehText4], 200, "%s", inputtext[0]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				            UpdateVehicleText(PlayerInfo[playerid][CarVCP], "VehicleText4", inputtext[0]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				            OldP[0] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][0];
				            OldP[1] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][1];
				            OldP[2] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][2];
				            OldP[3] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][3];
				            OldP[4] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][4];
				            OldP[5] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][5];
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][4] = CreateObject(19329, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][4], inputtext[0], 0, 40, "Quartz MS", Vehicles[PlayerInfo[playerid][CarVCP]][VehTextSize][4], 1, 0xFFFFFFFF, 0, 1);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    AttachObjectToVehicle(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][4], vehicleid, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				            VehicleCaseForText[playerid] = 0;
				        }
				        else
						{
						    if(strfind(inputtext[0], "-1", true) == 0) return SendError(playerid, "You cannot use this character!");
						    //++++++++++++++++++++++++++++++++++++++++++++++++++
						    format(Vehicles[PlayerInfo[playerid][CarVCP]][vehText4], 200, "%s", inputtext[0]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][4] = CreateObject(19329, p[0], p[1], p[2], 0, 0, 0);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][4], inputtext[0], 0, 40, "Quartz MS", 30, 1, 0xFFFFFFFF, 0, 1);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    EditObject(playerid, Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][4]), EditingObject[playerid] = 4;
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][VehTextSize][4] = 30;
						}
					}
			    }
			    else if(TextVehicleCase[playerid] == 5)
			    {
			        if(IsPlayerInAnyVehicle(playerid))
			        {
				        if(VehicleCaseForText[playerid] == 1)
				        {
				            if(strfind(inputtext[0], "-1", true) == 0) return SendError(playerid, "You cannot use this character!");
						    //++++++++++++++++++++++++++++++++++++++++++++++++++
	               			DestroyObject(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][5]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				            format(Vehicles[PlayerInfo[playerid][CarVCP]][vehText5], 200, "%s", inputtext[0]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				            UpdateVehicleText(PlayerInfo[playerid][CarVCP], "VehicleText5", inputtext[0]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				            OldP[0] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][0];
				            OldP[1] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][1];
				            OldP[2] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][2];
				            OldP[3] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][3];
				            OldP[4] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][4];
				            OldP[5] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][5];
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][5] = CreateObject(19329, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][5], inputtext[0], 0, 40, "Quartz MS", Vehicles[PlayerInfo[playerid][CarVCP]][VehTextSize][5], 1, 0xFFFFFFFF, 0, 1);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    AttachObjectToVehicle(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][5], vehicleid, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				            VehicleCaseForText[playerid] = 0;
				        }
				        else
						{
						    if(strfind(inputtext[0], "-1", true) == 0) return SendError(playerid, "You cannot use this character!");
						    //++++++++++++++++++++++++++++++++++++++++++++++++++
						    format(Vehicles[PlayerInfo[playerid][CarVCP]][vehText5], 200, "%s", inputtext[0]);
				            //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][5] = CreateObject(19329, p[0], p[1], p[2], 0, 0, 0);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][5], inputtext[0], 0, 40, "Quartz MS", 30, 1, 0xFFFFFFFF, 0, 1);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    EditObject(playerid, Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][5]), EditingObject[playerid] = 5;
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][VehTextSize][5] = 30;
						}
					}
			    }
		    }
		}
		case PCar_D+8:
		{
		    if(!response) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(response)
			{
			    eString[0] = EOS;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(Vehicles[PlayerInfo[playerid][CarVCP]][vehLevel] == 0) return SendError(playerid, "You are not Premium Vehicle to use this option!");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    new vehicleid = PlayerInfo[playerid][CarVCP];
			    VehicleIDEdit[playerid] = GetPlayerVehicleID(playerid);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(TextVehicleCase[playerid] == 1)
		                {
		                    VehicleCaseForText[playerid] = 1;
		                    //++++++++++++++++++++++++++++++++++++++++++++++++++
		                    SPD(playerid, PCar_D+7, INPUT, "Edit Vehicle Text", "{FFFF00}Type below the new vehicle text for{00FF22} Slot #1", "Ok", "Close");
		                }
		                if(TextVehicleCase[playerid] == 2)
		                {
		                    VehicleCaseForText[playerid] = 1;
		                    //++++++++++++++++++++++++++++++++++++++++++++++++++
		                    SPD(playerid, PCar_D+7, INPUT, "Edit Vehicle Text", "{FFFF00}Type below the new vehicle text for{00FF22} Slot #2", "Ok", "Close");
		                }
		                if(TextVehicleCase[playerid] == 3)
		                {
		                    VehicleCaseForText[playerid] = 1;
		                    //++++++++++++++++++++++++++++++++++++++++++++++++++
		                    SPD(playerid, PCar_D+7, INPUT, "Edit Vehicle Text", "{FFFF00}Type below the new vehicle text for{00FF22} Slot #3", "Ok", "Close");
		                }
		                if(TextVehicleCase[playerid] == 4)
		                {
		                    VehicleCaseForText[playerid] = 1;
		                    //++++++++++++++++++++++++++++++++++++++++++++++++++
		                    SPD(playerid, PCar_D+7, INPUT, "Edit Vehicle Text", "{FFFF00}Type below the new vehicle text for{00FF22} Slot #4", "Ok", "Close");
		                }
		                if(TextVehicleCase[playerid] == 5)
		                {
		                    VehicleCaseForText[playerid] = 1;
		                    //++++++++++++++++++++++++++++++++++++++++++++++++++
		                    SPD(playerid, PCar_D+7, INPUT, "Edit Vehicle Text", "{FFFF00}Type below the new vehicle text for{00FF22} Slot #5", "Ok", "Close");
		                }
		            }
		            case 1:
		            {
		                new Float:p[3];
			    		//++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    		new vehicleid2 = GetPlayerVehicleID(playerid);
			    		//++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    		GetVehiclePos(vehicleid2, p[0], p[1], p[2]);
			    		//++++++++++++++++++++++++++++++++++++++++++++++++++++++
		                if(TextVehicleCase[playerid] == 1)
		                {
		                    DestroyObject(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1]);
		                    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1] = CreateObject(19329, p[0], p[1], p[2], 0, 0, 0);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1], Vehicles[PlayerInfo[playerid][CarVCP]][vehText1], 0, 40, "Quartz MS", Vehicles[PlayerInfo[playerid][CarVCP]][VehTextSize][1], 1, 0xFFFFFFFF, 0, 1);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    EditObject(playerid, Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1]), EditingObject[playerid] = 1;
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
							Announce(playerid, "~G~~H~~H~Now you are editing~N~~G~~H~~H~your vehicle text~N~~N~~G~~H~~H~press~R~~H~ esc ~G~~H~~H~for cancel!", 6000, 3);
		                }
		                if(TextVehicleCase[playerid] == 2)
		                {
		                    DestroyObject(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][2]);
		                    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][2] = CreateObject(19329, p[0], p[1], p[2], 0, 0, 0);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][2], Vehicles[PlayerInfo[playerid][CarVCP]][vehText2], 0, 40, "Quartz MS", Vehicles[PlayerInfo[playerid][CarVCP]][VehTextSize][2], 1, 0xFFFFFFFF, 0, 1);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    EditObject(playerid, Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][2]), EditingObject[playerid] = 2;
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
							Announce(playerid, "~G~~H~~H~Now you are editing~N~~G~~H~~H~your vehicle text~N~~N~~G~~H~~H~press~R~~H~ esc ~G~~H~~H~for cancel!", 6000, 3);
		                }
		                if(TextVehicleCase[playerid] == 3)
		                {
	                        DestroyObject(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][3]);
		                    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][3] = CreateObject(19329, p[0], p[1], p[2], 0, 0, 0);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][3], Vehicles[PlayerInfo[playerid][CarVCP]][vehText3], 0, 40, "Quartz MS", Vehicles[PlayerInfo[playerid][CarVCP]][VehTextSize][3], 1, 0xFFFFFFFF, 0, 1);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    EditObject(playerid, Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][3]), EditingObject[playerid] = 3;
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
							Announce(playerid, "~G~~H~~H~Now you are editing~N~~G~~H~~H~your vehicle text~N~~N~~G~~H~~H~press~R~~H~ esc ~G~~H~~H~for cancel!", 6000, 3);
		                }
		                if(TextVehicleCase[playerid] == 4)
		                {
		                    DestroyObject(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][4]);
		                    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][4] = CreateObject(19329, p[0], p[1], p[2], 0, 0, 0);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][4], Vehicles[PlayerInfo[playerid][CarVCP]][vehText4], 0, 40, "Quartz MS", Vehicles[PlayerInfo[playerid][CarVCP]][VehTextSize][4], 1, 0xFFFFFFFF, 0, 1);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    EditObject(playerid, Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][4]), EditingObject[playerid] = 4;
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
							Announce(playerid, "~G~~H~~H~Now you are editing~N~~G~~H~~H~your vehicle text~N~~N~~G~~H~~H~press~R~~H~ esc ~G~~H~~H~for cancel!", 6000, 3);
		                }
		                if(TextVehicleCase[playerid] == 5)
		                {
		                    DestroyObject(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][5]);
		                    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][5] = CreateObject(19329, p[0], p[1], p[2], 0, 0, 0);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][5], Vehicles[PlayerInfo[playerid][CarVCP]][vehText5], 0, 40, "Quartz MS", Vehicles[PlayerInfo[playerid][CarVCP]][VehTextSize][5], 1, 0xFFFFFFFF, 0, 1);
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
				  		    EditObject(playerid, Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][5]), EditingObject[playerid] = 5;
				  		    //++++++++++++++++++++++++++++++++++++++++++++++++++
							Announce(playerid, "~G~~H~~H~Now you are editing~N~~G~~H~~H~your vehicle text~N~~N~~G~~H~~H~press~R~~H~ esc ~G~~H~~H~for cancel!", 6000, 3);
		                }
		            }
		            case 2:
		            {
		                if(TextVehicleCase[playerid] == 1)
		                {
		                    DestroyObject(Vehicles[vehicleid][vehObject][1]);
				 			format(Vehicles[PlayerInfo[playerid][CarVCP]][vehText1], 15, "-1");
				 			UpdateVehicleText(PlayerInfo[playerid][CarVCP], "VehicleText1", Vehicles[PlayerInfo[playerid][CarVCP]][vehText1]);
				 			Announce(playerid, "~G~~H~~H~Vehicle text~N~~G~~H~~H~has been removed~N~~N~~G~~H~~H~type~R~~H~ /mycar~G~~H~~H~ for more!", 6000, 3);
		                }
		                if(TextVehicleCase[playerid] == 2)
		                {
		                    DestroyObject(Vehicles[vehicleid][vehObject][2]);
				 			format(Vehicles[PlayerInfo[playerid][CarVCP]][vehText2], 15, "-1");
				 			UpdateVehicleText(PlayerInfo[playerid][CarVCP], "VehicleText2", Vehicles[PlayerInfo[playerid][CarVCP]][vehText2]);
				 			Announce(playerid, "~G~~H~~H~Vehicle text~N~~G~~H~~H~has been removed~N~~N~~G~~H~~H~type~R~~H~ /mycar~G~~H~~H~ for more!", 6000, 3);
		                }
		                if(TextVehicleCase[playerid] == 3)
		                {
		                    DestroyObject(Vehicles[vehicleid][vehObject][3]);
				 			format(Vehicles[PlayerInfo[playerid][CarVCP]][vehText3], 15, "-1");
				 			UpdateVehicleText(PlayerInfo[playerid][CarVCP], "VehicleText3", Vehicles[PlayerInfo[playerid][CarVCP]][vehText3]);
				 			Announce(playerid, "~G~~H~~H~Vehicle text~N~~G~~H~~H~has been removed~N~~N~~G~~H~~H~type~R~~H~ /mycar~G~~H~~H~ for more!", 6000, 3);
		                }
		                if(TextVehicleCase[playerid] == 4)
		                {
		                    DestroyObject(Vehicles[vehicleid][vehObject][4]);
				 			format(Vehicles[PlayerInfo[playerid][CarVCP]][vehText4], 15, "-1");
				 			UpdateVehicleText(PlayerInfo[playerid][CarVCP], "VehicleText4", Vehicles[PlayerInfo[playerid][CarVCP]][vehText4]);
				 			Announce(playerid, "~G~~H~~H~Vehicle text~N~~G~~H~~H~has been removed~N~~N~~G~~H~~H~type~R~~H~ /mycar~G~~H~~H~ for more!", 6000, 3);
		                }
		                if(TextVehicleCase[playerid] == 5)
		                {
		                    DestroyObject(Vehicles[vehicleid][vehObject][5]);
				 			format(Vehicles[PlayerInfo[playerid][CarVCP]][vehText5], 15, "-1");
				 			UpdateVehicleText(PlayerInfo[playerid][CarVCP], "VehicleText5", Vehicles[PlayerInfo[playerid][CarVCP]][vehText5]);
				 			Announce(playerid, "~G~~H~~H~Vehicle text~N~~G~~H~~H~has been removed~N~~N~~G~~H~~H~type~R~~H~ /mycar~G~~H~~H~ for more!", 6000, 3);
		                }
		            }
		            case 3:
		            {
                        strcat(eString, "{FFFF00}Small\n");
                        strcat(eString, "{FFFF00}Medium\n");
                        strcat(eString, "{FFFF00}Big");
                        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
		                SPD(playerid, PCar_D+9, LIST, "Edit Vehicle Text Size", eString, "Select", "Close");
		            }
		        }
			}
		}
		case PCar_D+9:
		{
			if(response)
			{
			    new vehicleid = GetPlayerVehicleID(playerid), textsize, Float:OldP[6];
			    switch(listitem)
			    {
			        case 0: textsize = 15;
			        case 1: textsize = 20;
					case 2: textsize = 30;
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    Vehicles[PlayerInfo[playerid][CarVCP]][VehTextSize][TextVehicleCase[playerid]] = textsize;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    if(TextVehicleCase[playerid] == 1)
			    {
			        DestroyObject(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1]);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        OldP[0] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][0];
		            OldP[1] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][1];
		            OldP[2] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][2];
		            OldP[3] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][3];
		            OldP[4] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][4];
		            OldP[5] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP1][5];
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1] = CreateObject(19329, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
	  		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		    	SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1], Vehicles[PlayerInfo[playerid][CarVCP]][vehText1], 0, 40, "Quartz MS", textsize, 1, 0xFFFFFFFF, 0, 1);
	  		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		    	AttachObjectToVehicle(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][1], vehicleid, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
	  		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                    UpdatePersonalVehicle(PlayerInfo[playerid][CarVCP], "TextSize1", textsize);
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            	VehicleCaseForText[playerid] = 0;
				}
				if(TextVehicleCase[playerid] == 2)
			    {
			        DestroyObject(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][2]);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        OldP[0] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][0];
		            OldP[1] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][1];
		            OldP[2] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][2];
		            OldP[3] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][3];
		            OldP[4] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][4];
		            OldP[5] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP2][5];
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][2] = CreateObject(19329, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
	  		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		    	SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][2], Vehicles[PlayerInfo[playerid][CarVCP]][vehText2], 0, 40, "Quartz MS", textsize, 1, 0xFFFFFFFF, 0, 1);
	  		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		    	AttachObjectToVehicle(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][2], vehicleid, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
	  		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		    	UpdatePersonalVehicle(PlayerInfo[playerid][CarVCP], "TextSize2", textsize);
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            	VehicleCaseForText[playerid] = 0;
				}
				if(TextVehicleCase[playerid] == 3)
			    {
			        DestroyObject(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][3]);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        OldP[0] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][0];
		            OldP[1] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][1];
		            OldP[2] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][2];
		            OldP[3] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][3];
		            OldP[4] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][4];
		            OldP[5] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP3][5];
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][3] = CreateObject(19329, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
	  		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		    	SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][3], Vehicles[PlayerInfo[playerid][CarVCP]][vehText3], 0, 40, "Quartz MS", textsize, 1, 0xFFFFFFFF, 0, 1);
	  		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		    	AttachObjectToVehicle(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][3], vehicleid, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
	  		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		    	UpdatePersonalVehicle(PlayerInfo[playerid][CarVCP], "TextSize3", textsize);
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            	VehicleCaseForText[playerid] = 0;
				}
				if(TextVehicleCase[playerid] == 4)
			    {
			        DestroyObject(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][4]);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        OldP[0] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][0];
		            OldP[1] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][1];
		            OldP[2] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][2];
		            OldP[3] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][3];
		            OldP[4] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][4];
		            OldP[5] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP4][5];
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][4] = CreateObject(19329, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
	  		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		    	SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][4], Vehicles[PlayerInfo[playerid][CarVCP]][vehText4], 0, 40, "Quartz MS", textsize, 1, 0xFFFFFFFF, 0, 1);
	  		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		    	AttachObjectToVehicle(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][4], vehicleid, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
	  		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		    	UpdatePersonalVehicle(PlayerInfo[playerid][CarVCP], "TextSize4", textsize);
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            	VehicleCaseForText[playerid] = 0;
				}
				if(TextVehicleCase[playerid] == 5)
			    {
			        DestroyObject(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][5]);
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        OldP[0] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][0];
		            OldP[1] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][1];
		            OldP[2] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][2];
		            OldP[3] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][3];
		            OldP[4] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][4];
		            OldP[5] = Vehicles[PlayerInfo[playerid][CarVCP]][VehObjectP5][5];
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][5] = CreateObject(19329, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
	  		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		    	SetObjectMaterialText(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][5], Vehicles[PlayerInfo[playerid][CarVCP]][vehText5], 0, 40, "Quartz MS", textsize, 1, 0xFFFFFFFF, 0, 1);
	  		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		    	AttachObjectToVehicle(Vehicles[PlayerInfo[playerid][CarVCP]][vehObject][5], vehicleid, OldP[0], OldP[1], OldP[2], OldP[3], OldP[4], OldP[5]);
	  		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		    	UpdatePersonalVehicle(PlayerInfo[playerid][CarVCP], "TextSize5", textsize);
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            	VehicleCaseForText[playerid] = 0;
				}
			}
		}
		case DIALOG_VEHICLE_SETTINGS:
		{
		    if(!response) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			eString[0] = EOS;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			switch(listitem)
			{
			    case 0:
			    {
				    if(Vehicles[PlayerInfo[playerid][CarVCP]][vehLevel] == 0) return SendError(playerid, "You are not Premium Vehicle to use this option!");
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    if(!IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You need to be in your personal vehicle to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					if(StartedRainbow[playerid] == 0) StartedRainbow[playerid] = 1, VehicleRainbow[playerid] = SetTimerEx("AutoVehicleColorChange", 200, true, "i", playerid), Announce(playerid, "~w~~h~Auto Vehicle Color ~n~~w~~h~Change ~g~~h~on~w~~h~!", 4000, 4);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					else if(StartedRainbow[playerid] == 1)
					{
					    ChangeVehicleColor(Vehicles[PlayerInfo[playerid][CarVCP]][vehicleData], Vehicles[PlayerInfo[playerid][CarVCP]][vehColor][0], Vehicles[PlayerInfo[playerid][CarVCP]][vehColor][1]);
						StartedRainbow[playerid] = 0, KillTimer(VehicleRainbow[playerid]), Announce(playerid, "~w~~h~Auto Vehicle Color ~n~~w~~h~Change ~r~~h~off~w~~h~!", 4000, 4);
					}
			    }
			}
		}
		case DIALOG_UPGRADE_VEHICLE:
		{
		    if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 			if(PlayerInfo[playerid][Gems] < 50) return SendError(playerid, "You do not have enough gems to complete your order!");
	    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    	UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] - 50);
	    	PlayerInfo[playerid][Gems] -= 50;
	   	 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    	Vehicles[PlayerInfo[playerid][CarVCP]][vehLevel] = 1;
	    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    	VehUpdate(PlayerInfo[playerid][AccID], "Level", 1);
	    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SCM(playerid, YELLOW, "Vehiculul tau este acum de categoria {FF0000}Premium {FFFF00}iar 50 gems au fost retrasi din contul tau!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			eLog[0] = EOS; format(eLog, sizeof(eLog), "%s has bought (Upgrade car to Premium)!", PN(playerid)), SendShopLog(eLog);
		}
		case BUYVIP_D:
		{
            if(!response) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            switch(listitem)
	        {
	             case 0:
     	         {
                        if(PlayerInfo[playerid][IsVipFree] == 1) return SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FFFFFF}Buy VIP{FF0000} #Error{FFFFFF}!", "{FF0000}You already bought once{FFFFFF} Trial VIP{FF0000}!\nThis item can only be bought once, or on special occasions!\n\n{FFFFFF}Type{FF0000} /BuyVIP{FFFFFF} for other offers!", "Close", "");
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						PlayerInfo[playerid][pVIP] = 1;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						PlayerInfo[playerid][TVip] = 0;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						PlayerInfo[playerid][IsVipFree] = 1;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						UpdatePlayer(PN(playerid), "VIP", 1);
						UpdatePlayer(PN(playerid), "TempVIP", 0);
						UpdatePlayer(PN(playerid), "FreeVIP", 1);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						eLog[0] = EOS; format(eLog, sizeof(eLog), "%s has bought VIP (Permanent) - Free!", PN(playerid)), SendLog(eLog, 4);
                        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
						SPD(playerid, DIALOG_EMPTY, MSGBOX, "{00CC00}Buy VIP {FFCC00}#Succes{FFCC00}!",
						                                     "{FFFFFF}You have bought{FFCC00} VIP {00CC00}!\n\
				   											 {FFFFFF}This item can only be bought once, or on special occasion!\n\
															 Type {FFCC00}/Vcmds{FFFFFF} for help and commands!", "Ok", "");
				 }
				 case 1:
     	         {
						if(PlayerInfo[playerid][hours] < 15) return SendError(playerid, "You don't have enough hours or coins!");
                        if(PlayerInfo[playerid][Coins] < 2000) return SendError(playerid, "You don't have enough hours or coins!");
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						new AvaibleDays = 51; eQuery[0] = EOS;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						PlayerInfo[playerid][pVIP] = 2;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
					 	PlayerInfo[playerid][TVip] = 1;
					 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						PlayerInfo[playerid][Coins] -= 2000;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
					 	PlayerInfo[playerid][hours] -= 15;
					 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						PlayerInfo[playerid][VIPTime] = gettime() + AvaibleDays*86400;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						UpdatePlayer(PN(playerid), "VIP", 2);
						UpdatePlayer(PN(playerid), "TempVIP", 1);
						UpdatePlayer(PN(playerid), "Coins", PlayerInfo[playerid][Coins]);
						UpdatePlayer(PN(playerid), "Hours", PlayerInfo[playerid][hours]);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `VIPTime` = %d + (%d*86400) WHERE `ID` = %d", gettime(), AvaibleDays, PlayerInfo[playerid][AccID]);
						mysql_tquery(SQL, eQuery, "", "");
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						eLog[0] = EOS; format(eLog, sizeof(eLog), "%s has bought VIP Gold (50 Days)!", PN(playerid)), SendLog(eLog, 4);
                        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
						SPD(playerid, DIALOG_EMPTY, MSGBOX, "{00CC00}Buy VIP {FFCC00}#Succes{FFCC00}!",
						                                     "{FFFFFF}You have bought{FFCC00} VIP Gold {FFFFFF}(50 Days) {00CC00}!\n\
				   											 {FFFFFF}This item can only be bought once, or on special occasion!\n\
															 Type {FFCC00}/Vcmds{FFFFFF} for help and commands!", "Ok", "");
				 }
                 case 2:
                 {
                        if(PlayerInfo[playerid][hours] < 30) return SendError(playerid, "You don't have enough hours or coins!");
                        if(PlayerInfo[playerid][Coins] < 5000) return SendError(playerid, "You don't have enough hours or coins!");
                        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
                        PlayerInfo[playerid][pVIP] = 2;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						PlayerInfo[playerid][TVip] = 0;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						UpdatePlayer(PN(playerid), "VIP", 2);
						UpdatePlayer(PN(playerid), "TempVIP", 0);
						UpdatePlayer(PN(playerid), "Coins", PlayerInfo[playerid][Coins]);
						UpdatePlayer(PN(playerid), "Hours", PlayerInfo[playerid][hours]);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						eLog[0] = EOS; format(eLog, sizeof(eLog), "%s has bought VIP Gold (Permanent)!", PN(playerid)), SendLog(eLog, 4);
                        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
						SPD(playerid, DIALOG_EMPTY, MSGBOX, "{00CC00}Buy VIP {FFCC00}#Succes{FFCC00}!",
						                                     "{FFFFFF}You have bought{FFCC00} VIP Gold {00CC00}!\n\
				   											 {FFFFFF}This item can only be bought once, or on special occasion!\n\
															 Type {FFCC00}/Vcmds{FFFFFF} for help and commands!", "Ok", "");
				 }

	        }
		}
		case Holds_D:
        {
            if(!response) return 0;
            new string1[512], string2[512]; HoldIndex1[playerid] = listitem;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            switch(PlayerInfo[playerid][Language])
	        {
		        case 1:
		        {
                   if(HoldsInfo[playerid][listitem][HoldUsed] == false) return SPD(playerid, Holds_D +3, LIST, "Holds", "{0066FF}Selecteaza un hold din lista noastra!\n\
                                                                                                                                          {0066FF}Alege orice id pentru hold-ul tau\n\
		            																                                                      ", "Selectaza", "Cancel");
                   format(string1, sizeof(string1), "{33FF00}Hold - Slot %d", listitem+1);
                   format(string2, sizeof(string2), "{2084D5}Ne pare rau, dar acest slot este momentan folosit! {2084D5}Vrei sa editezi hold-ul din acest slot sau vrei sa il stergi?", listitem+1);
                   SPD(playerid, Holds_D +1, MSGBOX, string1, string2, "Editeaza", "Sterge");
		        }
		        case 2:
		        {
		           if(HoldsInfo[playerid][listitem][HoldUsed] == false) return SPD(playerid, Holds_D +3, LIST, "Holds", "{0066FF}Select hold from our list\n\
                                                                                                                                          {0066FF}Type the object id you want to use\n\
		            																                                                      ", "Select", "Cancel");
                   format(string1, sizeof(string1), "{33FF00}Hold - Slot %d", listitem+1);
                   format(string2, sizeof(string2), "{2084D5}Sorry, but this slot is already used! {2084D5}Would you like to edit or to delete it?", listitem+1);
                   SPD(playerid, Holds_D +1, MSGBOX, string1, string2, "Edit", "Remove");
		        }
		    }
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        }
        case Holds_D +1:
        {
            if(response) return EditAttachedObject(playerid, HoldIndex1[playerid]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            RemovePlayerAttachedObject(playerid, HoldIndex1[playerid]);
            HoldsInfo[playerid][HoldIndex1[playerid]][HoldUsed] = false;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            eQuery[0] = EOS;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            Announce(playerid,"~w~~h~Hold ~r~~h~~h~removed!", 4000, 3);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `Holds` WHERE `HoldID` = %d AND `HoldIndex` = %d", PlayerInfo[playerid][AccID], HoldIndex1[playerid]);
            mysql_tquery(SQL, eQuery, "", "");
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        }
        case Holds_D +2:
        {
            if(response)
            {
	            Announce(playerid, "~w~Press ~r~~h~W/SHIFT ~n~~y~~h~to look around!", 4000, 3);
	            SetPlayerAttachedObject(playerid, HoldIndex1[playerid], HoldModel1[playerid], listitem+1);
	            HoldsInfo[playerid][HoldIndex1[playerid]][HoldIndex] = HoldIndex1[playerid];
	            HoldsInfo[playerid][HoldIndex1[playerid]][HoldModel] = HoldModel1[playerid];
	            HoldsInfo[playerid][HoldIndex1[playerid]][HoldBone] = listitem+1;
	            HoldsInfo[playerid][HoldIndex1[playerid]][HoldUsed] = true;
	            EditAttachedObject(playerid, HoldIndex1[playerid]);
            }
        }
        case Holds_D +3:
        {
	        if(response)

		    switch(listitem)
	        {
				case 0:
				{
			       if(PlayerInfo[playerid][Language] == 1)
			       {
		              ShowModelSelectionMenu(playerid, objectlist, "Selecteaza Obiectul Dorit");
			       }
			       else if(PlayerInfo[playerid][Language] == 2)
			       {
			          ShowModelSelectionMenu(playerid, objectlist, "Select The Wanted Object");
				   }
			    }
			    case 1:
				{
			       if(PlayerInfo[playerid][Language] == 1)
			       {
                      SPD(playerid, Holds_D +4, INPUT, "{0DFF00}Holds", "{2084D5}Introduce mai jos {FF0000}ID-ul {2084D5}hold-ului pe care vrei sa il ai!", "Ok", "Close");
			       }
                   else if(PlayerInfo[playerid][Language] == 2)
		           {
			          SPD(playerid, Holds_D +4, INPUT, "{0DFF00}Holds", "{2084D5}Type below the {FF0000}ID {2084D5}of the hold which you want to have!", "Ok", "Close");
				   }
			    }
	        }
	        return true;
        }
        case Holds_D +4:
        {
	        if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            eString[0] = EOS;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(!IsNumeric(inputtext)) return SCM(playerid, RED, "ERROR: You must type an ID!");
			if(strlen(inputtext) < 1 || strlen(inputtext) > 6) return SCM(playerid, RED,"ERROR: Invalid ID size! Only between 1 and 6 characters!");
			if(strfind(inputtext, "'", true) != -1) return SCM(playerid, RED, "You can't type symbols like: (')!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            HoldModel1[playerid] = strval(inputtext);
            switch(PlayerInfo[playerid][Language])
	        {
				case 1:
				{
				    SPD(playerid, Holds_D +2, LIST, "{0DFF00}Partea corpului", "Splina\nCap\nUmarul drept\nUmarul Stang\nMana Dreapta\nMana Stanga\nGamba Dreapta\nGamba Stanga\nPicior Drept\nPicior Stang\nCalcai Stang\nCalcai Drept\nAntebrat Drept\nAntebrat Stang\nUmarul Drept\nUmarul Stang\nGat\nMaxilar", "Selecteaza", "Cancel");
				}
				case 2:
				{
				    SPD(playerid, Holds_D +2, LIST, "{0DFF00}Body part", "Spine\nHead\nLeft Upper Arm\nRight Upper Arm\nLeft Hand\nRight Hand\nLeft Tight\nRight Tight\nLeft Foot\nRight Foot\nRight Calf\nLeft Calf\nLeft Forearm\nRight Forearm\nLeft Shoulder\nRight Shoulder\nNeck\nJaw", "Select", "Cancel");
				}
			}
        }
        case Holds_D +5:
        {
	        if(!response) return true;
	        switch(listitem)
	        {
				case 0:
				{
                  new string[512], s[512];
				  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                  if(PlayerInfo[playerid][Language] == 1)
		          {
		             format(string, sizeof(string), "{2084D5}Slot 1\t%s\n", HoldsInfo[playerid][0][HoldUsed] == true ? ("{FF0000}Folosit") : ("{00FF0D}Liber"));
                     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                     for(new i=1,j=MAX_OBJECTS; i<j; i++) {
                     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                     format(s, sizeof(s), "{2084D5}Slot %d\t%s\n", i+1, HoldsInfo[playerid][i][HoldUsed] == true ? ("{FF0000}Folosit") : ("{00FF0D}Liber"));
                     strcat(string, s); }
                     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                     SPD(playerid, Holds_D, DIALOG_STYLE_TABLIST, "{00FF0D}Poti atasa 10 obiecte! Alege slot-ul pentru hold!", string, "Select", "Cancel");
                  }
                  else if(PlayerInfo[playerid][Language] == 2)
                  {
                     format(string, sizeof(string), "{2084D5}Slot 1\t%s\n", HoldsInfo[playerid][0][HoldUsed] == true ? ("{FF0000}Used") : ("{00FF0D}Free"));
                     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                     for(new i=1,j=MAX_OBJECTS; i<j; i++) {
                     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                     format(s, sizeof(s), "{2084D5}Slot %d\t%s\n", i+1, HoldsInfo[playerid][i][HoldUsed] == true ? ("{FF0000}Used") : ("{00FF0D}Free"));
                     strcat(string, s); }
                     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                     SPD(playerid, Holds_D, DIALOG_STYLE_TABLIST, "{00FF0D}You can attach only 10 objects! Choose any slot for hold!", string, "Select", "Cancel");
                  }
                }
                case 1:
                {
			        new H2String[1994];
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    if(PlayerInfo[playerid][Language] == 1)
				    {
			            strcat(H2String,"{FFA500}Palarie mos craciun\n", 1900);
			            strcat(H2String,"{FFA500}Papagal\n", 1900);
			            strcat(H2String,"{FFA500}Umul papagal\n", 1900);
			            strcat(H2String,"{FFA500}Hipopotan\n", 1900);
			            strcat(H2String,"{FFA500}Casca de motociclist\n", 1900);
			            strcat(H2String,"{FFA500}Capback\n", 1900);
			            strcat(H2String,"{FFA500}Ochelari\n", 1900);
			            strcat(H2String,"{FFA500}SmokeFlare\n", 1900);
			            strcat(H2String,"{FFA500}Minge 1\n", 1900);
			            strcat(H2String,"{FFA500}Minge 2\n", 1900);
			            strcat(H2String,"{FFA500}Minge 3\n", 1900);
			            strcat(H2String,"{FFA500}Servieta\n", 1900);
			            strcat(H2String,"{FFA500}Geanta cu bani\n", 1900);
			            strcat(H2String,"{FFA500}Omul rechin\n", 1900);
			            strcat(H2String,"{FFA500}Omul delfin\n", 1900);
			            strcat(H2String,"{FFA500}Sapca clucking bell\n", 1900);
			            strcat(H2String,"{FFA500}Minge de plaja\n", 1900);
			            strcat(H2String,"{FFA500}Minge de basket\n", 1900);
			            strcat(H2String,"{FFA500}SA-MP Logo\n", 1900);
			            strcat(H2String,"{FFA500}Toro-Man\n", 1900);
			            strcat(H2String,"{FFA500}InCred\n", 1900);
			            strcat(H2String,"{FFA500}Umul gunoier\n", 1900);
			            strcat(H2String,"{FFA500}Strain\n", 1900);
			            strcat(H2String,"{FFA500}Omul polit\n", 1900);
			            strcat(H2String,"{FFA500}Light\n", 1900);
			            strcat(H2String,"{FFA500}Undita\n", 1900);
			            strcat(H2String,"{FFA500}Palarie\n", 1900);
			            strcat(H2String,"{FFA500}Sageata\n", 1900);
			            strcat(H2String,"{FFA500}Calaretul fantoma\n", 1900);
			            strcat(H2String,"{FFA500}Cadou\n", 1900);
			            strcat(H2String,"{FFA500}Penis\n", 1900);
			            strcat(H2String,"{FFA500}Sombrero\n", 1900);
			            strcat(H2String,"{FFA500}Dovleac\n", 1900);
			            SPD(playerid, Holds_D +6, LIST, "{0DFF00}Alege un model, modifica-l si {FF0000}Distreaza-te!", H2String, "Selecteaza", "Renunta");
			    	}
			    	else if(PlayerInfo[playerid][Language] == 2)
					{
                        strcat(H2String,"{FFA500}Santa Hat\n", 1900);
	                    strcat(H2String,"{FFA500}Parrot\n", 1900);
	                    strcat(H2String,"{FFA500}Parrot-Man\n", 1900);
	                    strcat(H2String,"{FFA500}Hippo\n", 1900);
	                    strcat(H2String,"{FFA500}Motorcycle Helmet\n", 1900);
                        strcat(H2String,"{FFA500}CapBack\n", 1900);
	                    strcat(H2String,"{FFA500}Glasses\n", 1900);
	                    strcat(H2String,"{FFA500}SmokeFlare\n", 1900);
	                    strcat(H2String,"{FFA500}Ball 1\n", 1900);
	                    strcat(H2String,"{FFA500}Ball 2\n", 1900);
	                    strcat(H2String,"{FFA500}Ball 3\n", 1900);
	                    strcat(H2String,"{FFA500}BriefCase\n", 1900);
	                    strcat(H2String,"{FFA500}MoneyBag\n", 1900);
	                    strcat(H2String,"{FFA500}Shark-Man\n", 1900);
	                    strcat(H2String,"{FFA500}Dolphin-Man\n", 1900);
	                    strcat(H2String,"{FFA500}CluckinBell Hat\n", 1900);
	                    strcat(H2String,"{FFA500}Beach Ball\n", 1900);
	                    strcat(H2String,"{FFA500}Basket Ball\n", 1900);
	                    strcat(H2String,"{FFA500}SA-MP Logo\n", 1900);
                        strcat(H2String,"{FFA500}Toro-Man\n", 1900);
	                    strcat(H2String,"{FFA500}InCred\n", 1900);
                        strcat(H2String,"{FFA500}Trash-Man\n", 1900);
	                    strcat(H2String,"{FFA500}Alien\n", 1900);
	                    strcat(H2String,"{FFA500}Police-Man\n", 1900);
	                    strcat(H2String,"{FFA500}Light\n", 1900);
	                    strcat(H2String,"{FFA500}Fishing Rod\n", 1900);
	                    strcat(H2String,"{FFA500}Hat\n", 1900);
	                    strcat(H2String,"{FFA500}Arrow\n", 1900);
	                    strcat(H2String,"{FFA500}GhostRider\n", 1900);
	                    strcat(H2String,"{FFA500}Gift\n", 1900);
	                    strcat(H2String,"{FFA500}Penis\n", 1900);
                        strcat(H2String,"{FFA500}Sombrero\n", 1900);
                        strcat(H2String,"{FFA500}Pumpkin\n", 1900);
                        SPD(playerid, Holds_D +6, LIST, "{0DFF00}Choose a model, customize it and {FF0000}Have Fun!", H2String, "Select", "Close");
					 }
                }
                case 2:
                {
			         if(PlayerInfo[playerid][Language] == 1)
			         {
                         SPD(playerid, Holds_D +7, LIST, "{0DFF00}Setari", "{2084D5}Arata holdurile dupa fiecare spawn\n{2084D5}Arata holdurile in interiorul fiecarui vehicul\n{2084D5}Arata holdurile doar in interiorul unui vehicul\n{2084D5}Ascunde holdurile", "Selecteaza", "Renunta");
			         }
			         //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			         else if(PlayerInfo[playerid][Language] == 2)
		             {
			             SPD(playerid, Holds_D +7, LIST, "{0DFF00}Setings", "{2084D5}Show holds after every spawn\n{2084D5}Show holds in every vehicle\n{2084D5}Show holds only in a specific car\n{2084D5}Hide your holds", "Select", "Close");
				     }
                }
                case 3:
                {
                     for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++)
                     {
                        if(IsPlayerAttachedObjectSlotUsed(playerid, i))
                        {
			               RemovePlayerAttachedObject(playerid, i);
	                    }
           	         }
                }
             }
        }
        case Holds_D +6:
        {
	        if(!response) return true;
            {
             if(listitem == 0)//SantaHat
			 {
            	SetPlayerAttachedObject(playerid, 0, 19065, 2, 0.121128, 0.023578, 0.001139, 222.540847, 90.773872, 211.130859, 1.098305, 1.122310, 1.106640); // SantaHat
			 }
			 if(listitem == 1)//Parrot
			 {
            	SetPlayerAttachedObject(playerid, 0, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); // TheParrot1
			 }
			 if(listitem == 2)//Parrot-Man
			 {
            	SetPlayerAttachedObject(playerid, 0, 19078, 1, -1.097527, -0.348305, -0.008029, 0.000000, 0.000000, 0.000000, 8.073966, 8.073966, 8.073966); // TheParrot1 - parrot man
			 }
			 if(listitem == 3)//Hippo
			 {
            	SetPlayerAttachedObject(playerid, 0, 1371, 1, 0.037538, 0.000000, -0.020199, 350.928314, 89.107200, 180.974227, 1.000000, 1.000000, 1.000000); // CJ_HIPPO_BIN - /hippo
			 }
			 if(listitem == 4)//Casca
			 {
            	SetPlayerAttachedObject(playerid, 0, 18645, 2, 0.079577, 0.016865, 0.005709, 171.620758, 93.131149, 280.057983, 1.000000, 1.000000, 1.000000); // MotorcycleHelmet1 - liCasca
			 }
			 if(listitem == 5)//Sapca
			 {
            	SetPlayerAttachedObject(playerid, 0, 18939, 2, 0.147825, 0.010626, -0.004892, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); // CapBack1 - Sapca RuTeN
			 }
			 if(listitem == 6)//Glasses
			 {
        	    SetPlayerAttachedObject(playerid, 0, 19006, 2, 0.109624, 0.029350, -0.000269, 271.726898, 86.017311, 177.508102, 1.000000, 1.000000, 1.000000); // GlassesType1 - red
			 }
			 if(listitem == 7)//SmokeFlare
			 {
        	    SetPlayerAttachedObject(playerid, 0, 18728, 2, 0.134301, 1.475258, -0.192459, 82.870338, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); // smoke_flare - are ea nume
			 }
			 if(listitem == 8)//Sphere1
			 {
        	    SetPlayerAttachedObject(playerid, 0, 18843, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.027590, -0.027590, -0.027590); // GlassSphere1 - are nume]
			 }
			 if(listitem == 9)//Sphere2
			 {
  	 			SetPlayerAttachedObject(playerid, 0, 18844, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.027590, -0.027590, -0.027590); // WaterUVAnimSphere1 - are nume
			 }
			 if(listitem == 10)//Sphere3
			 {
            	SetPlayerAttachedObject(playerid, 0, 18845, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.027590, -0.027590, -0.027590); // RTexturesphere - are nume
			 }
			 if(listitem == 11)
			 {
				SetPlayerAttachedObject(playerid, 0, 1210, 6, 0.259532, -0.043030, -0.009978, 85.185333, 271.380615, 253.650283, 1.000000, 1.000000, 1.000000); // briefcase - briefcase
			 }
			 if(listitem == 12)
			 {
				SetPlayerAttachedObject(playerid, 0, 1550, 15, 0.016491, 0.205742, -0.208498, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); // CJ_MONEY_BAG - money
			 }
			 if(listitem == 13)
			 {
				SetPlayerAttachedObject(playerid, 0, 1608, 1, 0.201047, -1.839761, -0.010739, 0.000000, 90.005447, 0.000000, 1.000000, 1.000000, 1.000000); // shark - shark
			 }
			 if(listitem == 14)
			 {
				SetPlayerAttachedObject(playerid, 0, 1607, 1, 0.000000, 0.000000, 0.000000, 0.000000, 86.543479, 0.000000, 1.000000, 1.000000, 1.000000); // dolphin - /dolphin
			 }
			 if(listitem == 15)
			 {
				SetPlayerAttachedObject(playerid, 0, 19137, 2, 0.110959, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); // CluckinBellHat1 - 7
			 }
			 if(listitem == 16)
			 {
				SetPlayerAttachedObject(playerid, 0, 1598, 2, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); // beachball - are nume
			 }
			 if(listitem == 17)
			 {
				SetPlayerAttachedObject(playerid, 0, 2114, 2, 0.043076, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); // basketball - basket
			 }
			 if(listitem == 18)
			 {
				SetPlayerAttachedObject(playerid, 0, 18749, 2, 0.264992, 0.043229, -0.004249, 0.000000, 87.368362, 165.130233, 1.000000, 1.000000, 1.000000); // SAMPLogoSmall - 9
			 }
			 if(listitem == 19)
			 {
				SetPlayerAttachedObject(playerid, 0, 2045, 5, 0.054017, -0.143008, -0.296382, 236.015472, 0.000000, 0.000000, 1.677617, 1.000000, 1.000000); // CJ_BBAT_NAILS - baros
     			SetPlayerAttachedObject(playerid, 1, 1736, 15, -0.052946, -0.209805, 0.302906, 0.000000, 0.000000, 0.000000, 1.438930, 1.000000, 1.000000); // CJ_Stags_head - cu baros merge
             }
			 if(listitem == 20)
			 {
				SetPlayerAttachedObject(playerid, 0, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
				SetPlayerAttachedObject(playerid, 1, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
				SetPlayerAttachedObject(playerid, 2, 18703, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
				SetPlayerAttachedObject(playerid, 3, 18703, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
				SetPlayerAttachedObject(playerid, 4, 18965, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
			 }
			 if(listitem == 21)
			 {
				SetPlayerAttachedObject(playerid, 0, 1409, 1, -0.920380, 0.088453, 0.000000, 3.824895, 87.493751, 0.000000, 1.399999, 2.000000, 1.600000); // CJ_Dump1_LOW - trash
				SetPlayerAttachedObject(playerid, 1, 19006, 1, 0.564621, 0.292698, 0.042863, 357.594757, 88.274528, 95.327667, 7.000000, 8.000000, 7.000000); // GlassesType1 - glasses
				SetPlayerAttachedObject(playerid, 2, 19077, 1, 0.383622, 0.210077, 0.052282, 0.000000, 0.000000, 0.000000, 9.000000, 12.000000, 10.000000); // Hair3 - bighair
				SetPlayerAttachedObject(playerid, 3, 336, 6, -0.348237, -0.503257, 0.314347, 0.000000, 0.000000, 0.000000, 5.000000, 5.000000, 7.000000); // bat - bigbat
			 }
			 if(listitem == 22)
			 {
				SetPlayerAttachedObject(playerid, 0, 18645, 2, 0.017478, 0.051500, 0.003912, 285.055511, 90.860740, 171.179550, 1.780549, 0.912008, 1.208514); // MotorcycleHelmet1 - HEAD
				SetPlayerAttachedObject(playerid, 1, 18690, 2, -2.979508, 0.306475, -0.388553, 285.055511, 90.860740, 171.179550, 1.780549, 0.912008, 1.208514); // fire_car - fire2
				SetPlayerAttachedObject(playerid, 2, 18716, 2, -2.979508, 0.306475, -0.388553, 285.055511, 90.860740, 171.179550, 1.780549, 0.912008, 1.208514); // prt_smoke_expand - smoke3
			 }
			 if(listitem == 23)
			 {
				SetPlayerAttachedObject(playerid, 0, 19140, 2, 0.082782, 0.036745, 0.004386, 88.674697, 78.979743, 0.000000, 1.000000, 1.000000, 1.000000); // PoliceGlasses3 - POLICEGLASS
				SetPlayerAttachedObject(playerid, 1, 19141, 2, 0.094478, 0.007213, 0.000000, 0.000000, 0.000000, 0.000000, 1.200000, 1.200000, 1.200000); // SWATHelmet1 - POLICEHELMENT
				SetPlayerAttachedObject(playerid, 2, 19142, 1, 0.009792, 0.041990, 0.000000, 0.000000, 0.000000, 0.000000, 1.200000, 1.200000, 1.200000); // SWATArmour1 - POLICE VEST
				SetPlayerAttachedObject(playerid, 3, 355, 1, -0.067703, -0.209309, 0.147603, 0.735208, 52.436073, 4.960443, 1.299999, 1.299999, 1.299999); // ak47
			 }
			 if(listitem == 24)
			 {
				SetPlayerAttachedObject(playerid, 1,18641, 5, 0.1, 0.02, -0.05, 0, 0, 0, 1, 1, 1);
			 }
			 if(listitem == 25)
			 {
				SetPlayerAttachedObject(playerid, 1, 18632, 6, 0.06, 0.01, 0.08, 180.0, 0.0, 0.0);
			 }
			 if(listitem == 26)
			 {
				SetPlayerAttachedObject(playerid, 1, 18639, 2, 0.17, 0.0, 0.00, 1.0, 0.0, 0.5);
			 }
			 if(listitem == 27)
			 {
		 		SetPlayerAttachedObject(playerid, 2, 19132, 1, 1.000000, 0.000000, 0.000000, 9.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			 }
			 if(listitem == 28)
			 {
				SetPlayerAttachedObject(playerid, 2, 19270, 1, 0.500000, 0.070000, 0.000000, 9.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			 }
			 if(listitem == 29)
			 {
				SetPlayerAttachedObject(playerid, 2, 19057, 1, 0.100000, 0.000000, 0.000000, 0.000000, 85.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			 }
			 if(listitem == 30)
			 {
				SetPlayerAttachedObject(playerid, 0, 19086, 1, -0.188500, 0.040575, -0.063099, 100.748588, 93.359382, 0.000000, 1.000000, 1.000000, 0.677136); // ChainsawDildo1 - penis
			 }
			 if(listitem == 31)
			 {
				SetPlayerAttachedObject(playerid, 0, 18835, 1, 0.606878, 0.000000, 0.000000, 138.665191, 87.258789, 292.658142, 0.021999, 0.021999, 0.021999); // RBFunnel - pecap
			 }
			 if(listitem == 32)//Pumpkin
			 {
            	SetPlayerAttachedObject(playerid, 1, 19320, 2, 0.121128, 0.023578, 0.001139, 222.540847, 90.773872, 211.130859, 1.098305, 1.122310, 1.106640); // Pumpkin
			 }
			}
		}
		case Holds_D +7:
        {
	        if(!response) return true;
	        switch(listitem)
	        {
				case 0:
				{
                    if(PlayerInfo[playerid][UseHolds] == 1)
					{
                        PlayerInfo[playerid][UseHolds] = 0, Announce(playerid, "~w~Holds after every spawn ~n~~r~~h~~h~Off~w~~h~!", 4000, 3);
					}
                    else if(PlayerInfo[playerid][UseHolds] == 0)
					{
                        PlayerInfo[playerid][UseHolds] = 1, Announce(playerid, "~w~Holds after every spawn ~n~~g~~h~~h~on~w~~h~!", 4000, 3);
					}
				}
				case 1:
				{
					if(PlayerInfo[playerid][HoldInCar] == 1)
					{
                        PlayerInfo[playerid][HoldInCar] = 0, Announce(playerid, "~w~Inside car holds ~n~~r~~h~~h~Off~w~~h~!", 4000, 3);
					}
                    else if(PlayerInfo[playerid][HoldInCar] == 0)
					{
                        PlayerInfo[playerid][HoldInCar] = 1, PlayerInfo[playerid][HoldCID] = 0, Announce(playerid, "~w~Inside car Holds ~n~~g~~h~~h~on~w~~h~!", 4000, 3);
					}
				}
				case 2:
				{
                   if(PlayerInfo[playerid][Language] == 1)
			       {
                      if(PlayerInfo[playerid][HoldCID] == 0) SPD(playerid, Holds_D +8, INPUT, "{0DFF00}Holds Setari", "{2084D5}Introduce mai jos {FF0000}ID-ul {2084D5}masinii pe care vrei sa ai holdurile!", "Ok", "Close");
                      else if(PlayerInfo[playerid][HoldCID] != 0) PlayerInfo[playerid][HoldCID] = 0, Announce(playerid, "~w~Hold pe anumita masina ~n~~r~~h~~h~Off~w~~h~!", 4000, 3);
			       }
			       else if(PlayerInfo[playerid][Language] == 2)
		           {
		  			  if(PlayerInfo[playerid][HoldCID] == 0) SPD(playerid, Holds_D +8, INPUT, "{0DFF00}Holds Settings", "{2084D5}Type below the {FF0000}ID {2084D5}of the car which you want to use for holds!", "Ok", "Close");
					  else if(PlayerInfo[playerid][HoldCID] != 0) PlayerInfo[playerid][HoldCID] = 0, Announce(playerid, "~w~Specific car hold ~n~~r~~h~~h~Off~w~~h~!", 4000, 3);
                   }
				}
				case 3:
				{
				   for(new i=0; i<MAX_OBJECTS; i++)
                   {
                    if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
                    Announce(playerid, "~w~~h~Holds ~n~~r~~h~~h~invisible~w~~h~!", 4000, 3);
                   }
				}
			}
		}
		case Holds_D +8:
        {
	        if(!response) return true;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            eString[0] = EOS;
			new sCarModel;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(IsNumeric(inputtext)) sCarModel = strval(inputtext);
            else sCarModel = GetVehicleModelIDFromName(inputtext);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(sCarModel < 400 || sCarModel > 611) return
	        SendError(playerid, "Invalid vehicle model/name!");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        PlayerInfo[playerid][HoldCID] = sCarModel, PlayerInfo[playerid][HoldInCar] = 0, Announce(playerid, "~w~Specific car hold ~n~~g~~h~on~w~~h~!", 4000, 3);

		}
		case DIALOG_TOP_CLANS:
		{
		    eQuery[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
					{
						PlayerInfo[playerid][Variable] = 1;
						mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Clans` ORDER BY `Captures` DESC LIMIT 10");
					 	mysql_tquery(SQL, eQuery, "ShowTopClansByCaptures", "i", playerid);
				    }
		            case 1:
					{
						PlayerInfo[playerid][Variable] = 1;
						mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Clans` ORDER BY `Points` DESC LIMIT 10");
						mysql_tquery(SQL, eQuery, "ShowTopClansByPoints", "i", playerid);
				    }
				}
			}
		}
		case DIALOG_TOP_GANGS:
		{
		    eQuery[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
					{
						PlayerInfo[playerid][Variable] = 1;
						mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Gangs` ORDER BY `GangCaptures` DESC LIMIT 10");
						mysql_tquery(SQL, eQuery, "ShowTopGangsByCaptures", "i", playerid);
				    }
		            case 1:
					{
						PlayerInfo[playerid][Variable] = 1;
						mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Gangs` ORDER BY `GangPoints` DESC LIMIT 10");
						mysql_tquery(SQL, eQuery, "ShowTopGangsByPoints", "i", playerid);
				    }
				}
			}
		}
		case DIALOG_TOP:
	    {
	        eQuery[0] = EOS;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(response)
	        {
				switch(listitem)
				{
					case 0: PlayerInfo[playerid][Variable] = 1, SPD(playerid, DIALOG_TOP_GANGS, LIST, "Top Gangs", "{00CC00}In functie de teritorile detinute\n{00CC00}In functie de puncte", "Select", "Cancel");
					case 1: PlayerInfo[playerid][Variable] = 1, SPD(playerid, DIALOG_TOP_CLANS, LIST, "Top Clans", "{00CC00}In functie de teritorile detinute\n{00CC00}In functie de puncte", "Select", "Cancel");
				    case 2:
					{
						PlayerInfo[playerid][Variable] = 1;
						mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Level` > '0' ORDER BY `Activity` DESC LIMIT 10");
						mysql_tquery(SQL, eQuery, "ShowTopAdmins", "i", playerid);
				    }
				    case 3:
				    {
				    	SPD(playerid, DIALOG_TOP2, LIST, "{F3FF70}Top jucatori in aceasta luna",
 														 "{00CC00}Top ore\n{00CC00}Top killers\n\
														  {00CC00}Top drifters\n\
														  {00CC00}Top stunters\n\
														  {00CC00}Top racers\n\
													  	  {FFF8B5}Staticile tale se vor actualiza dupa fiecare{FF0000} disconnect", "Select", "Cancel");
				    }
				    case 4: Announce(playerid, "~W~Visit~G~~H~ now~n~~w~www.~R~~H~ess-ro~W~.com/top~N~~y~~h~ For more tops and others!", 6000, 3);
				}
	        }
		}
		case DIALOG_TOP2:
	    {
	        if(response)
	        {
				switch(listitem)
				{
					case 0: PlayerInfo[playerid][Variable] = 1, mysql_tquery(SQL, "SELECT * FROM `Accounts` ORDER BY `HoursMonth` DESC LIMIT 10", "ShowTopOnline", "i", playerid);
					case 1: PlayerInfo[playerid][Variable] = 1, mysql_tquery(SQL, "SELECT * FROM `Accounts` ORDER BY `KillsMonth` DESC LIMIT 10", "ShowTopKillers", "i", playerid);
					case 2: PlayerInfo[playerid][Variable] = 1, mysql_tquery(SQL, "SELECT * FROM `Accounts` ORDER BY `DriftMonth` DESC LIMIT 10", "ShowTopDrifters", "i", playerid);
					case 3: PlayerInfo[playerid][Variable] = 1, mysql_tquery(SQL, "SELECT * FROM `Accounts` ORDER BY `StuntMonth` DESC LIMIT 10", "ShowTopStunt", "i", playerid);
					case 4: PlayerInfo[playerid][Variable] = 1, mysql_tquery(SQL, "SELECT * FROM `Accounts` ORDER BY `RaceMonth` DESC LIMIT 10", "ShowTopRacers", "i", playerid);
					case 5: Announce(playerid, "~W~You need to~G~~H~ /quit~N~~W~The~R~~H~ Server~W~ in order to~N~~y~~h~Update tops with your stats!", 6000, 3);
				}
			}
			return true;
		}
		case DIALOG_BLOCK:
	    {
		    KickPlayer(playerid);
	    }
		case DIALOG_PROPERTY:
	    {
	        if(response)
			{
				switch(listitem)
				{
					case 0: return cmd_buy(playerid, "");
					case 1: return cmd_sell(playerid, "");
					case 2: return cmd_mybusiness(playerid, "");
					case 3: return cmd_myprops(playerid, "");
					case 4: return cmd_renew(playerid, "");
					case 5: return cmd_bname(playerid, "");
					case 6: return cmd_enter(playerid, "");
					case 7: return cmd_exit(playerid, "");
					case 8:
					{
					    if(PlayerInfo[playerid][Property] == 0) return SendError(playerid, "You doesn't have house to use this action!");
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    if(PropInfo[PlayerInfo[playerid][Property]][p_Level] == 2) return SendError(playerid, "You already have premium rank on your house!");
					    else
					    {
					        strcat(eString, "{FFFFFF}Do you really want to upgrade your business level to 2 (Premium) ?\n");
					    	strcat(eString, "{FFFFFF}This action you will cost{00CC00} 100.000 coins & VIP Gold", 780);
							SPD(playerid, DIALOG_PROPERTY + 1, MSGBOX, "Business Level Upgrade", eString, "No", "Yes");
							//++++++++++++++++++++++++++++++++++++++++++++++++++
				        }
					}
				}
			}
			return true;
		}
		case DIALOG_PROPERTY + 1:
		{
		    if(!response)
			{
			    if(PlayerInfo[playerid][Coins] < 100000) return SendError(playerid, "You doesnt't have enought coins to use this option!");
			    if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    eString[0] = EOS;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				Announce(playerid, "~G~~H~~H~Your business succesfully~N~~G~~H~~H~has been upgraded!", 6000, 3);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerInfo[playerid][Coins] -= 100000;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PropInfo[PlayerInfo[playerid][Property]][p_Level] = 2;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Properties` SET `Level` = %d WHERE `ID` = %d", PropInfo[PlayerInfo[playerid][Property]][p_Level], PlayerInfo[playerid][Property]);
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new PropID = PlayerInfo[playerid][Property];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new string[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(string, sizeof(string), "{9C9621}\"%s\"\n{2982FF}Business Owner: {00FF22}%s\n{2982FF}Business level: {FF0000}Premium\n{2982FF}Cost: {00FF22}%d Coins and $%d\n{2982FF}Win: {00FF22}%d coins and $%d\n{DE00BD}/business", PropInfo[PropID][PropName], PropInfo[PropID][PropOwner], PropInfo[PropID][Cost], PropInfo[PropID][CostM], PropInfo[PropID][Earning], PropInfo[PropID][EarningM]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				UpdateDynamic3DTextLabelText(Prop3D[PropID], ~1, string);
			}
		}
		case DUEL_D:
        {
            eQuery[0] = EOS;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(response)
			{
			   if(listitem == 0)
               {
					mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Duels`(`Name`, `Weapon1`, `Weapon2`) VALUES('%s', '9', '0')", PN(playerid));
					mysql_tquery(SQL, eQuery, "", "");
               }
               else if(listitem == 1)
               {
					mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Duels`(`Name`, `Weapon1`, `Weapon2`) VALUES('%s', '22', '0')", PN(playerid));
					mysql_tquery(SQL, eQuery, "", "");
			   }
               else if(listitem == 2)
               {
					mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Duels`(`Name`, `Weapon1`, `Weapon2`) VALUES('%s', '24', '0')", PN(playerid));
					mysql_tquery(SQL, eQuery, "", "");
               }
               else if(listitem == 3)
               {
					mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Duels`(`Name`, `Weapon1`, `Weapon2`) VALUES('%s', '25', '0')", PN(playerid));
					mysql_tquery(SQL, eQuery, "", "");
               }
               else if(listitem == 4)
               {
					mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Duels`(`Name`, `Weapon1`, `Weapon2`) VALUES('%s', '26', '0')", PN(playerid));
					mysql_tquery(SQL, eQuery, "", "");
               }
               else if(listitem == 5)
               {
					mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Duels`(`Name`, `Weapon1`, `Weapon2`) VALUES('%s', '27', '0')", PN(playerid));
					mysql_tquery(SQL, eQuery, "", "");
               }
               else if(listitem == 6)
               {
					mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Duels`(`Name`, `Weapon1`, `Weapon2`) VALUES('%s', '28', '0')", PN(playerid));
					mysql_tquery(SQL, eQuery, "", "");
               }
               else if(listitem == 7)
               {
					mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Duels`(`Name`, `Weapon1`, `Weapon2`) VALUES('%s', '29', '0')", PN(playerid));
					mysql_tquery(SQL, eQuery, "", "");
               }
               else if(listitem == 8)
               {
					mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Duels`(`Name`, `Weapon1`, `Weapon2`) VALUES('%s', '30', '0')", PN(playerid));
					mysql_tquery(SQL, eQuery, "", "");
               }
               else if(listitem == 9)
               {
					mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Duels`(`Name`, `Weapon1`, `Weapon2`) VALUES('%s', '31', '0')", PN(playerid));
					mysql_tquery(SQL, eQuery, "", "");
               }
               else if(listitem == 10)
               {
					mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Duels`(`Name`, `Weapon1`, `Weapon2`) VALUES('%s', '32', '0')", PN(playerid));
					mysql_tquery(SQL, eQuery, "", "");
               }
               else if(listitem == 11)
               {
					mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Duels`(`Name`, `Weapon1`, `Weapon2`) VALUES('%s', '33', '0')", PN(playerid));
					mysql_tquery(SQL, eQuery, "", "");
               }
               else if(listitem == 12)
               {
					mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Duels`(`Name`, `Weapon1`, `Weapon2`) VALUES('%s', '34', '0')", PN(playerid));
					mysql_tquery(SQL, eQuery, "", "");
               }
               //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
               mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Duels` WHERE `Name` = '%s'", PN(playerid));
               mysql_tquery(SQL, eQuery, "WeaponsLoad", "i", playerid);
			   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			   SPD(playerid, DUEL_D +1, LIST, "{FFFFFF}Duel | Chose weapon #2", "{FFFFFF}Skip - Duel only with one weapon\n{00CC00}Chainsaw (Drujba)\n{0066FF}Pistol 9mm\n{FFFF00}Desert Eagle\n{00CC00}Shotgun\n{0066FF}Sawnoff Shotgun\n{FFFF00}Combat Shotgun\n{00CC00}Micro SMG/Uzi\n{0066FF}MP5\n{FFFF00}AK-47\n{00CC00}M4\n{0066FF}Tec-9\n{FFFF00}Country Rifle\n{00CC00}Sniper Rifle", "Select", "Cancel");
			}
        }
        case DUEL_D +1:
        {
			eQuery[0] = EOS;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(!response)
			{
				mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `Duels` WHERE `Name` = '%s'", PN(playerid));
				mysql_tquery(SQL, eQuery, "", "");
			}
			if(response)
			{
			    if(listitem == 0)
			    {
				   SPD(playerid, DUEL_D +2, LIST, "{FFFFFF}Duel | Chose location", "{00CC00}BloodBlow Stadium\n{0066FF}Range Ammunation\n{FFFF00}RC Battlefield", "Select", "Cancel");
			    }
			    else if(listitem == 1)
			    {
			        mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Duels` SET `Weapon2` = '9' WHERE `Name` = '%s'", PN(playerid));
			        mysql_tquery(SQL, eQuery, "", "");
			    }
			    else if(listitem == 2)
			    {
				    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Duels` SET `Weapon2` = '22' WHERE `Name` = '%s'", PN(playerid));
			        mysql_tquery(SQL, eQuery, "", "");
			    }
			    else if(listitem == 3)
			    {
				    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Duels` SET `Weapon2` = '24' WHERE `Name` = '%s'", PN(playerid));
			        mysql_tquery(SQL, eQuery, "", "");
			    }
			    else if(listitem == 4)
			    {
				    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Duels` SET `Weapon2` = '25' WHERE `Name` = '%s'", PN(playerid));
			        mysql_tquery(SQL, eQuery, "", "");
			    }
			    else if(listitem == 5)
			    {
				    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Duels` SET `Weapon2` = '26' WHERE `Name` = '%s'", PN(playerid));
			        mysql_tquery(SQL, eQuery, "", "");
			    }
			    else if(listitem == 6)
			    {
				    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Duels` SET `Weapon2` = '27' WHERE `Name` = '%s'", PN(playerid));
			        mysql_tquery(SQL, eQuery, "", "");
			    }
			    else if(listitem == 7)
			    {
				    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Duels` SET `Weapon2` = '28' WHERE `Name` = '%s'", PN(playerid));
			        mysql_tquery(SQL, eQuery, "", "");
			    }
			    else if(listitem == 8)
			    {
				    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Duels` SET `Weapon2` = '29' WHERE `Name` = '%s'", PN(playerid));
			        mysql_tquery(SQL, eQuery, "", "");
			    }
			    else if(listitem == 9)
			    {
				    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Duels` SET `Weapon2` = '30' WHERE `Name` = '%s'", PN(playerid));
			        mysql_tquery(SQL, eQuery, "", "");
			    }
			    else if(listitem == 10)
			    {
				    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Duels` SET `Weapon2` = '31' WHERE `Name` = '%s'", PN(playerid));
			        mysql_tquery(SQL, eQuery, "", "");
			    }
			    else if(listitem == 11)
			    {
				    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Duels` SET `Weapon2` = '32' WHERE `Name` = '%s'", PN(playerid));
			        mysql_tquery(SQL, eQuery, "", "");
			    }
			    else if(listitem == 12)
			    {
				    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Duels` SET `Weapon2` = '33' WHERE `Name` = '%s'", PN(playerid));
			        mysql_tquery(SQL, eQuery, "", "");
			    }
			    else if(listitem == 13)
			    {
				    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Duels` SET `Weapon2` = '34' WHERE `Name` = '%s'", PN(playerid));
			        mysql_tquery(SQL, eQuery, "", "");
			    }
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Duels` WHERE `Name` = '%s'", PN(playerid));
			    mysql_tquery(SQL, eQuery, "WeaponsLoad", "i", playerid);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    SPD(playerid, DUEL_D +2, LIST, "{FFFFFF}Duel | Chose location", "{00CC00}BloodBlow Stadium\n{0066FF}Range Ammunation\n{FFFF00}RC Battlefield", "Select", "Cancel");
			}
        }
        case DUEL_D +2:
        {
           if(response)
           {
			  if(listitem == 0)
              {
                PlayerInfo[playerid][DuelLocation][1] = 1;
              }
		      else if(listitem == 1)
              {
                PlayerInfo[playerid][DuelLocation][1] = 0;
				PlayerInfo[playerid][DuelLocation][2] = 1;
              }
              if(listitem == 2)
              {
                PlayerInfo[playerid][DuelLocation][2] = 0;
				PlayerInfo[playerid][DuelLocation][3] = 1;
              }
              DuelInviter = playerid;
			  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			  format(StrH, 312, "{0066FF}Duel invitation was sent Successfully!\n{FFFF00}Please wait for player to accept or decline!"), SPD(playerid, DIALOG_EMPTY, MSGBOX, "{72A521}Duel", StrH, "Ok", "");
			  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			  new eString1[2048];
			  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
              if(PlayerInfo[playerid][DuelWeapon1] == 9)
			  {
				eString1 = "{FFFFFF}Chainsaw";
			  }
		      else if(PlayerInfo[playerid][DuelWeapon1] == 22)
			  {
                eString1 = "{FFFFFF}Pistol 9mm";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon1] == 24)
			  {
                eString1 = "{FFFFFF}Desert Eagle";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon1] == 25)
			  {
                eString1 = "{FFFFFF}Shotgun";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon1] == 26)
			  {
                eString1 = "{FFFFFF}Sawnoff Shotgun";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon1] == 27)
			  {
                eString1 = "{FFFFFF}Combat Shotgun";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon1] == 28)
			  {
                eString1 = "{FFFFFF}Micro SMG/Uzi";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon1] == 29)
			  {
                eString1 = "{FFFFFF}MP5";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon1] == 30)
			  {
                eString1 = "{FFFFFF}AK-47";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon1] == 31)
			  {
                eString1 = "{FFFFFF}M4";
			  }
			  if(PlayerInfo[playerid][DuelWeapon1] == 32)
			  {
                eString1 = "{FFFFFF}Tec-9";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon1] == 33)
			  {
                eString1 = "{FFFFFF}Country Rifle";
			  }
			  if(PlayerInfo[playerid][DuelWeapon1] == 34)
			  {
                eString1 = "{FFFFFF}Sniper Rifle";
			  }
			  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			  new eString2[2048];
			  if(PlayerInfo[playerid][DuelWeapon2] == 9)
			  {
				eString2 = "{FFFFFF}Chainsaw";
			  }
		      else if(PlayerInfo[playerid][DuelWeapon2] == 22)
			  {
                eString2 = "{FFFFFF}Pistol 9mm";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon2] == 24)
			  {
                eString2 = "{FFFFFF}Desert Eagle";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon2] == 25)
			  {
                eString2 = "{FFFFFF}Shotgun";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon2] == 26)
			  {
                eString2 = "{FFFFFF}Sawnoff Shotgun";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon2] == 27)
			  {
                eString2 = "{FFFFFF}Combat Shotgun";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon2] == 28)
			  {
                eString2 = "{FFFFFF}Micro SMG/Uzi";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon2] == 29)
			  {
                eString2 = "{FFFFFF}MP5";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon2] == 30)
			  {
                eString2 = "{FFFFFF}AK-47";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon2] == 31)
			  {
                eString2 = "{FFFFFF}M4";
			  }
			  if(PlayerInfo[playerid][DuelWeapon2] == 32)
			  {
                eString2 = "{FFFFFF}Tec-9";
			  }
			  else if(PlayerInfo[playerid][DuelWeapon2] == 33)
			  {
                eString2 = "{FFFFFF}Country Rifle";
			  }
			  if(PlayerInfo[playerid][DuelWeapon2] == 34)
			  {
                eString2 = "{FFFFFF}Sniper Rifle";
			  }
			  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			  new eString3[2048];
			  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			  if(PlayerInfo[playerid][DuelLocation][1] == 1)
			  {
                eString3 = "{FFFFFF}BloodBlow Stadium";
			  }
			  else if(PlayerInfo[playerid][DuelLocation][2] == 1)
			  {
                eString3 = "{FFFFFF}Range Ammunation";
			  }
			  else if(PlayerInfo[playerid][DuelLocation][3] == 1)
			  {
                eString3 = "{FFFFFF}RC Battlefield";
			  }
			  new eString4[2048];
			  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			  if(PlayerInfo[playerid][DuelWeapon2] != 0)
			  {
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                format(eString4, 312, "{FFFF00}You were invited into a duel by %s\n{FFFF00}Weapons: %s and %s\n{FFFF00}Location: %s\n{FFFF00}Do you want to accept this duel ?", PN(DuelInviter), eString1, eString2, eString3);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                return SPD(DuelPlayerInvite, DUEL_D +3, MSGBOX, "{FFFFFF}Duel | Invitation", eString4, "Decline", "Accept");
			  }
			  else
			  {
                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                format(eString4, 312, "{FFFF00}You were invited into a duel by %s\n{FFFF00}Weapons: %s\n{FFFF00}Location: %s\n{FFFF00}Do you want to accept this duel ?", PN(DuelInviter), eString1, eString3);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                return SPD(DuelPlayerInvite, DUEL_D +3, MSGBOX, "{FFFFFF}Duel | Invitation", eString4, "Decline", "Accept");
			  }
		   }
		}
		case DUEL_D +3:
		{
			eQuery[0] = EOS;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(response)
			{
				mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `Duels` WHERE `Name` = '%s'", PN(DuelInviter));
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(eString, 312, "{ff0000}Your duel invitation was rejected!");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(DuelInviter, DIALOG_EMPTY, MSGBOX, "{72A521}Duel", eString, "Ok", "");
			}
			else
			{
			  SetTimerEx("Timer1", 50, false, "d", DuelInviter);
			  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			  if(PlayerInfo[DuelInviter][DuelLocation][1] == 1)
			  {
			     SetPlayerPos(DuelInviter, -1370.6932,998.8079,1024.1079);
			     SetPlayerInterior(DuelInviter, 15);
			  }
			  else if(PlayerInfo[DuelInviter][DuelLocation][2] == 1)
			  {
			     SetPlayerPos(DuelInviter, 294.0330,-135.4985,1004.0625);
			     SetPlayerInterior(DuelInviter, 7);
			  }
			  else if(PlayerInfo[DuelInviter][DuelLocation][3] == 1)
			  {
			     SetPlayerPos(DuelInviter, -974.2717,1060.8134,1345.6774);
			     SetPlayerInterior(DuelInviter, 7);
			  }
			  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			  if(PlayerInfo[DuelInviter][DuelLocation][1] == 1)
			  {
			    SetPlayerPos(DuelPlayerInvite, -1397.4030,1000.2252,1024.1792);
			    SetPlayerInterior(DuelPlayerInvite, 15);
			  }
			  else if(PlayerInfo[DuelInviter][DuelLocation][2] == 1)
			  {
			    SetPlayerPos(DuelPlayerInvite, 276.4028,-135.2213,1004.0625);
			    SetPlayerInterior(DuelPlayerInvite, 7);
			  }
			  else if(PlayerInfo[DuelInviter][DuelLocation][3] == 1)
			  {
			    SetPlayerPos(DuelPlayerInvite, -1130.6006,1057.6938,1346.4141);
			    SetPlayerInterior(DuelPlayerInvite, 10);
			  }
			  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			  SetTimerEx("Timer7", 50, false, "d", DuelPlayerInvite);
			  SetPlayerCameraPos(DuelInviter, -1398.103515,937.631164,1036.479125), SetPlayerCameraLookAt(DuelInviter, -1398.103515,937.631164,1036.479125), SetPlayerInterior(DuelInviter, 2009);
			  SetPlayerCameraPos(DuelPlayerInvite, -1398.103515,937.631164,1036.479125), SetPlayerCameraLookAt(DuelPlayerInvite, -1398.103515,937.631164,1036.479125), SetPlayerInterior(DuelPlayerInvite, 2009);
			  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

			}
		}
        case DIALOG_CHANGENAME:
		{
			if(response)
		  	{
		  	    eQuery[0] = EOS;
		  	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    	mysql_escape_string(inputtext, StrH);
            	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            	mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s'", StrH);
            	mysql_tquery(SQL, eQuery, "NewName", "i", playerid);
		  	}
		}
		case DIALOG_CMDS:
		{
		    if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      		eString[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(response)
		    {
		        if(PlayerInfo[playerid][Language] == 1)
		    	{
					strcat(eString, "{03DA00}Comenzi pentru vehicole:\n");
				 	strcat(eString, "{FF0000}/v {FFFFFF}- Meniu cu toate vehiculele de pe server.\n");
				 	strcat(eString, "{FF0000}/car [vehicle name/ID] {FFFFFF}- Creeaza o masina mai repede dupa nume/ID.\n");
			  		strcat(eString, "{FF0000}/nrg {FFFFFF}- Creaza o motocicleta NRG-500.\n");
				 	strcat(eString, "{FF0000}/fix {FFFFFF}- Repara motorul masinii, nu si exteriorul.\n");
					strcat(eString, "{FF0000}/tune {FFFFFF}- Tuneaza masina si salveaza tuningul in contul tau pentru alta data.\n");
					strcat(eString, "{FF0000}/tc1, /tc2, /tc3 {FFFFFF}- Cateva stiluri de tuning prestabilite de noi.\n");
					strcat(eString, "{FF0000}/onb {FFFFFF}- Reintoarce-te pe motocicleta atunci cand cazi.\n");
					strcat(eString, "{FF0000}/o {FFFFFF}- Deschide sau inchide usi ale vehicolului tau.\n");
					strcat(eString, "{FF0000}/lock,/unlock {FFFFFF}- Incuie sau descuie usile unui vehicul.\n");
					strcat(eString, "{FF0000}/speed {FFFFFF}- Atinge viteza luminii cu masina.\n");
					strcat(eString, "{FF0000}/vup {FFFFFF}- Sari cu masina cat de tare poti.\n");
					strcat(eString, "{FF0000}/np {FFFFFF}- Pune masinii pe care o conduci un numar de inmatriculare propriu!\n");
					strcat(eString, "{FF0000}/neon {FFFFFF}- Adauga neoane masinii tale!\n");
					strcat(eString, "{FF0000}/vc {FFFFFF}- Controleaza-ti masina (Capota, Geamuriile, Usile)\n\n");
					strcat(eString, "{03DA00}Comenzi pentru DeathMeach:\n");
					strcat(eString, "{FF0000}/arme {FFFFFF}- Meniu cu arme.\n");
					strcat(eString, "{FF0000}/barme {FFFFFF}- Meniu cu arme mari.\n");
					strcat(eString, "{FF0000}/ww,/rw {FFFFFF}- Doua seturi de arme.\n");
					strcat(eString, "{FF0000}/duel {FFFFFF}- Invita un prieten intr-un duel.\n");
					strcat(eString, "{FF0000}/jetpack {FFFFFF}- Omul racheta.\n");
					strcat(eString, "{FF0000}/c4 {FFFFFF}- Pune bombe in masini.\n");
					strcat(eString, "{FF0000}/godp {FFFFFF}- Toti jucatorii care folosesc /godmode trecuti aici.\n", 1900);
					SPD(playerid, DIALOG_CMDS + 1, MSGBOX, "Comenzi Pagina 2", eString, "Pagina 3", "Inchide");
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else if(PlayerInfo[playerid][Language] == 2)
				{
					strcat(eString, "{03DA00}Commands for vehicles:\n");
					strcat(eString, "{FF0000}/v {FFFFFF}- Meniu with all vehicles.\n");
					strcat(eString, "{FF0000}/car [vehicle name/ID] {FFFFFF}- Create a car by his nume/ID.\n");
					strcat(eString, "{FF0000}/nrg {FFFFFF}- Create a NRG-500 motorcycle.\n");
					strcat(eString, "{FF0000}/fix {FFFFFF}- Fix vehicle engine only.\n");
					strcat(eString, "{FF0000}/tune {FFFFFF}- Tune your car and save the tunning in your account for lter use.\n");
					strcat(eString, "{FF0000}/tc1,/tc2,/tc3 {FFFFFF}- Three predefined tunning styles.\n");
					strcat(eString, "{FF0000}/onb {FFFFFF}- Get back on your bicke after you fall off.\n");
					strcat(eString, "{FF0000}/o {FFFFFF}- Open or close doors of your vehicle.\n");
					strcat(eString, "{FF0000}/lock,/unlock {FFFFFF}- Lock or unlock your car doors.\n");
					strcat(eString, "{FF0000}/speed {FFFFFF}- Reach light speed with your car.\n");
					strcat(eString, "{FF0000}/vup {FFFFFF}- Make your car to jump.\n");
					strcat(eString, "{FF0000}/np {FFFFFF}- Get a costom number plate for your car!\n");
					strcat(eString, "{FF0000}/neon {FFFFFF}- Add neons to your car!\n");
					strcat(eString, "{FF0000}/vc {FFFFFF}- Control your vehicle (Trunk,cWindows,cDoors)\n\n");
					strcat(eString, "{03DA00}Comenzi pentru DeathMeach:\n");
					strcat(eString, "{FF0000}/arme {FFFFFF}- Meniu with weapons.\n");
					strcat(eString, "{FF0000}/barme {FFFFFF}- Meniu with big weapons.\n");
					strcat(eString, "{FF0000}/ww,/rw {FFFFFF}- Thow sets of weapons.\n");
					strcat(eString, "{FF0000}/duel {FFFFFF}- Invite a frend of you to a duel.\n");
					strcat(eString, "{FF0000}/jetpack {FFFFFF}- Rocket Man.\n");
					strcat(eString, "{FF0000}/c4 {FFFFFF}- Put C4 Bombs in cars.\n");
					strcat(eString, "{FF0000}/godp {FFFFFF}- All players which use /godmode will be found here.\n", 1900);
				    SPD(playerid, DIALOG_CMDS + 1, MSGBOX, "Commands - Page 2:", eString, "Page 3", "Close");
				}
		    }
		}
		case DIALOG_CMDS + 1:
		{
		    if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      		eString[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(response)
		    {
		        if(PlayerInfo[playerid][Language] == 1)
	   			{
					strcat(eString, "{03DA00}Comenzi pentru bani, coins si ale statistici:\n");
					strcat(eString, "{FF0000}/trade {FFFFFF}- Vinde sau cumpara statistici de la altii jucatori.\n");
					strcat(eString, "{FF0000}/givecoins {FFFFFF}- Imprumuta pe cineva cu coins.\n");
					strcat(eString, "{FF0000}/givecash {FFFFFF}- Imprumuta pe cineva cu bani.\n");
					strcat(eString, "{FF0000}/deposit {FFFFFF}- Daca ai prea multi bani, pune-i sa stea in siguranta in banca.\n");
					strcat(eString, "{FF0000}/bank {FFFFFF}- Vezi cati bani ai in banca.\n");
					strcat(eString, "{FF0000}/withdraw {FFFFFF}- Scoate bani din banca.\n");
					strcat(eString, "{FF0000}/ranks {FFFFFF}- Alfa rank-urile pe baza statistici.\n");
					strcat(eString, "{FF0000}/rob {FFFFFF}- Fura un jucator.\n");
					strcat(eString, "{FF0000}/top {FFFFFF}- Top jucatori si top clanuri.\n\n");
					strcat(eString, "{03DA00}Alte comenzi interesante:\n");
					strcat(eString, "{FF0000}/skin {FFFFFF}- Schimbati infatisarea.\n");
					strcat(eString, "{FF0000}/respect {FFFFFF}- Adauga un punc de respect sau de dispret unui jucator.\n");
					strcat(eString, "{FF0000}/changename {FFFFFF}- Vrei un nume nou? Foloseste aceasta comanta pentru a iti muta statisticile.\n");
					strcat(eString, "{FF0000}/vw {FFFFFF}- Pleaca in lumea ta! Acolo nimeni nu te va vedea.\n");
					strcat(eString, "{FF0000}/vreme {FFFFFF}- Schimba vremea de afara.\n");
					strcat(eString, "{FF0000}/zi,/noapte {FFFFFF}- Joaca-te cu soarele.\n");
					strcat(eString, "{FF0000}/para {FFFFFF}- Ai cazut din al noulea cer? Ia o parasuta.\n");
					strcat(eString, "{FF0000}/happy, /sad {FFFFFF}- Arata in chat cum te simti!\n");
					strcat(eString, "{FF0000}/credits {FFFFFF}- Te-ai intrebat vriodata cine a facut acest server?\n");
					strcat(eString, "{FF0000}/styles {FFFFFF}- Stiluri diferite de lupta si mers.\n");
					strcat(eString, "{FF0000}/proprietatii {FFFFFF}- Informatii despre proprietatile tale.\n");
					strcat(eString, "{FF0000}/case {FFFFFF}- Comenzile caselor.\n");
					strcat(eString, "{FF0000}/afaceri {FFFFFF}- Comenzile afacerilor.\n");
					strcat(eString, "{FF0000}/namestag {FFFFFF}- Ascunde numele jucatorilor.\n");
					strcat(eString, "{FF0000}/hidetds {FFFFFF}- Ascunde mesajele care iti apar pe ecran.\n");
					strcat(eString, "{FF0000}/gps[ID/off] {FFFFFF}- Cauta pe cineva folosind GPS.\n");
					strcat(eString, "{FF0000}/brb {FFFFFF}- Pune-te BRB cand pleci de la tastatura.\n");
					strcat(eString, "{FF0000}/getid [parte din nume] {FFFFFF}- Gaseste ID-ul unui jucator.\n");
					strcat(eString, "{FF0000}/w [text] {FFFFFF}- Soapta! Mesajul tau va aparea doar deasupra capului, nu si in chat.\n");
					SPD(playerid, DIALOG_CMDS + 2, MSGBOX, "Comenzi Pagina 3", eString, "Pagina 1", "Inchide");
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else if(PlayerInfo[playerid][Language] == 2)
				{
				    strcat(eString, "{03DA00}Commands to manage your mony, coins and other statistics:\n");
					strcat(eString, "{FF0000}/trade {FFFFFF}- Trade your stats with other players.\n");
					strcat(eString, "{FF0000}/givecoins {FFFFFF}- Borrow your friends with some coins.\n");
					strcat(eString, "{FF0000}/givecash {FFFFFF}- Borrow your friends with some money.\n");
					strcat(eString, "{FF0000}/deposit {FFFFFF}- If you are rich, depost some money in bank, to keep them safe.\n");
					strcat(eString, "{FF0000}/bank {FFFFFF}- See your bank statement.\n");
					strcat(eString, "{FF0000}/withdraw {FFFFFF}- Withdraw money from your bank.\n");
					strcat(eString, "{FF0000}/ranks {FFFFFF}- See avabile ranks by your statistics.\n");
					strcat(eString, "{FF0000}/rob {FFFFFF}- Rob players.\n");
					strcat(eString, "{FF0000}/fpk {FFFFFF}- First Person Mode\n");
					strcat(eString, "{FF0000}/top {FFFFFF}- Top players and top clans.\n\n");
					strcat(eString, "{03DA00}Other interesting commands:\n");
					strcat(eString, "{FF0000}/skin {FFFFFF}- Change your skin.\n");
					strcat(eString, "{FF0000}/respect {FFFFFF}- Add a respect point to your friends.\n");
				    SPD(playerid, DIALOG_CMDS + 2, MSGBOX, "Commands - Page 3:", eString, "Page 1", "Close");
				}
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case DIALOG_CMDS + 2:
		{
      		eString[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(response)
		    {
		        if(PlayerInfo[playerid][Language] == 1)
				{
					strcat(eString, ""SERVER_NAME" {FFFFFF}Comenzi!\n");
		 			strcat(eString, "{FFFFFF}Toate comenzile pot fi folosite apasand T, ` sau F6. Incearca-le pe toate!\n\n\n");
					strcat(eString, "{03DA00}Comenzi de mare interes fara o categorie specifia:\n");
					strcat(eString, "{FF0000}/hold {FFFFFF}- Ataseaza obiecte de corp pentru a-ti unica infatisarea.\n");
	 				strcat(eString, "{FF0000}/jobs {FFFFFF}- Ai nevoie de bani sau coins? I-ati un job.\n");
					strcat(eString, "{FF0000}/createclan {FFFFFF}- Vrei sa fii liderul unui clan? Creaza-ti unul folosind aceasta comanda.\n");
					strcat(eString, "{FF0000}/animlist {FFFFFF}- Afla toate animatiile disponibile pe server.\n");
					strcat(eString, "{FF0000}/ad {FFFFFF}- Ai de facut un anunt? Foloseste aceasta comanda.\n");
					strcat(eString, "{FF0000}/mp3 {FFFFFF}- Cea mai noua muzica direct la noi pe server.\n");
					strcat(eString, "{FF0000}/buyvip {FFFFFF}- Un Very Important Player benefciaza de multe comenzi noi.\n");
					strcat(eString, "{FF0000}/vcmds {FFFFFF}- Afla comenzile unui VIP.\n");
					strcat(eString, "{FF0000}/spassword {FFFFFF}- Adauga o parola secundara pentru cont.\n");
					strcat(eString, "{FF0000}/cadouri {FFFFFF}- Informatii despre sistemul de cadouri.\n\n");
					strcat(eString, "{03DA00}Comenzi pentru Teleportari:\n");
					strcat(eString, "{FF0000}/teles {FFFFFF}- Toate teleportarile de pe server le gasesti aici.\n");
					strcat(eString, "{FF0000}/int {FFFFFF}- Teleportari catre interioare.\n");
					strcat(eString, "{FF0000}/up {FFFFFF}- Teleporteaza-te in al noulea cer.\n");
					strcat(eString, "{FF0000}/s {FFFFFF}- Salveaza-ti pozitia.\n");
					strcat(eString, "{FF0000}/l {FFFFFF}- Intoarce-te la pozitia salvata.\n", 1900);
					SPD(playerid, DIALOG_CMDS, MSGBOX, "Comenzi Pagina 1", eString, "Pagina 2", "Inchide");
				}
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else if(PlayerInfo[playerid][Language] == 2)
				{
					strcat(eString, ""SERVER_NAME" {FFFFFF}Commands!\n");
		 			strcat(eString, "{FFFFFF}You can use those commands in chat (T or F6). Try them all!\n\n\n");
					strcat(eString, "{03DA00}Very usefull commands without a category:\n");
					strcat(eString, "{FF0000}/hold {FFFFFF}- Attach objects on your body to create a unique look.\n");
					strcat(eString, "{FF0000}/jobs {FFFFFF}- Do you need money or coins? Get a job.\n");
					strcat(eString, "{FF0000}/createclan {FFFFFF}- Do you want to be leader in a clan? Create one.\n");
					strcat(eString, "{FF0000}/animlist {FFFFFF}- All avabile animations.\n");
					strcat(eString, "{FF0000}/ad {FFFFFF}- Do you want to make an advertisement? Use this command.\n");
					strcat(eString, "{FF0000}/mp3 {FFFFFF}- Newest music directly on our server.\n");
					strcat(eString, "{FF0000}/buyvip {FFFFFF}- A Very Important Player can use more interesting commands.\n");
					strcat(eString, "{FF0000}/vcmds {FFFFFF}- See all VIP commands and benefits.\n");
					strcat(eString, "{FF0000}/spassword {FFFFFF}- Add a secondary password to your account.\n");
					strcat(eString, "{FF0000}/cadouri {FFFFFF}- Informations about Gifts System.\n\n");
					strcat(eString, "{03DA00}Commands to teleport:\n");
					strcat(eString, "{FF0000}/teles {FFFFFF}- Al most all teleports you can find here.\n");
					strcat(eString, "{FF0000}/int {FFFFFF}- Teleports to interiors.\n");
					strcat(eString, "{FF0000}/up {FFFFFF}- Teleport to seventh heaven.\n");
					strcat(eString, "{FF0000}/s {FFFFFF}- Save your curent position.\n");
					strcat(eString, "{FF0000}/l {FFFFFF}- Load your last saved position.\n", 1900);
					SPD(playerid, DIALOG_CMDS, MSGBOX, "Commands - Page 1:", eString, "Page 2", "Close");
				}
			}
		}
		case DIALOG_HOUSE_INTERIOR_CHANGE:
	    {
	        if(!response) return true;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			new h_owner = PlayerInfo[playerid][House];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][Coins] -= 500;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            switch(listitem)
			{
			    case 0:
				{
				    if(PlayerInfo[playerid][Coins] < 30) return SendError(playerid, "You don't have enough coins to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] -= 30;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					HouseInfo[h_owner][InteriorX] = 1299.14, HouseInfo[h_owner][InteriorY] = -794.77, HouseInfo[h_owner][InteriorZ] = 1084.00;
	 	    		HouseInfo[h_owner][Interior] = 5, SaveHouse(h_owner);
				}
				case 1:
				{
				    if(PlayerInfo[playerid][Coins] < 70) return SendError(playerid, "You don't have enough coins to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] -= 70;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					HouseInfo[h_owner][InteriorX] = 2496.65, HouseInfo[h_owner][InteriorY] = -1696.55, HouseInfo[h_owner][InteriorZ] = 1014.74;
				 	HouseInfo[h_owner][Interior] = 3, SaveHouse(h_owner);
				}
				case 2:
				{
				    if(PlayerInfo[playerid][Coins] < 100) return SendError(playerid, "You don't have enough coins to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] -= 100;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					HouseInfo[h_owner][InteriorX] = 2365.42, HouseInfo[h_owner][InteriorY] = -1131.85, HouseInfo[h_owner][InteriorZ] = 1050.88;
					HouseInfo[h_owner][Interior] = 8, SaveHouse(h_owner);
				}
				case 3:
				{
				    if(PlayerInfo[playerid][Coins] < 20) return SendError(playerid, "You don't have enough coins to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] -= 20;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					HouseInfo[h_owner][InteriorX] = 2260.76, HouseInfo[h_owner][InteriorY] = -1210.45, HouseInfo[h_owner][InteriorZ] = 1049.02;
					HouseInfo[h_owner][Interior] = 10, SaveHouse(h_owner);
				}
				case 4:
				{
				    if(PlayerInfo[playerid][Coins] < 130) return SendError(playerid, "You don't have enough coins to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] -= 130;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					HouseInfo[h_owner][InteriorX] = 2251.85, HouseInfo[h_owner][InteriorY] = -1138.16, HouseInfo[h_owner][InteriorZ] = 1050.63;
					HouseInfo[h_owner][Interior] = 9, SaveHouse(h_owner);
				}
				case 5:
				{
				    if(PlayerInfo[playerid][Coins] < 50) return SendError(playerid, "You don't have enough coins to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] -= 50;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					HouseInfo[h_owner][InteriorX] = 2567.52, HouseInfo[h_owner][InteriorY] = -1294.59, HouseInfo[h_owner][InteriorZ] = 1063.25;
					HouseInfo[h_owner][Interior] = 2, SaveHouse(h_owner);
				}
				case 6:
				{
					if(PlayerInfo[playerid][Coins] < 20) return SendError(playerid, "You don't have enough coins to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] -= 20;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					HouseInfo[h_owner][InteriorX] = 235.508994, HouseInfo[h_owner][InteriorY] = 1189.169897, HouseInfo[h_owner][InteriorZ] = 1080.339966;
					HouseInfo[h_owner][Interior] = 3, SaveHouse(h_owner);
				}
				case 7:
				{
				    if(PlayerInfo[playerid][Coins] < 20) return SendError(playerid, "You don't have enough coins to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] -= 20;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					HouseInfo[h_owner][InteriorX] = 225.756989, HouseInfo[h_owner][InteriorY] = 1240.000000, HouseInfo[h_owner][InteriorZ] = 1082.149902;
				 	HouseInfo[h_owner][Interior] = 2, SaveHouse(h_owner);
				}
				case 8:
				{
				    if(PlayerInfo[playerid][Coins] < 30) return SendError(playerid, "You don't have enough coins to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] -= 30;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					HouseInfo[h_owner][InteriorX] = 223.043991,	HouseInfo[h_owner][InteriorY] = 1289.259888, HouseInfo[h_owner][InteriorZ] = 1082.199951;
					HouseInfo[h_owner][Interior] = 1, SaveHouse(h_owner);
				}
				case 9:
				{
				    if(PlayerInfo[playerid][Coins] < 20) return SendError(playerid, "You don't have enough coins to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] -= 20;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					HouseInfo[h_owner][InteriorX] = 225.630997, HouseInfo[h_owner][InteriorY] = 1022.479980, HouseInfo[h_owner][InteriorZ] = 1084.069946;
					HouseInfo[h_owner][Interior] = 7, SaveHouse(h_owner);
				}
				case 10:
				{
				    if(PlayerInfo[playerid][Coins] < 20) return SendError(playerid, "You don't have enough coins to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] -= 20;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					HouseInfo[h_owner][InteriorX] = 295.138977, HouseInfo[h_owner][InteriorY] = 1474.469971, HouseInfo[h_owner][InteriorZ] = 1080.519897;
					HouseInfo[h_owner][Interior] = 15, SaveHouse(h_owner);
				}
				case 11:
				{
				    if(PlayerInfo[playerid][Coins] < 20) return SendError(playerid, "You don't have enough coins to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] -= 20;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					HouseInfo[h_owner][InteriorX] = 328.493988, HouseInfo[h_owner][InteriorY] = 1480.589966, HouseInfo[h_owner][InteriorZ] = 1084.449951;
					HouseInfo[h_owner][Interior] = 15, SaveHouse(h_owner);
				}
				case 12:
				{
				    if(PlayerInfo[playerid][Coins] < 20) return SendError(playerid, "You don't have enough coins to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] -= 20;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					HouseInfo[h_owner][InteriorX] = 385.803986, HouseInfo[h_owner][InteriorY] = 1471.769897, HouseInfo[h_owner][InteriorZ] = 1080.209961;
					HouseInfo[h_owner][Interior] = 15, SaveHouse(h_owner);
				}
				case 13:
				{
				    if(PlayerInfo[playerid][Coins] < 200) return SendError(playerid, "You don't have enough coins to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] -= 200;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					HouseInfo[h_owner][InteriorX] = 2451.77, HouseInfo[h_owner][InteriorY] = -1699.80, HouseInfo[h_owner][InteriorZ] = 1013.51;
					HouseInfo[h_owner][Interior] = 2, SaveHouse(h_owner);
				}
				case 14:
				{
				    if(PlayerInfo[playerid][Coins] < 150) return SendError(playerid, "You don't have enough coins to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] -= 150;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					HouseInfo[h_owner][InteriorX] = 2535.83, HouseInfo[h_owner][InteriorY] = -1674.32, HouseInfo[h_owner][InteriorZ] = 1015.50;
					HouseInfo[h_owner][Interior] = 1, SaveHouse(h_owner);
				}
				case 15:
				{
				    if(PlayerInfo[playerid][Coins] < 400) return SendError(playerid, "You don't have enough coins to use this option!");
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[playerid][Coins] -= 400;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					HouseInfo[h_owner][InteriorX] = 2220.26, HouseInfo[h_owner][InteriorY] = -1148.01, HouseInfo[h_owner][InteriorZ] = 1025.80;
					HouseInfo[h_owner][Interior] = 15, SaveHouse(h_owner);
				}
			}
			return true;
	    }
	    case DIALOG_HOUSE_INTERIOR_CHANGE2:
	    {
			eString[0] = EOS;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(response)
	        {
			    if(listitem == 0)
			    {
				    strcat(eString, "House Description\tPrice\n\
					{006FFF}Madd Doggs Mansion\t{00CC00}30 coins\n\
					{006FFF}The Johnsons House\t{00CC00}70 coins\n\
	              	{006FFF}Verdant Bluffs Safehouse\t{00CC00}100 coins\n\
	              	{006FFF}Hashbury House\t{00CC00}20 coins\n\
	              	{006FFF}Golden Bed Motel Room\t{00CC00}130 coins\n\
	    			{006FFF}Big Smoke Crack Palace\t{00CC00}50 coins\n\
	    			{006FFF}House 1\t{00CC00}20 coins\n\
	              	{006FFF}House 2\t{00CC00}20 coins\n\
	              	{006FFF}House 3\t{00CC00}20 coins\n\
	              	{006FFF}House 4\t{00CC00}20 coins\n\
	    			{006FFF}House 5\t{00CC00}20 coins\n\
	              	{006FFF}House 6\t{00CC00}20 coins\n\
	              	{006FFF}House 7\t{00CC00}20 coins\n\
					{006FFF}Ryder's House\t{00CC00}200 coins\n\
					{006FFF}Sweets House\t{00CC00}150 coins\n\
					{006FFF}Jefferson Motel\t{00CC00}400 coins");
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        SPD(playerid, DIALOG_HOUSE_INTERIOR_CHANGE, HEADERS, "Change House Interior", eString, "Select", "Cancel");
			    }
			    if(listitem == 1)
			    {
			        if(HouseInfo[PlayerInfo[playerid][House]][h_Level] == 1) return SendError(playerid, "You are not house 'Premium' to continue!");
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       				strcat(eString, "House Description\tPrice\n\
					   				 {006FFF}Modern House 1\t{00CC00}200 coins\n\
					   				 {006FFF}Modern House 2\t{00CC00}100 coins\n\
							         {006FFF}Modern House 3\t{00CC00}300 coins\n\
									 {006FFF}Modern House 4\t{00CC00}50 coins\n\
									 {006FFF}Modern House 5\t{00CC00}80 coins\n\
									 {006FFF}Modern House 6\t{00CC00}100 coins\n\
									 {006FFF}Modern House 7\t{00CC00}300 coins");
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        SPD(playerid, DIALOG_HOUSE_INTERIOR_CHANGE2 + 1, HEADERS, "Change House Interior", eString, "Select", "Cancel");
			    }
			}
	    }
	    case DIALOG_HOUSE_INTERIOR_CHANGE2 + 1:
	    {
            if(response)
            {
				new h_owner = PlayerInfo[playerid][House];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				switch(listitem)
				{
				    case 0:
					{
					    if(PlayerInfo[playerid][Coins] < 200) return SendError(playerid, "You don't have enough coins to use this option!");
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    PlayerInfo[playerid][Coins] -= 200;
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
						HouseInfo[h_owner][InteriorX] = 243.5149, HouseInfo[h_owner][InteriorY] = -1850.8789,  HouseInfo[h_owner][InteriorZ] = 3333.9329;
						HouseInfo[h_owner][Interior] = 5, SaveHouse(h_owner);
					}
					case 1:
					{
						if(PlayerInfo[playerid][Coins] < 100) return SendError(playerid, "You don't have enough coins to use this option!");
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    PlayerInfo[playerid][Coins] -= 100;
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
						HouseInfo[h_owner][InteriorX] = 1377.8347, HouseInfo[h_owner][InteriorY] = -820.3710, HouseInfo[h_owner][InteriorZ] = 1092.3500;
						HouseInfo[h_owner][Interior] = 3, SaveHouse(h_owner);
					}
					case 2:
					{
					    if(PlayerInfo[playerid][Coins] < 300) return SendError(playerid, "You don't have enough coins to use this option!");
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    PlayerInfo[playerid][Coins] -= 300;
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        HouseInfo[h_owner][InteriorX] = 852.1783, HouseInfo[h_owner][InteriorY] = 1997.9664, HouseInfo[h_owner][InteriorZ] = 1011.0809;
			 	 		HouseInfo[h_owner][Interior] = 8, SaveHouse(h_owner);
					}
					case 3:
					{
					    if(PlayerInfo[playerid][Coins] < 50) return SendError(playerid, "You don't have enough coins to use this option!");
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    PlayerInfo[playerid][Coins] -= 50;
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    HouseInfo[h_owner][InteriorX] = 244.8588, HouseInfo[h_owner][InteriorY] = 1766.7002, HouseInfo[h_owner][InteriorZ] = 1000.6110;
					 	HouseInfo[h_owner][Interior] = 10, SaveHouse(h_owner);
					}
					case 4:
					{
					    if(PlayerInfo[playerid][Coins] < 80) return SendError(playerid, "You don't have enough coins to use this option!");
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    PlayerInfo[playerid][Coins] -= 80;
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    HouseInfo[h_owner][InteriorX] = 1508.0115, HouseInfo[h_owner][InteriorY] = -1580.0879, HouseInfo[h_owner][InteriorZ] = -51.7041;
					 	HouseInfo[h_owner][Interior] = 299, SaveHouse(h_owner);
					}
					case 5:
					{
					    if(PlayerInfo[playerid][Coins] < 100) return SendError(playerid, "You don't have enough coins to use this option!");
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    PlayerInfo[playerid][Coins] -= 100;
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    HouseInfo[h_owner][InteriorX] = 1445.9106, HouseInfo[h_owner][InteriorY] = -626.3766, HouseInfo[h_owner][InteriorZ] = 1001.0859;
					 	HouseInfo[h_owner][Interior] = 98, SaveHouse(h_owner);
					}
					case 6:
					{
					    if(PlayerInfo[playerid][Coins] < 300) return SendError(playerid, "You don't have enough coins to use this option!");
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    PlayerInfo[playerid][Coins] -= 300;
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    Announce(playerid, "~G~~H~~H~Your house interior~N~~G~~H~~H~has been changed!", 6000, 3);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    HouseInfo[h_owner][InteriorX] = 1237.0632, HouseInfo[h_owner][InteriorY] = -668.4739, HouseInfo[h_owner][InteriorZ] = 1085.6919;
					 	HouseInfo[h_owner][Interior] = 67, SaveHouse(h_owner);
					}
				}
			}
	    }
		case DIALOG_HOUSE_OPTIONS:
		{
		    if(response)
			{
			    eString[0] = EOS;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    switch(listitem)
			    {
			        case 0: return cmd_buy(playerid, "");
					case 1: return cmd_sell(playerid, "");
					case 2: return cmd_lock(playerid, "");
					case 3: return cmd_enter(playerid, "");
					case 4: return cmd_exit(playerid, "");
					case 5: return cmd_visit(playerid, "");
					case 6: return cmd_myprops(playerid, "");
					case 7: return cmd_renew(playerid, "");
					case 8: return cmd_myhouse(playerid, "");
					case 9: return cmd_chint(playerid, "");
					case 10:
					{
					    if(PlayerInfo[playerid][House] == 0) return SendError(playerid, "You doesn't have house to use this action!");
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    if(HouseInfo[PlayerInfo[playerid][House]][h_Level] == 2) return SendError(playerid, "You already have premium rank on your house!");
					    else
					    {
					        strcat(eString, "{FFFFFF}Do you really want to upgrade your house level to 2 (Premium) ?\n");
					    	strcat(eString, "{FFFFFF}This action you will cost{00CC00} 100.000 coins & VIP Gold", 780);
							SPD(playerid, DIALOG_HOUSE_OPTIONS + 1, MSGBOX, "House Level Upgrade", eString, "No", "Yes");
				        }
					}
				}
			}
		}
		case DIALOG_HOUSE_OPTIONS + 1:
		{
			if(!response)
			{
			    if(PlayerInfo[playerid][Coins] < 100000) return SendError(playerid, "You doesnt't have enought coins to use this option!");
			    if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    new String[512];
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				Announce(playerid, "~G~~H~~H~Your house succesfully~N~~G~~H~~H~has been upgraded!", 6000, 3);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerInfo[playerid][Coins] -= 100000;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				HouseInfo[PlayerInfo[playerid][House]][h_Level] = 2;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String, sizeof(String), "{00FF22}Owned by: {FF0000}%s\n\
								  	  {00FF22}House Level: {FF0000}Premium\n\
								  	  {00FF22}Type {FF9900}/house {00FF22}for more details.", PN(playerid));
				UpdateDynamic3DTextLabelText(housei[PlayerInfo[playerid][House]], ~1, String);
			}
		}
		case DIALOG_VISITHOUSE:
		{
		    if(!response) return true;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        new housenumber = GetHouseID(playerid);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][Coins] < HouseInfo[housenumber][Rent]) return SendError(playerid, "Not enought coins!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][Coins] -= HouseInfo[housenumber][Rent];
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        PlayerInfo[playerid][InHouse] = 1, SCM(playerid, YELLOW, "You entered the house!");
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SetPlayerInterior(playerid, HouseInfo[housenumber][Interior]), SetPlayerPos(playerid, HouseInfo[housenumber][InteriorX], HouseInfo[housenumber][InteriorY], HouseInfo[housenumber][InteriorZ]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    return true;
		}
	    case DIALOG_STYLE_FIGHT:
	    {
	        if(response)
	        {
				switch(listitem)
		        {
		            case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
		            case 1: SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
		            case 2: SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
		            case 3: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
		            case 4: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
		            case 5: SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
		        }
			}
	        return true;
	    }
	    case DIALOG_DESCRIPTION:
	    {
	        if(response)
	        {
				new string[512], string2[512], string3[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(string, sizeof string, "{FFFFFF}\"%s\"\n\
				                               \n\
				                               {FFFFFF}To change it, write a new text below and press{FF0000} Save{FFFFFF}.", PlayerInfo[playerid][DLine1]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(string2, sizeof string2, "{FFFFFF}\"%s\"\n\
				                               \n\
				                               {FFFFFF}To change it, write a new text below and press{FF0000} Save{FFFFFF}.", PlayerInfo[playerid][DLine2]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(string3, sizeof string3, "{FFFFFF}\"%s\"\n\
				                               \n\
				                               {FFFFFF}To change it, write a new text below and press{FF0000} Save{FFFFFF}.", PlayerInfo[playerid][DLine3]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				switch(listitem)
		        {
		            case 0: SPD(playerid, DIALOG_DESCRIPTION1, INPUT, "{FFFFFF}Edit line{00CC00} 1", string, "Save", "Cancel");
		            case 1: SPD(playerid, DIALOG_DESCRIPTION2, INPUT, "{FFFFFF}Edit line{00CC00} 2", string2, "Save", "Cancel");
		            case 2: SPD(playerid, DIALOG_DESCRIPTION3, INPUT, "{FFFFFF}Edit line{00CC00} 3", string3, "Save", "Cancel");
		        }
			}
	        return true;
	    }
	    case DIALOG_DESCRIPTION1:
	    {
	        if(response)
	        {
				new RoMessage[150] = "Ti-ai modificat Descrierea! Scrie {FF0000}/Stats {FFE100}pentru a o vedea!";
			    new EnMessage[150] = "You have updated your Description! Type {FF0000}/Stats {FFE100}to see it!";
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(PlayerInfo[playerid][DLine1], 300, "%s", inputtext), format(StrH, 400, "%s/%s/%s", PlayerInfo[playerid][DLine1], PlayerInfo[playerid][DLine2], PlayerInfo[playerid][DLine3]);
	            SCM(playerid, YELLOW, (PlayerInfo[playerid][Language] == 1) ? RoMessage : EnMessage);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            Announce(playerid, "~G~~H~Description~R~~H~ Updated", 3000, 4);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				eQuery[0] = EOS;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `Description1` = '%s' WHERE `Name` = '%s'", PlayerInfo[playerid][DLine1], PN(playerid));
              	mysql_tquery(SQL, eQuery, "", "");
			}
			return true;
	    }
	    case DIALOG_DESCRIPTION2:
	    {
	        if(response)
	        {
                new RoMessage[150] = "Ti-ai modificat Descrierea! Scrie {FF0000}/Stats {FFE100}pentru a o vedea!";
			    new EnMessage[150] = "You have updated your Description! Type {FF0000}/Stats {FFE100}to see it!";
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(PlayerInfo[playerid][DLine2], 300, "%s", inputtext), format(StrH, 400, "%s/%s/%s", PlayerInfo[playerid][DLine1], PlayerInfo[playerid][DLine2], PlayerInfo[playerid][DLine3]);
	            SCM(playerid, YELLOW, (PlayerInfo[playerid][Language] == 1) ? RoMessage : EnMessage);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            Announce(playerid, "~G~~H~Description~R~~H~ Updated", 3000, 4);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            eQuery[0] = EOS;
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `Description2` = '%s' WHERE `Name` = '%s'", PlayerInfo[playerid][DLine2], PN(playerid));
              	mysql_tquery(SQL, eQuery, "", "");
			}
			return true;
	    }
	    case DIALOG_DESCRIPTION3:
	    {
	        if(response)
	        {
                new RoMessage[150] = "Ti-ai modificat Descrierea! Scrie {FF0000}/Stats {FFE100}pentru a o vedea!";
			    new EnMessage[150] = "You have updated your Description! Type {FF0000}/Stats {FFE100}to see it!";
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(PlayerInfo[playerid][DLine3], 300, "%s", inputtext), format(StrH, 400, "%s/%s/%s", PlayerInfo[playerid][DLine1], PlayerInfo[playerid][DLine2], PlayerInfo[playerid][DLine3]);
	            SCM(playerid, YELLOW, (PlayerInfo[playerid][Language] == 1) ? RoMessage : EnMessage);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            Announce(playerid, "~G~~H~Description~R~~H~ Updated", 3000, 4);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            eQuery[0] = EOS;
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `Description3` = '%s' WHERE `Name` = '%s'", PlayerInfo[playerid][DLine3], PN(playerid));
              	mysql_tquery(SQL, eQuery, "", "");
			}
			return true;
	    }
	}
    switch(dialogid)
    {
	    case DIALOG_DESCRIPTION_D:
	    {
	        if(!response)
			{
				new string[512];
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(string, sizeof string, "Line                \tCurrent text\n\
				                              {FFFFFF}#1           \t%s\n\
				                              {FFFFFF}#2           \t%s\n\
				                              {FFFFFF}#3           \t%s", PlayerInfo[playerid][DLine1], PlayerInfo[playerid][DLine2], PlayerInfo[playerid][DLine3]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SPD(playerid, DIALOG_DESCRIPTION, HEADERS, "{FFFFFF}Edit Description", string, "Select", "Close");
			}
			return true;
		}
	    case DIALOG_WEAPONS:
	    {
	        if(response)
	        {
				switch(listitem)
		        {
		            case 0:
		            {
		                if(GetPlayerMoney(playerid) >= 3500) return GivePlayerWeapon(playerid, 17, 100), GivePlayerMoney(playerid, -3500), SCM(playerid, YELLOW, "You bought an Tear Gas for 3500$");
		                else return SendError(playerid, "Do not have enough money! You need 3500$.");
		            }
		            case 1:
		            {
		                if(GetPlayerMoney(playerid) >= 4000) return GivePlayerWeapon(playerid, 22, 200), GivePlayerMoney(playerid, -4000), SCM(playerid, YELLOW, "You bought an 9mm Pistol for 4000$");
		                else return SendError(playerid, "Do not have enough money! You need 4000$.");
		            }
		            case 2:
		            {
		                if(GetPlayerMoney(playerid) >= 4500) return GivePlayerWeapon(playerid, 23, 120), GivePlayerMoney(playerid, -4500), SCM(playerid, YELLOW, "You bought an Silenced 9mm for 4500$");
						else return SendError(playerid, "Do not have enough money! You need 4500$.");
		            }
		            case 3:
		            {
						if(GetPlayerMoney(playerid) >= 5000) return GivePlayerWeapon(playerid, 24, 150), GivePlayerMoney(playerid, -5000), SCM(playerid, YELLOW, "You buy a Desert Eagle for 5000$");
						else return SendError(playerid, "Do not have enough money! You need 5000$.");
		            }
		            case 4:
		            {
		                if(GetPlayerMoney(playerid) >= 5500) return GivePlayerWeapon(playerid, 25, 100),GivePlayerMoney(playerid, -5500), SCM(playerid, YELLOW, "You bought an Shotgun for 5500$");
						else return SendError(playerid, "Do not have enough money! You need 5500$.");
		            }
		            case 5:
		            {
		                if(GetPlayerMoney(playerid) >= 8000) return GivePlayerWeapon(playerid, 26, 60), GivePlayerMoney(playerid, -8000), SCM(playerid, YELLOW, "You bought an Sawn-off Shotgun for 8000$");
						else return SendError(playerid, "Do not have enough money! You need 8000$.");
		            }
		            case 6:
		            {
		                if(GetPlayerMoney(playerid) >= 7000) return GivePlayerWeapon(playerid, 27, 75), GivePlayerMoney(playerid, -7000), SCM(playerid, YELLOW, "You bought Combat Shotgun for 7000$");
						else return SendError(playerid, "Do not have enough money! You need 7000$.");
		            }
		            case 7:
		            {
		                if(GetPlayerMoney(playerid) >= 5000) return GivePlayerWeapon(playerid, 28, 50), GivePlayerMoney(playerid, -5000), SCM(playerid, YELLOW, "You bought Micro SMG for 5000$");
						else return SendError(playerid, "Do not have enough money! You need 5000$.");
		            }
		            case 8:
		            {
		                if(GetPlayerMoney(playerid) >= 5500) return GivePlayerWeapon(playerid, 29, 85), GivePlayerMoney(playerid, -5500), SCM(playerid, YELLOW, "You bought MP5 for 5500$");
		                else return SendError(playerid, "Do not have enough money! You need 5500$.");
		            }
		            case 9:
		            {
		                if(GetPlayerMoney(playerid) >= 12000) return GivePlayerWeapon(playerid, 30, 50), GivePlayerMoney(playerid, -12000), SCM(playerid, YELLOW, "You bought AK-47 for 12000$");
		                else return SendError(playerid, "Do not have enough money! You need 12000$.");
		            }
		            case 10:
		            {
		                if(GetPlayerMoney(playerid) >= 14000) return GivePlayerWeapon(playerid, 31, 90), GivePlayerMoney(playerid, -14000), SCM(playerid, YELLOW, "You bought M4 for 14000$");
						else return SendError(playerid, "Do not have enough money! You need 14000$.");
		            }
		            case 11:
		            {
		                if(GetPlayerMoney(playerid) >= 9000) return GivePlayerWeapon(playerid, 32, 120), GivePlayerMoney(playerid, -9000), SCM(playerid, YELLOW, "You bought TEC-9 for 9000$");
						else return SendError(playerid, "Do not have enough money! You need 9000$.");
		            }
		            case 12:
		            {
		                if(GetPlayerMoney(playerid) >= 9500) return GivePlayerWeapon(playerid, 33, 90), GivePlayerMoney(playerid, -9500), SCM(playerid, YELLOW, "You bought Country Rifle for 9500$");
						else return SendError(playerid, "Do not have enough money! You need 9500$.");
		            }
		            case 13:
		            {
		                if(GetPlayerMoney(playerid) >= 10000) return GivePlayerWeapon(playerid, 34, 100), GivePlayerMoney(playerid, -10000), SCM(playerid, YELLOW, "You bought Sniper Rifle for 10000$");
		                else return SendError(playerid, "Do not have enough money! You need 10000$.");
		            }
		            case 14:
		            {
		                if(GetPlayerMoney(playerid) >= 2500) return SetPlayerHealth(playerid, 100.0), SetPlayerArmour(playerid, 100.0), GivePlayerMoney(playerid, -2500), SCM(playerid, YELLOW, "You bought Health + Armour for 2500$");
		                else return SendError(playerid, "Do not have enough money! You need 2500$.");
		            }
		            case 15:
		            {
		                ResetPlayerWeapons(playerid);
		            }
		            case 16:
		            {
		                CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/farme");
		            }
		            case 17:
		            {
		                CallRemoteFunction("OnPlayerCommandText", "is", playerid, "/barme");
		            }
		        }
			}
	        return true;
		}
        case DIALOG_TEAMKILL:
        {
		    if(response)
			{
			    switch(listitem)
		        {
		        	case 0:
		        	{
			        format(eString, 144, "[Team Kill] {FF0000}%s{D1D1D1} Killed you because you killing him!", PN(playerid));
		            SCM(PlayerInfo[playerid][TeamKill], GREY2, eString);
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            SetPlayerHealth(PlayerInfo[playerid][TeamKill], 0);
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            PlayerInfo[playerid][TeamKill] = -1;
			        }
			        case 1:
			        {
			        format(eString, 144, "[Team Kill] {FF0000}%s{D1D1D1} Seted you health to 1 because you killing him!", PN(playerid));
		            SCM(PlayerInfo[playerid][TeamKill], GREY2, eString);
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            SetPlayerHealth(PlayerInfo[playerid][TeamKill], 1);
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            PlayerInfo[playerid][TeamKill] = -1;
			        }
			        case 2:
			        {
			        format(eString, 144, "[Team Kill] {FF0000}%s{D1D1D1} Resetet you weapons because you killing him!", PN(playerid));
		            SCM(PlayerInfo[playerid][TeamKill], GREY2, eString);
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            ResetPlayerWeapons(PlayerInfo[playerid][TeamKill]);
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            PlayerInfo[playerid][TeamKill] = -1;
			        }
			        case 3:
			        {
			        format(eString, 144, "[Team Kill] {FF0000}%s{D1D1D1} Forgive you because you killing him!", PN(playerid));
		            SCM(PlayerInfo[playerid][TeamKill], GREY2, eString);
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            PlayerInfo[playerid][TeamKill] = -1;
			        }
		        }
			}
        }
		case DIALOG_JAIL:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		        	case 0: JailPlayer(playerid, liPlayerJail, "Drive-By / Car DM", true);
		        	case 1: JailPlayer(playerid, liPlayerJail, "Spawn Kill", true);
		        	case 2: JailPlayer(playerid, liPlayerJail, "Parkour", true);
		        	case 3: JailPlayer(playerid, liPlayerJail, "AFK in DM / Gang", true);
		        	case 4: JailPlayer(playerid, liPlayerJail, "Jetpack DM", true);
		        	case 5: SPD(playerid, DIALOG_JAIL_OTHER, INPUT, "Jail Reason", "{FFE100}Enter a reason for the jail.\n{00FF2F}Player will be jailed for {FF0000}5 {00FF2F}minutes with the specified reason!", "Jail", "Close");
				}
			}
		}
		case DIALOG_JAIL_OTHER:
		{
			if(response)
			{
	 			JailPlayer(playerid, liPlayerJail, inputtext, true);
		  	}
    	 }
		 case DIALOG_CHECK_ACCOUNT_PASSWORD:
	     {
			if(response)
			{
				new lPassword[33]; eQuery[0] = EOS;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_escape_string(inputtext, lPassword);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s' AND `Password` = '%s'", PN(playerid), MD5_Hash(lPassword));
				mysql_tquery(SQL, eQuery, "ChangeNameReload", "is", playerid, PN(playerid));
			}
	     }
		 case DIALOG_DUEL:
		 {
		    if(response)
		    {
		        switch(listitem)
		        {
		        	case 0:
		        	{
		        	PlayerInfo[playerid][DuelWeapon] = 24;
		        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	eString[0] = EOS;
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	strcat(eString, "{FFFF33}Pune o miza pe care castigatorul duelului o va castiga.\n");
	                strcat(eString, "{FFFF33}Introdu mai jos suma de {00CC00}Coins{FFFF33} pe care vrei sa o pariezi.\n");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	SPD(playerid, DIALOG_DUEL2, INPUT, "{FFFFFF}Duel | Alege miza", eString, "Invite", "Close");
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	}
		        	case 1:
		        	{
		        	PlayerInfo[playerid][DuelWeapon] = 25;
		        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	eString[0] = EOS;
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	strcat(eString, "{FFFF33}Pune o miza pe care castigatorul duelului o va castiga.\n");
	                strcat(eString, "{FFFF33}Introdu mai jos suma de {00CC00}Coins{FFFF33} pe care vrei sa o pariezi.\n");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	SPD(playerid, DIALOG_DUEL2, INPUT, "{FFFFFF}Duel | Alege miza", eString, "Invite", "Close");
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	}
		        	case 2:
		        	{
		        	PlayerInfo[playerid][DuelWeapon] = 26;
		        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	eString[0] = EOS;
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	strcat(eString, "{FFFF33}Pune o miza pe care castigatorul duelului o va castiga.\n");
	                strcat(eString, "{FFFF33}Introdu mai jos suma de {00CC00}Coins{FFFF33} pe care vrei sa o pariezi.\n");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	SPD(playerid, DIALOG_DUEL2, INPUT, "{FFFFFF}Duel | Alege miza", eString, "Invite", "Close");
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	}
		        	case 3:
		        	{
		        	PlayerInfo[playerid][DuelWeapon] = 27;
		        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	eString[0] = EOS;
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	strcat(eString, "{FFFF33}Pune o miza pe care castigatorul duelului o va castiga.\n");
	                strcat(eString, "{FFFF33}Introdu mai jos suma de {00CC00}Coins{FFFF33} pe care vrei sa o pariezi.\n");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	SPD(playerid, DIALOG_DUEL2, INPUT, "{FFFFFF}Duel | Alege miza", eString, "Invite", "Close");
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	}
		        	case 4:
		        	{
		        	PlayerInfo[playerid][DuelWeapon] = 28;
		        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	eString[0] = EOS;
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	strcat(eString, "{FFFF33}Pune o miza pe care castigatorul duelului o va castiga.\n");
	                strcat(eString, "{FFFF33}Introdu mai jos suma de {00CC00}Coins{FFFF33} pe care vrei sa o pariezi.\n");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	SPD(playerid, DIALOG_DUEL2, INPUT, "{FFFFFF}Duel | Alege miza", eString, "Invite", "Close");
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	}
		        	case 5:
		        	{
                    PlayerInfo[playerid][DuelWeapon] = 29;
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	eString[0] = EOS;
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	strcat(eString, "{FFFF33}Pune o miza pe care castigatorul duelului o va castiga.\n");
	                strcat(eString, "{FFFF33}Introdu mai jos suma de {00CC00}Coins{FFFF33} pe care vrei sa o pariezi.\n");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	SPD(playerid, DIALOG_DUEL2, INPUT, "{FFFFFF}Duel | Alege miza", eString, "Invite", "Close");
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                    }
					case 6:
					{
					PlayerInfo[playerid][DuelWeapon] = 30;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	eString[0] = EOS;
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	strcat(eString, "{FFFF33}Pune o miza pe care castigatorul duelului o va castiga.\n");
	                strcat(eString, "{FFFF33}Introdu mai jos suma de {00CC00}Coins{FFFF33} pe care vrei sa o pariezi.\n");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	SPD(playerid, DIALOG_DUEL2, INPUT, "{FFFFFF}Duel | Alege miza", eString, "Invite", "Close");
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					}
					case 7:
					{
					PlayerInfo[playerid][DuelWeapon] = 31;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	eString[0] = EOS;
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	strcat(eString, "{FFFF33}Pune o miza pe care castigatorul duelului o va castiga.\n");
	                strcat(eString, "{FFFF33}Introdu mai jos suma de {00CC00}Coins{FFFF33} pe care vrei sa o pariezi.\n");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	SPD(playerid, DIALOG_DUEL2, INPUT, "{FFFFFF}Duel | Alege miza", eString, "Invite", "Close");
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					}
					case 8:
					{
					PlayerInfo[playerid][DuelWeapon] = 32;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	eString[0] = EOS;
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	strcat(eString, "{FFFF33}Pune o miza pe care castigatorul duelului o va castiga.\n");
	                strcat(eString, "{FFFF33}Introdu mai jos suma de {00CC00}Coins{FFFF33} pe care vrei sa o pariezi.\n");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	SPD(playerid, DIALOG_DUEL2, INPUT, "{FFFFFF}Duel | Alege miza", eString, "Invite", "Close");
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					}
					case 9:
					{
					PlayerInfo[playerid][DuelWeapon] = 33;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	eString[0] = EOS;
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	strcat(eString, "{FFFF33}Pune o miza pe care castigatorul duelului o va castiga.\n");
	                strcat(eString, "{FFFF33}Introdu mai jos suma de {00CC00}Coins{FFFF33} pe care vrei sa o pariezi.\n");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	SPD(playerid, DIALOG_DUEL2, INPUT, "{FFFFFF}Duel | Alege miza", eString, "Invite", "Close");
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					}
					case 10:
					{
					PlayerInfo[playerid][DuelWeapon] = 34;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	eString[0] = EOS;
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	strcat(eString, "{FFFF33}Pune o miza pe care castigatorul duelului o va castiga.\n");
	                strcat(eString, "{FFFF33}Introdu mai jos suma de {00CC00}Coins{FFFF33} pe care vrei sa o pariezi.\n");
                    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        	SPD(playerid, DIALOG_DUEL2, INPUT, "{FFFFFF}Duel | Alege miza", eString, "Invite", "Close");
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					}

		        }
		    }
		    return true;
		 }
		 case DIALOG_DUEL2:
		 {
			if(response)
			{
			new WeaponName[1002];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][DuelMiza] = strval(inputtext);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Announce(playerid, "~w~~h~Invite ~g~~h~Sent~N~~y~~h~Please wait...", 3000, 3);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  	        eString[0] = EOS;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(PlayerInfo[playerid][DuelWeapon] == 24) WeaponName = "Desert Eagle";
	        else if(PlayerInfo[playerid][DuelWeapon] == 25) WeaponName = "Shotgun";
	        else if(PlayerInfo[playerid][DuelWeapon] == 26) WeaponName = "Sawnoff Shotgun";
	        else if(PlayerInfo[playerid][DuelWeapon] == 27) WeaponName = "Combat Shotgun";
	        else if(PlayerInfo[playerid][DuelWeapon] == 28) WeaponName = "Uzi";
	        else if(PlayerInfo[playerid][DuelWeapon] == 29) WeaponName = "MP5";
	        else if(PlayerInfo[playerid][DuelWeapon] == 30) WeaponName = "AK-47";
	        else if(PlayerInfo[playerid][DuelWeapon] == 31) WeaponName = "M4";
	        else if(PlayerInfo[playerid][DuelWeapon] == 32) WeaponName = "Tec-9";
	        else if(PlayerInfo[playerid][DuelWeapon] == 33) WeaponName = "Country Rifle";
	        else if(PlayerInfo[playerid][DuelWeapon] == 34) WeaponName = "Sniper Rifle";
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            format(eString, 1000, "{FFFF33}Ai fost invitat la duel de catre{00CC00} %s{FFFF33}!\n\
						  \n\
						  {FFFFFF}- Premiu/miza:{FF0000} %d Coins\n\
						  {FFFFFF}- Arma:{FF0000} %s\n\
						  \n\
						  {FFFF33}Doresti sa accepti sau sa respingi invitatia ?\n",
 						  PN(playerid),
 						  PlayerInfo[playerid][DuelMiza],    WeaponName);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[PlayerInfo[playerid][DuelID]][DuelID] = playerid;
			PlayerInfo[PlayerInfo[playerid][DuelID]][DuelWeapon] = PlayerInfo[playerid][DuelWeapon];
			PlayerInfo[PlayerInfo[playerid][DuelID]][DuelMiza] = PlayerInfo[playerid][DuelMiza];
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	        SPD(PlayerInfo[playerid][DuelID], DIALOG_DUEL3, MSGBOX, "{FFFFFF}Duel | Invitation", eString, "Accept", "Decline");
            }
    	 }
    	 case DIALOG_DUEL3:
		 {
			if(response)
			{
			ResetPlayerWeapons(playerid);
			ResetPlayerWeapons(PlayerInfo[playerid][DuelID]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        GivePlayerWeapon(playerid, PlayerInfo[playerid][DuelWeapon], 100000);
	        GivePlayerWeapon(PlayerInfo[playerid][DuelID], PlayerInfo[playerid][DuelWeapon], 100000);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SetPlayerPos(playerid, 275.3479,-133.7119,1004.0625);
	        SetPlayerPos(PlayerInfo[playerid][DuelID], 295.4398,-133.9601,1004.0625);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SetPlayerInterior(playerid, 7);
	        SetPlayerInterior(PlayerInfo[playerid][DuelID], 7);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            SetPlayerVirtualWorld(playerid, playerid);
            SetPlayerVirtualWorld(PlayerInfo[playerid][DuelID], playerid);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            PlayerInfo[playerid][InDuel] = 1;
            PlayerInfo[PlayerInfo[playerid][DuelID]][InDuel] = 1;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            PlayerInfo[playerid][InDM] = 1;
            PlayerInfo[PlayerInfo[playerid][DuelID]][InDM] = 1;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            TogglePlayerControllable(playerid, false);
            TogglePlayerControllable(PlayerInfo[playerid][DuelID], false);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        DuelCountDown(playerid);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SetTimerEx("DuelInvite", 3000, false, "i", playerid);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  	}
    	 }
	     case DIALOG_FW:
	     {
	        if(response) return true;
	        if(!response) PlayerInfo[playerid][FW] = 1; Announce(playerid, "~w~Fire Weapon~G~~H~~H~ on", 6000, 3);
			return true;
		 }
		 /*case DIALOG_EDITPLAYER:
		 {
		    if(!response) return true;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			switch(listitem)
			{
			    case 0: SPD(playerid, DIALOG_EDITPLAYER +1, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}Type below the player name to remove Admin:", "Insert", "Cancel");\
			    case 1: SPD(playerid, DIALOG_EDITPLAYER +2, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}Type below the player name to remove RCON:", "Insert", "Cancel");
			    case 2: SPD(playerid, DIALOG_EDITPLAYER +3, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}Type below the player name to add AWP:", "Insert", "Cancel");
			    case 3: SPD(playerid, DIALOG_EDITPLAYER +4, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}Type below the player name to remove VIP:", "Insert", "Cancel");
			    case 4:
				{
				    if(PlayerInfo[playerid][RconType] < 3) return Error(playerid, 8);
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SPD(playerid, DIALOG_EDITPLAYER +5, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}Type below the player name to remove Gems:", "Insert", "Cancel");
				}
			    case 5: SPD(playerid, DIALOG_EDITPLAYER +6, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}Type below the player name to Block/Unblock:", "Insert", "Cancel");
			}
			return true;
		 }
		 case DIALOG_EDITPLAYER +1:
		 {
		    if(!response) return true; new newname = CheckAcc(inputtext);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(strlen(inputtext) > 1 && strlen(inputtext) < 24)
			{
				if(newname == 0) return SPD(playerid, DIALOG_EDITPLAYER +1, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}This name doesn't exist in the database\nType below the player name to remove Admin:", "Insert", "Cancel");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    sscanf(inputtext, "s[24]", inputtext[0]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s'", inputtext[0]);
	            mysql_tquery(SQL, eQuery, "DemoteAdmin", "is", playerid, inputtext[0]);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			}
			else return SPD(playerid, DIALOG_EDITPLAYER +1, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}Invalid size name (Size max 1-24)\nType below the player name to remove Admin:", "Insert", "Cancel");
		 }
		 case DIALOG_EDITPLAYER +2:
		 {
		    if(!response) return true; new newname = CheckAcc(inputtext);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(strlen(inputtext) > 1 && strlen(inputtext) < 24)
			{
				if(newname == 0) return SPD(playerid, DIALOG_EDITPLAYER +1, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}This name doesn't exist in the database\nType below the player name to remove RCON:", "Insert", "Cancel");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    sscanf(inputtext, "s[24]", inputtext[0]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s'", inputtext[0]);
	            mysql_tquery(SQL, eQuery, "DemoteRCON", "is", playerid, inputtext[0]);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			}
			else return SPD(playerid, DIALOG_EDITPLAYER +1, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}Invalid size name (Size max 1-24)\nType below the player name to remove RCON:", "Insert", "Cancel");
		 }
		 case DIALOG_EDITPLAYER +3:
		 {
		    if(!response) return true; new newname = CheckAcc(inputtext);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(strlen(inputtext) > 1 && strlen(inputtext) < 24)
			{
                eQuery[0] = EOS;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(newname == 0) return SPD(playerid, DIALOG_EDITPLAYER +3, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}This name doesn't exist in the database\nType below the player name to add AWP:", "Insert", "Cancel");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    sscanf(inputtext, "s[24]", inputtext[0]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s'", inputtext[0]);
	            mysql_tquery(SQL, eQuery, "AWPHave", "is", playerid, inputtext[0]);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			}
			else return SPD(playerid, DIALOG_EDITPLAYER +3, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}Invalid size name (Size max 1-24)\nType below the player name to add AWP:", "Insert", "Cancel");
		 }
		 case DIALOG_EDITPLAYER +4:
		 {
		    if(!response) return true; new newname = CheckAcc(inputtext);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(strlen(inputtext) > 1 && strlen(inputtext) < 24)
			{
				if(newname == 0) return SPD(playerid, DIALOG_EDITPLAYER +4, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}This name doesn't exist in the database\nType below the player name to remove VIP:", "Insert", "Cancel");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    sscanf(inputtext, "s[24]", inputtext[0]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s'", inputtext[0]);
	            mysql_tquery(SQL, eQuery, "DemoteVIP", "is", playerid, inputtext[0]);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			}
			else return SPD(playerid, DIALOG_EDITPLAYER +4, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}Invalid size name (Size max 1-24)\nType below the player name to remove VIP:", "Insert", "Cancel");
		 }
		 case DIALOG_EDITPLAYER +5:
		 {
		    if(!response) return true; new newname = CheckAcc(inputtext);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(strlen(inputtext) > 1 && strlen(inputtext) < 24)
			{
				if(newname == 0) return SPD(playerid, DIALOG_EDITPLAYER +5, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}This name doesn't exist in the database\nType below the player name to remove Gems:", "Insert", "Cancel");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    sscanf(inputtext, "s[24]", inputtext[0]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s'", inputtext[0]);
	            mysql_tquery(SQL, eQuery, "RemoveGems", "is", playerid, inputtext[0]);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			}
			else return SPD(playerid, DIALOG_EDITPLAYER +5, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}Invalid size name (Size max 1-24)\nType below the player name to remove Gems:", "Insert", "Cancel");
		 }
		 case DIALOG_EDITPLAYER +6:
		 {
		    if(!response) return true; new newname = CheckAcc(inputtext);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(strlen(inputtext) > 1 && strlen(inputtext) < 24)
			{
				if(newname == 0) return SPD(playerid, DIALOG_EDITPLAYER +6, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}This name doesn't exist in the database\nType below the player name to Block/Unblock:", "Insert", "Cancel");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    sscanf(inputtext, "s[24]", inputtext[0]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `Name` = '%s'", inputtext[0]);
	            mysql_tquery(SQL, eQuery, "BlockAccount", "is", playerid, inputtext[0]);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			}
			else return SPD(playerid, DIALOG_EDITPLAYER +6, INPUT, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", "{FFFFFF}Invalid size name (Size max 1-24)\nType below the player name to Block/Unblock:", "Insert", "Cancel");
		 }*/
	     case DIALOG_BOOST:
	     {
            if(response)
            {
	            switch(listitem)
		        {
		            case 0:
	                {
					  if(PlayerInfo[playerid][Coins] < 1000) return SendError(playerid, "You don't have 1000 coins for buy this Boost! Check your /Stats!");
					  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                  PlayerInfo[playerid][boost_timer] = SetTimerEx("Boost", 3600000, false, "i", playerid); // 1 hour
	                  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                  PlayerInfo[playerid][boost] = 1;
	                  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                  PlayerInfo[playerid][Coins] -= 1000;
	                  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                  Announce(playerid, "~G~~H~~H~You have activated boost~N~~G~~H~~H~for~R~~H~ 1~G~~H~~H~ hour!", 6000, 3);
		            }
		            case 1:
	                {
	                  if(PlayerInfo[playerid][Coins] < 2000) return SendError(playerid, "You don't have 2000 coins for buy this Boost! Check your /Stats!");
					  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                  PlayerInfo[playerid][boost_timer] = SetTimerEx("Boost", 7200000, false, "i", playerid); // 2 hours
	                  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                  PlayerInfo[playerid][boost] = 1;
	                  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                  PlayerInfo[playerid][Coins] -= 2000;
	                  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                  Announce(playerid, "~G~~H~~H~You have activated boost~N~~G~~H~~H~for~R~~H~ 2~G~~H~~H~ hours!", 6000, 3);
		            }
		            case 2:
	                {
	                  if(PlayerInfo[playerid][Coins] < 4000) return SendError(playerid, "You don't have 4000 coins for buy this Boost! Check your /Stats!");
					  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                  PlayerInfo[playerid][boost_timer] = SetTimerEx("Boost", 14400000, false, "i", playerid); // 4 hours
	                  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                  PlayerInfo[playerid][boost] = 1;
	                  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                  PlayerInfo[playerid][Coins] -= 4000;
	                  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                  Announce(playerid, "~G~~H~~H~You have activated boost~N~~G~~H~~H~for~R~~H~ 4~G~~H~~H~ hours!", 6000, 3);
		            }
		            case 3:
		            {
					  Announce(playerid, "~R~~H~If you disconnect~N~~R~~H~you will lose the boost!", 6000, 3);
		            }
		        }
	        }
		}
	    case DIALOG_FUNNYWEAPONS:
	    {
	        if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 1, 900), GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You bought an Brass Knuckles successfully for 1000$");
						else return SendError(playerid, "Do not have enough money! You need 1000$.");
					}
					case 1:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 2, 900), GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You bought an Golf Club for 1000$");
						else return SCM(playerid, RED, "Do not have enough money! You need 1000$.");
					}
					case 2:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 3, 900), GivePlayerMoney(playerid, -1000),SCM(playerid, YELLOW, "You bought an Nite Stick for 1000$");
						else return SCM(playerid, RED, "Do not have enough money! You need 1000$.");
					}
					case 3:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 4, 900),GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You bought an Knife for 1000$");
						else return SCM(playerid, RED, "Do not have enough money! You need 1000$.");
					}
					case 4:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 5, 900), GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You bought an Baseball Bat for 1000$");
						else return SCM(playerid, RED, "{FF0000}Do not have enough money! You need 1000$.");
					}
					case 5:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 6, 900), GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You bought an Shovel for 1000$");
						else return SCM(playerid, RED, "{FF0000}Do not have enough money! You need 1000$.");
					}
					case 6:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 7, 900), GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You buy a Pool Cue for 1000$");
						else return SCM(playerid, RED, "{FF0000}Do not have enough money! You need 1000$.");
					}
					case 7:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 8, 900), GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You bought Katana for 1000$");
						else return SCM(playerid, RED, "{FF0000}Do not have enough money! You need 1000$.");
					}
					case 8:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 9, 900), GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You bought an Chainsaw for 1000$");
						else return SCM(playerid, RED, "{FF0000}Do not have enough money! You need 1000$.");
					}
					case 9:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 10, 900), GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You bought Purple Dildo for 1000$");
						else return SCM(playerid, RED, "{FF0000}Do not have enough money! You need 1000$.");
					}
					case 10:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 11, 900), GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You bought Small White Vibrator for 1000$");
						else return SCM(playerid, RED, "{FF0000}Do not have enough money! You need 1000$.");
					}
					case 11:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 12, 900), GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You bought Large White Vibrator for 1000$");
						else return SCM(playerid, RED, "{FF0000}Do not have enough money! You need 1000$.");
					}
					case 12:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 13, 900), GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You bought Silver Vibrator for 1000$");
						else return SCM(playerid, RED, "{FF0000}Do not have enough money! You need 1000$.");
					}
					case 13:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 14, 900), GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You bought Flowers for 1000$");
						else return SCM(playerid, RED, "{FF0000}Do not have enough money! You need 1000$.");
					}
					case 14:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 15, 900), GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You bought Cane for 1000$");
						else return SCM(playerid, RED, "{FF0000}Do not have enough money! You need 1000$.");
					}
					case 15:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 41, 900), GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You bought Cane for 1000$");
						else return SCM(playerid, RED, "{FF0000}Do not have enough money! You need 1000$.");
					}
					case 16:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 42, 900), GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You bought Cane for 1000$");
						else return SCM(playerid, RED, "{FF0000}Do not have enough money! You need 1000$.");
					}
					case 17:
					{
						if(GetPlayerMoney(playerid) >= 1000) return GivePlayerWeapon(playerid, 43, 900), GivePlayerMoney(playerid, -1000), SCM(playerid, YELLOW, "You bought Cane for 1000$");
						else return SCM(playerid, RED, "{FF0000}Do not have enough money! You need 1000$.");
					}
				}
			}
	        return true;
	    }
	    case DIALOG_VUP2:
	    {
	        if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						PlayerInfo[playerid][VUP] = 1, PlayerInfo[playerid][JumpSize] = 1, Announce(playerid, "~W~~H~VUP ~G~~H~activated~n~~W~~H~press~R~~H~ capslock~W~~H~ to use!", 4000, 4);
					}
					case 1:
					{
						PlayerInfo[playerid][VUP] = 1, PlayerInfo[playerid][JumpSize] = 2, Announce(playerid, "~W~~H~VUP ~G~~H~activated~n~~W~~H~press~R~~H~ capslock~W~~H~ to use!", 4000, 4);
					}
					case 2:
					{
						if(PlayerInfo[playerid][pVIP] < 1) return Error(playerid, 2);
						if(PlayerInfo[playerid][pVIP] >= 1) VUPLimit[playerid] = 5;
						if(PlayerInfo[playerid][pVIP] >= 1) VUPLimit[playerid] = 0;
						VUPLimit[playerid] = 5;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    PlayerInfo[playerid][VUP] = 1, PlayerInfo[playerid][JumpSize] = 4, Announce(playerid, "~W~~H~VUP ~G~~H~activated~n~~W~~H~press~R~~H~ capslock~W~~H~ to use!", 4000, 4);
					}
					case 3:
					{
						if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
						if(PlayerInfo[playerid][pVIP] < 2) VUPLimit[playerid] = 5;
						if(PlayerInfo[playerid][pVIP] < 2) VUPLimit[playerid] = 0;
						VUPLimit[playerid] = 5;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    PlayerInfo[playerid][VUP] = 1, PlayerInfo[playerid][JumpSize] = 5, Announce(playerid, "~W~~H~VUP ~G~~H~activated~n~~W~~H~press~R~~H~ capslock~W~~H~ to use!", 4000, 4);
					}
					case 4:
					{
					    PlayerInfo[playerid][VUP] = 0, PlayerInfo[playerid][JumpSize] = 0, VupTime[playerid] = 0, VUPLimit[playerid] = 10, Announce(playerid, "~w~~h~VUP ~r~~w~Dezactivated~w~~h~", 3000, 4);
					}
				}
			}
	        return true;
	    }
	}
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerGiveDamageActor(playerid, damaged_actorid, Float:amount, weaponid, bodypart)
{
    if(PlayerInfo[playerid][JobID] == 5)
    {
		if(damaged_actorid == Savant[playerid])
		{
		    DestroyActor(Savant[playerid]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SetPlayerCheckpoint(playerid, 2275.4766, 2537.8091, 10.8203, 4.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SPD(playerid, DIALOG_EMPTY, MSGBOX, "Hitman", "{FFFF00}Misiune finalizata!\n\n{FFFFFF}Omenirea a fost salvata datorita tie!\n{FFFFFF}Savantul nebun a fost omorat si nu o sa mai prezinte nici un pericol pentru umanitate\n\n{FFFF00}Ti-am pus un checkpoint pe harta pentru a-ti primi recompensa!", "Continue", "");
		}
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnVehicleStreamIn(vehicleid, forplayerid)
{
    if(IsLocked[vehicleid] == 1) SetVehicleParamsForPlayer(vehicleid, forplayerid, 0, 1);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetSampVersion(playerid) { new string[24]; GetPlayerVersion(playerid, string, sizeof(string)); return string; }
public OnPlayerUpdate(playerid)
{
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 432 && PlayerInfo[playerid][pVIP] == 0) return RemovePlayerFromVehicleEx(playerid), Announce(playerid, "~R~~H~You are not allowed to ~N~~R~~H~Use this vehicle!", 3000, 3);
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 425 && PlayerInfo[playerid][RconType] < 1 && PlayerInfo[playerid][pVIP] == 0) return RemovePlayerFromVehicleEx(playerid), Announce(playerid, "~R~~H~You are not allowed to ~N~~R~~H~Use this vehicle!", 3000, 3);
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 520 && PlayerInfo[playerid][RconType] < 1 && PlayerInfo[playerid][pVIP] == 0) return RemovePlayerFromVehicleEx(playerid), Announce(playerid, "~R~~H~You are not allowed to ~N~~R~~H~Use this vehicle!", 3000, 3);
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 447 && PlayerInfo[playerid][RconType] < 1 && PlayerInfo[playerid][pVIP] == 0) return RemovePlayerFromVehicleEx(playerid), Announce(playerid, "~R~~H~You are not allowed to ~N~~R~~H~Use this vehicle!", 3000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Update Player Rank Head
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	UpdatePlayerRankHead(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Anti Crash Cheat
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Float:p[3]; GetPlayerPos(playerid, p[0], p[1], p[2]);
	if p[2] == BulletCrasher || !(InvalidSeat1 <= p[2] <= InvalidSeat2) *then
	{
		new tipcrasher[20];
		tipcrasher="BadVehicleCrasher";
		if p[2] == BulletCrasher *then tipcrasher="BulletCrasher";
		SendBuster(playerid, 1, tipcrasher);
		return false;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Automatically resettings variable if playerid is not in house, business & gang house
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new houseID = PlayerInfo[playerid][InHouse];
    new businessID = PlayerInfo[playerid][InBusiness];
    new gID = PlayerInfo[playerid][gHouse];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InHouse] >= 1) { if(IsPlayerInRangeOfPoint(playerid, 1000, HouseInfo[houseID][InteriorX], HouseInfo[houseID][InteriorY], HouseInfo[houseID][InteriorZ])) return true; PlayerInfo[playerid][InHouse] = 0; }
    if(PlayerInfo[playerid][InBusiness] >= 1) { if(IsPlayerInRangeOfPoint(playerid, 1000, PropInfo[businessID][InteriorX], PropInfo[businessID][InteriorY], PropInfo[businessID][InteriorZ])) return true; PlayerInfo[playerid][InBusiness] = 0; }
    if(PlayerInfo[playerid][gHouse] >= 1) { if(IsPlayerInRangeOfPoint(playerid, 1000, gHouseInfo[gID][gHouseInt][1], gHouseInfo[gID][gHouseInt][2], gHouseInfo[gID][gHouseInt][3])) return true; }
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnPlayerStateChange(playerid, newstate, oldstate)
{
    new VehicleID = GetPlayerVehicleID(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(newstate == PLAYER_STATE_DRIVER)
    {
        for(new i = 0; i < MAX_VEH; i++)
        {
			if(Vehicles[i][vehicleData] == VehicleID)
			{
				checkVehicle(playerid, i);
				break;
			}
        }
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        for(new i = 0; i < MAX_GANGCARS; i++)
        {
        	if(GangCar[i] == VehicleID)
            {
            	checkGangVehicle(playerid, i);
              	break;
            }
        }
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER)
    {
        if(PlayerInfo[playerid][JobID] == 1)
        {
		    SetTimerEx("CheckIsPlayerInPizzaJobVehicle", 30000, 0, "i", playerid);
		    SCM(playerid, YELLOW, "You left the job vehicle! Time remaing to enter back vehicle {FF0000}60 {FFFF00}secounds!");
		}
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(oldstate == PLAYER_STATE_ONFOOT && newstate == PLAYER_STATE_DRIVER)
	{
		new String[256];
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     	format(String, sizeof(String), "~y~~h~%s (ID:%d)", vNames[GetVehicleModel(VehicleID)-400], GetVehicleModel(VehicleID));
     	PlayerTextDrawSetString(playerid, Car_Textdraw[1], String);
     	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     	for(new i = 0; i < 3; i++) PlayerTextDrawShow(playerid, Car_Textdraw[i]);
     	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     	for(new i = 0; i < 3; i++) PlayerTextDrawHide(playerid, PONT[i]);
 		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // => Derby
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[playerid][InDerby] == 1)
	    {
			PlayerInfo[playerid][InDerby] = 0;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        CountPlayersInDerby--;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        BloodringFull[PlayerInfo[playerid][PlayerInBloodring]] = 0;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		   	PlayerInfo[playerid][PlayerInBloodring] = -1;
		   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		   	foreach(new i: Player)
		   	{
		   	    if(PlayerInfo[i][InDerby] == 1)
		   	    {
			   	    if(CountPlayersInDerby <= 1)
			   	    {
			   	        CheckMinigames();
			   	    }
				}
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][InDerby] == 1)
	    {
	    	if(oldstate == PLAYER_STATE_DRIVER)
			{
				if(newstate == PLAYER_STATE_ONFOOT)
				{
				    ClearAnimations(playerid);
					PutPlayerInVehicle(playerid, PlayerInfo[playerid][WhatCar], 0);
				}
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][InDerby] == 1)
	    {
	        if(oldstate == PLAYER_STATE_DRIVER)
	        {
	            if(newstate == PLAYER_STATE_ONFOOT)
	            {
	                if(PlayerInfo[playerid][InCar] == 1)
	                {
	                    PutPlayerInVehicle(playerid, PlayerInfo[playerid][WhatCar], 0);
					}
				}
			}
	        if(oldstate == PLAYER_STATE_ONFOOT)
	        {
	            if(newstate == PLAYER_STATE_DRIVER || PLAYER_STATE_PASSENGER)
	            {
	                PlayerInfo[playerid][InCar] = 1, PlayerInfo[playerid][WhatCar] = GetPlayerVehicleID(playerid);
				}
			}
	    }
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][RPreference] == 1)
		{
		    switch(PlayerInfo[playerid][RadioFav])
		    {
		       	case 0:  PlayAudioStreamForPlayerEx(playerid, "http://stream.radiozu.ro:8020/listen.pls");
	         	case 1:  PlayAudioStreamForPlayerEx(playerid, "http://stream.profm.ro:8012/profm.mp3");
	          	case 2:  PlayAudioStreamForPlayerEx(playerid, "http://www.radio-hit.ro/asculta.m3u");
	           	case 3:  PlayAudioStreamForPlayerEx(playerid, "http://www.radiomafia.ro/listen.m3u");
	           	case 4:  PlayAudioStreamForPlayerEx(playerid, "http://www.radiowish.ro/live.m3u");
	           	case 5:  PlayAudioStreamForPlayerEx(playerid, "http://radio-fun.ro/asculta.m3u");
	            case 6:  PlayAudioStreamForPlayerEx(playerid, "http://www.radiolautaru.ro/live.m3u");
	            case 7:  PlayAudioStreamForPlayerEx(playerid, "http://www.greudedifuzat.eu/greudedifuzat.m3u");
	            case 8:  PlayAudioStreamForPlayerEx(playerid, "http://www.radioclubmix.ro/live.m3u");
	            case 9:  PlayAudioStreamForPlayerEx(playerid, "http://radiostardj.ro/lst/hip/listen.pls");
	            case 10: PlayAudioStreamForPlayerEx(playerid, "http://www.radiogmusic.com/rock.m3u");
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(Act[playerid] == 1)
	 	{
     		if(PlayerInfo[playerid][InCar] == 1) PutPlayerInVehicle(playerid, PlayerInfo[playerid][WhatCar], 0);
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	if(GhostRiderObj[playerid][0])
    	{
			if(oldstate == PLAYER_STATE_DRIVER && newstate != PLAYER_STATE_DRIVER)
			{
	        	GhostRiderDeleteObjects(playerid), Announce(playerid, "~r~GhostRider ~w~a fost dezactivat!", 3000, 4);
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][InStunt] == 1) DisablePlayerCheckpoint(playerid), PlayerInfo[playerid][InStunt] = 0, Announce(playerid, "~w~~h~Stunt ~r~~h~Failed", 4000, 4);
		if(PlayerInfo[playerid][InDrift] == 1) DisablePlayerRaceCheckpoint(playerid), PlayerInfo[playerid][InDrift] = 0, Announce(playerid, "~w~~h~Drift ~r~~h~Failed", 4000, 4);
		if(IsInBike(VehicleID)) return ToggleEngine(VehicleID, VEHICLE_PARAMS_ON), 1;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_ONFOOT)
	{
	    if(PlayerInfo[playerid][RPreference] == 1) return StopAudioStreamForPlayerEx(playerid);
	}
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnVehicleDeath(vehicleid, killerid)
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
        if(vehicleid == PlayerInfo[i][pCar] && !IsPlayerInAnyVehicle(i))
		{
            for(new x = 0; x < 3; x++) PlayerTextDrawHide(i, Car_Textdraw[x]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    DestroyVehicle(vehicleid), PlayerInfo[i][pCar] = -1;
        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			DestroyObject(GetPVarInt(i, "neon")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon1")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon2")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon3"));
		    DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon4")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon5")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon6")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon7"));
			DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon8")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon9")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon10")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon11"));
		    DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon12")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon13")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon14")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon15"));
		    DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon16")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon17")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon18")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon19"));
		    DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon20")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon21")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon22")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon23"));
			DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon24")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon25")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon26")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon27"));
		    DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon28")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon29")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon30")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon31"));
		    DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon32")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon33")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon34")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon35"));
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerNeon[i] = 0;
        }
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnVehicleSpawn(vehicleid)
{
    for(new i = 0; i < 14; i++) AddVehicleComponent(Vehicles[vehicleid][vehicleData], Vehicles[vehicleid][vehMod][i]);
    ChangeVehicleColor(Vehicles[vehicleid][vehicleData], Vehicles[vehicleid][vehColor][0], Vehicles[vehicleid][vehColor][1]);
    ChangeVehiclePaintjob(Vehicles[vehicleid][vehicleData], Vehicles[vehicleid][vehPaint]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
        if(vehicleid == PlayerInfo[i][pCar] && !IsPlayerInAnyVehicle(i))
		{
		    DestroyVehicle(vehicleid), PlayerInfo[i][pCar] = -1;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			DestroyObject(GetPVarInt(i, "neon")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon1")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon2")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon3"));
		    DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon4")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon5")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon6")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon7"));
			DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon8")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon9")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon10")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon11"));
		    DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon12")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon13")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon14")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon15"));
		    DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon16")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon17")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon18")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon19"));
		    DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon20")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon21")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon22")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon23"));
			DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon24")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon25")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon26")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon27"));
		    DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon28")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon29")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon30")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon31"));
		    DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon32")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon33")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon34")); DeletePVar(i, "Status"); DestroyObject(GetPVarInt(i, "neon35"));
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerNeon[i] = 0;
        }
	}
    return true;
}
public OnQueryError(errorid, const error[], const callback[], const query[], MySQL:handle)
{
	switch(errorid)
	{
		case CR_SERVER_GONE_ERROR:
		{
			printf("Lost connection to server");
		}
		case ER_SYNTAX_ERROR:
		{
			printf("Something is wrong in your syntax, query: %s",query);
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ShowTopClansByCaptures(playerid)
{
	new Rows, Fields, Field[25]; eString[0] = EOS;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Rows)
	{
		for(new i = 0; i < Rows; i++)
		{
		    new capturess;
		    CACHE(i, "Captures", capturess);
		    CONTENT(i, "Name", Field);
		    format(eString, sizeof(eString), "%s{06B000}%d. {B9C9BF}%s:{FF0000} %d territories\n", eString, i+1, Field, capturess);
		}
	}
	format(eString, sizeof(eString), "{CAFF91}Top 10 Clans by Territories!\n\n%s\n{CAFF91}Most respected clans from this server are here!\n\
	{CAFF91}Is a honor to be in a clan from this list!\n\
	{CAFF91}To see a full list of clans, visit our website{FF0000} "SERVER_WEBSITE"", eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SPD(playerid, DIALOG_EMPTY, MSGBOX, "{F3FF70}Top 10 Clans!", eString, "Ok", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ShowTopClansByPoints(playerid)
{
	new Rows, Fields, Field[25]; eString[0] = EOS;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Rows)
	{
		for(new i = 0; i < Rows; i++)
		{
			new pointss;
		    CACHE(i, "Points", pointss);
		    CONTENT(i, "Name", Field);
		    format(eString, sizeof(eString), "%s{06B000}%d. {B9C9BF}%s:{FF0000} %d points\n", eString, i+1, Field, pointss);
		}
	}
	format(eString, sizeof(eString), "{CAFF91}Top 10 Clans by Points!\n\n%s\n{CAFF91}Most respected clans from this server are here!\n\
	{CAFF91}Is a honor to be in a clan from this list!\n\
	{CAFF91}To see a full list of clans, visit our website{FF0000} "SERVER_WEBSITE"", eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SPD(playerid, DIALOG_EMPTY, MSGBOX, "{F3FF70}Top 10 Clans!", eString, "Ok", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ShowTopOnline(playerid)
{
	new Rows, Fields, Field[25], Field2[25]; eString[0] = EOS;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	for (new i = 0; i < Rows; i++)
	{
	    CONTENT(i, "Name", Field);
		CONTENT(i, "HoursMonth", Field2);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(eString, sizeof eString, "%s{06B000}%d. {B9C9BF}%s:{FF0000} %s Hours\n", eString, i+1, Field, Field2);

	}
	format(eString, sizeof(eString), "%s\n{CAFF91}Jucatorii care au stat cel mai mult pe server in aceasta luna vor aparea aic!\n\
	{CAFF91}Este o onoare sa te afli in ceasta lista!", eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SPD(playerid, DIALOG_EMPTY, MSGBOX, "{F3FF70}Top 10 Active Players!", eString, "Close", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ShowTopKillers(playerid)
{
	new Rows, Fields, Field[25], Field2[25]; eString[0] = EOS;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	for (new i = 0; i < Rows; i++)
	{
	    CONTENT(i, "KillsMonth", Field2); CONTENT(i, "Name", Field);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(eString, sizeof eString, "%s{06B000}%d. {B9C9BF}%s:{FF0000} %s Kills\n", eString, i+1, Field, Field2);
	}
	format(eString, sizeof(eString), "%s\n{CAFF91}Jucatorii cu cele mai multe puncte de killuri facute in aceasta luna vor aparea aic!\n\
	{CAFF91}Este o onoare sa te afli in ceasta lista!", eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SPD(playerid, DIALOG_EMPTY, MSGBOX, "{F3FF70}Top 10 Killers!", eString, "Close", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ShowTopAdmins(playerid)
{
    new Rows, Fields, Field[25], Field2[25]; eString[0] = EOS;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	for (new i = 0; i < Rows; i++)
	{
	    CONTENT(i, "Activity", Field2); CONTENT(i, "Name", Field);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(eString, sizeof eString, "%s{06B000}%d. {B9C9BF}%s:{FF0000} %s Activity Points\n", eString, i+1, Field, Field2);
	}
 	format(eString, sizeof(eString), "%s\n{CAFF91}Adminii cu cele mai multe puncte de activitate facute in aceasta luna vor aparea aic!\n\
	{CAFF91}Este o onoare sa vezi aceasta lista!", eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SPD(playerid, DIALOG_EMPTY, MSGBOX, "{F3FF70}Top 10 Admins!", eString, "Close", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ShowTopDrifters(playerid)
{
	new Rows, Fields, Field[25], Field2[25]; eString[0] = EOS;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	for (new i = 0; i < Rows; i++)
	{
	    CONTENT(i, "DriftMonth", Field2); CONTENT(i, "Name", Field);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(eString, sizeof eString, "%s{06B000}%d. {B9C9BF}%s:{FF0000} %s Drift Points\n", eString, i+1, Field, Field2);
	}
	format(eString, sizeof(eString), "%s\n{CAFF91}Jucatorii cu cele mai multe puncte de drift facute in aceasta luna vor aparea aic!\n\
	{CAFF91}Este o onoare sa te afli in ceasta lista!", eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SPD(playerid, DIALOG_EMPTY, MSGBOX, "{F3FF70}Top 10 Drifters!", eString, "Close", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ShowTopRacers(playerid)
{
	new Rows, Fields, Field[25], Field2[25]; eString[0] = EOS;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	for (new i = 0; i < Rows; i++)
	{
	    CONTENT(i, "RaceMonth", Field2); CONTENT(i, "Name", Field);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(eString, sizeof(eString), "%s{06B000}%d. {B9C9BF}%s:{FF0000} %s Race Points\n", eString, i+1, Field, Field2);
	}
	format(eString, sizeof(eString), "%s\n{CAFF91}Jucatorii cu cele mai multe puncte de race facute in aceasta luna vor aparea aic!\n\
	{CAFF91}Este o onoare sa te afli in ceasta lista!", eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SPD(playerid, DIALOG_EMPTY, MSGBOX, "{F3FF70}Top 10 Racers!", eString, "Close", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ShowTopStunt(playerid)
{
	new Rows, Fields, Field[25], Field2[25]; eString[0] = EOS;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	for (new i = 0; i < Rows; i++)
	{
	    CONTENT(i, "StuntMonth", Field2); CONTENT(i, "Name", Field);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(eString, sizeof eString, "%s{06B000}%d. {B9C9BF}%s:{FF0000} %s Stunt Points\n", eString, i+1, Field, Field2);
	}
	format(eString, sizeof(eString), "%s\n{CAFF91}Jucatorii cu cele mai multe puncte de stunt facute in aceasta luna vor aparea aic!\n\
	{CAFF91}Este o onoare sa te afli in ceasta lista!", eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SPD(playerid, DIALOG_EMPTY, MSGBOX, "{F3FF70}Top 10 Stunters!", eString, "Close", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function UnbanPlayer(playerid)
{
	if(!cache_num_rows()) FormatMSG(playerid, RED, "ERROR: Player '%s' are not banned in our database!", BanName);
    else
    {
	    eQuery[0] = EOS; eString[0] = EOS;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `Bans` WHERE `Name` = '%s'", BanName);
		mysql_tquery(SQL, eQuery, "", "");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        eLog[0] = EOS; format(eLog, sizeof(eLog), "RCON: \"%s\" has UnBanned \"%s\" from server!", PN(playerid), BanName), SendRconLog(eLog);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "ACCOUNT '{FF0000}%s{FFFF00}' has been successfully Un-Banned!", BanName);
		SCM(playerid, YELLOW, eString);
		AdminCMD(playerid, "UNBAN");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CheckBan(playerid)
{
	new Query[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(Query, sizeof(Query), "SELECT * FROM `Bans` WHERE `Name` = '%s' OR `IP` = '%s'", PN(playerid), GetPlayerIPEx(playerid));
    mysql_query(SQL, Query);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new rows; cache_get_row_count(rows);
	if(rows > 0)
    {
        new checkbanexpire;
        CACHE(0, "BanExpire", checkbanexpire);
 		if(checkbanexpire == -1)
 		{
			SCM(playerid, RED, "Ai interdictie permanenta pe acest server, pentru scoaterea interdictiei viziteaza "SERVER_WEBSITE"!");
		    SetTimerEx("KickPlayer", 5000, false, "e", playerid);
 		}
		else if(gettime() < checkbanexpire)
		{
			new String[128];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(String, sizeof(String), "Ai interdictie pe acest server! Asteapta %d zile sau aplica o cerere de scoatere a interdictiei pe "SERVER_WEBSITE"!", floatround(((checkbanexpire-gettime())/86400))+1);
			SCM(playerid, RED, String);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetTimerEx("KickPlayer", 5000, false, "e", playerid);
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function KickPlayer(playerid) return Kick(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetClosestPlayer(playerid, checkvw = false, Float:range = FLOAT_INFINITY)
{
    new Float:playerPos[3];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GetPlayerPos(playerid, playerPos[0], playerPos[1], playerPos[2]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Float:closestDist = FLOAT_INFINITY;
    new closestPlayer = INVALID_PLAYER_ID;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Float:thisDist;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i : Player)
    {
        if(i == playerid) continue;
        if(checkvw && GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(i)) continue;
        if(GetPlayerInterior(playerid) != GetPlayerInterior(i)) continue;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        thisDist = GetPlayerDistanceFromPoint(i, playerPos[0], playerPos[1], playerPos[2]);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(thisDist < closestDist && thisDist < range)
        {
            closestPlayer = i;
            closestDist = thisDist;
        }
    }
    return closestPlayer;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock Error(playerid, ErrorID)
{
    if(ErrorID == 1)
	{
	    if(PlayerInfo[playerid][Level] == 0) return SendError(playerid, "You don't have admin to use this command!");
	    else SendError(playerid, "You don't have enough admin to use this command!");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(ErrorID == 2)
	{
	    SendError(playerid, "You must have enoght VIP to use this command!");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(ErrorID == 3)
	{
	    SendError(playerid, "Player is not connected or is yourself!");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(ErrorID == 4)
	{
	    SendError(playerid, "You don't have enough Coins to use command!");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(ErrorID == 5)
	{
	    SendError(playerid, "You don't have enough Money to use command!");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(ErrorID == 6)
	{
	    SendError(playerid, "You need to be RCON Admin to use this command!");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(ErrorID == 7)
	{
	    SendError(playerid, "You must have enoght money or coins to use this option!");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(ErrorID == 8)
	{
	    SendError(playerid, "You are not allowed to use this command!");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(ErrorID == 9)
	{
	    SCM(playerid, RED, "Sorry, but you cannot use this command in this territory!");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(ErrorID == 10)
	{
	    SendError(playerid, "Player is not connected!");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(ErrorID == 11)
	{
	    SCM(playerid, RED, "Sorry, but you cannot use this command on this player!");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(ErrorID == 12)
	{
	    SCM(playerid, RED, "Sorry, but you cannot use this command on this admin!");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerAdmin(playerid)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Level] == 0) format(String, sizeof(String), "{FF0000}No");
	else format(String, sizeof(String), "{00F7FF}Yes {00FF22}- Level: {00F7FF}%d", PlayerInfo[playerid][Level]);
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerWarnings(playerid)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][pWarns] == 0) format(String, sizeof(String), "");
	else format(String, sizeof(String), "{00F7FF}- {FF0000}%d/5 {00F7FF}warnings", PlayerInfo[playerid][pWarns]);
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerVip(playerid) // Sunt genial :)
{
	new String[128], String2[128], s_vip[64];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if(PlayerInfo[playerid][pVIP] == 0) s_vip = "{FF0000}No";
	else if(PlayerInfo[playerid][pVIP] == 1) s_vip = "{00F7FF}Yes";
	else if(PlayerInfo[playerid][pVIP] == 2) s_vip = "{00F7FF}Yes {00FF22}- {FFD700}Gold";
	else if(PlayerInfo[playerid][pVIP] > 3) s_vip = "";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(PlayerInfo[playerid][TVip])
	{
		case 0: format(String2, sizeof(String2), "");
		case 1: format(String2, sizeof(String2), "{FF0000}(Expire in {D1D1D1}%s{FF0000})", timec(PlayerInfo[playerid][VIPTime]));
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "%s %s", s_vip, String2);
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerVipEx(playerid) // Sunt genial :)
{
	new String[128], s_vip[64];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if(PlayerInfo[playerid][pVIP] == 0) s_vip = "Demoted";
	else if(PlayerInfo[playerid][pVIP] == 1) s_vip = "VIP";
	else if(PlayerInfo[playerid][pVIP] == 2) s_vip = "VIP Gold";
	else if(PlayerInfo[playerid][pVIP] > 3) s_vip = "Unknown";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "%s", s_vip);
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
PlayersInSoccer()
{
	new sStr; for(new s = 0; s < MAX_PLAYERS; s++) if(PlayerInfo[s][InMG][5] == 1) sStr++; return sStr;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
PlayersInDM(dmID)
{
    new count;
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		switch(dmID)
		{
		    case 0: if(PlayerInfo[i][InMinigun] == 1) count++;
		    case 1: if(PlayerInfo[i][InDE] == 1) count++;
		    case 2: if(PlayerInfo[i][InM4] == 1) count++;
		    case 3: if(PlayerInfo[i][InSniper] == 1) count++;
		    case 4: if(PlayerInfo[i][InMRF] == 1) count++;
			case 5: if(PlayerInfo[i][InPRODM] == 1) count++;
			case 6: if(PlayerInfo[i][InRocket] == 1) count++;
			case 7: if(PlayerInfo[i][InOH] == 1) count++;
			case 8: if(PlayerInfo[i][InGG] == 1) count++;
		}
	}
	return count;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ConnectedPlayers()
{
	new Connected;
	foreach(new i: Player) Connected++;
	return Connected;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock HideDialog(playerid) return SPD(playerid, -1, -1, " ", " ", " ", " ");
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock DestroyVehObject(playerid)
{
	for (new i = 0; i < sizeof InfernusTuning[]; i++)
	{
	    if(InfernusTuning[playerid][i] != 0)
	    {
		    DestroyDynamicObject(InfernusTuning[playerid][i]);
		    InfernusTuning[playerid][i] = 0;
		}
	}
	for (new i = 0; i < sizeof BMWTunning[]; i++)
	{
	    if(BMWTunning[playerid][i] != 0)
	    {
		    DestroyDynamicObject(BMWTunning[playerid][i]);
		    BMWTunning[playerid][i] = 0;
		}
	}
	for (new i = 0; i < sizeof HummerTunning[]; i++)
	{
	    if(HummerTunning[playerid][i] != 0)
	    {
		    DestroyDynamicObject(HummerTunning[playerid][i]);
		    HummerTunning[playerid][i] = 0;
		}
	}
	for (new i = 0; i < sizeof MacheteTunning[]; i++)
	{
	    if(MacheteTunning[playerid][i] != 0)
	    {
		    DestroyDynamicObject(MacheteTunning[playerid][i]);
		    MacheteTunning[playerid][i] = 0;
		}
	}
	for (new i = 0; i < 3; i++)
	{
	    if(Elegy[playerid][i] != 0)
	    {
		    DestroyDynamicObject(Elegy[playerid][i]);
		    Elegy[playerid][i] = 0;
		}
	}
	for (new i = 0; i < 4; i++)
	{
	    if(SunrisePol[playerid][i] != 0)
	    {
		    DestroyDynamicObject(SunrisePol[playerid][i]);
		    SunrisePol[playerid][i] = 0;
		}
	}
	for (new i = 0; i < 8; i++)
	{
	    if(Saddler[playerid][i] != 0)
	    {
		    DestroyDynamicObject(Saddler[playerid][i]);
		    Saddler[playerid][i] = 0;
		}
	}
	for (new i = 0; i < 10; i++)
	{
	    if(ABObj[playerid][i] != 0)
	    {
		    DestroyDynamicObject(ABObj[playerid][i]);
		    ABObj[playerid][i] = 0;
		}
	}
	for (new i = 0; i < 14; i++)
	{
	    if(ACObj[playerid][i] != 0)
	    {
		    DestroyDynamicObject(ACObj[playerid][i]);
		    ACObj[playerid][i] = 0;
		}
	}
	for (new i = 0; i < 6; i++)
	{
	    if(VBObj[playerid][i] != 0)
	    {
		    DestroyDynamicObject(VBObj[playerid][i]);
		    VBObj[playerid][i] = 0;
		}
	}

	for (new i = 0; i < 8; i++)
	{
	    if(VTObj[playerid][i] != 0)
	    {
		    DestroyDynamicObject(VTObj[playerid][i]);
		    VTObj[playerid][i] = 0;
		}
	}
	for (new i = 0; i < 8; i++)
	{
	    if(VHObj[playerid][i] != 0)
	    {
		    DestroyDynamicObject(VHObj[playerid][i]);
		    VHObj[playerid][i] = 0;
		}
	}
	for (new i = 0; i < 16; i++)
	{
	    if(bpcar[playerid][i] != 0)
	    {
		    DestroyDynamicObject(bpcar[playerid][i]);
		    bpcar[playerid][i] = 0;
		}
	}
	for (new i = 0; i < 6; i++)
	{
	    if(VCObj[playerid][i] != 0)
	    {
		    DestroyDynamicObject(VCObj[playerid][i]);
		    VCObj[playerid][i] = 0;
		}
	}
	for (new i = 0; i < 6; i++)
	{
	    if(BurritoTuning[playerid][i] != 0)
	    {
		    DestroyDynamicObject(BurritoTuning[playerid][i]);
		    BurritoTuning[playerid][i] = 0;
		}
	}
	for (new i = 0; i < 4; i++)
 	{
	    if(SultanTaxi[playerid][i] != 0)
	    {
		    DestroyDynamicObject(SultanTaxi[playerid][i]);
		    SultanTaxi[playerid][i] = 0;
		}
	}
 	for (new i = 0; i < 7; i++)
	{
	    if(StratumTuning[playerid][i] != 0)
	    {
		    DestroyDynamicObject(StratumTuning[playerid][i]);
		    StratumTuning[playerid][i] = 0;
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// => sscanf by Y_Less
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock sscanf(string[], format[], {Float,_}:...)
{
    #if defined isnull
        if(isnull(string))
    #else
        if(string[0] == 0 || (string[0] == 1 && string[1] == 0))
    #endif
        {
            return format[0];
        }
    #pragma tabsize 4
    new
        formatPos = 0,
        stringPos = 0,
        paramPos = 2,
        paramCount = numargs(),
        delim = ' ';
    while (string[stringPos] && string[stringPos] <= ' ')
    {
        stringPos++;
    }
    while (paramPos < paramCount && string[stringPos])
    {
        switch (format[formatPos++])
        {
            case '\0':
            {
                return 0;
            }
            case 'i', 'd':
            {
                new
                    neg = 1,
                    num = 0,
                    ch = string[stringPos];
                if(ch == '-')
                {
                    neg = -1;
                    ch = string[++stringPos];
                }
                do
                {
                    stringPos++;
                    if('0' <= ch <= '9')
                    {
                        num = (num * 10) + (ch - '0');
                    }
                    else
                    {
                        return -1;
                    }
                }
                while ((ch = string[stringPos]) > ' ' && ch != delim);
                setarg(paramPos, 0, num * neg);
            }
            case 'h', 'x':
            {
                new
                    num = 0,
                    ch = string[stringPos];
                do
                {
                    stringPos++;
                    switch (ch)
                    {
                        case 'x', 'X':
                        {
                            num = 0;
                            continue;
                        }
                        case '0' .. '9':
                        {
                            num = (num << 4) | (ch - '0');
                        }
                        case 'a' .. 'f':
                        {
                            num = (num << 4) | (ch - ('a' - 10));
                        }
                        case 'A' .. 'F':
                        {
                            num = (num << 4) | (ch - ('A' - 10));
                        }
                        default:
                        {
                            return -1;
                        }
                    }
                }
                while ((ch = string[stringPos]) > ' ' && ch != delim);
                setarg(paramPos, 0, num);
            }
            case 'c':
            {
                setarg(paramPos, 0, string[stringPos++]);
            }
            case 'f':
            {

                new changestr[16], changepos = 0, strpos = stringPos;
                while(changepos < 16 && string[strpos] && string[strpos] != delim)
                {
                    changestr[changepos++] = string[strpos++];
                }
                changestr[changepos] = '\0';
                setarg(paramPos,0,_:floatstr(changestr));
            }
            case 'p':
            {
                delim = format[formatPos++];
                continue;
            }
            case '\'':
            {
                new
                    end = formatPos - 1,
                    ch;
                while ((ch = format[++end]) && ch != '\'') {}
                if(!ch)
                {
                    return -1;
                }
                format[end] = '\0';
                if((ch = strfind(string, format[formatPos], false, stringPos)) == -1)
                {
                    if(format[end + 1])
                    {
                        return -1;
                    }
                    return 0;
                }
                format[end] = '\'';
                stringPos = ch + (end - formatPos);
                formatPos = end + 1;
            }
            case 'u':
            {
                new
                    end = stringPos - 1,
                    id = 0,
                    bool:num = true,
                    ch;
                while ((ch = string[++end]) && ch != delim)
                {
                    if(num)
                    {
                        if('0' <= ch <= '9')
                        {
                            id = (id * 10) + (ch - '0');
                        }
                        else
                        {
                            num = false;
                        }
                    }
                }
                if(num && IsPlayerConnected(id))
                {
                    setarg(paramPos, 0, id);
                }
                else
                {
                    #if !defined foreach
                        #define foreach(%1,%2) for (new %2 = 0; %2 < MAX_PLAYERS; %2++) if(IsPlayerConnected(%2))
                        #define __SSCANF_FOREACH__
                    #endif
                    string[end] = '\0';
                    num = false;
                    new
                        name[MAX_PLAYER_NAME];
                    id = end - stringPos;
                    foreach (Player, playerid)
                    {
                        GetPlayerName(playerid, name, sizeof (name));
                        if(!strcmp(name, string[stringPos], true, id))
                        {
                            setarg(paramPos, 0, playerid);
                            num = true;
                            break;
                        }
                    }
                    if(!num)
                    {
                        setarg(paramPos, 0, INVALID_PLAYER_ID);
                    }
                    string[end] = ch;
                    #if defined __SSCANF_FOREACH__
                        #undef foreach
                        #undef __SSCANF_FOREACH__
                    #endif
                }
                stringPos = end;
            }
            case 's', 'z':
            {
                new
                    i = 0,
                    ch;
                if(format[formatPos])
                {
                    while ((ch = string[stringPos++]) && ch != delim)
                    {
                        setarg(paramPos, i++, ch);
                    }
                    if(!i)
                    {
                        return -1;
                    }
                }
                else
                {
                    while ((ch = string[stringPos++]))
                    {
                        setarg(paramPos, i++, ch);
                    }
                }
                stringPos--;
                setarg(paramPos, i, '\0');
            }
            default:
            {
                continue;
            }
        }
        while (string[stringPos] && string[stringPos] != delim && string[stringPos] > ' ')
        {
            stringPos++;
        }
        while (string[stringPos] && (string[stringPos] == delim || string[stringPos] <= ' '))
        {
            stringPos++;
        }
        paramPos++;
    }
    do
    {
        if((delim = format[formatPos++]) > ' ')
        {
            if(delim == '\'')
            {
                while ((delim = format[formatPos++]) && delim != '\'') {}
            }
            else if(delim != 'z')
            {
                return delim;
            }
        }
    }
    while (delim > ' ');
    return 0;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GhostRiderDeleteObjects(playerid)
{
	if(GhostRiderObj[playerid][0])
	{
		DestroyDynamicObject(GhostRiderObj[playerid][0]);
		DestroyDynamicObject(GhostRiderObj[playerid][1]);
		DestroyDynamicObject(GhostRiderObj[playerid][2]);

		GhostRiderObj[playerid][0] = 0;
		GhostRiderObj[playerid][1] = 0;
		GhostRiderObj[playerid][2] = 0;
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock NewNick_Timer(playerid)
{
	if(GetTickCount() - iPlayerNickTime[playerid] < 0) return true;
	return false;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetCurrentDate(type)
{
	new string[24], date[3]; getdate(date[0], date[1], date[2]); 
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(type)
	{
	    case 1: format(string, sizeof(string), "%d/%d/%d", date[0], date[1], date[2]);
	    case 2: format(string, sizeof(string), "%s %d, %d", GetMonth(), date[2], date[0]);
	}
	return string;
}
stock GetMonth()
{
    new MonthName[10], Year, Month, Day; getdate(Year, Month, Day);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    switch(Month)
    {
        case 1:  MonthName = "January";
        case 2:  MonthName = "February";
        case 3:  MonthName = "March";
        case 4:  MonthName = "April";
        case 5:  MonthName = "May";
        case 6:  MonthName = "June";
        case 7:  MonthName = "July";
        case 8:  MonthName = "August";
        case 9:  MonthName = "September";
        case 10: MonthName = "October";
        case 11: MonthName = "November";
        case 12: MonthName = "December";
    }
    return MonthName;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SetPlayerRandomSpawn(playerid, bool:IsHaveSpawn)
{
	if(IsHaveSpawn == true) // if the clan/gang spawn isn't x = 0.0 & y = 0.0
	{
	 	if(PlayerInfo[playerid][InDM] != 1 || PlayerInfo[playerid][InWar] != 1)
		{
			if(PlayerInfo[playerid][ClanID] == 0 && PlayerInfo[playerid][GangID] == 0)
			{
			    LoadObjectsProtection(playerid);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				new rSpawn = random(10);
			    switch(rSpawn)
				{
					case 0:
					{
						SetPlayerPos(playerid, SpawnZones[1][sPosX], SpawnZones[1][sPosY], SpawnZones[1][sPosZ]);
						SetPlayerFacingAngle(playerid, SpawnZones[1][sPosA]);
				    }
					case 1:
					{
						SetPlayerPos(playerid, SpawnZones[2][sPosX], SpawnZones[2][sPosY], SpawnZones[2][sPosZ]);
						SetPlayerFacingAngle(playerid, SpawnZones[2][sPosA]);
				    }
					case 2:
					{
						SetPlayerPos(playerid, SpawnZones[3][sPosX], SpawnZones[3][sPosY], SpawnZones[3][sPosZ]);
						SetPlayerFacingAngle(playerid, SpawnZones[3][sPosA]);
				    }
					case 3:
					{
						SetPlayerPos(playerid, SpawnZones[4][sPosX], SpawnZones[4][sPosY], SpawnZones[4][sPosZ]);
						SetPlayerFacingAngle(playerid, SpawnZones[4][sPosA]);
				    }
					case 4:
					{
						SetPlayerPos(playerid, SpawnZones[5][sPosX], SpawnZones[5][sPosY], SpawnZones[5][sPosZ]);
						SetPlayerFacingAngle(playerid, SpawnZones[5][sPosA]);
				    }
					case 5:
					{
						SetPlayerPos(playerid, SpawnZones[6][sPosX], SpawnZones[6][sPosY], SpawnZones[6][sPosZ]);
						SetPlayerFacingAngle(playerid, SpawnZones[6][sPosA]);
				    }
					case 6:
					{
						SetPlayerPos(playerid, SpawnZones[7][sPosX], SpawnZones[7][sPosY], SpawnZones[7][sPosZ]);
						SetPlayerFacingAngle(playerid, SpawnZones[7][sPosA]);
				    }
					case 7:
					{
						SetPlayerPos(playerid, SpawnZones[8][sPosX], SpawnZones[8][sPosY], SpawnZones[8][sPosZ]);
						SetPlayerFacingAngle(playerid, SpawnZones[8][sPosA]);
				    }
					case 8:
					{
						SetPlayerPos(playerid, SpawnZones[9][sPosX], SpawnZones[9][sPosY], SpawnZones[9][sPosZ]);
						SetPlayerFacingAngle(playerid, SpawnZones[9][sPosA]);
					}
					case 9:
					{
						SetPlayerPos(playerid, SpawnZones[10][sPosX], SpawnZones[10][sPosY], SpawnZones[10][sPosZ]);
						SetPlayerFacingAngle(playerid, SpawnZones[10][sPosA]);
				    }
				}
			}
			else if(PlayerInfo[playerid][ClanID] != 0) SetupPlayerForClan(playerid, PlayerInfo[playerid][ClanID]), LoadObjectsProtection(playerid);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			else if(PlayerInfo[playerid][GangID] != 0)
			{
	            if(PlayerInfo[playerid][InGarena] == 1) ReturnPlayerToGarena(playerid);
	            else if(PlayerInfo[playerid][InGangWar] == 1) ReturnPlayerToGangWar(playerid);
	            else
	            {
				    if(GetPVarInt(playerid, "KilledByAnyGangs") == 1) GangSpawn(playerid);
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			 		SetupPlayerForGang(playerid, PlayerInfo[playerid][GangID]);
			 	}
			}
		}
	}
	if(IsHaveSpawn == false) // if the clan/gang spawn x = 0.0 & y = 0.0
	{
	    LoadObjectsProtection(playerid);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		new rSpawn = random(10);
	    switch(rSpawn)
		{
			case 0:
			{
				SetPlayerPos(playerid, SpawnZones[1][sPosX], SpawnZones[1][sPosY], SpawnZones[1][sPosZ]);
				SetPlayerFacingAngle(playerid, SpawnZones[1][sPosA]);
		    }
			case 1:
			{
				SetPlayerPos(playerid, SpawnZones[2][sPosX], SpawnZones[2][sPosY], SpawnZones[2][sPosZ]);
				SetPlayerFacingAngle(playerid, SpawnZones[2][sPosA]);
		    }
			case 2:
			{
				SetPlayerPos(playerid, SpawnZones[3][sPosX], SpawnZones[3][sPosY], SpawnZones[3][sPosZ]);
				SetPlayerFacingAngle(playerid, SpawnZones[3][sPosA]);
		    }
			case 3:
			{
				SetPlayerPos(playerid, SpawnZones[4][sPosX], SpawnZones[4][sPosY], SpawnZones[4][sPosZ]);
				SetPlayerFacingAngle(playerid, SpawnZones[4][sPosA]);
		    }
			case 4:
			{
				SetPlayerPos(playerid, SpawnZones[5][sPosX], SpawnZones[5][sPosY], SpawnZones[5][sPosZ]);
				SetPlayerFacingAngle(playerid, SpawnZones[5][sPosA]);
		    }
			case 5:
			{
				SetPlayerPos(playerid, SpawnZones[6][sPosX], SpawnZones[6][sPosY], SpawnZones[6][sPosZ]);
				SetPlayerFacingAngle(playerid, SpawnZones[6][sPosA]);
		    }
			case 6:
			{
				SetPlayerPos(playerid, SpawnZones[7][sPosX], SpawnZones[7][sPosY], SpawnZones[7][sPosZ]);
				SetPlayerFacingAngle(playerid, SpawnZones[7][sPosA]);
		    }
			case 7:
			{
				SetPlayerPos(playerid, SpawnZones[8][sPosX], SpawnZones[8][sPosY], SpawnZones[8][sPosZ]);
				SetPlayerFacingAngle(playerid, SpawnZones[8][sPosA]);
		    }
			case 8:
			{
				SetPlayerPos(playerid, SpawnZones[9][sPosX], SpawnZones[9][sPosY], SpawnZones[9][sPosZ]);
				SetPlayerFacingAngle(playerid, SpawnZones[9][sPosA]);
			}
			case 9:
			{
				SetPlayerPos(playerid, SpawnZones[10][sPosX], SpawnZones[10][sPosY], SpawnZones[10][sPosZ]);
				SetPlayerFacingAngle(playerid, SpawnZones[10][sPosA]);
		    }
		}
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendLog(Log[], Type)
{
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Type 1 = Change Name Log
	// Type 2 = Trade Log
	// Type 3 = Warn Log
	// Type 4 = BuyVIP Log
	// Type 5 = Ban Log
	// Type 6 = Kick Log
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new Date[6]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	getdate(Date[0], Date[1], Date[2]); gettime(Date[3], Date[4], Date[5]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Logs`(`ID`,`Type`,`Log`,`Date`,`Time`) VALUES('0', '%d', '%s', '%02d/%02d/%02d', '%02d:%02d:%02d')", Type, Log, Date[2], Date[1], Date[0], Date[3], Date[4], Date[5]); \
	mysql_tquery(SQL, eQuery, "", ""); return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendLog3(Log[]) // Private Message Log sa nu il stergi..
{
	new Date[6]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	getdate(Date[0], Date[1], Date[2]); gettime(Date[3], Date[4], Date[5]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `PM_Logs`(`ID`,`Log`,`Date`,`Time`) VALUES('0', '%s', '%02d/%02d/%02d', '%02d:%02d:%02d')", Log, Date[2], Date[1], Date[0], Date[3], Date[4], Date[5]); \
	mysql_tquery(SQL, eQuery, "", ""); return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock Send_Set_Log(Log[]) // SET LOG
{
	new Date[6]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	getdate(Date[0], Date[1], Date[2]); gettime(Date[3], Date[4], Date[5]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Set_Log`(`ID`,`Log`,`Date`,`Time`) VALUES('0', '%s', '%02d/%02d/%02d', '%02d:%02d:%02d')", Log, Date[2], Date[1], Date[0], Date[3], Date[4], Date[5]); \
	mysql_tquery(SQL, eQuery, "", ""); return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendUnbanLog(Log[]) // UNBAN LOG
{
	new Date[6]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	getdate(Date[0], Date[1], Date[2]); gettime(Date[3], Date[4], Date[5]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `UnBan_Log`(`ID`,`Log`,`Date`,`Time`) VALUES('0', '%s', '%02d/%02d/%02d', '%02d:%02d:%02d')", Log, Date[2], Date[1], Date[0], Date[3], Date[4], Date[5]); \
	mysql_tquery(SQL, eQuery, "", ""); return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendShopLog(Log[]) // SHOP LOG
{
	new Date[6]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	getdate(Date[0], Date[1], Date[2]); gettime(Date[3], Date[4], Date[5]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Shop_Log`(`ID`,`Log`,`Date`,`Time`) VALUES('0', '%s', '%02d/%02d/%02d', '%02d:%02d:%02d')", Log, Date[2], Date[1], Date[0], Date[3], Date[4], Date[5]); \
	mysql_tquery(SQL, eQuery, "", ""); return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock InteriorTele(playerid, InteriorID, Float:X, Float:Y, Float:Z) return SetPlayerPos(playerid, X, Y, Z), SetPlayerInterior(playerid, InteriorID);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock Camera(playerid, Float:X, Float:Y, Float:Z, Float:A, Mul) SetPlayerCameraLookAt(playerid, X, Y, Z), SetPlayerCameraPos(playerid, X + (Mul * floatsin(-A, degrees)), Y + (Mul * floatcos(-A, degrees)), Z+6);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendUsage(playerid, msg[])
{
	new Str[3000];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(Str, sizeof(Str), "USAGE: {49FFFF}%s", msg);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SCM(playerid, RED, Str);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GiveRandomColor(playerid)
{
	new rColor = random(9);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    switch(rColor)
	{
	    case 0: SetPlayerColor(playerid, 0xFFFFFFAA); case 1: SetPlayerColor(playerid, 0xFF0000AA); case 2: SetPlayerColor(playerid, 0x0072FFAA);
	    case 3: SetPlayerColor(playerid, 0xFFFFFFAA); case 4: SetPlayerColor(playerid, 0x00BBF6AA); case 5: SetPlayerColor(playerid, 0xAFAFAFAA);
	    case 6: SetPlayerColor(playerid, 0xFF9900AA); case 7: SetPlayerColor(playerid, 0xFFEB7BAA); case 8: SetPlayerColor(playerid, 0xFFCC00AA);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ResetBallPosition() DestroyObject(SoccerBall), SoccerBall = CreateObject(2114, 1574.99329, -2017.36682, 736.69220,   0.00000, 0.00000, 0.00000);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetIDOfLastKicker() for(new l = 0; l < MAX_PLAYERS; l++) if(PlayerInfo[l][LastKicker] == 1) return;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
    new Float:a; GetPlayerPos(playerid, x, y, a); GetPlayerFacingAngle(playerid, a);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    //if(GetPlayerVehicleID(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), a); // Linie in plus; am lasat-o ca poate aveti nevoie de ea, dar o puteti sterge.
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    x += (distance * floatsin(-a, degrees)); y += (distance * floatcos(-a, degrees));
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
IsObjectInArea(objectid, Float:MinX, Float:MinY, Float:MaxX, Float:MaxY)
{
    new Float:X, Float:Y, Float:Z; GetObjectPos(objectid, X, Y, Z);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(X >= MinX && X <= MaxX && Y >= MinY && Y <= MaxY) return true;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return 0;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CheckPlayerKillsInGG(playerid)
{
    if(PlayerInfo[playerid][InGG] == 1)
    {
	    switch(PlayerInfo[playerid][StageWeaponGG])
		{
		    case 4: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 25, 100000);
		    case 9: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 29, 100000);
		    case 14: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 31, 100000);
		    case 19: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 30, 100000);
		    case 24: ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 34, 100000);
		    case 29:
			{
			    for(new a; a < MAX_PLAYERS; a++) {
				PlayerInfo[a][StageWeaponGG] = 0;
				FormatMSG(a, RED, "%s{FFFFFF} a castigat{FF0000} Gun Game!{FFFFFF} Daca vrei sa te alaturi, foloseste{FF0000} /gg{FFFFFF}!", PN(playerid)); }
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    for(new i; i < MAX_PLAYERS; i++) if(PlayerInfo[i][InGG] == 1) {
				ResetPlayerWeapons(i), GivePlayerWeapon(i, GetWeaponForGG(i), 100000); }
			}
		}
	}
}
function GetWeaponForGG(playerid)
{
	new weapid;
    switch(PlayerInfo[playerid][StageWeaponGG])
	{
	    case 0..3: weapid = 24;
	    case 4..8: weapid = 25;
	    case 9..13: weapid = 29;
	    case 14..18: weapid = 31;
	    case 19..23: weapid = 30;
	    case 24..28: weapid = 34;
	}
	return weapid;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CheckDMInfo(playerid)
{
    ResetPlayerWeapons(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InWar] == 1) ReturnPlayerWar(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InGG] == 1)
	{
	    new RandomSpawn = random(8); PlayerInfo[playerid][God] = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		switch(RandomSpawn)
		{
		    case 0: SetPlayerPos(playerid, -1138.9260,2738.9971,1001.0000);
		    case 1: SetPlayerPos(playerid, -1171.1033,2739.0601,1001.0000);
		    case 2: SetPlayerPos(playerid, -1170.6443,2770.8386,1001.0000);
		    case 3: SetPlayerPos(playerid, -1139.1073,2770.5583,1001.0000);
		    case 4: SetPlayerPos(playerid, -1144.6077,2750.2000,1001.0000);
		    case 5: SetPlayerPos(playerid, -1144.5463,2760.0886,1001.0000);
		    case 6: SetPlayerPos(playerid, -1165.4727,2759.9871,1001.0000);
		    case 7: SetPlayerPos(playerid, -1165.5344,2749.9980,1001.0000);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerInterior(playerid, 123), SetPlayerVirtualWorld(playerid, 69463), GivePlayerWeapon(playerid, GetWeaponForGG(playerid), 100000);
		SetPlayerHealth(playerid, 100.0), SetPlayerArmour(playerid, 100.0), LoadObjectsProtection(playerid);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InMinigun] == 1)
	{
  		new RandomSpawn = random(6); PlayerInfo[playerid][God] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		switch(RandomSpawn)
		{
		 	case 0: SetPlayerPos(playerid, -1691.5255,1371.0341,7.1797);
			case 1: SetPlayerPos(playerid, -1699.0768,1366.0686,7.1797);
			case 2: SetPlayerPos(playerid, -1701.4731,1346.7932,7.1797);
			case 3: SetPlayerPos(playerid, -1667.6295,1313.6113,7.1875);
			case 4: SetPlayerPos(playerid, -1641.7422,1362.4036,7.1821);
			case 5: SetPlayerPos(playerid, -1623.1931,1405.6068,7.1841);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerVirtualWorld(playerid, 2020), GivePlayerWeapon(playerid, 38, 100000), SetPlayerInterior(playerid, 0);
	    SetPlayerHealth(playerid, 100.0), SetPlayerArmour(playerid, 100.0), LoadObjectsProtection(playerid);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][ClanArena] == 1)
	{
	    new RandomSpawn = random(5);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    switch(RandomSpawn)
		{
	    	case 0: SetPlayerPos(playerid, 476.4690,3550.9353,10.8377);
	    	case 1: SetPlayerPos(playerid, 423.7073,3586.2461,10.8377);
	    	case 2: SetPlayerPos(playerid, 445.7748,3605.4006,10.8377);
	    	case 3: SetPlayerPos(playerid, 479.8489,3567.6089,10.8377);
	    	case 4: SetPlayerPos(playerid, 435.1929,3586.5701,10.8377);
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    for(new w = 0; w < 6; w++) GivePlayerWeapon(playerid, Clan[PlayerInfo[playerid][ClanID]][Weapon][w], 9999);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	SetPlayerHealth(playerid, 100.0), SetPlayerVirtualWorld(playerid, 2333), SetPlayerArmour(playerid, 100.0);
	  	PlayerInfo[playerid][ClanArena] = 1, PlayerInfo[playerid][God] = 0, LoadObjectsProtection(playerid);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if(PlayerInfo[playerid][InDE] == 1)
 	{
   		new RandomSpawn = random(4); PlayerInfo[playerid][God] = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    switch(RandomSpawn)
		{
	    	case 0: SetPlayerPos(playerid, 1756.7732,3547.0120,81.6094);
	    	case 1: SetPlayerPos(playerid, 1755.6515,3560.1643,81.6094);
	    	case 2: SetPlayerPos(playerid, 1740.2509,3560.1658,81.6021);
	    	case 3: SetPlayerPos(playerid, 1740.0740,3546.3030,81.6021);
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetPlayerInterior(playerid, 7), GivePlayerWeapon(playerid, 24, 5000), SetPlayerHealth(playerid, 100.0);
		SetPlayerVirtualWorld(playerid, 8585), SetPlayerArmour(playerid, 50.0), LoadObjectsProtection(playerid);
 	}
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if(PlayerInfo[playerid][InM4] == 1)
 	{
     	new rpos = random(5); PlayerInfo[playerid][God] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		switch(rpos)
		{
			case 0: SetPlayerPos(playerid, 763.3649,-3557.8384,5.0600);
			case 1: SetPlayerPos(playerid, 786.3324,-3618.4731,5.0600);
			case 2: SetPlayerPos(playerid, 870.1761,-3597.2610,5.0600);
			case 3: SetPlayerPos(playerid, 796.9835,-3546.4434,5.0600);
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetPlayerInterior(playerid, 0), SetPlayerVirtualWorld(playerid, 156), GivePlayerWeapon(playerid, 31, 5000);
		SetPlayerHealth(playerid, 100.0), SetPlayerArmour(playerid, 100.0), LoadObjectsProtection(playerid);
 	}
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InSniper] == 1)
    {
	    new RandomSpawn = random(5); PlayerInfo[playerid][God] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		switch(RandomSpawn)
		{
		    case 0: SetPlayerPos(playerid, -974.3197,1061.0334,1345.6761);
			case 1: SetPlayerPos(playerid, -1047.8755,1073.8723,1343.9434);
		    case 2: SetPlayerPos(playerid, -1016.1569,1054.8470,1343.1714);
			case 3: SetPlayerPos(playerid, -1080.2831,1055.1276,1343.2130);
		    case 4: SetPlayerPos(playerid, -1131.0923,1057.4836,1346.4156);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerInterior(playerid, 10), SetPlayerVirtualWorld(playerid, 156), SetPlayerHealth(playerid, 25);
		SetPlayerArmour(playerid, 0), GivePlayerWeapon(playerid, 34, 5000), LoadObjectsProtection(playerid);
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InMRF] == 1)
    {
		 new rpos = random(4); PlayerInfo[playerid][God] = 0;
		 //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		 switch(rpos)
		 {
			 case 0: SetPlayerPos(playerid, 27.3865,1506.8823,12.7500);
			 case 1: SetPlayerPos(playerid, -17.2641,1508.7556,12.7500);
			 case 2: SetPlayerPos(playerid, -14.0342,1572.6289,12.7500);
			 case 3: SetPlayerPos(playerid, 44.3231,1539.4315,16.7416);
		 }
		 //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		 SetPlayerVirtualWorld(playerid, 2012), SetPlayerInterior(playerid, 0), LoadObjectsProtection(playerid);
		 //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		 if(PlayerInfo[playerid][MRFWeaponSelected] == 0) SPD(playerid, DIALOG_MRF, LIST, "{FF0000}Choose Weapon", "{D1D1D1}Minigun\n{00CC00}Rocket Launcher\n{D1D1D1}Flame Thrower", "Select", "Random");
		 if(PlayerInfo[playerid][MRFWeaponSelected] == 1) GivePlayerWeapon(playerid, PlayerInfo[playerid][MRFWeapon], 9999);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InOH] == 1)
	{
		new rpos = random(4); PlayerInfo[playerid][God] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		switch(rpos)
		{
			case 0: SetPlayerPos(playerid, -1851.9308,814.6613,112.5469);
			case 1: SetPlayerPos(playerid, -1872.2463,811.7128,112.5469);
			case 2: SetPlayerPos(playerid, -1870.1420,794.2831,112.5469);
			case 3: SetPlayerPos(playerid, -1852.4341,794.0153,112.5469);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerVirtualWorld(playerid, 6969), SetPlayerHealth(playerid, 1), SetPlayerArmour(playerid, 0);
		SetPlayerTime(playerid, 0, 0), SetPlayerInterior(playerid, 0), LoadObjectsProtection(playerid);
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InPRODM] == 1)
    {
	    new RandomSpawn = random(5); PlayerInfo[playerid][God] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		switch(RandomSpawn)
		{
		    case 0: SetPlayerPos(playerid, -1023.8318,2663.3069,1796.1300);
	    	case 1: SetPlayerPos(playerid, -1022.5994,2600.8953,1796.1300);
	    	case 2: SetPlayerPos(playerid, -1084.9216,2601.7891,1796.1300);
	    	case 3: SetPlayerPos(playerid, -1084.9557,2662.8323,1796.1300);
	    	case 4: SetPlayerPos(playerid, -1064.8169,2632.2773,1796.1300);
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetPlayerInterior(playerid, 1000000), SetPlayerVirtualWorld(playerid, 1000000);
		GivePlayerWeapon(playerid, 24, 5000), GivePlayerWeapon(playerid, 25, 5000), SetPlayerHealth(playerid, 0.1);
		SetPlayerArmour(playerid, 100), SetPlayerHealth(playerid, 100), LoadObjectsProtection(playerid);
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InRocket] == 1)
    {
	    new RandomSpawn = random(6); PlayerInfo[playerid][God] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		switch(RandomSpawn)
		{
			case 0: SetPlayerPos(playerid, -1376.5278,936.2959,1036.4153);
		    case 1: SetPlayerPos(playerid, -1493.8066,959.5351,1037.0212);
		    case 2: SetPlayerPos(playerid, -1426.4567,1055.9408,1038.5070);
		    case 3: SetPlayerPos(playerid, -1281.8112,1003.9912,1037.3882);
		    case 4: SetPlayerPos(playerid, -1354.7413,1003.3044,1024.1613);
		    case 5: SetPlayerPos(playerid, -1444.1863,996.9005,1024.2119);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerInterior(playerid, 15), SetPlayerVirtualWorld(playerid, 2018), GivePlayerWeapon(playerid, 35, 100000);
	    SetPlayerHealth(playerid, 100.0), SetPlayerArmour(playerid, 100.0), LoadObjectsProtection(playerid);
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock HideAllTags(playerid)
{
    if(PlayerInfo[playerid][HTag][0] == 0)
	{
    	for(new i = 0; i <= MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer(playerid, i, false), PlayerInfo[playerid][HTag][0] = 1;
		if(PlayerInfo[playerid][InMG][1] == 0) MSGLang(playerid, YELLOW, "You hided players' Tags!", "Ai ascuns Tag-urile jucatorilor!");
    }
	else if(PlayerInfo[playerid][HTag][0] == 1)
	{
		for(new i = 0; i <= MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer(playerid, i, true), PlayerInfo[playerid][HTag][0] = 0;
    	if(PlayerInfo[playerid][InMG][1] == 0) MSGLang(playerid, YELLOW, "You made players' Tags visible!",  "Ai facut Tag-urile vizibile!");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock HideMyTag(playerid)
{
    if(PlayerInfo[playerid][HTag][1] == 0)
	{
    	for(new i = 0; i <= MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer(i, playerid, false), PlayerInfo[playerid][HTag][1] = 1;
		if(PlayerInfo[playerid][InMG][1] == 0) MSGLang(playerid, YELLOW, "You hided your Tag!", "Ti-ai ascuns Tag-ul!");
    }
	else if(PlayerInfo[playerid][HTag][1] == 1)
	{
		for(new i = 0; i <= MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer(i, playerid, true), PlayerInfo[playerid][HTag][1] = 0;
		if(PlayerInfo[playerid][InMG][1] == 0) MSGLang(playerid, YELLOW, "You made your Tag visible!", "Ti-ai facut Tag-ul vizibil!");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock MSGLang(playerid, color, msgeng[], msgro[])
{
	switch(PlayerInfo[playerid][Language])
 	{
		case 1: SCM(playerid, color, msgro);
		case 2: SCM(playerid, color, msgeng);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock FormatNumber(iNum, const szChar[] = ",")
{
    new szStr[16];
    format(szStr, sizeof(szStr), "%d", iNum);

    for(new iLen = strlen(szStr) - 3; iLen > 0; iLen -= 3)
    {
        strins(szStr, szChar, iLen);
    }
    return szStr;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function HideInfo(playerid) TextDrawHideForPlayer(playerid, ShowInfo[playerid]);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock Info(playerid, informatia[], timpul=4000)
{
	KillTimer(TD_InfoTimer[playerid]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TextDrawSetString(Text:ShowInfo[playerid], informatia);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TD_InfoTimer[playerid] = SetTimerEx("HideInfo", timpul, false, "i", playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TextDrawShowForPlayer(playerid, ShowInfo[playerid]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerPlaySound(playerid, 1085, 0.0,0.0,0.0);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/*stock IsValidVehicle(vehicleid)
{
	if(vehicleid < 400 || vehicleid > 611) return false;
	else return true;
}*/
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ToggleEngine(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, toggle, lights, alarm, doors, bonnet, boot, objective);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ToggleAlarm(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, lights, toggle, doors, bonnet, boot, objective);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ValidFishPlace(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid, 4, 403.8266, -2088.7598, 7.8359) ||
	   IsPlayerInRangeOfPoint(playerid, 4, 398.7553, -2088.7490, 7.8359) ||
	   IsPlayerInRangeOfPoint(playerid, 4, 396.2197, -2088.6692, 7.8359) ||
	   IsPlayerInRangeOfPoint(playerid, 4, 391.1094, -2088.7976, 7.8359) ||
	   IsPlayerInRangeOfPoint(playerid, 4, 383.4157, -2088.7849, 7.8359) ||
	   IsPlayerInRangeOfPoint(playerid, 4, 374.9598, -2088.7979, 7.8359) ||
	   IsPlayerInRangeOfPoint(playerid, 4, 369.8107, -2088.7927, 7.8359) ||
	   IsPlayerInRangeOfPoint(playerid, 4, 367.3637, -2088.7925, 7.8359) ||
	   IsPlayerInRangeOfPoint(playerid, 4, 362.2244, -2088.7981, 7.8359) ||
	   IsPlayerInRangeOfPoint(playerid, 4, 354.5382, -2088.7979, 7.8359)) return true;
	return 0;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GiveHM(playerid) return SetPlayerHealth(playerid, 100), SetPlayerArmour(playerid, 100), Announce(playerid, "~R~~H~Healed!~N~~B~~H~+100 HP~N~~B~~H~+100 AR~N~~R~~H~FREE!", 6000, 3);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock StartStunt(playerid, Float:X, Float:Y, Float:Z)
{
    if((gettime() - StuntTime[playerid]) < 60) return SendError(playerid, "You can Start a Stunt only once at every 60 Seconds!");
    else if(!IsInBike(playerid)) return SendError(playerid, "You must to be in a NRG-500 to start a stunt!");
    else
    {
	    StuntTime[playerid] = gettime();
		PlayerInfo[playerid][InStunt] = 1;
		Announce(playerid, "~w~~h~Go to the ~n~~g~~h~Checkpoint", 4000, 4);
		SetPlayerCheckpoint(playerid, Float:X, Float:Y, Float:Z, 3);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock StartDrift(playerid, Float:X, Float:Y, Float:Z, Float:nextX, Float:nextY, Float:nextZ)
{
    if(IsInBike(playerid) || GetPlayerState(playerid) == 1 || GetPlayerState(playerid) == 3) return SendError(playerid, "You must to be in a vehicle to start a drift!");
	else if(!IsInBike(playerid))
	{
		PlayerInfo[playerid][InDrift] = 1, Announce(playerid, "~w~~h~Follow the ~n~~g~~h~Checkpoints", 4000, 4), SetPlayerRaceCheckpoint(playerid, 0, Float:X, Float:Y, Float:Z, Float:nextX, Float:nextY, Float:nextZ, 5);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock StartLastCar(playerid, Float:X, Float:Y, Float:Z, Float:nextX, Float:nextY, Float:nextZ)
{
    PlayerInfo[playerid][InLastCar] = 1, SetPlayerRaceCheckpoint(playerid, 0, Float:X, Float:Y, Float:Z, Float:nextX, Float:nextY, Float:nextZ, 5);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock LogoTDShow(playerid)
{
    for(new i = 0; i < 4; i++) TextDrawShowForPlayer(playerid, Logo[i]);
	//for(new a = 0; a < 23; a++) TextDrawShowForPlayer(playerid, ChristmasTree[a]);
}
stock LogoTDHide(playerid)
{
    for(new i = 0; i < 4; i++) TextDrawHideForPlayer(playerid, Logo[i]);
	//for(new a = 0; a < 23; a++) TextDrawHideForPlayer(playerid, ChristmasTree[a]);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock RaceTDShow(playerid)
{
    for(new i = 0; i < 7; i++) PlayerTextDrawShow(playerid, RaceTD[i]);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock RaceTDHide(playerid)
{
    for(new i = 0; i < 7; i++) PlayerTextDrawHide(playerid, RaceTD[i]);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock AFKTDShow(playerid)
{
    for(new i = 0; i < 4; i++) PlayerTextDrawShow(playerid, BRB[i]);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock AFKTDHide(playerid)
{
    for(new i = 0; i < 4; i++) PlayerTextDrawHide(playerid, BRB[i]);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock LockVehicle(playerid, vehicleid)
{
    IsLocked[vehicleid] = 1; foreach(new i: Player) if(i != playerid) SetVehicleParamsForPlayer(vehicleid, i, 0, 1);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock UnlockVehicle(vehicleid)
{
    IsLocked[vehicleid] = 0; foreach(new i: Player) SetVehicleParamsForPlayer(vehicleid, i, 0, 0);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ModCar(playerid)
{
    new modelid = GetVehicleModel(GetPlayerVehicleID(playerid));
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch (modelid)
	{
        case 562,565,559,561,560,575,534,567,536,535,576,411,579,602,496,518,527,589,597,419,
		533,526,474,545,517,410,600,436,580,439,549,491,445,604,507,585,587,466,492,546,551,516,
		426,547,405, 409,550,566,406,540,421,529,431,438,437,420,525,552,416,433,427,490,528,
		407,544,470,598,596,599,601,428,499,609,524,578,486,573,455,588,403,514,423,
		414,443,515,456,422,482,530,418,572,413,440,543,583,478,554,402,542,603,475,568,504,457,
        483,508,429,541,415,480,434,506,451,555,477,400,404,489,479,442,458,467,558:
		{
 			return SPD(playerid, DIALOG_TUNE, LIST, "Tunning System", "{0072FF}Paint Jobs\n{0072FF}Colors\n{0072FF}Exhausts\n{0072FF}Front Bumper\n{0072FF}Rear Bumper\n{0072FF}Roof\n{FFFF00}Spoilers\n{FFFF00}Side Skirts\n{FFff00}Bullbars\n{FF0000}Wheels\n{FF0000}Car Stereo\n{FF0000}Hydraulics\n{FF0000}Nitro x10\n{FF0000}Repair Car\n", "Select", "Cancel");
		}
		default: return SendError(playerid, "You can't tune this vehicle!");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
String_Teles()
{
    new Str[1050];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(Str, "Command                            \tDescription\n\
	             {FFFF00}/stunt                     \t{00CC00}Stunt Zones\n\
				 {FFFF00}/dm                        \t{00CC00}Death match zones\n\
				 {FFFF00}/int                       \t{00CC00}Interiors\n\
				 {FFFF00}/drifts                    \t{00CC00}Drifts\n\
				 {FFFF00}/minigames                 \t{00CC00}Minigames\n\
				 {FFFF00}/sz                        \t{00CC00}Special Zones\n\
				 {FFFF00}/race                      \t{00CC00}Race List\n\
				 {FFFF00}/jumps                     \t{00CC00}Jumps\n\
				 {FFFF00}/parkour                   \t{00CC00}Parkour Zones\n\
                 {FFFF00}/others                    \t{00CC00}Others", sizeof(Str));
	return Str;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
String_Stunts()
{
    new Str[1048];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(Str, "Command                            \tDescription\n\
                 {FFFF00}/aa                        \t{00CC00}Abandoned Airport\n\
			  	 {FFFF00}/sfair                     \t{00CC00}San Fierro Airport\n\
			  	 {FFFF00}/lvair                     \t{00CC00}Las Venturas Airport\n\
				 {FFFF00}/chilliad                  \t{00CC00}Mounts Chilliad\n\
				 {FFFF00}/sc                        \t{00CC00}Chrome Stunt\n", sizeof(Str));
    strcat(Str, "{FFFF00}/sg                        \t{00CC00}Stunt Golf\n\
				 {FFFF00}/jizzy                     \t{00CC00}Jizzy Stunt\n\
                 {FFFF00}/lsair                     \t{00CC00}Los Santos Airport\n\
				 {FFFF00}/jj                        \t{00CC00}Jizzy Jump\n\
				 {FFFF00}/dam                       \t{00CC00}Dam\n\
				 {FFFF00}/stunts                    \t{00CC00}Simple Stunt\n", sizeof(Str));
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return Str;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
String_Drifts()
{
    new Str[1024];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(Str, "Command                             \tDescription\n\
	             {FFFF00}/drift                      \t{00CC00}Desert Drift\n\
			  	 {FFFF00}/drift2                     \t{00CC00}Forrest Drift\n\
				 {FFFF00}/drift3                     \t{00CC00}Downhill Drift\n\
				 {FFFF00}/drift4                     \t{00CC00}Parking Drift Track 1\n\
				 {FFFF00}/drift5                     \t{00CC00}Parking Drift Track 2\n\
				 {FFFF00}/drift6                     \t{00CC00}Deposits Drift Track\n\
				 {FFFF00}/sdrift                     \t{00CC00}Short Track\n", sizeof(Str));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return Str;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
String_Int()
{
   	new Str[1512];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(Str, "Description\n");
	strcat(Str, "{FFFFFF}24/7\n");
	strcat(Str, "{FFFFFF}Airports\n");
	strcat(Str, "{FFFFFF}Ammunations\n");
	strcat(Str, "{FFFFFF}Houses\n");
	strcat(Str, "{FFFFFF}Houses 2\n");
	strcat(Str, "{FFFFFF}Missions\n");
	strcat(Str, "{FFFFFF}Stadiums\n");
	strcat(Str, "{FFFFFF}Casinos\n");
	strcat(Str, "{FFFFFF}Shops\n");
	strcat(Str, "{FFFFFF}GaraGES\n");
	strcat(Str, "{FFFFFF}Girlfriends\n");
	strcat(Str, "{FFFFFF}Clothing/Barber Store\n");
	strcat(Str, "{FFFFFF}Resturants/Clubs\n");
	strcat(Str, "{FFFFFF}No Category\n");
	strcat(Str, "{FFFFFF}Burglary\n");
	strcat(Str, "{FFFFFF}Burglary 2\n");
	strcat(Str, "{FFFFFF}Gym\n");
	strcat(Str, "{FFFFFF}Department");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return Str;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
String_sPlaces()
{
    new Str[1070];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(Str, "Command                                \tDescription\n\
                    {FFFF00}/a51                        \t{00CC00}Area 51\n\
					{FFFF00}/park                       \t{00CC00}Park\n\
					{FFFF00}/drag                       \t{00CC00}Drag\n\
					{FFFF00}/drag2                      \t{00CC00}Drag 2\n\
					{FFFF00}/kart                       \t{00CC00}Kart\n\
					{FFFF00}/as                         \t{00CC00}Air Ship\n\
					{FFFF00}/mc               			\t{00CC00}Monster Crash\n\
					{FFFF00}/th							\t{00CC00}Tree House\n\
					{FFFF00}/th2						\t{00CC00}Tree House 2\n\
					{FFFF00}/interstellar				\t{00CC00}Interstellar\n\
					{FFFF00}/hh							\t{00CC00}Halloween House", 1900);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return Str;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
String_Jumps()
{
    new Str[1070];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(Str, "Command                                \tDescription\n\
					{FFFF00}/wj                         \t{00CC00}Water Jump\n\
					{FFFF00}/jj                         \t{00CC00}Jizzy Jump\n\
					{FFFF00}/dj                         \t{00CC00}Death Jump\n\
					{FFFF00}/nj                         \t{00CC00}Neon Jump\n\
					{FFFF00}/tj                         \t{00CC00}Tube Jump\n\
					{FFFF00}/mj                         \t{00CC00}Mega Jump\n\
					{FFFF00}/basejump                   \t{00CC00}Base Jump\n\
					{FFFF00}/bcar						\t{00CC00}Basket Car",1900);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return Str;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
String_Parkours()
{
    new Str[1070];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(Str, "Command								\tDescription\n\
					{FFFF00}/quad						\t{00CC00}Quad Parkour",1900);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return Str;
}
String_Minigames()
{
    new Str[1048];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(Str, "Command                            \tDescription\n\
                 {FFFF00}/maze                      \t{00CC00}The Maze\n\
			  	 {FFFF00}/football                	\t{00CC00}Football\n\
			  	 {FFFF00}/hns                     	\t{00CC00}Hide'n Seek\n\
				 {FFFF00}/stealcar                  \t{00CC00}Steal The Car\n\
				 {FFFF00}/sumo                      \t{00CC00}Sumo\n", sizeof(Str));
    strcat(Str, "{FFFF00}/skyclimb                  \t{00CC00}SkyClimb\n\
				 {FFFF00}/targets                   \t{00CC00}The Targets\n\
                 {FFFF00}/sanchez                   \t{00CC00}Sanchez\n\
				 {FFFF00}/bmx                       \t{00CC00}BMX\n\
				 {FFFF00}/fallout                   \t{00CC00}Fall Out\n", sizeof(Str));
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return Str;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
String_Other()
{
   	new Str[2020];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(Str, "Command                                  \tDescription\n\
	             {FFFF00}/ls                              \t{00CC00}Los Santos\n\
				 {FFFF00}/sf                              \t{00CC00}San Fierror\n\
				 {FFFF00}/lv                              \t{00CC00}Las Venturas\n\
				 {FFFF00}/vinewood                        \t{00CC00}Vinewood\n\
				 {FFFF00}/beach                           \t{00CC00}Beach\n\
				 {FFFF00}/grove                           \t{00CC00}Grove Street\n\
				 {FFFF00}/planes                          \t{00CC00}Planes\n\
                 {FFFF00}/pimps                           \t{00CC00}Pimps\n",sizeof(Str));
    strcat(Str, "{FFFF00}/lspd                            \t{00CC00}Los Santos PD\n\
				 {FFFF00}/sfpd                            \t{00CC00}San Fierro PD\n\
				 {FFFF00}/lvpd                            \t{00CC00}Las Venturas PD\n\
				 {FFFF00}/ramp                            \t{00CC00}Desert Ramp\n", sizeof(Str));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return Str;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock StopRadio(playerid)
{
	StopAudioStreamForPlayerEx(playerid);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetWeapon(weaponid)
{
    new gunname[32];
    GetWeaponName(weaponid, gunname, sizeof(gunname));
    return gunname;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock PlayAnim(playerid,animlib[],animname[], Float: Speed, looping, lockx, locky, lockz, lp) return ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp), 1;
stock TPToStunt(playerid, Float:X, Float:Y, Float:Z) return SetPlayerInterior(playerid, 0), SetPlayerVirtualWorld(playerid, 0), SetPlayerPos(playerid, X, Y, Z);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock IsInBike(playerid)
{
	new GPVI = GetPlayerVehicleID(playerid);
    if(GetVehicleModel(GPVI) == 509 || GetVehicleModel(GPVI) == 481 || GetVehicleModel(GPVI) == 510 ||
	   GetVehicleModel(GPVI) == 462 || GetVehicleModel(GPVI) == 448 || GetVehicleModel(GPVI) == 581 ||
	   GetVehicleModel(GPVI) == 522 || GetVehicleModel(GPVI) == 461 || GetVehicleModel(GPVI) == 521 ||
	   GetVehicleModel(GPVI) == 523 || GetVehicleModel(GPVI) == 463 || GetVehicleModel(GPVI) == 586 ||
	   GetVehicleModel(GPVI) == 468 || GetVehicleModel(GPVI) == 471) return true;
	else return 0;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock IsVehicleOccupied(vehicleid)
{
  	for(new i = 0; i <= MAX_PLAYERS; i++)
	{
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER || GetPlayerState(i) == PLAYER_STATE_PASSENGER)
		{
			if(GetPlayerVehicleID(i) == vehicleid) return true;
		}
	}
	return 0;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock DelVehicle(vehicleid)
{
    for(new players = 0; players < MAX_PLAYERS; players++)
    {
        new Float:X,Float:Y,Float:Z;
		if(IsPlayerInVehicle(players, vehicleid))
        {
        	GetPlayerPos(players,X,Y,Z);
        	SetPlayerPos(players,X,Y,Z+2);
        	SetVehicleToRespawn(vehicleid);
        }
        SetVehicleParamsForPlayer(vehicleid, players, 0, 1);
    }
    return DestroyVehicle(vehicleid);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GiveNote(playerid)
{
	new Note = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Kills] 	     > 999)               		Note += 1;
	if(PlayerInfo[playerid][hours] 	   	 > 999)      			    Note += 1;
	if(PlayerInfo[playerid][StuntPoints] > 1999)	        		Note += 1;
	if(PlayerInfo[playerid][DriftPoints] > 9999)         			Note += 1;
	if(PlayerInfo[playerid][RacePoints]  > 3999)          			Note += 1;
	if(PlayerInfo[playerid][House]       != 0)        				Note += 1;
	if(PlayerInfo[playerid][Property]    != 0)             			Note += 1;
	if(PlayerInfo[playerid][pVIP]   	 == 2)                      Note += 3;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerScore(playerid, Note);
	PlayerInfo[playerid][StatsNote] = Note;
	return Note;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GivePlayerMultiWeapons(playerid, ...)
{
    if(IsPlayerConnected(playerid))
    {
        new iArg = numargs();
        for (new i = 1; i < iArg; i += 2) GivePlayerWeapon(playerid, getarg(i), getarg(i + 1));
    }
    return true;
}
CMD:rtag(ESS)
{
	new string[224], sParam[24], rParam[24], ColorParam[24];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "sS", sParam, rParam)) return SendUsage(playerid, "/rtag [Tag/OFF] [Tag Color(Optional)]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(sParam, "off", true) == 0) { PlayerInfo[playerid][PersonalTagColor] = 0, SCM(playerid, -1, "Your tag have been{FF0000} removed{FFFFFF}!"); }
	else
	{
		for(new i = 0; i < 3; i++) if(strfind(sParam, RconTextAll[i], true) != -1) return SendError(playerid, "You cannot use this tag right now. Please try again a new tag!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(isnull(rParam)) { format(PlayerInfo[playerid][PersonalTagString], 24, sParam), PlayerInfo[playerid][PersonalTagColor] = -1; }
		else
		{
		    if(sscanf(rParam, "h", params[2])) return SendError(playerid, "You need to enter an hexadecimal color! Exemple: 00FF00");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    ColorParam[0] = (params[2] * 256) + 0xAA;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(PlayerInfo[playerid][PersonalTagString], 24, sParam), PlayerInfo[playerid][PersonalTagColor] = ColorParam[0];
		}
	 	format(string, sizeof(string), "Your tag text have been succesfully changed to{FF0000} %s{FFFFFF}!", sParam);
		SCM(playerid, -1, string);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Automatically Top Reset
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:resettop(ESS)
{
	if(PlayerInfo[playerid][RconType] < 3) return Error(playerid, 8);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	new string[128], y, m, d; getdate(y, m, d);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(d == 1)
	{
	    foreach(new i: Player) if(PlayerInfo[i][Level] >= 1)
		{
		    format(string, sizeof(string), "ACW: Admin '%s' has been reseted the top!", PN(playerid));
		    SCM(i, ABLUE, string);
		}
		TopReset();
	}
	else return SendError(playerid, "You can use this command once a month (1th)!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
function MounthlyTopReset()
{
	new rTop, y, m, d; getdate(y, m, d); eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_query(SQL, "SELECT * FROM `ServerCFG`");
    new rows; cache_get_row_count(rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i; i != rows; i++)
	{
	    CACHE(i, "TopReseted", rTop);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(rTop == 0)
		{
		    if(d == 1)
		    {
		        mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `ServerCFG` SET `TopReseted` = 1");
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				foreach(new all: Player) if(PlayerInfo[all][Level] >= 1) SCM(all, ABLUE, "ACW: Admin 'Default(Server)' has been reseted the top!");
				TopReset();
		    }
		}
		else if(rTop == 1)
		{
		    if(d == 2)
			{
			    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `ServerCFG` SET `TopReseted` = 0");
				mysql_tquery(SQL, eQuery, "", "");
			}
		}
	}
}
function TopReset()
{
    eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		PlayerInfo[i][RaceMonth] = 0, PlayerInfo[i][DriftMonth] = 0, PlayerInfo[i][StuntMonth] = 0;
		PlayerInfo[i][KillsMonth] = 0, PlayerInfo[i][hoursMonth] = 0, PlayerInfo[i][minsMonth] = 0;
		PlayerInfo[i][secsMonth] = 0, PlayerInfo[i][hoursADMIN] = 0, PlayerInfo[i][minutesADMIN] = 0;
		PlayerInfo[i][secondsADMIN] = 0, PlayerInfo[i][EventsMaded] = 0, PlayerInfo[i][Activity] = 0;
		PlayerInfo[i][TimesOnline] = 0, PlayerInfo[i][PointsMonth] = 0, PlayerInfo[i][PointsX2Month] = 0;
		PlayerInfo[i][gemsMonth] = 0, PlayerInfo[i][respectMonth][0] = 0, PlayerInfo[i][respectMonth][1] = 0;
		PlayerInfo[i][PKicks] = 0, PlayerInfo[i][PBans] = 0, PlayerInfo[i][PJails] = 0;
		PlayerInfo[i][PWarns] = 0, PlayerInfo[i][PClearCH] = 0, PlayerInfo[i][PReactions] = 0;
		PlayerInfo[i][PMaths] = 0, PlayerInfo[i][PMutes] = 0;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	UpdateAllPlayerAccount("RaceMonth", 0), UpdateAllPlayerAccount("DriftMonth", 0);
	UpdateAllPlayerAccount("StuntMonth", 0), UpdateAllPlayerAccount("KillsMonth", 0);
	UpdateAllPlayerAccount("HoursMonth", 0), UpdateAllPlayerAccount("MinutesMonth", 0);
	UpdateAllPlayerAccount("SecondsMonth", 0), UpdateAllPlayerAccount("HoursAdmin", 0);
	UpdateAllPlayerAccount("MinutesAdmin", 0), UpdateAllPlayerAccount("SecondsAdmin", 0);
	UpdateAllPlayerAccount("EventsMaded", 0), UpdateAllPlayerAccount("Activity", 0);
	UpdateAllPlayerAccount("TimesOnline", 0), UpdateAllPlayerAccount("PointsMonth", 0);
	UpdateAllPlayerAccount("PointsX2Month", 0), UpdateAllPlayerAccount("GemsMonth", 0);
	UpdateAllPlayerAccount("RespectPMonth", 0), UpdateAllPlayerAccount("Kicks", 0);
	UpdateAllPlayerAccount("Bans", 0), UpdateAllPlayerAccount("Jails", 0);
	UpdateAllPlayerAccount("Warns", 0), UpdateAllPlayerAccount("ClearChats", 0);
	UpdateAllPlayerAccount("ReactionTest", 0), UpdateAllPlayerAccount("MathTest", 0);
	UpdateAllPlayerAccount("Mutes", 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new G = 0; G < MAX_GANGS; G++)
	{
	    GangInfo[G][Points] = 0;
	    GangInfo[G][GangKills] = 0;
	    GangInfo[G][GangDeaths] = 0;
	    GangInfo[G][Captures] = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    mysql_format(SQL, eQuery, sizeof(eQuery), "\
		UPDATE `Gangs` SET `GangKills` = '0', `GangDeaths` = '0', `GangPoints` = '0', `GangCaptures` = '0'");
	    mysql_tquery(SQL, eQuery, "", "");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new C = 0; C < MAX_CLANS; C++)
	{
	    Clan[C][ClanPoints] = 0;
	    Clan[C][ClanKills] = 0;
		Clan[C][ClanDeaths] = 0;
		Clan[C][ClanCaptures] = 0;
		Clan[C][Wins] = 0;
		Clan[C][Losts] = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    mysql_format(SQL, eQuery, sizeof(eQuery), "\
		UPDATE `Clans` SET `Kills` = '0', `Deaths` = '0', `Wins` = '0', `Losts` = '0',\
		`Points` = '0', `Captures` = '0'");
	    mysql_tquery(SQL, eQuery, "", "");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function GrinchUpdate()
{
    eString[0] = EOS;
    //--------------------------------------------------------------------------
    SCMALL(RED, "Grinch-ul{FFFFFF} s-a intors la{FFEE00} /SantaLand{FFFFFF}!");
	//--------------------------------------------------------------------------
	GrinchHealth = 300;
	CrinchColor = "00FF00";
	//--------------------------------------------------------------------------
	format(eString, sizeof(eString), "{00CC00}300 HP\n{FFFFFF}Remaining!");
    GrinchText = CreateDynamic3DTextLabel(eString, -1, -527.6615,3455.6067,13.3820, 50);
    //--------------------------------------------------------------------------
	GrinchObj[0] = CreateObject(19373, -529.36713, 3448.91602, 15.87195,   -0.00001, 0.00000, 90.10002);
	GrinchObj[1] = CreateObject(19373, -529.36713, 3448.91602, 12.37195,   -0.00001, 0.00000, 90.10002);
	GrinchObj[2] = CreateObject(19373, -526.15698, 3448.92188, 15.87195,   -0.00001, 0.00000, 90.10002);
	GrinchObj[3] = CreateObject(19373, -526.15698, 3448.92188, 12.37195,   -0.00001, 0.00000, 90.10002);
	GrinchObj[4] = CreateObject(19791, -527.71252, 3452.05908, 2.38195,   0.00000, 0.00001, -179.89993);
	GrinchObj[5] = CreateObject(19373, -529.28003, 3450.64648, 17.51195,   -0.00001, -90.00000, 90.10002);
	GrinchObj[6] = CreateObject(19373, -526.30011, 3450.70166, 17.52196,   -0.00001, -90.00000, 90.10002);
	GrinchObj[7] = CreateObject(2898, -527.73529, 3449.96924, 19.08700,   -90.00000, 0.00000, 180.00000);
	GrinchObj[8] = CreateObject(19373, -526.31488, 3453.44141, 17.53196,   -0.00001, -90.00000, 90.10002);
	GrinchObj[9] = CreateObject(19373, -524.63519, 3453.65430, 15.87195,   0.00000, -0.00001, 0.10007);
	GrinchObj[10] = CreateObject(19373, -524.62964, 3450.44434, 15.87195,   0.00000, -0.00001, 0.10007);
	GrinchObj[11] = CreateObject(19373, -524.62964, 3450.44434, 12.37195,   0.00000, -0.00001, 0.10007);
	GrinchObj[12] = CreateObject(19373, -524.63519, 3453.65430, 12.37195,   0.00000, -0.00001, 0.10007);
	GrinchObj[13] = CreateObject(3877, -523.05090, 3452.10547, 15.83710,   0.00000, -90.00000, -180.00000);
	GrinchObj[14] = CreateObject(19373, -526.16791, 3455.17188, 12.37195,   -0.00001, 0.00000, 90.10002);
	GrinchObj[15] = CreateObject(19373, -529.37799, 3455.16602, 15.87195,   -0.00001, 0.00000, 90.10002);
	GrinchObj[16] = CreateObject(19373, -526.16791, 3455.17188, 15.8227195,   -0.00001, 0.00000, 90.10002);
	GrinchObj[17] = CreateObject(19373, -529.37799, 3455.16602, 12.37195,   -0.00001, 0.00000, 90.10002);
	GrinchObj[18] = CreateObject(19373, -529.32483, 3453.36670, 17.52196,   -0.00001, -90.00000, 90.10002);
	GrinchObj[19] = CreateObject(19373, -530.88519, 3453.63379, 15.86196,   0.00000, -0.00001, 0.10007);
	GrinchObj[20] = CreateObject(19373, -530.87976, 3450.51367, 15.86196,   0.00000, -0.00001, 0.10007);
	GrinchObj[21] = CreateObject(19373, -530.87976, 3450.51367, 12.36196,   0.00000, -0.00001, 0.10007);
	GrinchObj[22] = CreateObject(19373, -530.88519, 3453.63379, 12.36196,   0.00000, -0.00001, 0.10007);
	GrinchObj[23] = CreateObject(3877, -532.53717, 3452.10547, 15.83710,   0.00000, -90.00000, 0.00000);
	GrinchObj[24] = CreateObject(2898, -529.75397, 3451.99023, 19.08700,   -90.00000, 0.00000, 90.00000);
	GrinchObj[25] = CreateObject(2898, -527.73718, 3454.01318, 19.08700,   -90.00000, 0.00000, 0.00000);
	GrinchObj[26] = CreateObject(2898, -525.71155, 3452.00342, 19.08700,   -90.00000, 0.00000, -90.00000);
	GrinchObj[27] = CreateObject(6865, -527.77679, 3452.40430, 18.37214,   0.00000, 0.00000, -135.00000);
	GrinchObj[28] = CreateObject(3877, -526.79138, 3452.52246, 20.46880,   0.00000, -90.00000, -90.00000);
	GrinchObj[29] = CreateObject(3877, -528.75494, 3452.53516, 20.46880,   0.00000, -90.00000, -90.00000);
	GrinchObj[30] = CreateObject(2960, -527.71777, 3454.06299, 19.04200,   0.00000, 0.00000, -180.00000);
	return true;
}
function GetSpecialHostName()
{
	/*new spcday, y, m, d; getdate(y, m, d);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(y == 2020)
	{
		if(m == 4 && d == 12) hostname = "Empire Super Stunt | Happy Easter!", spcday = 1;
	 	if(m == 10 && d >= 28 || d <= 31) hostname = "Empire Super Stunt | /Halloween >Happy Halloween<", spcday = 1;
	 	if(m == 12 && d >= 1 || d <= 29) hostname = "Empire Super Stunt | /SantaLand >Merry XMAS<", spcday = 1;
		if(m == 12 && d >= 30 || d <= 31) hostname = "Empire Super Stunt | Happy New Year 2021!", spcday = 1;
		else spcday = 0;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else spcday = 0;*/
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new spcday = 0;
	return spcday;
}
function HostNameChanger()
{
	ServerProtection = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SendRconCommand("rcon_password "SERVER_RCON"");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(ServerInfo[ServerHNC] == 1)
	{
		new var2 = random(7);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(GetSpecialHostName() == 0)
		{
			switch(var2)
			{
			    case 0: SendRconCommand("hostname "SV_HOSTNAME1"");
			    case 1: SendRconCommand("hostname "SV_HOSTNAME2"");
			    case 2: SendRconCommand("hostname "SV_HOSTNAME3"");
			    case 3: SendRconCommand("hostname "SV_HOSTNAME4"");
			    case 4: SendRconCommand("hostname "SV_HOSTNAME5"");
			    case 5: SendRconCommand("hostname "SV_HOSTNAME6"");
			    case 6: SendRconCommand("hostname "SV_HOSTNAME7"");
			}
		}
		else
		{
		    new string[128];
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(string, sizeof(string), "hostname %s", hostname);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SendRconCommand(string);
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	UpdateClan3D();
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function GiveTimer(playerid) return GiveProtection[playerid] = 0;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function GMCountDown()
{
   if(GMCount > 0) GameTextForAll(CountText[GMCount-1], 2500, 6), GMCount--, SetTimer("GMCountDown", 1000, 0);
   else GameTextForAll("~w~~h~G~r~~h~O ~w~~h~G~r~~h~O ~w~~h~G~r~~h~O", 2500, 6), GMCount = 3;
   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function DuelCountDown(playerid)
{
   if(DuelCount > 0) Announce(playerid, DuelCountText[DuelCount-1], 2500, 6), Announce(PlayerInfo[playerid][DuelID], DuelCountText[DuelCount-1], 2500, 6), DuelCount--, SetTimer("DuelCountDown", 1000, 0);
   else Announce(playerid, "~R~~H~Success!", 2500, 6), Announce(PlayerInfo[playerid][DuelID], "~R~~H~Success!", 2500, 6), DuelCount = 3;
   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function DuelInvite(playerid)
{
    TogglePlayerControllable(playerid, true), TogglePlayerControllable(PlayerInfo[playerid][DuelID], true);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CarSpawner(playerid, model)
{
	if(IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You already drive a car!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new Float:x, Float:y, Float:z, Float:angle;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	GetPlayerPos(playerid, x, y, z), GetPlayerFacingAngle(playerid, angle);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][pCar] != 0) DestroyVehicle(PlayerInfo[playerid][pCar]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][pCar] = CreateVehicle(model, x, y, z+3, angle, -1, -1, -1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCar], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetVehicleNumberPlate(PlayerInfo[playerid][pCar], DEFAULT_NUMBER_PLATE);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetVehicleVirtualWorld(PlayerInfo[playerid][pCar], GetPlayerVirtualWorld(playerid)), LinkVehicleToInterior(PlayerInfo[playerid][pCar], GetPlayerInterior(playerid));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChangeVehicleColor(PlayerInfo[playerid][pCar], 0,7);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i, j = MAX_OBJECTS; i < j; i++)
    {
        if(HoldsInfo[playerid][i][HoldUsed] == true && PlayerInfo[playerid][HoldInCar] != 0 && PlayerInfo[playerid][HoldCID] != model)
        {
			SetPlayerAttachedObject(playerid, HoldsInfo[playerid][i][HoldIndex], HoldsInfo[playerid][i][HoldModel], HoldsInfo[playerid][i][HoldBone], HoldsInfo[playerid][i][fOffsetX1], HoldsInfo[playerid][i][fOffsetY1], HoldsInfo[playerid][i][fOffsetZ1], HoldsInfo[playerid][i][fRotX1], HoldsInfo[playerid][i][fRotY1], HoldsInfo[playerid][i][fRotZ1], HoldsInfo[playerid][i][fScaleX1], HoldsInfo[playerid][i][fScaleY1], HoldsInfo[playerid][i][fScaleZ1]);
		}
		else if(HoldsInfo[playerid][i][HoldUsed] == true && PlayerInfo[playerid][HoldCID] == model)
		{
            SetPlayerAttachedObject(playerid, HoldsInfo[playerid][i][HoldIndex], HoldsInfo[playerid][i][HoldModel], HoldsInfo[playerid][i][HoldBone], HoldsInfo[playerid][i][fOffsetX1], HoldsInfo[playerid][i][fOffsetY1], HoldsInfo[playerid][i][fOffsetZ1], HoldsInfo[playerid][i][fRotX1], HoldsInfo[playerid][i][fRotY1], HoldsInfo[playerid][i][fRotZ1], HoldsInfo[playerid][i][fScaleX1], HoldsInfo[playerid][i][fScaleY1], HoldsInfo[playerid][i][fScaleZ1]);
        }
    }
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Random Announce on server ...
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function RandomGameText()
{
    new GameText = random(sizeof(RandomMSG)); GameTextForAll(RandomMSG[GameText], 4000, 1);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function WeaponsLoad(playerid)
{
     CACHE(0, "Weapon1", PlayerInfo[playerid][DuelWeapon1]);
     CACHE(0, "Weapon2", PlayerInfo[playerid][DuelWeapon2]);
     return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Timer1(playerid)
{
   Announce(DuelInviter, "~r~~h~5", 3000, 3);
   ResetPlayerWeapons(DuelInviter);
   PlayerInfo[DuelInviter][InDuel] = 1;
   SetTimerEx("Timer2", 1000, false, "d", DuelInviter);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Timer2(playerid)
{
   Announce(DuelInviter, "~r~~h~4", 3000, 3);
   SetTimerEx("Timer3", 1000, false, "d", DuelInviter);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Timer3(playerid)
{
   Announce(DuelInviter, "~r~~h~3", 3000, 3);
   SetTimerEx("Timer4", 1000, false, "d", DuelInviter);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Timer4(playerid)
{
   Announce(DuelInviter, "~r~~h~2", 3000, 3);
   SetTimerEx("Timer5", 1000, false, "d", DuelInviter);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Timer5(playerid)
{
   Announce(DuelInviter, "~r~~h~1", 3000, 3);
   SetTimerEx("Timer6", 1000, false, "d", DuelInviter);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Timer6(playerid)
{
   Announce(DuelInviter, "~r~~h~START", 3000, 3);
   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   PlayerInfo[DuelInviter][InDuel] = 1;
   SetPlayerVirtualWorld(DuelInviter, 2009);
   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   if(PlayerInfo[DuelInviter][DuelLocation][1] == 1)
   {
      SetPlayerPos(DuelInviter, -1370.6932,998.8079,1024.1079);
      SetPlayerInterior(DuelInviter, 15);
      ResetPlayerWeapons(DuelInviter);
      GivePlayerWeapon(DuelInviter, PlayerInfo[DuelInviter][DuelWeapon1], 99999);
      GivePlayerWeapon(DuelInviter, PlayerInfo[DuelInviter][DuelWeapon2], 99999);
      //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      SetCameraBehindPlayer(DuelInviter);
   }
   else if(PlayerInfo[DuelInviter][DuelLocation][2] == 1)
   {
      SetPlayerPos(DuelInviter, 294.0330,-135.4985,1004.0625);
      SetPlayerInterior(DuelInviter, 7);
      ResetPlayerWeapons(DuelInviter);
      GivePlayerWeapon(DuelInviter, PlayerInfo[DuelInviter][DuelWeapon1], 99999);
      GivePlayerWeapon(DuelInviter, PlayerInfo[DuelInviter][DuelWeapon2], 99999);
      SetCameraBehindPlayer(DuelInviter);
   }
   else if(PlayerInfo[DuelInviter][DuelLocation][3] == 1)
   {
      SetPlayerPos(DuelInviter, -974.2717,1060.8134,1345.6774);
      SetPlayerInterior(DuelInviter, 10);
      ResetPlayerWeapons(DuelInviter);
      GivePlayerWeapon(DuelInviter, PlayerInfo[DuelInviter][DuelWeapon1], 99999);
      GivePlayerWeapon(DuelInviter, PlayerInfo[DuelInviter][DuelWeapon2], 99999);
      SetCameraBehindPlayer(DuelInviter);
   }
   return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Timer7(playerid)
{
   Announce(DuelPlayerInvite, "~r~~h~5", 3000, 3);
   ResetPlayerWeapons(DuelPlayerInvite);
   SetTimerEx("Timer8", 1000, false, "d", DuelPlayerInvite);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Timer8(playerid)
{
   Announce(DuelPlayerInvite, "~r~~h~4", 3000, 3);
   SetTimerEx("Timer9", 1000, false, "d", DuelPlayerInvite);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Timer9(playerid)
{
   Announce(DuelPlayerInvite, "~r~~h~3", 3000, 3);
   SetTimerEx("Timer10", 1000, false, "d", DuelPlayerInvite);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Timer10(playerid)
{
   Announce(DuelPlayerInvite, "~r~~h~2", 3000, 3);
   SetTimerEx("Timer11", 1000, false, "d", DuelPlayerInvite);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Timer11(playerid)
{
   Announce(DuelPlayerInvite, "~r~~h~1", 3000, 3);
   SetTimerEx("Timer12", 1000, false, "d", DuelPlayerInvite);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Timer12(playerid)
{
   Announce(DuelPlayerInvite, "~r~~h~START", 3000, 3);
   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   PlayerInfo[DuelPlayerInvite][InDuel] = 1;
   SetPlayerVirtualWorld(DuelPlayerInvite, 2009);
   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   if(PlayerInfo[DuelInviter][DuelLocation][1] == 1)
   {
      SetPlayerPos(DuelPlayerInvite, -1397.4030,1000.2252,1024.1792);
      SetPlayerInterior(DuelPlayerInvite, 15);
      ResetPlayerWeapons(DuelPlayerInvite);
      GivePlayerWeapon(DuelPlayerInvite, PlayerInfo[DuelInviter][DuelWeapon1], 99999);
      GivePlayerWeapon(DuelPlayerInvite, PlayerInfo[DuelInviter][DuelWeapon2], 99999);
      //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      SetCameraBehindPlayer(DuelPlayerInvite);
   }
   else if(PlayerInfo[DuelInviter][DuelLocation][2] == 1)
   {
      SetPlayerPos(DuelPlayerInvite, 276.4028,-135.2213,1004.0625);
      SetPlayerInterior(DuelPlayerInvite, 7);
      ResetPlayerWeapons(DuelPlayerInvite);
      GivePlayerWeapon(DuelPlayerInvite, PlayerInfo[DuelInviter][DuelWeapon1], 99999);
      GivePlayerWeapon(DuelPlayerInvite, PlayerInfo[DuelInviter][DuelWeapon2], 99999);
      SetCameraBehindPlayer(DuelPlayerInvite);
   }
   else if(PlayerInfo[DuelInviter][DuelLocation][3] == 1)
   {
      SetPlayerPos(DuelPlayerInvite, -1130.6006,1057.6938,1346.4141);
      SetPlayerInterior(DuelPlayerInvite, 10);
      ResetPlayerWeapons(DuelPlayerInvite);
      GivePlayerWeapon(DuelPlayerInvite, PlayerInfo[DuelInviter][DuelWeapon1], 99999);
      GivePlayerWeapon(DuelPlayerInvite, PlayerInfo[DuelInviter][DuelWeapon2], 99999);
      SetCameraBehindPlayer(DuelPlayerInvite);
   }
   return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function JailRelease(playerid)
{
    if(PlayerInfo[playerid][Jailed] == 1)
    {
		PlayerInfo[playerid][Jailed] = 0, SetPlayerInterior(playerid, 0);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SpawnPlayer(playerid), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Announce(playerid, "~G~~H~~H~Released ~W~~H~From Jail", 3000, 4);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerHealth(playerid, 100);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function UnMute(playerid)
{
	if(PlayerInfo[playerid][Muted] == 0) return true;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(PlayerInfo[playerid][Muted] == 1) PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0), PlayerInfo[playerid][Muted] = 0, Announce(playerid, "~w~~h~You have been ~g~~h~Unmuted~w~~h~!", 3000, 4);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function UnFreezeMe(playerid)
{
    if(PlayerInfo[playerid][Frozen] == 0) return true;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(PlayerInfo[playerid][Frozen] == 1) TogglePlayerControllable(playerid, true), PlayerInfo[playerid][Frozen] = 0, PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0), Announce(playerid, "~w~~h~You have been ~g~~h~Unfrozen~w~~h~!", 3000, 4), SetPlayerVirtualWorld(playerid, 0);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function MessageToKings(Color, string[])
{
    foreach(new i: Player) if(PlayerInfo[i][RconType] == 3) SCM(i, Color, string);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function MessageToAdmins(Color, string[])
{
	foreach(new i: Player) if(PlayerInfo[i][Level] >= 1) SCM(i, Color, string);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function MessageToVips(Color, text[])
{
	foreach(new i: Player)
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[i][VipChat] == 0)
	{
    	if(PlayerInfo[i][pVIP] >= 1) SCM(i, Color, text);
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock Contest_Function(type)
{
    switch(type)
	{
        case 0:
        {
            new xLength = (10); format(Chars, 17, "");
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            ReacReward = randomEx(1, 5);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            for (new x = 0; x != xLength; x++) format(Chars, 17, "%s%s", Chars, Characters[random(sizeof(Characters))][0]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			foreach(new i: Player)
			{
				switch(PlayerInfo[i][Language])
				{
				    case 1: FormatMSG(i, GREEN2, "Primul care scrie {FF0000}%s {05C81F}castiga {FF0000}5000$ & %d {05C81F}coins!", Chars, ReacReward);
				    case 2: FormatMSG(i, GREEN2, "First who type {FF0000}%s {05C81F}won {FF0000}5000$ & %d {05C81F}coins!", Chars, ReacReward);
				}
			}
            StartedR = 1;
        }
        case 1:
        {
            new maths = random(3);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            StartedM = true;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            foreach(new i: Player)
			{
		        switch(maths)
				{
					case 0:
					{
					    new number[2];
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    ReacReward = randomEx(1, 5);
            			//++++++++++++++++++++++++++++++++++++++++++++++++++++++
            			number[0] = randomEx(1, 1000), number[1] = randomEx(1, 1000);
		                //++++++++++++++++++++++++++++++++++++++++++++++++++++++
		                switch(PlayerInfo[i][Language])
						{
						    case 1: FormatMSG(i, GREEN2, "Primul care calculeaza {FF0000}%d + %d {05C81F}primeste {FF0000}%d {05C81F}coins!", number[0], number[1], ReacReward);
						    case 2: FormatMSG(i, GREEN2, "Who answer first to {FF0000}%d + %d {05C81F}won {FF0000}%d {05C81F}coins!", number[0], number[1], ReacReward);
						}
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
            			MathsResult = number[0] + number[1];
					}
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		            case 1:
					{
					    new number[2];
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    ReacReward = randomEx(1, 5);
            			//++++++++++++++++++++++++++++++++++++++++++++++++++++++
        			    number[0] = randomEx(900, 2000), number[1] = randomEx(1, 800);
		                //++++++++++++++++++++++++++++++++++++++++++++++++++++++
                        switch(PlayerInfo[i][Language])
						{
						    case 1: FormatMSG(i, GREEN2, "Primul care calculeaza {FF0000}%d - %d {05C81F}primeste {FF0000}%d {05C81F}coins!", number[0], number[1], ReacReward);
						    case 2: FormatMSG(i, GREEN2, "Who answer first to {FF0000}%d - %d {05C81F}won {FF0000}%d {05C81F}coins!", number[0], number[1], ReacReward);
						}
	      			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                	MathsResult = number[0] - number[1];
					}
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					case 2:
					{
					    new number[2];
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    ReacReward = randomEx(1, 5);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    number[0] = randomEx(1, 200), number[1] = randomEx(1, 50);
		                //++++++++++++++++++++++++++++++++++++++++++++++++++++++
                        switch(PlayerInfo[i][Language])
						{
						    case 1: FormatMSG(i, GREEN2, "Primul care calculeaza {FF0000}%d x %d {05C81F}primeste {FF0000}%d {05C81F}coins!", number[0], number[1], ReacReward);
						    case 2: FormatMSG(i, GREEN2, "Who answer first to {FF0000}%d x %d {05C81F}won {FF0000}%d {05C81F}coins!", number[0], number[1], ReacReward);
						}
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
		                MathsResult = number[0] * number[1];
					}
				}
			}
        }
    }
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock IsNosVehicle(vehicleid)
{
    #define NO_NOS_VEHICLES 29
    new InvalidNosVehicles[NO_NOS_VEHICLES] =
    {
		581,523,462,521,463,522,461,448,468,586,
     	509,481,510,472,473,493,595,484,430,453,
   		452,446,454,590,569,537,538,570,449
    };
	for (new i = 0; i < NO_NOS_VEHICLES; i++) if(GetVehicleModel(vehicleid) == InvalidNosVehicles[i]) return 0;
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
GetConnectedClanPlayers(playerid)
{
    new connected = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID])
	    {
	        connected++;
		}
	}
	return connected;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
GetAmountOfConnectedAdmins()
{
	new connected = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][Level] >= 1)
	    {
	        connected++;
		}
	}
	return connected;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock TimeConvert(seconds)
{
    new tmp[16], minutes = floatround(seconds/60);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  	seconds -= minutes*60, format(tmp, 16, "%d:%02d", minutes, seconds);
   	return tmp;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock RemovePlayerFromVehicleEx(playerid)
{
	new Float:p_X, Float:p_Y, Float:p_Z, Float:p_A;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid, p_X, p_Y, p_Z), GetPlayerFacingAngle(playerid, p_A);
	SetPlayerPos(playerid, p_X, p_Y, p_Z + 8), SetPlayerFacingAngle(playerid, p_A);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ConnectedIPs(IP_Address[])
{
    new SameIP = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(Player, i) if(strcmp(GetPlayerIPEx(i), IP_Address) == 0) SameIP++;
    return SameIP;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock randomEx(min, max) return (random((max - min)) + min);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ShowAStats(playerid)
{
    new AString[1000], AdminRank[2000], h, m, s;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TotalGameTimeAdmin(playerid, h, m, s);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][RconType] == 3) AdminRank ="{FFFFFF}Manager";
	else if(PlayerInfo[playerid][RconType] == 2) AdminRank ="{FFFFFF}Support";
	else if(PlayerInfo[playerid][RconType] == 1) AdminRank ="{FFFFFF}RCON";
	else if(PlayerInfo[playerid][Level] >= 1) AdminRank ="{0033FF}Admin";
	else if(PlayerInfo[playerid][Level] == 0) AdminRank ="{FFFFFF}Normal Player";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(AString, 1000, "\
	{FF0000}%s{FFFFFF}'s Admin Statistics\n\n\
	{FF0000}Admin statics:\n\
	{00CC00}Bans: {FFFFFF}%d\n\
	{00CC00}Kicks: {FFFFFF}%d\n\
	{00CC00}Jails: {FFFFFF}%d\n\
	{00CC00}Mutes: {FFFFFF}%d\n\
	{00CC00}Reports: {FFFFFF}%d {00CC00}closed\n\
	{00CC00}Events: {FFFFFF}%d {00CC00}made\n\
	{00CC00}Activity: {FFFFFF}%d {00CC00}hours\n\
	{00CC00}Total: {FFFFFF}%d\n\n\
	{FF0000}Other Statics:\n\
	{00CC00}Rank: %s\n\
	{00CC00}Admin level:{FFFFFF} %d\n\
	{00CC00}Admin warning points:{FFFFFF} %d/{FF0000}100\n\
	{00CC00}Admin since:{FFFFFF} %s",
	PN(playerid), PlayerInfo[playerid][PBans], PlayerInfo[playerid][PKicks], PlayerInfo[playerid][PJails],
	PlayerInfo[playerid][PMutes], PlayerInfo[playerid][ARClosed], PlayerInfo[playerid][EventsMaded], h,
	PlayerInfo[playerid][Activity], AdminRank, PlayerInfo[playerid][Level], PlayerInfo[playerid][AWP],
	GetPlayerAdminSince(playerid));
	return AString;
}
stock GetPlayerAdminSince(playerid)
{
	new string[24];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Level] == 0) string = "Unknown";
	else format(string, sizeof(string), "%s", PlayerInfo[playerid][AdminSince]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return string;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock virtualworld()
{
    new VString[512];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(VString, sizeof(VString), "\
	{CCFF00}Ti-ai schimbat cu cucces lumea virtuala!\n\n\
	{00CC00}In aceasta luma esti singur, dar poti invita si alti jucatori sa ti se\n\
	{00CC00}alature folosind comanda{FF0000} /pm{00CC00} si spundu-le lumea in care te aflii!\n\n\
	{CCFF00}/vw 0{00CC00} - Pentru a te intoarce in lumea normala!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	return VString;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendError2(playerid, RoError[], EnError[])
{
	new Str[1900];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(PlayerInfo[playerid][Language])
	{
	    case 1: format(Str, sizeof(Str), "ERROR: %s", RoError);
		case 2: format(Str, sizeof(Str), "ERROR: %s", EnError);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SCM(playerid, RED, Str);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendError(playerid, Error[])
{
	new Str[1900];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(Str, sizeof(Str), "ERROR: %s", Error);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SCM(playerid, RED, Str);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendErrorEx(playerid, Error[])
{
	new Str[1900];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(Str, sizeof(Str), "%s", Error);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SCM(playerid, RED, Str);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock AdminCMD(playerid, command[])
{
    foreach(new i: Player) if(PlayerInfo[i][Level] >= 1)
    FormatMSG(i, ABLUE, "[ADMIN] {00CC00}%s {0066FF}has used the command {00CC00}%s", PN(playerid), command);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock AdminCMDSpectate(playerid[])
{
    foreach(new i: Player) if(PlayerInfo[i][Level] >= 1)
    FormatMSG(i, ABLUE, "[ADMIN] {00CC00}%s {0066FF}has spectate player {00CC00}#%d", PN(playerid), playerid);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SpawnPlayerAtHouse(playerid)
{
	new h_owner = PlayerInfo[playerid][House];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(h_owner == 0) return SendError(playerid, "You don't own a house!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerPos(playerid, HouseInfo[h_owner][HX], HouseInfo[h_owner][HY], HouseInfo[h_owner][HZ]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerInterior(playerid, 0);
    SetPlayerVirtualWorld(playerid, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SpawnPlayerAtBusiness(playerid)
{
	new b_owner = PlayerInfo[playerid][Property];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(b_owner == 0) return SendError(playerid, "You don't own a business!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerPos(playerid, PropInfo[b_owner][PropX], PropInfo[b_owner][PropY], PropInfo[b_owner][PropZ]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerInterior(playerid, 0);
    SetPlayerVirtualWorld(playerid, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock PN(playerid)
{
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, MAX_PLAYER_NAME);
	return name;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Load From Database
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function LoadFromDB()
{
	mysql_tquery(SQL, "SELECT * FROM `Properties`", "LoadProps", "");
	mysql_tquery(SQL, "SELECT * FROM `Houses`", "LoadHouses", "");
	mysql_tquery(SQL, "SELECT * FROM `Raports`", "LoadRaports", "");
	mysql_tquery(SQL, "SELECT * FROM `Gangs`", "LoadGangs", "");
	mysql_tquery(SQL, "SELECT * FROM `Clans`", "SetupAllClans", "");
	mysql_tquery(SQL, "SELECT * FROM `GangPickups`", "LoadGangPickups", "");
	mysql_tquery(SQL, "SELECT * FROM `GangCheckpoints`", "LoadGangCheckpoints", "");
	mysql_tquery(SQL, "SELECT * FROM `GangGates`", "LoadGangGates", "");
	mysql_tquery(SQL, "SELECT * FROM `GangLiftes`", "LoadGangLifts", "");
	mysql_tquery(SQL, "SELECT * FROM `GangCars`", "LoadGangCars", "");
	mysql_tquery(SQL, "SELECT * FROM `GangCameraPos`", "LoadGangCameraPos", "");
	mysql_tquery(SQL, "SELECT * FROM `GangHouses`", "LoadGangHouses", "");
	mysql_tquery(SQL, "SELECT * FROM `GangTers`", "LoadTeritories", "");
	mysql_tquery(SQL, "SELECT * FROM `SpawnZones`", "LoadSpawnZones", "");
	mysql_tquery(SQL, "SELECT * FROM `Races`", "LoadRaceDetails", "");
	mysql_tquery(SQL, "SELECT * FROM `RacesCP`", "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_query(SQL, "SELECT * FROM `ServerCFG`"); { new rows; cache_get_row_count(rows); for(new i; i != rows; i++) { CACHE(i, "HostnameChanger", ServerInfo[ServerHNC]); CACHE(i, "AntiVersionOutData", ServerInfo[AntiVersionOutData]); } }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function LoadProps()
{
    new Field[24], Field2[24], X, Rows, Fields, String[512], ExpiredCount;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
    new lvlstring[24];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < Rows; i++)
    {
        CACHE(i, "ID", X);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        CONTENT(i, "PropName", Field);
		format(PropInfo[X][PropName], 24, "%s", Field);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CONTENT(i, "PropOwner", Field2);
		format(PropInfo[X][PropOwner], 24, "%s", Field2);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "PosX", PropInfo[X][PropX]);
        FLOAT(i, "PosY", PropInfo[X][PropY]);
        FLOAT(i, "PosZ", PropInfo[X][PropZ]);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        FLOAT(i, "IntX", PropInfo[X][InteriorX]);
        FLOAT(i, "IntY", PropInfo[X][InteriorY]);
		FLOAT(i, "IntZ", PropInfo[X][InteriorZ]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CACHE(i, "Interior", PropInfo[X][IntID]);
		CACHE(i, "Level", PropInfo[X][p_Level]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CACHE(i, "PropCost", PropInfo[X][Cost]);
		CACHE(i, "PropCostM", PropInfo[X][CostM]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CACHE(i, "PropTime", PropInfo[X][PTime]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CACHE(i, "PropEarning", PropInfo[X][Earning]);
		CACHE(i, "PropEarningM", PropInfo[X][EarningM]);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PropInfo[X][p_Level] == 1) lvlstring = "{FF9900}Standard";
		if(PropInfo[X][p_Level] == 2) lvlstring = "{FF0000}Premium";
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PropInfo[X][PropX] != 0 || PropInfo[X][PropY] != 0)
		{
	        if(strcmp(PropInfo[X][PropOwner], "Nobody", true) == 0)
	        {
	            PropInfo[X][PropMapIcon] = CreateDynamicMapIcon(PropInfo[X][PropX], PropInfo[X][PropY], PropInfo[X][PropZ], 52, 52);
				format(String, sizeof(String), "{9C9621}\"%s\"\n{9C9621}Property is For Sale\n{2982FF}Cost: {00FF22}%d coins and $%d\n{2982FF}Win: {00FF22}%d coins and $%d\n{DE00BD}/business", PropInfo[X][PropName], PropInfo[X][Cost], PropInfo[X][CostM], PropInfo[X][Earning], PropInfo[X][EarningM]);
			}
			else
			{
			    PropInfo[X][PropMapIcon] = CreateDynamicMapIcon(PropInfo[X][PropX], PropInfo[X][PropY], PropInfo[X][PropZ], 36, 36);
				format(String, sizeof(String), "{9C9621}\"%s\"\n{2982FF}Business Owner: {00FF22}%s\n{2982FF}Business Level: %s\n{2982FF}Cost: {00FF22}%d coins and $%d\n{2982FF}Win: {00FF22}%d coins and $%d\n{DE00BD}/business", PropInfo[X][PropName], PropInfo[X][PropOwner], lvlstring, PropInfo[X][Cost], PropInfo[X][CostM], PropInfo[X][Earning], PropInfo[X][EarningM]);
			}
			Prop3D[X] = CreateDynamic3DTextLabel(String, ~1, PropInfo[X][PropX], PropInfo[X][PropY], PropInfo[X][PropZ], 15.0);
	        PropPickUP[X] = CreateDynamicPickup(1274, 1, PropInfo[X][PropX], PropInfo[X][PropY], PropInfo[X][PropZ]);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(strcmp(PropInfo[X][PropOwner], "Nobody", true) != 0 && PropInfo[X][PTime] < gettime())
	        {
			     format(PropInfo[X][PropName], 24, "ForSale"), 	format(PropInfo[X][PropOwner], 24, "Nobody");
		         //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		         DestroyDynamicMapIcon(PropInfo[X][PropMapIcon]);
		         //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			     PropInfo[X][PropMapIcon] = CreateDynamicMapIcon(PropInfo[X][PropX], PropInfo[X][PropY], PropInfo[X][PropZ], 52, 52);
		         //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			     format(String, sizeof(String), "{9C9621}\"%s\"\n{9C9621}Business is For Sale\n{2982FF}Cost: {00FF22}%d Coins and $%d\n{2982FF}Win: {00FF22}%d Coins and $%d\n{DE00BD}/business", PropInfo[X][PropName], PropInfo[X][Cost], PropInfo[X][CostM], PropInfo[X][Earning], PropInfo[X][EarningM]);
		         //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		         UpdateDynamic3DTextLabelText(Prop3D[X], ~1, String);
		         //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		         mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Properties` SET `PropOwner` = 'Nobody', `PropName` = 'ForSale', `PropTime` = '0' WHERE `ID` = '%d'", X);
			     mysql_tquery(SQL, eQuery, "", "");
			     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			     mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `Property` = '0' WHERE `Property` = %d", X);
			     mysql_tquery(SQL, eQuery, "", "");
			     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			     PropInfo[X][PTime] = 0, ExpiredCount++;
	        }
	    }
	}
	printf("Loaded %d Properties and %d reseted!", Rows, ExpiredCount);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function LoadHouses()
{
    new Field[24], X, Rows, Fields, ExpiredCount, String[512];
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
    new lvlstring[24];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < Rows; i++)
	{
	    CACHE(i, "ID", X);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CONTENT(i, "HouseOwner", Field);
  		format(HouseInfo[X][Name], 24, "%s", Field);
  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CACHE(i, "HouseRent", HouseInfo[X][Rent]);
	    CACHE(i, "HouseCost", HouseInfo[X][Cost]);
	    CACHE(i, "HouseCostM", HouseInfo[X][CostM]);
	    CACHE(i, "HouseSell", HouseInfo[X][Sell]);
	    CACHE(i, "HouseTime", HouseInfo[X][HTime]);
	    CACHE(i, "HouseInterior", HouseInfo[X][Interior]);
	    CACHE(i, "HouseLocked", HouseInfo[X][Locked]);
	    FLOAT(i, "HouseIntX", HouseInfo[X][InteriorX]);
	    FLOAT(i, "HouseIntY", HouseInfo[X][InteriorY]);
		FLOAT(i, "HouseIntZ", HouseInfo[X][InteriorZ]);
		FLOAT(i, "HouseX", HouseInfo[X][HX]);
		FLOAT(i, "HouseY", HouseInfo[X][HY]);
		FLOAT(i, "HouseZ", HouseInfo[X][HZ]);
		CACHE(i, "Level", HouseInfo[X][h_Level]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(HouseInfo[X][h_Level] == 1) lvlstring = "{FF9900}Standard";
		if(HouseInfo[X][h_Level] == 2) lvlstring = "{FF0000}Premium";
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(HouseInfo[X][HX] != 0 || HouseInfo[X][HY] != 0)
		{
			if(strcmp(HouseInfo[X][Name], "ForSale", true) == 0)
			{
			    HousePickup[X] = CreateDynamicPickup(19523, 1, HouseInfo[X][HX], HouseInfo[X][HY], HouseInfo[X][HZ]);	//Not Bought
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            format(String, sizeof(String), "{00CC00}Cost: {FF0000}%d Coins and $%d\n\
					  			  	  			{00CC00}Type {FF9900}/house {00CC00}for more info.", HouseInfo[X][Cost], HouseInfo[X][CostM]);
			}
			else
			{
				HousePickup[X] = CreateDynamicPickup(19522, 1, HouseInfo[X][HX], HouseInfo[X][HY], HouseInfo[X][HZ]);	//Bought
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        	format(String, sizeof(String), "{00FF22}Owned by: {FF0000}%s\n\
							  	  	  			{00FF22}House Level: %s\n\
		                              			{00FF22}Type {FF9900}/house {00FF22}for more details.", HouseInfo[X][Name], lvlstring);
			}
	  		housei[X] = CreateDynamic3DTextLabel(String, ~1, HouseInfo[X][HX], HouseInfo[X][HY], HouseInfo[X][HZ], 15.0);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(strcmp(HouseInfo[X][Name], "ForSale", true) != 0 && HouseInfo[X][HTime] < gettime())
	        {
	             format(HouseInfo[X][Name], 24, "ForSale"), HouseInfo[X][Locked] = 1;
			     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	             format(String, sizeof(String), "{00CC00}Cost: {FF0000}%d Coins and $%d\n\
									   			 {00CC00}Type {FF9900}/house {00CC00}for more info.", HouseInfo[X][Cost], HouseInfo[X][CostM]);
	             //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			     UpdateDynamic3DTextLabelText(housei[X], ~1, String), DestroyDynamicPickup(HousePickup[X]);
	  		     HousePickup[X] = CreateDynamicPickup(19523, 23, HouseInfo[X][HX], HouseInfo[X][HY], HouseInfo[X][HZ]);
	  		     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			     mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Houses` SET `HouseTime` = '0' WHERE `ID` = %d", X);
			     mysql_tquery(SQL, eQuery, "", "");
			     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			     mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `House` = '0' WHERE `House` = %d", X);
			     mysql_tquery(SQL, eQuery, "", "");
	  		     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		     HouseInfo[X][HTime] = 0, ExpiredCount++;
	        }
		}
	}
	printf("Loaded %d houses and %d reseted!", Rows, ExpiredCount);
	return true;
}
function DestroyPersonalCars(playerid)
{
    for(new i = 0; i < MAX_VEH; i++)
    {
        if(!Vehicles[i][vehStatus]) continue;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(Vehicles[i][vehOwner] == PlayerInfo[playerid][AccID])
		{
			SavePersonalCars(i);
			RemovePersonalCar(i);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			DestroyObject(Vehicles[i][vehObject][1]);
			DestroyObject(Vehicles[i][vehObject][2]);
			DestroyObject(Vehicles[i][vehObject][3]);
			DestroyObject(Vehicles[i][vehObject][4]);
			DestroyObject(Vehicles[i][vehObject][5]);
		}
    }
    return true;
}
function LoadPlayerPersonalCars(playerid)
{
    PlayerInfo[playerid][CarVCP] = -1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new rows, count = 0, tempString[16], String2[16]; eQuery[0] = EOS;
    new tempVehText1[200], tempVehText2[200], tempVehText3[200], tempVehText4[200], tempVehText5[200];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `PersonalCars` WHERE `vehOwner` = '%d'", PlayerInfo[playerid][AccID]);
	mysql_query(SQL, eQuery);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	cache_get_row_count(rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(rows > 0)
    {
		for(new z = 0; z < rows; z++)
		{
		    for(new i = 0; i < MAX_VEH; i++)
			{
			    if(Vehicles[i][vehStatus]) continue;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                Vehicles[i][vehStatus] = true;
                CACHE(z, "ID", Vehicles[i][vehID]);
                CACHE(z, "VehModel", Vehicles[i][vehModel]);
                CACHE(z, "PersonalCar", Vehicles[i][vehPersonal]);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CACHE(z, "VehOwner", Vehicles[i][vehOwner]);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                FLOAT(z, "VehPosX", Vehicles[i][vehPos][0]);
                FLOAT(z, "VehPosY", Vehicles[i][vehPos][1]);
                FLOAT(z, "VehPosZ", Vehicles[i][vehPos][2]);
                FLOAT(z, "VehPosA", Vehicles[i][vehPos][3]);
                CACHE(z, "VehColor1", Vehicles[i][vehColor][0]);
                CACHE(z, "VehColor2", Vehicles[i][vehColor][1]);
                CACHE(z, "Level", Vehicles[i][vehLevel]);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CONTENT(z, "VehicleText1", tempVehText1);
                format(Vehicles[i][vehText1], 200, "%s", tempVehText1);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CONTENT(z, "VehicleText2", tempVehText2);
                format(Vehicles[i][vehText2], 200, "%s", tempVehText2);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CONTENT(z, "VehicleText3", tempVehText3);
                format(Vehicles[i][vehText3], 200, "%s", tempVehText3);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CONTENT(z, "VehicleText4", tempVehText4);
                format(Vehicles[i][vehText4], 200, "%s", tempVehText4);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CONTENT(z, "VehicleText5", tempVehText5);
                format(Vehicles[i][vehText5], 200, "%s", tempVehText5);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				CACHE(z, "TextSize1", Vehicles[i][VehTextSize][1]);
				CACHE(z, "TextSize2", Vehicles[i][VehTextSize][2]);
				CACHE(z, "TextSize3", Vehicles[i][VehTextSize][3]);
				CACHE(z, "TextSize4", Vehicles[i][VehTextSize][4]);
				CACHE(z, "TextSize5", Vehicles[i][VehTextSize][5]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                if(strcmp(Vehicles[i][vehText1], "-1", false))
				{
	                FLOAT(z, "VehText1PosX", Vehicles[i][VehObjectP1][0]);
	                FLOAT(z, "VehText1PosY", Vehicles[i][VehObjectP1][1]);
	                FLOAT(z, "VehText1PosZ", Vehicles[i][VehObjectP1][2]);
	                FLOAT(z, "VehText1RotX", Vehicles[i][VehObjectP1][3]);
	                FLOAT(z, "VehText1RotY", Vehicles[i][VehObjectP1][4]);
	                FLOAT(z, "VehText1RotZ", Vehicles[i][VehObjectP1][5]);
	            }
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                if(strcmp(Vehicles[i][vehText2], "-1", false))
				{
	                FLOAT(z, "VehText2PosX", Vehicles[i][VehObjectP2][0]);
	                FLOAT(z, "VehText2PosY", Vehicles[i][VehObjectP2][1]);
	                FLOAT(z, "VehText2PosZ", Vehicles[i][VehObjectP2][2]);
	                FLOAT(z, "VehText2RotX", Vehicles[i][VehObjectP2][3]);
	                FLOAT(z, "VehText2RotY", Vehicles[i][VehObjectP2][4]);
	                FLOAT(z, "VehText2RotZ", Vehicles[i][VehObjectP2][5]);
	            }
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                if(strcmp(Vehicles[i][vehText3], "-1", false))
				{
	                FLOAT(z, "VehText3PosX", Vehicles[i][VehObjectP3][0]);
	                FLOAT(z, "VehText3PosY", Vehicles[i][VehObjectP3][1]);
	                FLOAT(z, "VehText3PosZ", Vehicles[i][VehObjectP3][2]);
	                FLOAT(z, "VehText3RotX", Vehicles[i][VehObjectP3][3]);
	                FLOAT(z, "VehText3RotY", Vehicles[i][VehObjectP3][4]);
	                FLOAT(z, "VehText3RotZ", Vehicles[i][VehObjectP3][5]);
				}
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                if(strcmp(Vehicles[i][vehText4], "-1", false))
				{
	                FLOAT(z, "VehText4PosX", Vehicles[i][VehObjectP4][0]);
	                FLOAT(z, "VehText4PosY", Vehicles[i][VehObjectP4][1]);
	                FLOAT(z, "VehText4PosZ", Vehicles[i][VehObjectP4][2]);
	                FLOAT(z, "VehText4RotX", Vehicles[i][VehObjectP4][3]);
	                FLOAT(z, "VehText4RotY", Vehicles[i][VehObjectP4][4]);
	                FLOAT(z, "VehText4RotZ", Vehicles[i][VehObjectP4][5]);
	            }
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                if(strcmp(Vehicles[i][vehText5], "-1", false))
				{
	                FLOAT(z, "VehText5PosX", Vehicles[i][VehObjectP5][0]);
	                FLOAT(z, "VehText5PosY", Vehicles[i][VehObjectP5][0]);
	                FLOAT(z, "VehText5PosZ", Vehicles[i][VehObjectP5][0]);
	                FLOAT(z, "VehText5RotX", Vehicles[i][VehObjectP5][0]);
	                FLOAT(z, "VehText5RotY", Vehicles[i][VehObjectP5][0]);
	                FLOAT(z, "VehText5RotZ", Vehicles[i][VehObjectP5][0]);
	            }
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                Vehicles[i][vehPaint] = 255;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                new a = 1;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                for(new w = 0; w < 14; w++)
				{
				    format(String2, sizeof(String2), "mod%d", a);
				    CONTENT(z, String2, Vehicles[i][vehMod][w]);
				    a++;
				}
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CONTENT(z, "VehPlate", tempString);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                format(Vehicles[i][vehPlate], 16, "%s", tempString);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CreatePersonalCar1(i, false);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                count++;
                break;
			}
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function LoadRaports()
{
	CACHE(0, "Bans", Raport[RBans]);
    CACHE(0, "Kicks", Raport[RKicks]);
    CACHE(0, "Warns", Raport[RWarns]);
    CACHE(0, "Kicks", Raport[RKicks]);
    CACHE(0, "Jails", Raport[RJails]);
    CACHE(0, "Mutes", Raport[RMutes]);
    CACHE(0, "Reports", Raport[RReports]);
    CACHE(0, "Events", Raport[REvents]);
    CACHE(0, "Inactivity", Raport[RMax]);
    CACHE(0, "MaxRaports", Raport[RMaxRaport]);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CheckingDisSpectate(playerid)
{
	Announce(playerid, "~W~~H~Spectate~R~~H~ off~N~~Y~~H~Target disconnected", 6000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	StopSpectate(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock StartSpectate(playerid, specplayerid)
{
	foreach(new x: Player) if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid) AdvanceSpectate(x);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new Float:hp, Float:ar; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerInterior(playerid, GetPlayerInterior(specplayerid));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specplayerid));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TogglePlayerSpectating(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInAnyVehicle(specplayerid))
	{
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specplayerid));
		PlayerInfo[playerid][SpecID]   = specplayerid;
		PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_VEHICLE;
	}
	else
	{
		PlayerSpectatePlayer(playerid, specplayerid);
		PlayerInfo[playerid][SpecID]   = specplayerid;
		PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_PLAYER;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerHealth(specplayerid, hp);
	GetPlayerArmour(specplayerid, ar);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new string[257];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerTextDrawShow(playerid, Spec_Player1);
    PlayerTextDrawShow(playerid, Spec_Player2);
    PlayerTextDrawShow(playerid, Spec_Player3);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(string, sizeof string, "Spectating~G~~H~ %s", PN(specplayerid));
	PlayerTextDrawSetString(playerid, Spec_Player1, string);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof eString, "HP:~R~~H~ %0.1f~W~~H~ - AR:~R~~H~ %0.1f~W~~H~ - VW:~R~~H~ %d", hp, ar, GetPlayerVirtualWorld(specplayerid));
	PlayerTextDrawSetString(playerid, Spec_Player2, eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof eString, "~Y~~H~<~W~~H~ SPACE - LSHIFT~Y~~H~ >");
	PlayerTextDrawSetString(playerid, Spec_Player3, eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock StopSpectate(playerid)
{
    new string[259]; eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TogglePlayerSpectating(playerid, 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][SpecID]   = INVALID_PLAYER_ID;
	PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_NONE;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(string, sizeof string, "_");
	PlayerTextDrawSetString(playerid, Spec_Player1, string);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof eString, "_");
	PlayerTextDrawSetString(playerid, Spec_Player2, eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof eString, "_");
	PlayerTextDrawSetString(playerid, Spec_Player3, eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(string, sizeof string, "_");
	PlayerTextDrawSetString(playerid, Spec_Spawn1, string);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof eString, "_");
	PlayerTextDrawSetString(playerid, Spec_Spawn2, eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerVirtualWorld(playerid, 0), TogglePlayerControllable(playerid, 0);
    SpawnPlayer(playerid);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock AdvanceSpectate(playerid)
{
    if(ConnectedPlayers() == 2)
	{
		StopSpectate(playerid);
		return true;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
	{
	    for (new x = PlayerInfo[playerid][SpecID]+1; x <= MAX_PLAYERS; x++)
		{
	    	if(x == MAX_PLAYERS) x = 0;
	        if(IsPlayerConnected(x) && x != playerid)
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] != INVALID_PLAYER_ID || (GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3)) continue;
				else
				{
					StartSpectate(playerid, x);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					break;
				}
			}
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ReverseSpectate(playerid)
{
    if(ConnectedPlayers() == 2)
	{
		StopSpectate(playerid);
		return true;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
	{
	    for (new x = PlayerInfo[playerid][SpecID]-1; x >= 0; x--)
		{
	    	if(x == 0) x = MAX_PLAYERS;
	        if(IsPlayerConnected(x) && x != playerid)
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] != INVALID_PLAYER_ID || (GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
TotalGameTime(playerid, &h=0, &m=0, &s=0)
{
    PlayerInfo[playerid][TotalTime] = ((gettime() - PlayerInfo[playerid][ConnectTime]) + (PlayerInfo[playerid][hours]*60*60) + (PlayerInfo[playerid][mins]*60) + (PlayerInfo[playerid][secs]));
    h = floatround(PlayerInfo[playerid][TotalTime] / 3600, floatround_floor);
    m = floatround(PlayerInfo[playerid][TotalTime] / 60,   floatround_floor) % 60;
    s = floatround(PlayerInfo[playerid][TotalTime] % 60,   floatround_floor);
    return PlayerInfo[playerid][TotalTime];
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
TotalGameTimeAdmin(playerid, &h=0, &m=0, &s=0)
{
	if(PlayerInfo[playerid][Level] != 0)
	{
	    if(PlayerInfo[playerid][LoggedIn] == 1)
	    {
			PlayerInfo[playerid][AdminTime] = ((gettime() - PlayerInfo[playerid][AdminTimeConnect]) + (PlayerInfo[playerid][hoursADMIN]*60*60) + (PlayerInfo[playerid][minutesADMIN]*60) + (PlayerInfo[playerid][secondsADMIN]));
			h = floatround(PlayerInfo[playerid][AdminTime] / 3600, floatround_floor);
			m = floatround(PlayerInfo[playerid][AdminTime] / 60,   floatround_floor) % 60;
			s = floatround(PlayerInfo[playerid][AdminTime] % 60,   floatround_floor);
			return PlayerInfo[playerid][AdminTime];
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
TotalGameTimeGang(playerid, &h=0, &m=0, &s=0)
{
    if(PlayerInfo[playerid][GangID] != 0)
    {
	    if(PlayerInfo[playerid][LoggedIn] == 1)
	    {
			PlayerInfo[playerid][g_Time][4] = ((gettime() - PlayerInfo[playerid][g_Time][5]) + (PlayerInfo[playerid][g_Time][1]*60*60) + (PlayerInfo[playerid][g_Time][2]*60) + (PlayerInfo[playerid][g_Time][3]));
			h = floatround(PlayerInfo[playerid][g_Time][4] / 3600, floatround_floor);
			m = floatround(PlayerInfo[playerid][g_Time][4] / 60,   floatround_floor) % 60;
			s = floatround(PlayerInfo[playerid][g_Time][4] % 60,   floatround_floor);
			return PlayerInfo[playerid][g_Time][4];
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
TotalGameTimeMonth(playerid, &hmonth=0, &mmonth=0, &smonth=0)
{
    PlayerInfo[playerid][MonthTime] = ((gettime() - PlayerInfo[playerid][ConnectTime]) + (PlayerInfo[playerid][hoursMonth]*60*60) + (PlayerInfo[playerid][minsMonth]*60) + (PlayerInfo[playerid][secsMonth]));
    hmonth = floatround(PlayerInfo[playerid][MonthTime] / 3600, floatround_floor);
    mmonth = floatround(PlayerInfo[playerid][MonthTime] / 60,   floatround_floor) % 60;
    smonth = floatround(PlayerInfo[playerid][MonthTime] % 60,   floatround_floor);
    return PlayerInfo[playerid][MonthTime];
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
SessionGameTime(playerid, &hsesion=0, &msesion=0, &ssession=0)
{
    PlayerInfo[playerid][SessionTime] = ((gettime() - PlayerInfo[playerid][ConnectTime]) + (PlayerInfo[playerid][hours_session]*60*60) + (PlayerInfo[playerid][minutes_session]*60) + (PlayerInfo[playerid][seconds_session]));
    hsesion = floatround(PlayerInfo[playerid][SessionTime] / 3600, floatround_floor);
    msesion = floatround(PlayerInfo[playerid][SessionTime] / 60,   floatround_floor) % 60;
    ssession = floatround(PlayerInfo[playerid][SessionTime] % 60,   floatround_floor);
    return PlayerInfo[playerid][SessionTime];
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock IsValidWeapon(weaponid)
{
    if(weaponid > 0 && weaponid < 19 || weaponid > 21 && weaponid < 47) return true;
	return 0;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock IsNumeric(string[])
{
	for (new i = 0, j = strlen(string); i < j; i++) if(string[i] > '9' || string[i] < '0') return 0;
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetVehicleModelIDFromName(vname[])
{
	for (new i = 0; i < 211; i++) if(strfind(vNames[i], vname, true) != -1) return i + 400;
	return -1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetWeaponIDFromName(WeaponName[])
{
	if(strfind("molotov", WeaponName, true) != -1) return 18;
	for (new i = 0; i <= 46; i++)
	{
		switch(i)
		{
			case 0,19,20,21,44,45: continue;
			default:
			{
				new name[32];
				GetWeaponName(i, name, 32);
				if(strfind(name, WeaponName, true) != -1) return i;
			}
		}
	}
	return -1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> For Panel (Today Peak & Avarage Players)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function GetTodayPeak()
{
	new count = 0; eQuery[0] = EOS;
	foreach(new i: Player) count++;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_query(SQL, "SELECT * FROM `ServerCFG`");
	new rows; cache_get_row_count(rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i; i != rows; i++)
	{
		new TodayPeak;
	 	CACHE(i, "TodayPeak", TodayPeak);
		if(TodayPeak < count)
		{
		    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `ServerCFG` SET `TodayPeak` = '%d'", count);
		    mysql_tquery(SQL, eQuery, "", "");
		}
	}
}
function GetPeakReset()
{
	new time[3]; gettime(time[0], time[1], time[2]); eQuery[0] = EOS;
	if(time[0] == 0 && time[1] == 0)
	{
	    mysql_query(SQL, "SELECT * FROM `ServerCFG`");
	    new rows; cache_get_row_count(rows);
	    for(new i; i != rows; i++)
		{
			new TodayPeakReseted;
			CACHE(i, "TodayPeakReseted", TodayPeakReseted);
	    	if(TodayPeakReseted == 0)
	    	{
	    	    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `ServerCFG` SET `TodayPeak` = '0', `TodayPeakReseted` = '1'");
	   			mysql_tquery(SQL, eQuery, "", "");
	    	}
	   	}
	}
	else
	{
	    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `ServerCFG` SET `TodayPeakReseted` = '0'");
	    mysql_tquery(SQL, eQuery, "", "");
	}
}
function GetAvaragePlayers()
{
	new count = 0; eQuery[0] = EOS;
	foreach(new i: Player) count++;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_query(SQL, "SELECT * FROM `ServerCFG`");
	new rows; cache_get_row_count(rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i; i != rows; i++)
	{
		new AvarageP;
		CACHE(i, "RecordP", AvarageP);
		if(AvarageP < count)
		{
		    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `ServerCFG` SET `RecordP` = '%d'", count);
		    mysql_tquery(SQL, eQuery, "", "");
		}
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
SavePlayerDescription(playerid)
{
	new Descr1[300], Descr2[300], Descr3[300];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_escape_string(PlayerInfo[playerid][DLine1], Descr1);
 	mysql_escape_string(PlayerInfo[playerid][DLine2], Descr2);
	mysql_escape_string(PlayerInfo[playerid][DLine3], Descr3);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
SaveHouse(H)
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Houses` SET `HouseInterior` = %d, `HouseIntX` = %f, `HouseIntY` = %f, `HouseIntZ` = %f, `Level` = %d WHERE `ID` = %d", HouseInfo[H][Interior], HouseInfo[H][InteriorX], HouseInfo[H][InteriorY], HouseInfo[H][InteriorZ], HouseInfo[H][h_Level], H);
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
SavePlayer(playerid)
{
	new h, m, s, gh, gm, gs, MonthH, MonthM, MonthS, hourAdmin, minAdmin;
	new secAdmin, szYear, szMonth, szDay, szHour, szMin, szSec;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TotalGameTime(playerid, h, m, s);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TotalGameTimeMonth(playerid, MonthH, MonthM, MonthS);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TotalGameTimeGang(playerid, gh, gm, gs);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TotalGameTimeAdmin(playerid, hourAdmin, minAdmin, secAdmin);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	getdate(szYear, szMonth, szDay); gettime(szHour, szMin, szSec); SavePlayerDescription(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SavePlayerClan(playerid), SavePlayerRaport(playerid); eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "UPDATE `Accounts` SET `LoggedIn` = '%d', `LastOn` = '%02d/%02d/%02d at %02d:%02d', `Level` = '%d', `VIP` = '%d', `Cash` = '%d', Coins = '%d', `Headshots` = '%d', `Kills` = '%d', `Deaths` = '%d', `Hours` = '%d', `Minutes` = '%d', `Seconds` = '%d', `BestKillings` = '%d', `Gifts` = '%d', `Warnings` = '%d'", PlayerInfo[playerid][LoggedIn], szDay, szMonth, szYear, szHour, szMin, PlayerInfo[playerid][Level], PlayerInfo[playerid][pVIP], PlayerInfo[playerid][Money], PlayerInfo[playerid][Coins], PlayerInfo[playerid][Headshots], PlayerInfo[playerid][Kills], PlayerInfo[playerid][Deaths], h, m, s, PlayerInfo[playerid][BestKillingSpree], PlayerInfo[playerid][Gifts], PlayerInfo[playerid][Warnings]);
	format(eString, sizeof(eString), "%s, `StatsNote` = '%d', `UseSkin` = '%d', `House` = '%d', `Property` = '%d', `Positive` = '%d', `Negative` = '%d', `ClanID` = '%d', `ClanRank` = '%d', `ClanPoints` = '%d', `ClanKills` = '%d', `ClanDeaths` = '%d', `DriftMonth` = '%d', `MySkin` = '%d', `KillsMonth` = '%d'", eString, PlayerInfo[playerid][StatsNote], PlayerInfo[playerid][UseSkin], PlayerInfo[playerid][House], PlayerInfo[playerid][Property], PlayerInfo[playerid][PosRespect], PlayerInfo[playerid][NegRespect], PlayerInfo[playerid][ClanID], PlayerInfo[playerid][c_Rank], PlayerInfo[playerid][c_Points], PlayerInfo[playerid][c_Kills], PlayerInfo[playerid][c_Deaths], PlayerInfo[playerid][DriftMonth], PlayerInfo[playerid][MySkin], PlayerInfo[playerid][KillsMonth]);
	format(eString, sizeof(eString), "%s, `Kicks` = '%d', `Bans` = '%d', `Jails` = '%d', `Warns` = '%d', `ClearChats` = '%d', `ReactionTest` = '%d', `MathTest` = '%d', `Mutes` = '%d', `Jailed` = '%d', `Frozen` = '%d', `Muted` = '%d', `AWP` = '%d'", eString, PlayerInfo[playerid][PKicks], PlayerInfo[playerid][PBans], PlayerInfo[playerid][PJails], PlayerInfo[playerid][PWarns], PlayerInfo[playerid][PClearCH], PlayerInfo[playerid][PReactions], PlayerInfo[playerid][PMaths], PlayerInfo[playerid][PMutes], PlayerInfo[playerid][Jailed], PlayerInfo[playerid][Frozen], PlayerInfo[playerid][Muted], PlayerInfo[playerid][AWP]);
	format(eString, sizeof(eString), "%s, `RaceScore` = '%d', `StuntScore` = '%d', `DriftScore` = '%d', `AdmWarns` = '%d', `VIPWarns` = '%d', `KickW` = '%d', `C4` = '%d', `FreeVIP` = '%d', `TempVIP` = '%d', `Activity` = '%d', `RaceMonth` = '%d', `DataSet` = '%d', `ReportsClosed` = '%d'", eString, PlayerInfo[playerid][RacePoints], PlayerInfo[playerid][StuntPoints], PlayerInfo[playerid][DriftPoints], PlayerInfo[playerid][AdmW], PlayerInfo[playerid][VIPW], PlayerInfo[playerid][KickW], PlayerInfo[playerid][C4], PlayerInfo[playerid][IsVipFree], PlayerInfo[playerid][TVip], PlayerInfo[playerid][Activity], PlayerInfo[playerid][RaceMonth], PlayerInfo[playerid][DataSet], PlayerInfo[playerid][ARClosed]);
	format(eString, sizeof(eString), "%s, `FavStation` = '%d', `FavRadio` = '%d', `Quests` = '%d'", eString, PlayerInfo[playerid][RPreference], PlayerInfo[playerid][RadioFav], PlayerInfo[playerid][Quests]);
	format(eString, sizeof(eString), "%s, `HoursMonth` = '%d', `MinutesMonth` = '%d', `SecondsMonth` = '%d', `PointsMonth` = '%d', `RespectPMonth` = '%d', `RespectNMonth` = '%d', `GemsMonth` = '%d', `PointsMonth` = '%d'", eString, MonthH, MonthM, MonthS, PlayerInfo[playerid][PointsMonth], PlayerInfo[playerid][respectMonth][0], PlayerInfo[playerid][respectMonth][1], PlayerInfo[playerid][gemsMonth], PlayerInfo[playerid][PointsX2Month]);
    format(eString, sizeof(eString), "%s, `HoursAdmin` = '%d', `MinutesAdmin` = '%d', `SecondsAdmin` = '%d', `EventsMaded` = '%d'", eString, hourAdmin, minAdmin, secAdmin, PlayerInfo[playerid][EventsMaded]);
    format(eString, sizeof(eString), "%s, `MyTime` = '%d', `MyTimeHave` = '%d', `DJ` = '%d',`CrateTimer` = '%d'", eString, PlayerInfo[playerid][MyTime], PlayerInfo[playerid][MyTimeHave], PlayerInfo[playerid][DJ], PlayerInfo[playerid][CratePickupTimer]);
	format(eString, sizeof(eString), "%s, `GangWarns1` = '%d', `GangWarns2` = '%d', `GangWarns3` = '%d', `GangWarns4` = '%d', `GangWarns5` = '%d', `GangWarns6` = '%d', `GangWarns7` = '%d',`GangHours` = '%d', `GangMinutes` = '%d', `GangSeconds` = '%d'", eString, PlayerInfo[playerid][gWarnInGang][1], PlayerInfo[playerid][gWarnInGang][2], PlayerInfo[playerid][gWarnInGang][3], PlayerInfo[playerid][gWarnInGang][4], PlayerInfo[playerid][gWarnInGang][5], PlayerInfo[playerid][gWarnInGang][6], PlayerInfo[playerid][gWarnInGang][7], gh, gm, gs);
	format(eString, sizeof(eString), "%s, `GangID` = '%d', `GangRank` = '%d', `GangSkin` = '%d', `GangKills` = '%d', `GangDeaths` = '%d', `GangCaptures` = '%d', `GangPoints` = '%d', `OwnerAcces` = '%d', `GangMemberSince` = '%s'", eString, PlayerInfo[playerid][GangID], PlayerInfo[playerid][g_Rank], PlayerInfo[playerid][g_Skin], PlayerInfo[playerid][g_Kills], PlayerInfo[playerid][g_Deaths], PlayerInfo[playerid][g_Captures], PlayerInfo[playerid][g_Points], PlayerInfo[playerid][OwnerAcces], PlayerInfo[playerid][GangMemberSince]);
    format(eString, sizeof(eString), "%s, `JobFinished1` = '%d', `JobFinished2` = '%d', `JobFinished3` = '%d', `JobFinished4` = '%d', `JobFinished5` = '%d', `JobFinished6` = '%d', `JobFinished7` = '%d', `JobFinished8` = '%d', `JobsFinishedCount` = '%d', `GoldVIPTaken` = '%d' WHERE `ID` = '%d'", eString, PlayerInfo[playerid][JobFinished][1], PlayerInfo[playerid][JobFinished][2], PlayerInfo[playerid][JobFinished][3], PlayerInfo[playerid][JobFinished][4], PlayerInfo[playerid][JobFinished][5], PlayerInfo[playerid][JobFinished][6], PlayerInfo[playerid][JobFinished][7], PlayerInfo[playerid][JobFinished][8], PlayerInfo[playerid][JobsFinishedCount], PlayerInfo[playerid][GoldVIPTaken], PlayerInfo[playerid][AccID]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_tquery(SQL, eString, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][House] >= 1) SaveHouse(PlayerInfo[playerid][House]);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Protection for scripts (AMX-Anti-Decrypt)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
AntiDeAMX()
{
    new a[][] =
    {
        "Unarmed (Fist)",
        "Brass K"
    };
    #pragma unused a
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock TPlayer(playerid, telename[], telecmd[], Float:PosX, Float:PosY, Float:PosZ, Float:PFAngle, bool:NoVehicle, mapby[] = "", interior = 0, world = 0)
{
	new TString[120], pVID = GetPlayerVehicleID(playerid), PState = GetPlayerState(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(NoVehicle == false)
	{
	    if(IsPlayerInAnyVehicle(playerid) && PState == PLAYER_STATE_DRIVER)
	    {
			SetVehiclePos(pVID, PosX, PosY, PosZ), SetVehicleZAngle(pVID, PFAngle);
			LinkVehicleToInterior(pVID, 0), SetPlayerInterior(playerid, 0);
		}
		else if(!IsPlayerInAnyVehicle(playerid))
	    {
	        LoadObjectsProtection(playerid);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SetCameraBehindPlayer(playerid), SetPlayerPos(playerid, PosX, PosY, PosZ), SetPlayerVirtualWorld(playerid, world);
			SetPlayerFacingAngle(playerid, PFAngle), LinkVehicleToInterior(pVID, 0), SetPlayerInterior(playerid, interior);
	    }
	}
	else if(NoVehicle == true)
	{
	    LoadObjectsProtection(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetCameraBehindPlayer(playerid), SetPlayerPos(playerid, PosX, PosY, PosZ), SetPlayerVirtualWorld(playerid, world);
		SetPlayerFacingAngle(playerid, PFAngle), LinkVehicleToInterior(pVID, 0), SetPlayerInterior(playerid, interior);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(isnull(mapby)) format(TString, 120, "~y~Welcome to ~n~~g~~h~%s", telename);
	else format(TString, 120, "~y~Welcome to ~n~~g~~h~%s~n~~y~by ~r~~h~%s", telename, mapby);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, TString, 4000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new StrT[1024];
	format(StrT, sizeof(StrT), "~B~~H~%s ~Y~~H~has gone to ~R~~H~%s ~B~~H~- /%s", PN(playerid), telename, telecmd);
	AddToTDLogs(StrT);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerVirtualWorld(playerid, 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InDrift] == 1) PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), Announce(playerid, "~w~~h~Drift ~r~~h~failed", 3000, 4);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i<MAX_OBJECTS; i++)
    {
		if(HoldsInfo[playerid][i][HoldUsed] == true)
		{
			if(PlayerInfo[playerid][HoldCID] != 0)
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
			}
			if(PlayerInfo[playerid][HoldInCar] != 0)
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
			}
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock NormalTele(playerid, telename[], telecmd[], Float: VX, Float: VY, Float: VZ, Float: VA, Float: X, Float: Y, Float: Z, Float: A, mapby[] = "")
{
    new TString[120], pVID = GetPlayerVehicleID(playerid), PState = GetPlayerState(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInAnyVehicle(playerid) && PState == PLAYER_STATE_DRIVER)
	{
		SetVehiclePos(pVID, VX, VY, VZ);
		SetVehicleZAngle(pVID, VA);
		SetPlayerInterior(playerid, 0);
		LinkVehicleToInterior(pVID, 0);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][InRec] = 0;
		LoadObjectsProtection(playerid);
	}
	else
	{
		SetPlayerPos(playerid, Float:X, Float:Y, Float:Z);
		SetPlayerFacingAngle(playerid, Float:A);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][InRec] = 0;
		LoadObjectsProtection(playerid);
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(isnull(mapby)) format(TString, 120, "~y~Welcome to ~n~~g~~h~%s", telename);
	else format(TString, 120, "~y~Welcome to ~n~~g~~h~%s~n~~y~by ~r~~h~%s", telename, mapby);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Announce(playerid, TString, 4000, 3);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new StrT[1024];
	format(StrT, sizeof(StrT), "~B~~H~%s ~Y~~H~has gone to ~R~~H~%s ~B~~H~- /%s", PN(playerid), telename, telecmd);
	AddToTDLogs(StrT);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	SetPlayerVirtualWorld(playerid, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InDrift] == 1) PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), Announce(playerid, "~w~~h~Drift ~r~~h~failed", 3000, 4);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendPlayerMaxAmmo(playerid)
{
	new slot, weap, ammo;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(slot = 0; slot < 14; slot++)
	{
    	GetPlayerWeaponData(playerid, slot, weap, ammo);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(IsValidWeapon(weap))
		{
		    switch(weap)
			{
			    case 35..39: SendError(playerid, "You can't add max ammo to this weapon!");
			    case 16: SendError(playerid, "You can't add max ammo to this weapon!");
			    default: Announce(playerid, "~w~~h~Max Ammo ~g~~h~added~w~~h~!", 3000, 4), GivePlayerWeapon(playerid, weap, 99999);
			}
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerIPEx(playerid)
{
	new pIP[17];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerIp(playerid, pIP, 17);
	return pIP;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetWeaponModelIDFromName(wname[])
{
	for (new i = 0; i < 49; i++)
	{
		if(i == 19 || i == 20 || i == 21) continue;
		if(strfind(weaponNames(i), wname, true) != -1) return i;
	}
	return -1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock weaponNames(weaponid)
{
	new str[25];
	switch(weaponid)
	{
     	case 0: str = "FIST";
		case 1:	str = "BRASS KNUCKLES";
		case 2: str = "GOLD CLUB";
		case 3: str = "NIGHT STICKS";
		case 4: str = "KNIFE";
		case 5: str = "BASEBALL BAT";
		case 6: str = "SHOVEL";
		case 7: str = "POOL CUE";
		case 8: str = "KATANA";
		case 9: str = "CHAINSAW";
		case 10: str = "PURPLE DILDO";
		case 11: str = "VIBRATOR";
		case 12: str = "VIBRATOR";
		case 13: str = "VIBRATOR";
		case 14: str = "FLOWERS";
		case 15: str = "CANE";
		case 16: str = "GRENADE";
		case 17: str = "TEARGAS";
		case 18: str = "MOLOTOV";
		case 19: str = " ";
		case 20: str = " ";
		case 21: str = " ";
		case 22: str = "COLT 45";
		case 23: str = "SILENCED PISTOL";
		case 24: str = "DEAGLE";
		case 25: str = "SHOTGUN";
		case 26: str = "SAWNS";
		case 27: str = "SPAS";
		case 28: str = "UZI";
		case 29: str = "MP5";
		case 30: str = "AK47";
		case 31: str = "M4";
		case 32: str = "TEC9";
		case 33: str = "COUNTY RIFLE";
		case 34: str = "SNIPER RIFLE";
		case 35: str = "ROCKET LAUNCHER";
		case 36: str = "HEEAT-SEEKER";
		case 37: str = "FLAMETHROWER";
		case 38: str = "MINIGUN";
		case 39: str = "SATCHEL CHARGE";
		case 40: str = "DETONATOR";
		case 41: str = "SPRAY CAN";
		case 42: str = "FIRE EXTINGUISHER";
		case 43: str = "CAMERA";
		case 44: str = "NIGHT VISION GOGGLES";
		case 45: str = "INFRARED GOGGLES";
		case 46: str = "PARACHUTE";
		case 47: str = "FAKE PISTOL";
		case 48: str = "NONE";
	}
	return str;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock Jail_EvadeCheck(playerid)
{
	if(PlayerInfo[playerid][Jailed] >= 1)
	{
	    JailPlayer(-1, playerid, "-1", false);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SCM(playerid, RED, "You can't escape your punishment! You are still in Jail!");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CreateSnow(playerid)
{
        if(snowOn{playerid}) return 0;
        new Float:pPos[3];
        GetPlayerPos(playerid, pPos[0], pPos[1], pPos[2]);
        for(new i = 0; i < MAX_SNOW_OBJECTS; i++) snowObject[playerid][i] = CreateDynamicObject(18864, pPos[0] + random(25), pPos[1] + random (25), pPos[2] - 5 + random(10), random(280), random(280), 0, -1, -1, playerid);
        snowOn{playerid} = true;
        updateTimer{playerid} = SetTimerEx("UpdateSnow", UPDATE_INTERVAL, true, "i", playerid);
        return 1;
}
stock DeleteSnow(playerid)
{
        if(!snowOn{playerid}) return 0;
        for(new i = 0; i < MAX_SNOW_OBJECTS; i++) DestroyDynamicObject(snowObject[playerid][i]);
        KillTimer(updateTimer{playerid});
        snowOn{playerid} = false;
        return 1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock DestroyRequestSpawn(playerid)
{
	for(new i = 0; i < 25; i++) DestroyPlayerObject(playerid, RequestClassMap[i]);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock LoadRequestSpawn(playerid)
{
    RequestClassMap[0] = CreatePlayerObject(playerid, 14537, 1551.187744, -1353.242065, 326.578643, 0.000000, 0.000000, 359.052978, 300.00);
	SetPlayerObjectMaterial(playerid, RequestClassMap[0], 0, 14533, "pleas_dome", "ab_carpethexi", 0x00000000);
	RequestClassMap[1] = CreatePlayerObject(playerid, 13646, 1551.406372, -1353.404663, 328.248962, 0.000000, 0.000000, 0.000000, 300.00);
	SetPlayerObjectMaterial(playerid, RequestClassMap[1], 0, 14533, "pleas_dome", "club_zeb_SFW1", 0x00000000);
	RequestClassMap[2] = CreatePlayerObject(playerid, 18981, 1532.568115, -1354.041381, 323.296630, 0.000000, 0.000000, 359.615386, 300.00);
	SetPlayerObjectMaterialText(playerid, RequestClassMap[2], " ", 0, 10, "Ariel", 20, 1, 0xFFFFFFFF, 0x00000000, 2);
	RequestClassMap[3] = CreatePlayerObject(playerid, 19327, 1534.225830, -1355.705200, 331.952606, 0.000000, 0.000000, 90.199974, 300.00);
	SetPlayerObjectMaterialText(playerid, RequestClassMap[3], "{ff0000} Empire", 0, 70, "Ariel", 40, 0, 0xFFFFFFFF, 0x00000000, 0);
	RequestClassMap[4] = CreatePlayerObject(playerid, 19327, 1534.060180, -1354.213989, 331.952606, 0.000000, 0.000000, 90.199974, 300.00);
	SetPlayerObjectMaterialText(playerid, RequestClassMap[4], "{ffeb00} Super", 0, 70, "Ariel", 40, 0, 0xFFFFFFFF, 0x00000000, 0);
	RequestClassMap[5] = CreatePlayerObject(playerid, 19327, 1534.055786, -1352.783569, 331.952606, 0.000000, 0.000000, 90.199974, 300.00);
	SetPlayerObjectMaterialText(playerid, RequestClassMap[5], "{006aff} Stunt", 0, 70, "Ariel", 40, 0, 0xFFFFFFFF, 0x00000000, 0);
	RequestClassMap[6] = CreatePlayerObject(playerid, 19327, 1532.206665, -1361.280517, 331.022613, 0.000000, 0.000000, -96.900062, 300.00);
	SetPlayerObjectMaterialText(playerid, RequestClassMap[6], "Map by Kalashnicov.", 0, 70, "Ariel", 30, 0, 0xFFFFFFFF, 0x00000000, 0);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	RequestClassMap[7] = CreatePlayerObject(playerid, 3660, 1544.973754, -1360.973876, 330.749206, 0.000000, 0.000000, 0.300009, 300.00);
	RequestClassMap[8] = CreatePlayerObject(playerid, 3660, 1544.650512, -1345.971801, 330.749206, 0.000000, 0.000000, 0.300009, 300.00);
	RequestClassMap[9] = CreatePlayerObject(playerid, 8397, 1533.704467, -1361.115966, 277.984497, 0.000000, 0.000000, 0.000000, 300.00);
	RequestClassMap[10] = CreatePlayerObject(playerid, 8397, 1533.237182, -1347.346435, 277.984497, 0.000000, 0.000000, 0.000000, 300.00);
	RequestClassMap[11] = CreatePlayerObject(playerid, 19128, 1551.272705, -1353.304931, 328.420837, 0.000000, 0.000000, 0.000000, 300.00);
	RequestClassMap[12] = CreatePlayerObject(playerid, 19128, 1551.379882, -1353.576538, 328.549438, 0.000000, 0.000000, 60.849250, 300.00);
	RequestClassMap[13] = CreatePlayerObject(playerid, 19128, 1551.664550, -1353.382202, 328.549438, 0.000000, 0.000000, 0.000000, 300.00);
	RequestClassMap[14] = CreatePlayerObject(playerid, 19128, 1551.785766, -1353.262695, 328.549438, 0.000000, 0.000000, 32.325210, 300.00);
	RequestClassMap[15] = CreatePlayerObject(playerid, 1752, 1533.939697, -1354.235717, 271.485870, 0.000000, 0.000000, 89.841758, 300.00);
	RequestClassMap[16] = CreatePlayerObject(playerid, 3471, 1536.328491, -1363.280761, 329.360260, 0.000000, 0.000000, 33.156230, 300.00);
	RequestClassMap[17] = CreatePlayerObject(playerid, 3471, 1536.406250, -1343.979003, 329.360260, 0.000000, 0.000000, 337.449523, 300.00);
	RequestClassMap[18] = CreatePlayerObject(playerid, 14608, 1535.755126, -1365.863403, 330.024658, 0.000000, 0.000000, 279.036621, 300.00);
	RequestClassMap[19] = CreatePlayerObject(playerid, 18750, 1479.604980, -1353.676147, 376.936035, 90.000000, 0.000000, 93.748107, 300.00);
	RequestClassMap[20] = CreatePlayerObject(playerid, 8397, 1525.197021, -1353.612182, 324.010833, 0.000000, -52.000000, 0.000000, 300.00);
	RequestClassMap[21] = CreatePlayerObject(playerid, 19335, 1481.252929, -1421.884765, 362.336029, 0.000000, 0.000000, 0.000000, 300.00);
	RequestClassMap[22] = CreatePlayerObject(playerid, 19335, 1474.933349, -1284.580688, 362.336029, 0.000000, 0.000000, 0.000000, 300.00);
	RequestClassMap[23] = CreatePlayerObject(playerid, 3472, 1537.709228, -1359.870605, 328.151733, 0.000000, 0.000000, 0.000000, 300.00);
	RequestClassMap[24] = CreatePlayerObject(playerid, 3472, 1537.061889, -1347.824340, 328.151733, 0.000000, 0.000000, 0.000000, 300.00);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock Freeze_EvadeCheck(playerid)
{
    if(PlayerInfo[playerid][Frozen] == 1)
	{
	    TogglePlayerControllable(playerid, false), SetPlayerVirtualWorld(playerid, 10), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SendError(playerid, "You can't escape your punishment! You are still Frozen!");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock Announce(playerid, zString[], liTime, liStile) return GameTextForPlayer(playerid, zString, liTime, liStile);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPropID(playerid)
{
	for(new i = 0; i < MAX_PROPS; i++) if(IsPlayerInRangeOfPoint(playerid, 1.5, PropInfo[i][PropX], PropInfo[i][PropY], PropInfo[i][PropZ])) return i;
	return -1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetHouseID(playerid)
{
	for(new i = 0; i < MAX_HOUSES; i++) if(IsPlayerInRangeOfPoint(playerid, 1.5, HouseInfo[i][HX], HouseInfo[i][HY], HouseInfo[i][HZ])) return i;
	return -1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetGangHouseID(playerid)
{
    for(new i = 0; i < MAX_GANGS; i++) if(IsPlayerInRangeOfPoint(playerid, 1.5, gHouseInfo[i][gHousePos][1], gHouseInfo[i][gHousePos][2], gHouseInfo[i][gHousePos][3])) return gHouseInfo[i][HouseGang];
	return -1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetGangID(playerid)
{
    for(new i = 0; i < MAX_GANGS; i++) if(IsPlayerInRangeOfPoint(playerid, 1.5, GangInfo[i][lPosX], GangInfo[i][lPosY], GangInfo[i][lPosZ])) return i;
	return -1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock timec(timestamp, compare = -1)
{
    if(compare == -1) compare = gettime();
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new n, Float:d = (timestamp > compare) ? timestamp - compare : compare - timestamp, returnstr[32];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(d < 60)
	{
        format(returnstr, sizeof(returnstr), "{FF0000}1 Minute");
        return returnstr;
    }
	else if(d < 3600)
	{
        n = floatround(floatdiv(d, 60.0), floatround_floor);
        format(returnstr, sizeof(returnstr), "{FF0000}Minute");
    }
	else if(d < 86400)
	{
        n = floatround(floatdiv(d, 3600.0), floatround_floor);
        format(returnstr, sizeof(returnstr), "{FF0000}Hour");
    }
	else
	{
        n = floatround(floatdiv(d, 86400.0), floatround_floor);
        format(returnstr, sizeof(returnstr), "{FF0000}Day");
    }
    if(n == 1) format(returnstr, sizeof(returnstr), "1 %s", returnstr);
    else format(returnstr, sizeof(returnstr), "%d %ss", n, returnstr);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return returnstr;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:decrypt(ESS)
{
	if(PlayerInfo[playerid][RconType] < 3) return Error(playerid, 8);
	if(sscanf(params, "s[128]", params[0])) return SendUsage(playerid, "/decrypt [Text]");
	FormatMSG(playerid, RED, "Decrypted text: %s", MD5_Hash(params[0]));
	return true;
}
/*CMD:encryptallpassword(ESS)
{
    if(PlayerInfo[playerid][RconType] < 3) return Error(playerid, 8);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "i", params[0])) return SendUsage(playerid, "/encryptallpassword [type (1-password|2-spassword)]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[0] == 1)
	{
		mysql_query(SQL, "SELECT * FROM `Accounts` ORDER BY `ID` DESC");
		new total, password1[42], accountname[24]; cache_get_row_count(total); eQuery[0] = EOS;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		for(new i, x = total; i < x; i++)
		{
		    CONTENT(i, "Name", accountname);
			CONTENT(i, "Password", password1);
			UpdatePlayerString(accountname, "Password", MD5_Hash(password1));
			total++;
		}
		FormatMSG(playerid, ABLUE, "Changed %d accounts principally passwords!", total);
	}
	else if(params[0] == 2)
	{
		mysql_query(SQL, "SELECT * FROM `Accounts` WHERE `SPassword` != 'Null' ORDER BY `ID` DESC");
		new total, password2[42], accountname[24]; cache_get_row_count(total); eQuery[0] = EOS;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		for(new i, x = total; i < x; i++)
		{
		    CONTENT(i, "Name", accountname);
			CONTENT(i, "SPassword", password2);
			UpdatePlayerString(accountname, "SPassword", MD5_Hash(password2));
			total++;
		}
		FormatMSG(playerid, ABLUE, "Changed %d accounts secondary passwords!", total);
	}
	return true;
}*/
CMD:lift(playerid)
{
	if(LiftState == 1)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 5, TreeHouseLift1))
		{
		    MoveDynamicObject(TreeHouseLift, TreeHouseLift2, 2), LiftState = 2;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5, TreeHouseLift2))
		{
		    MoveDynamicObject(TreeHouseLift, TreeHouseLift2, 2), LiftState = 2;
		}
	}
	else if(LiftState == 2)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 5, TreeHouseLift2))
		{
		    MoveDynamicObject(TreeHouseLift, TreeHouseLift1, 2), LiftState = 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5, TreeHouseLift1))
		{
		    MoveDynamicObject(TreeHouseLift, TreeHouseLift1, 2), LiftState = 1;
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:dive(ESS)
{
	new Float:POS[3];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid, POS[0], POS[1], POS[2]);
	SetPlayerPos(playerid, POS[0], POS[1], POS[2] + 700.0);
	GivePlayerWeapon(playerid, 46, 1);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:case(playerid) return cmd_house(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:house(playerid)
{
	new String[24];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(HouseInfo[PlayerInfo[playerid][House]][h_Level] == 1) String = "Not Upgraded";
	else if(HouseInfo[PlayerInfo[playerid][House]][h_Level] == 2) String = "Upgraded";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Language] == 1)
	{
		eString[0] = EOS;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "Comanda\tDescriere\n\
								   	      {FFFF00}/buy\t{00FF22}Cumpara o casa\n\
								   		  {FFFF00}/sell\t{00FF22}Vinde casa pe care o detii\n\
								   		  {FFFF00}/lock\t{00FF22}Incuie-ti sau descuie-ti casa\n\
								   		  {FFFF00}/enter\t{00FF22}Intra in casa\n\
								   	      {FFFF00}/exit\t{00FF22}Paraseste casa in care te aflii\n\
								   		  {FFFF00}/visit\t{00FF22}Viziteaza casa unui jucator sau de vanzare\n\
								   		  {FFFF00}/myprops\t{00FF22}Arata proprietatile pe care le detii\n\
								   		  {FFFF00}/renew\t{00FF22}Reinnoieste contractul la casa\n\
								   		  {FFFF00}/myhouse\t{00FF22}Teleporteaza-te la casa\n\
								   		  {FFFF00}/chint\t{00FF22}Upgradeaza interiorul casei tale daca ai VIP Gold\n\
									      {FF9900}Upgrade house level\t{FF0000}%s", String);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_HOUSE_OPTIONS, HEADERS, "{FFFFFF}Despre case", eString, "Selecteaza", "Renunta");
	}
	else if(PlayerInfo[playerid][Language] == 2)
	{
		eString[0] = EOS;
   	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	    format(eString, sizeof(eString), "Command\tDescription\n\
								   		  {FFFF00}/buy\t{00FF22}Buy a house\n\
								   		  {FFFF00}/sell\t{00FF22}Sell your house\n\
								   		  {FFFF00}/lock\t{00FF22}Lock or UnLock your house\n\
								   		  {FFFF00}/enter\t{00FF22}Enter a house\n\
								   		  {FFFF00}/exit\t{00FF22}Exit a house\n\
								   		  {FFFF00}/visit\t{00FF22}Visit any house\n\
								   		  {FFFF00}/myprops\t{00FF22}View your properties\n\
								   		  {FFFF00}/renew\t{00FF22}Renew your house contract\n\
								   		  {FFFF00}/myhouse\t{00FF22}Teleport to your house\n\
								   		  {FFFF00}/chint\t{00FF22}Upgrade your house interior if you have VIP Gold\n\
                                          {FF9900}Upgrade house level\t{FF0000}%s", String);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_HOUSE_OPTIONS, HEADERS, "{FFFFFF}About houses", eString, "Select", "Cancel");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:afaceri(playerid) return cmd_business(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:business(playerid)
{
	new String[24];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PropInfo[PlayerInfo[playerid][Property]][p_Level] == 1) String = "Not Upgraded";
	else if(PropInfo[PlayerInfo[playerid][Property]][p_Level] == 2) String = "Upgraded";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Language] == 1)
	{
	    eString[0] = EOS;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "Comanda\tDescriere\n\
								   	      {FFFF00}/buy\t{00FF22}Cumpara o proprietate\n\
								   		  {FFFF00}/sell\t{00FF22}Vinde proprietatea pe care o detii\n\
								   		  {FFFF00}/mybusiness\t{00FF22}Teleporteaza-te la proprietate\n\
								   		  {FFFF00}/myprops\t{00FF22}Arata proprietatile pe care le detii\n\
								   		  {FFFF00}/renew\t{00FF22}Reinnoieste contractul la proprietate\n\
								   		  {FFFF00}/bname\t{00FF22}Schimba numele la proprietate\n\
								   		  {FFFF00}/enter\t{00FF22}Intra in proprietate\n\
								   		  {FFFF00}/exit\t{00FF22}Paraseste proprietatea in care te aflii\n\
									      {FF9900}Upgrade property level\t{FF0000}%s", String);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_PROPERTY, HEADERS, "{FFFFFF}Despre proprietate", eString, "Selecteaza", "Renunta");
	}
	else if(PlayerInfo[playerid][Language] == 2)
	{
	    eString[0] = EOS;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "Comanda\tDescriere\n\
								   	      {FFFF00}/buy\t{00FF22}Buy a business\n\
								   		  {FFFF00}/sell\t{00FF22}Sell your business\n\
								   		  {FFFF00}/mybusiness\t{00FF22}Teleport to your business\n\
								   		  {FFFF00}/myprops\t{00FF22}View your properties\n\
								   		  {FFFF00}/renew\t{00FF22}Renew your business contract\n\
								   		  {FFFF00}/bname\t{00FF22}Change your business name\n\
								   		  {FFFF00}/enter\t{00FF22}Enter a business\n\
								   		  {FFFF00}/exit\t{00FF22}Exit a business\n\
									      {FF9900}Upgrade property level\t{FF0000}%s", String);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_PROPERTY, HEADERS, "{FFFFFF}About business", eString, "Select", "Cancel");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Radio Commands
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:radio(playerid) return cmd_mp3(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:mp3(playerid)
{
    StrH[0] = '\0'; StrH2[0] = '\0';
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Language] == 1)
	{
	    strcat(StrH, "Optiune\tInformatie\n\
		              {FFFF00}Preferinte\t{00FF22}Seteaza-ti preferintele pentru radio\n\
					  {FFFF00}Posturi de Radio\t{00FF22}Asculta un post de radio\n\
					  {FF0000}Opreste Muzica\t{00FF22}Opreste-te din a asculta muzica", 1900);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SPD(playerid, MP3_D, HEADERS, "{FF0000}Radio | MP3 - {FFFF00}Asculta muzica favorita", StrH, "Selecteaza", "Inchide");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(PlayerInfo[playerid][Language] == 2)
	{
	    strcat(StrH, "Option\tInformation\n\
		              {FFFF00}Preferinte\t{00FF22}Set your radio preferences\n\
					  {FFFF00}Posturi de Radio\t{00FF22}Listen to a radio station\n\
					  {FF0000}Opreste Muzica\t{00FF22}Stop listening to music", 1900);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SPD(playerid, MP3_D, HEADERS, "{FF0000}Radio | MP3 - {FFFF00}Listen your favorite music", StrH, "Select", "Close");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:stopradio(playerid) return StopRadio(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ShopKey - System, commands
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:addshopkey(ESS)
{
	if(PlayerInfo[playerid][RconType] == 0) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new	string[128]; eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "iisss[64]", params[0], params[1], params[2]))
	{
		SendUsage(playerid, "/addshopkey [Type] [Amount] [Key]");
		SCM(playerid, RED, "1 - Admin | 2 - VIP | 3 - Money | 4 - Coins | 5 - Gems | 6 - Kills");
		SCM(playerid, RED, "7 - Drift | 8 - Stunt | 9 - Race");
		return true;
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[1] < 1 || params[1] > 9999999999) return SendError(playerid, "Invalid amount!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[0] < 1 || params[0] > 9) return SendError(playerid, "Invalid type!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[0] == 1)
	{
	    if(PlayerInfo[playerid][RconType] == 0) return Error(playerid, 6);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[0] == 2)
	{
	    if(params[1] < 1 || params[1] > 2) return SendError(playerid, "Invalid VIP Level (1 - VIP / 2 = VIP Gold)");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[0] == 5)
	{
	    if(PlayerInfo[playerid][RconType] != 0 && PlayerInfo[playerid][RconType] != 1) return SendError(playerid, "You are not an Owner to use this command!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(params[1] < 0 || params[1] > 1000) return SendError(playerid, "You cannot set a big amount of gems! You can set from 0 to 1000!");
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `ShopKeys` (`Key`, `Item`, `Amount`) VALUES ('%s', '%d', '%d')", params[2], params[0], params[1]);
	mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(string, sizeof(string), "Codul '%s' a fost inserat cu succes in baza de date! (Type %d, Amount %d)", params[2], params[0], params[1]);
	SCM(playerid, -1, string);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:shopkey(ESS)
{
	new type, amount, key[64], string[128]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "s[64]", key)) return SendUsage(playerid, "/shopkey [Key]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `ShopKeys` WHERE `Key` = '%s'", key);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new test; cache_get_row_count(test);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CACHE(0, "Item", type);
	CACHE(0, "Amount", amount);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(test == 0) return SendError(playerid, "Invalid key or is activated!");
	else
	{
		if(type == 0) return SendError(playerid, "Invalid key or is activated!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		switch(type)
		{
		    case 0:
		    {
		        if(PlayerInfo[playerid][Level] == 0) return SendError(playerid, "You need to have level 1 before you have level up!");
		        if(PlayerInfo[playerid][Level] == 5) return SendError(playerid, "You have reached the maximum of admin level!");
			    if(PlayerInfo[playerid][AdminBlacklist] == 1) return SendError(playerid, "You have restricted to the admin level!");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    PlayerInfo[playerid][Level] += 1;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    if(PlayerInfo[playerid][DataSet] == 0)
				{
			 		PlayerInfo[playerid][DataSet] = 1;
			 		UpdatePlayer(PN(playerid), "DataSet", 1);
		        	DataSetTimer(playerid);
		        }
				Announce(playerid, "~w~~h~Ai primit!~n~~r~~h~Admin level up~n~~w~~h~check ~g~/stats", 5000, 4);
		    }
			case 1:
			{
			    if(PlayerInfo[playerid][Level] != 0) return SendError(playerid, "You have already Admin on this account!");
			    if(PlayerInfo[playerid][AdminBlacklist] == 1) return SendError(playerid, "You have restricted to the admin level!");
			    if(PlayerInfo[playerid][AdminAccesfor1] == 0) return SendError(playerid, "You need to apply an admin request on our forum to use this key!");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    PlayerInfo[playerid][Level] = amount;
			    if(amount != 0) { if(ServerInfo[CountReports] >= 1) { PlayerTextDrawShow(playerid, ReportTD); Report(playerid); } }
			    else HideReportsTD(playerid);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    if(PlayerInfo[playerid][DataSet] == 0)
				{
				    PlayerInfo[playerid][AdminTimeConnect] = gettime();
			 		PlayerInfo[playerid][DataSet] = 1;
			 		UpdatePlayer(PN(playerid), "DataSet", 1);
		        	DataSetTimer(playerid);
		        }
				format(string, sizeof(string), "~w~~h~Ai primit!~n~~r~~h~Admin level %d~n~~w~~h~check ~g~/stats", amount);
				Announce(playerid, string, 5000, 4);
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			case 2:
			{
			    if(PlayerInfo[playerid][pVIP] != 0) return SendError(playerid, "You have already VIP on this account!");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    PlayerInfo[playerid][pVIP] = amount;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    PlayerInfo[playerid][TVip] = 0;
			    PlayerInfo[playerid][VIPTime] = 0;
				PlayerInfo[playerid][IsVipFree] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(string, sizeof(string), "~w~~h~Ai primit!~n~~r~~h~ %s~n~~w~~h~check ~g~/stats", GetPlayerVipEx(playerid));
				Announce(playerid, string, 5000, 4);
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			case 3:
			{
				format(string, sizeof(string), "~w~~h~Ai primit!~n~~r~~h~$%s~n~~w~~h~check ~g~/stats", amount);
				Announce(playerid, string, 5000, 4);
				PlayerInfo[playerid][Money] += amount;
				GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			case 4:
			{
				format(string, sizeof(string), "~w~~h~Ai primit!~n~~r~~h~%d Coins~n~~w~~h~check ~g~/stats", amount);
				Announce(playerid, string, 5000, 4);
				PlayerInfo[playerid][Coins] += amount;
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			case 5:
			{
				format(string, sizeof(string), "~w~~h~Ai primit!~n~~r~~h~%d Gems~n~~w~~h~check ~g~/stats", amount);
				Announce(playerid, string, 5000, 4);
				UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] + amount);
				PlayerInfo[playerid][Gems] += amount;
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			case 6:
			{
				format(string, sizeof(string), "~w~~h~Ai primit!~n~~r~~h~%d Kills~n~~w~~h~check ~g~/stats", amount);
				Announce(playerid, string, 5000, 4);
				PlayerInfo[playerid][Kills] += amount;
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			case 7:
			{
				format(string, sizeof(string), "~w~~h~Ai primit!~n~~r~~h~%d Drift points~n~~w~~h~check ~g~/stats", amount);
				Announce(playerid, string, 5000, 4);
				PlayerInfo[playerid][DriftPoints] += amount;
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			case 8:
			{
				format(string, sizeof(string), "~w~~h~Ai primit!~n~~r~~h~%d Stunt points~n~~w~~h~check ~g~/stats", amount);
				Announce(playerid, string, 5000, 4);
				PlayerInfo[playerid][StuntPoints] += amount;
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			case 9:
			{
				format(string, sizeof(string), "~w~~h~Ai primit!~n~~r~~h~%d Race points~n~~w~~h~check ~g~/stats", amount);
				Announce(playerid, string, 5000, 4);
				PlayerInfo[playerid][RacePoints] += amount;
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			case 10:
			{
				format(string, sizeof(string), "~w~~h~Ai primit!~n~~r~~h~%d Hours~n~~w~~h~check ~g~/stats", amount);
				Announce(playerid, string, 5000, 4);
				PlayerInfo[playerid][hours] += amount;
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			case 11:
			{
			    if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "You are not in any gang, please tell for a member to invite you!");
			    if(PlayerInfo[playerid][OwnerAcces] == 0) return SendError(playerid, "You doesn't have owner access in this gang, please tell for an owner for give access!");
				Announce(playerid, "~w~~h~Ai primit!~n~~r~~h~Owner in gang!", 5000, 4);
				PlayerInfo[playerid][g_Rank] = 8;
			}
		}
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `ShopKeys` WHERE `Key` = '%s'", key);
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `LogKeys` SET `Status` = '2' WHERE `Key` = '%s'", key);
	mysql_tquery(SQL, eQuery, "", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// VIP Commands - Player
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vcmds(ESS)
{
    eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    strcat(eString, "{FF0000}VIP Commands:\n\
                           {FFCC00}/maxammo, /tcar [1-10], /mytime, /vipchat, /boost,\n\
                           {FFCC00}/goto, /spawnme, /myinterior, /s2, /l2, /getid, /mycolor, /L\n\
                           {FFCC00}/chint, /vBike, /ltune,/vcar, /spec (off), /ignore, /vAD \n\
                           {00CC00}*Anti-spam limit reduced to 1 second.\n\
                           \n");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    strcat(eString, "{FF0000}Gold VIP Commands:\n\
                           {FFCC00}/vWeapons, /vMinigun, /vRocket, /vTank, /vHeli\n\
                           {FFCC00}/vHydra, /godmode, /godcar, /get, /aka, /invisible\n\
                           {FFCC00}/s3, /l3, /s2, /l2, /fw, /vm, /vac, /skate, /vipisland\n\
                           {00CC00}*Immunity to Anti-Spam!\n\
						   \n\
						   {FFCC00}#text -{00CC00} to talk in the Vip Chat!\n\
						   {FFCC00}/BuyVIP -{00CC00} to buy VIP!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SPD(playerid, DIALOG_EMPTY, MSGBOX, "VIP commands", eString, "Close", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:buyvip(ESS)
{
    new String[512];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(PlayerInfo[playerid][Language])
	{
		case 1:
		{
			strcat(String, "Tip VIP                   \tValabilitate             \tPret\n\
			               {FF0000}VIP                \t{FFFFFF}Permanent        \t{FF0000}GRATIS\n\
						   {FF0000}VIP {FFCC00}Gold   \t{FFFFFF}50 zile          \t{FF0000}15 ore & 2.000 coins\n\
		                   {FF0000}VIP {FFCC00}Gold   \t{FFFFFF}Permanent        \t{FF0000}30 ore & 5.000 coins\n");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		case 2:
		{
			strcat(String, "VIP Type                  \tValability               \tPrice\n\
			               {FF0000}VIP                \t{FFFFFF}Permanent        \t{FF0000}FREE\n\
						   {FF0000}VIP {FFCC00}Gold   \t{FFFFFF}50 days          \t{FF0000}15 hours & 2.000 coins\n\
		                   {FF0000}VIP {FFCC00}Gold   \t{FFFFFF}Permanent        \t{FF0000}30 hours & 5.000 coins\n");
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SPD(playerid, BUYVIP_D, HEADERS, "{FFFFFF}VIP Commands{FF0000} - {FFCC00}/Vcmds{FFFFFF}!", String, "Buy", "Close");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vips(playerid)
{
    new V, VStr[2048], DCaption[128];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i : Player)
    {
        if(PlayerInfo[i][pVIP] == 1 && PlayerInfo[i][AFKBRB] == 0)
		{
        	format(VStr, sizeof(VStr), "{FF0000}%s {00CC00}(%d){FF0000} {00BBF6}VIP - {33FFFF}Yes\n%s", PN(i), i, VStr);
        	V++;
        }
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PlayerInfo[i][pVIP] == 2 && PlayerInfo[i][AFKBRB] == 0)
		{
        	format(VStr, sizeof(VStr), "{FF0000}%s {00CC00}(%d){FF0000} {00BBF6}VIP - {FFD700}Gold\n%s", PN(i), i, VStr);
        	V++;
        }
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PlayerInfo[i][pVIP] == 1 && PlayerInfo[i][AFKBRB] == 1)
		{
        	format(VStr, sizeof(VStr), "{FF0000}%s {00CC00}(%d){FF0000} {00BBF6}VIP - {33FFFF}Yes{FFFF00} - AFK\n%s", PN(i), i, VStr);
        	V++;
        }
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PlayerInfo[i][pVIP] == 2 && PlayerInfo[i][AFKBRB] == 1)
		{
        	format(VStr, sizeof(VStr), "{FF0000}%s {00CC00}(%d){FF0000} {00BBF6}VIP - {FFD700}Gold{FFFF00} - AFK\n%s", PN(i), i, VStr);
        	V++;
		}
	}
   	format(DCaption, 128, "{FFFFFF}VIP Players -{FF0000} %d{FFFFFF} online", V);
   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	if(V == 0) return Announce(playerid, "~w~~h~No ~r~~h~VIPS ~w~~h~Online!", 3000, 4);
	else return SPD(playerid, DIALOG_EMPTY, LIST, DCaption, VStr, "Ok", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// VIP Commands - Level 1
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:myskin(ESS)
{
    if(PlayerInfo[playerid][pVIP] < 1) return SendError(playerid, "You are not a high enough VIP! Type /vcmds for details.");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You can not change your skin if you are in a car!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "i", params[0])) return SendUsage(playerid, "/myskin [0-311]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[0] < 1 || params[0] > 311) return SendUsage(playerid, "/myskin [0-311]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][UseSkin] = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerSkin(playerid, params[0]), PlayerInfo[playerid][MySkin] = params[0];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	FormatMSG(playerid, YELLOW, "You changed your skin to {FF0000}%d {FFFF00}to change skin use /myskin [0-311]!", params[0]);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:ignore(ESS)
{
    if(PlayerInfo[playerid][pVIP] < 1) return Error(playerid, 2);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(strcmp(params, "pm", true) == 0)
	{
	    switch(PlayerInfo[playerid][Ignore_PM])
	    {
	        case 0: return PlayerInfo[playerid][Ignore_PM] = 1, Announce(playerid, "~w~~h~Ignore PM ~g~~h~ON!", 3000, 4);
	        case 1: return PlayerInfo[playerid][Ignore_PM] = 0, Announce(playerid, "~w~~h~Ignore PM ~r~~h~Off!", 3000, 4);
		}
	}
	else if(strcmp(params, "get", true) == 0)
	{
	   	switch(PlayerInfo[playerid][Ignore_Get])
		{
		    case 0: return PlayerInfo[playerid][Ignore_Get] = 1, Announce(playerid, "~w~~h~Ignore Get ~g~~h~ON!", 3000, 4);
			case 1: return PlayerInfo[playerid][Ignore_Get] = 0, Announce(playerid, "~w~~h~Ignore Get ~r~~h~Off!", 3000, 4);
		}
	}
	else if(strcmp(params, "goto", true) == 0)
	{
	    switch(PlayerInfo[playerid][Ignore_Goto])
	    {
	        case 0: return PlayerInfo[playerid][Ignore_Goto] = 1, Announce(playerid, "~w~~h~Ignore Goto ~g~~h~ON!", 3000, 4);
	        case 1: return PlayerInfo[playerid][Ignore_Goto] = 0, Announce(playerid, "~w~~h~Ignore Goto ~r~~h~Off!", 3000, 4);
		}
	}
	else if(strcmp(params, "spec", true) == 0)
	{
		switch(PlayerInfo[playerid][Ignore_Spec])
		{
		    case 0: return PlayerInfo[playerid][Ignore_Spec] = 1, Announce(playerid, "~w~~h~Ignore Spec ~g~~h~ON!", 3000, 4);
			case 1: return PlayerInfo[playerid][Ignore_Spec] = 0, Announce(playerid, "~w~~h~Ignore Spec ~r~~h~Off!", 3000, 4);
		}
	}
	else if(strcmp(params, "all", true) == 0)
	{
		switch(PlayerInfo[playerid][Ignore_All])
		{
		    case 0: return PlayerInfo[playerid][Ignore_Spec] = 1, PlayerInfo[playerid][Ignore_Goto] = 1, PlayerInfo[playerid][Ignore_Get] = 1, PlayerInfo[playerid][Ignore_PM] = 1, PlayerInfo[playerid][Ignore_All] = 1, Announce(playerid, "~w~~h~Ignore All ~g~~h~ON!", 3000, 4);
			case 1: return PlayerInfo[playerid][Ignore_Spec] = 0, PlayerInfo[playerid][Ignore_Goto] = 0, PlayerInfo[playerid][Ignore_Get] = 0, PlayerInfo[playerid][Ignore_PM] = 0, PlayerInfo[playerid][Ignore_All] = 0, Announce(playerid, "~w~~h~Ignore All ~r~~h~Off!", 3000, 4);
		}
	}
	else return SendUsage(playerid, "/ignore [PM/Get/Goto/Spec/All]");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:mytime(ESS)
{
    if(PlayerInfo[playerid][pVIP] < 1) return Error(playerid, 2);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "i", params[0])) return SendUsage(playerid, "/mytime [Hour]{FF0000} |{FFFFFF} Default: 14 | Disable: -1");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(params[0] == -1) PlayerInfo[playerid][MyTimeHave] = 0, SetPlayerTime(playerid, params[0], 0), PlayerInfo[playerid][MyTime] = params[0];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    else SetPlayerTime(playerid, params[0], 0), PlayerInfo[playerid][MyTime] = params[0], PlayerInfo[playerid][MyTimeHave] = 1;
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:myinterior(ESS)
{
	if(PlayerInfo[playerid][pVIP] < 1) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "i", params[0])) return SendUsage(playerid, "/myinterior [Interior ID]{FF0000} | {FFFFFF} Default: 0");
	return SetPlayerInterior(playerid, params[0]);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:ltune(playerid)
{
    if(PlayerInfo[playerid][pVIP] < 1) return Error(playerid, 2);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new vVeh = GetPlayerVehicleID(playerid), LModel = GetVehicleModel(vVeh);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You are not in a vehicle");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    switch(LModel)
    {
        case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
        return SendError(playerid, "You can not tune this vehicle");
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetVehicleHealth(vVeh, 2000.0), ChangeVehicleColor(vVeh, 0, 7), AddVehicleComponent(vVeh, 1010), AddVehicleComponent(vVeh, 1087);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:s2(playerid)
{
	if(PlayerInfo[playerid][pVIP] < 1) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_CLANS; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 100.0, Clan[i][ClanPos][0], Clan[i][ClanPos][1], Clan[i][ClanPos][2])) return SendError(playerid, "You cannot use this command in clan zone!");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInAnyDynamicArea(playerid)) return Error(playerid, 9);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid, PlayerInfo[playerid][SPosX][2], PlayerInfo[playerid][SPosY][2], PlayerInfo[playerid][SPosZ][2]);
	return MSGLang(playerid, YELLOW, "Position 2 saved. Use: /L2 to return at it!", "Position 2 saved. Use: /L2 to return at it!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:l2(playerid)
{
    if(PlayerInfo[playerid][pVIP] < 1) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][SPosX][2] != 0 && PlayerInfo[playerid][SPosY][2] != 0 && PlayerInfo[playerid][SPosZ][2] != 0)
	{
		if(!IsPlayerInAnyVehicle(playerid)) SetPlayerPos(playerid, PlayerInfo[playerid][SPosX][2], PlayerInfo[playerid][SPosY][2], PlayerInfo[playerid][SPosZ][2]), SetPlayerVirtualWorld(playerid, 0), SetPlayerInterior(playerid, 0);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		else SetVehiclePos(GetPlayerVehicleID(playerid), PlayerInfo[playerid][SPosX][3], PlayerInfo[playerid][SPosY][3], PlayerInfo[playerid][SPosZ][3]), LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0), SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 0);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PlayerInfo[playerid][InDrift] == 1) PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), Announce(playerid, "~w~~h~Drift ~r~~h~failed", 3000, 4);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        PlayerInfo[playerid][InJJ] = 0, PlayerInfo[playerid][InRec] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		return MSGLang(playerid, YELLOW, "Position 2 loaded. Use: /S2 to change it!", "Position 2 loaded. Use: /S2 to change it!");
	}
	else return SendError(playerid, "You didn't saved any position!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:goto(ESS)
{
    new Float:X, Float:Y, Float:Z, Str[1900], Player;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Level] >= 2)
	{
	    if(sscanf(params, "u", Player)) return SendUsage(playerid, "/goto [ID/Name]");
	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	if(PlayerInfo[Player][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	if(!IsPlayerConnected(Player) || Player == playerid) return Error(playerid, 3);
        if(IsPlayerInAnyDynamicArea(playerid) && PlayerInfo[playerid][RconType] < 1) return Error(playerid, 9);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(IsPlayerInSpecialZone(Player) == 1) return SendError(playerid, "You can't teleport to this player because he is in a special zone!");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        FormatMSG(Player, ABLUE, "Administrator %s has teleported to your position.", PN(playerid));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][InRec] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][InDrift] == 1) PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), Announce(playerid, "~w~~h~Drift ~r~~h~failed", 3000, 4);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GetPlayerPos(Player, X, Y, Z), SetPlayerInterior(playerid, GetPlayerInterior(Player)), SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(Player));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerPos(playerid, X, Y+2, Z);
		return true;
	}
	else if(PlayerInfo[playerid][pVIP] == 1)
	{
	    if(sscanf(params, "u", Player)) return
		SendUsage(playerid, "/goto [ID/Name]");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[Player][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		for(new i = 0; i < MAX_CLANS; i++)
		{
			if(IsPlayerInRangeOfPoint(Player, 25.0, Clan[i][ClanPos][0], Clan[i][ClanPos][1], Clan[i][ClanPos][2])) return SendError(playerid, "You cannot teleport to this player because this player are be in clan zone!");
		}
	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     	if(!IsPlayerConnected(Player) || Player == playerid) return Error(playerid, 3);
     	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[Player][Ignore_Goto] == 0)
	    {
            if(IsPlayerInAnyDynamicArea(playerid) && PlayerInfo[playerid][RconType] < 1) return Error(playerid, 9);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(IsPlayerInSpecialZone(Player) == 1) return SendError(playerid, "You can't teleport to this player because he is in a special zone!");
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        PlayerInfo[Player][GotoInvite] = 1, PlayerInfo[Player][Inviter][0] = playerid;
	        PlayerInfo[playerid][PGoted] = Player;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        format(Str, sizeof(Str), "%s wants to teleport to your position! Please {0072FF}/accept {FFFF00}or {0072FF}/decline{FFFF00}!", PN(playerid)), SCM(Player, YELLOW, Str);
			Announce(playerid, "~w~~h~Invite ~g~~h~Sent", 4000, 4);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			return true;
		}
		else return SendError(playerid, "You cannot teleport to this player (has /ignore goto)!");
	}
	else if(PlayerInfo[playerid][pVIP] == 2)
	{
	    if(sscanf(params, "u", Player)) return SendUsage(playerid, "/goto [ID/Name]");
	    for(new i = 0; i < MAX_CLANS; i++)
		{
			if(IsPlayerInRangeOfPoint(Player, 25.0, Clan[i][ClanPos][0], Clan[i][ClanPos][1], Clan[i][ClanPos][2])) return SendError(playerid, "You cannot teleport to this player because this player are be in clan zone!");
		}
	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	if(!IsPlayerConnected(Player) || Player == playerid) return Error(playerid, 3);
        if(IsPlayerInAnyDynamicArea(playerid)) return Error(playerid, 9);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(IsPlayerInSpecialZone(Player) == 1) return SendError(playerid, "You can't teleport to this player because he is in a special zone!");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        FormatMSG(Player, ABLUE, "%s has teleported to your position.", PN(playerid));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][InRec] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][InDrift] == 1) PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), Announce(playerid, "~w~~h~Drift ~r~~h~failed", 3000, 4);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GetPlayerPos(Player, X, Y, Z), SetPlayerInterior(playerid, GetPlayerInterior(Player)), SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(Player));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerPos(playerid, X, Y+2, Z);
		return true;
	}
	else return Error(playerid, 2);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:getid(ESS)
{
	new GetName[MAX_PLAYER_NAME+1], found, string[128], string1[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][pVIP] < 1) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "s[25]", GetName)) return
	SendUsage(playerid, "/getid [Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else
	{
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(string, 128, "Searched for: \"%s\"", GetName);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		for(new i = 0; i <= MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				new nLen = strlen(PN(i)), bool:searched = false;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    		for(new pos = 0; pos <= nLen; pos++)
				{
					if(searched != true)
					{
						if(strfind(PN(i), GetName, true) == pos)
						{
     						found++;
     						//++++++++++++++++++++++++++++++++++++++++++++++++++
							format(string1, 128, "%d. %s {00BBF6}(ID: %d)\n%s", found, PN(i), i, string1);
							SPD(playerid, 999, LIST, string, string1, "Ok", "");
							//++++++++++++++++++++++++++++++++++++++++++++++++++
							searched = true;
						}
					}
				}
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(found == 0) SendError(playerid, "No Players Localized!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:boost(ESS)
{
	eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][pVIP] < 1) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(PlayerInfo[playerid][Language])
	{
	    case 1:
	    {
		    strcat(eString, "Valabilitate       \tPret\n\
		                 {FFE600}1 ora          \t{00CC00}1000 coins\n\
		                 {FFE600}2 ore          \t{00CC00}2000 coins\n\
		                 {FFE600}4 ore          \t{00CC00}4000 coins\n\
		                 {FF0000}Daca vei iesi de pe server, vei pierde boost-ul!");
		}
		case 2:
		{
		    strcat(eString, "Valability           \tPrice\n\
		                 {FFE600}1 hour           \t{00CC00}1000 coins\n\
		                 {FFE600}2 hours          \t{00CC00}2000 coins\n\
		                 {FFE600}4 hours          \t{00CC00}4000 coins\n\
		                 {FF0000}If you disconnect, you will lose the boost!");
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SPD(playerid, DIALOG_BOOST, HEADERS, "{FFFFFF}Boost your Drifts, Races, Stunts, Clan Points", eString, "Select", "Close");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:maxammo(ESS)
{
	if(PlayerInfo[playerid][pVIP] < 1) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return SendPlayerMaxAmmo(playerid);
}
CMD:tcar(ESS)
{
    new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt; GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][pVIP] < 1) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInAnyVehicle(playerid)) return
	SendError(playerid, "You already have a vehicle!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if(sscanf(params, "d", params[0])) return
    SendUsage(playerid, "/tcar [1 - 10]");
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if(PlayerInfo[playerid][pCar] != -1)   CarDeleter(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[0] == 1)
	{
        LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1), PutPlayerInVehicle(playerid,LVehicleIDt,0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		AddVehicleComponent(LVehicleIDt, 1028);		AddVehicleComponent(LVehicleIDt, 1030);
		AddVehicleComponent(LVehicleIDt, 1031);		AddVehicleComponent(LVehicleIDt, 1138);
		AddVehicleComponent(LVehicleIDt, 1140);		AddVehicleComponent(LVehicleIDt, 1170);
	    AddVehicleComponent(LVehicleIDt, 1028);		AddVehicleComponent(LVehicleIDt, 1030);
		AddVehicleComponent(LVehicleIDt, 1031);		AddVehicleComponent(LVehicleIDt, 1138);
		AddVehicleComponent(LVehicleIDt, 1140);		AddVehicleComponent(LVehicleIDt, 1170);
	    AddVehicleComponent(LVehicleIDt, 1080);		AddVehicleComponent(LVehicleIDt, 1086);
		AddVehicleComponent(LVehicleIDt, 1087);		AddVehicleComponent(LVehicleIDt, 1010);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ChangeVehiclePaintjob(LVehicleIDt,1), SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)), LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid)), PlayerInfo[playerid][pCar] = LVehicleIDt;
	}
	else if(params[0] == 2)
	{
        LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1), PutPlayerInVehicle(playerid,LVehicleIDt,0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		AddVehicleComponent(LVehicleIDt, 1028);		AddVehicleComponent(LVehicleIDt, 1030);
		AddVehicleComponent(LVehicleIDt, 1031);		AddVehicleComponent(LVehicleIDt, 1138);
		AddVehicleComponent(LVehicleIDt, 1140);		AddVehicleComponent(LVehicleIDt, 1170);
	    AddVehicleComponent(LVehicleIDt, 1080);		AddVehicleComponent(LVehicleIDt, 1086);
		AddVehicleComponent(LVehicleIDt, 1087);		AddVehicleComponent(LVehicleIDt, 1010);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ChangeVehiclePaintjob(LVehicleIDt,2), SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)), LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid)), PlayerInfo[playerid][pCar] = LVehicleIDt;
	}
	else if(params[0] == 3)
	{
        LVehicleIDt = CreateVehicle(559,X,Y,Z,Angle,1,-1,-1), PutPlayerInVehicle(playerid,LVehicleIDt,0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	AddVehicleComponent(LVehicleIDt,1065);	AddVehicleComponent(LVehicleIDt,1067);
		AddVehicleComponent(LVehicleIDt,1162);	AddVehicleComponent(LVehicleIDt,1010);
		AddVehicleComponent(LVehicleIDt,1073);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ChangeVehiclePaintjob(LVehicleIDt,1), SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)), LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid)), PlayerInfo[playerid][pCar] = LVehicleIDt;
	}
	else if(params[0] == 4)
	{
        LVehicleIDt = CreateVehicle(565,X,Y,Z,Angle,1,-1,-1), PutPlayerInVehicle(playerid,LVehicleIDt,0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    AddVehicleComponent(LVehicleIDt,1046);	AddVehicleComponent(LVehicleIDt,1049);
		AddVehicleComponent(LVehicleIDt,1053);	AddVehicleComponent(LVehicleIDt,1010);
		AddVehicleComponent(LVehicleIDt,1073);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ChangeVehiclePaintjob(LVehicleIDt,1), SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)), LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid)), PlayerInfo[playerid][pCar] = LVehicleIDt;
	}
	else if(params[0] == 5)
	{
        LVehicleIDt = CreateVehicle(558,X,Y,Z,Angle,1,-1,-1), PutPlayerInVehicle(playerid,LVehicleIDt,0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	AddVehicleComponent(LVehicleIDt,1088); AddVehicleComponent(LVehicleIDt,1092);
		AddVehicleComponent(LVehicleIDt,1139); AddVehicleComponent(LVehicleIDt,1010);
		AddVehicleComponent(LVehicleIDt,1073);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ChangeVehiclePaintjob(LVehicleIDt,1), SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)), LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid)), PlayerInfo[playerid][pCar] = LVehicleIDt;
	}
	else if(params[0] == 6)
	{
   		LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1), PutPlayerInVehicle(playerid,LVehicleIDt,0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);
		AddVehicleComponent(LVehicleIDt, 1138); AddVehicleComponent(LVehicleIDt, 1170);
		AddVehicleComponent(LVehicleIDt, 1030); AddVehicleComponent(LVehicleIDt, 1028);
		AddVehicleComponent(LVehicleIDt, 1170); AddVehicleComponent(LVehicleIDt, 1031);
   		AddVehicleComponent(LVehicleIDt, 1080); AddVehicleComponent(LVehicleIDt, 1140);
		AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1028);
		AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);
		AddVehicleComponent(LVehicleIDt, 1140); AddVehicleComponent(LVehicleIDt, 1138);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ChangeVehiclePaintjob(LVehicleIDt,0), SetVehicleVirtualWorld(LVehicleIDt,GetPlayerVirtualWorld(playerid)), LinkVehicleToInterior(LVehicleIDt,GetPlayerInterior(playerid)), PlayerInfo[playerid][pCar] = LVehicleIDt;
	}
	else if(params[0] == 7)
	{
        LVehicleIDt = CreateVehicle(562,X,Y,Z,Angle,1,-1,-1), PutPlayerInVehicle(playerid,LVehicleIDt,0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    AddVehicleComponent(LVehicleIDt,1034); AddVehicleComponent(LVehicleIDt,1038);
		AddVehicleComponent(LVehicleIDt,1147); AddVehicleComponent(LVehicleIDt,1010);
		AddVehicleComponent(LVehicleIDt,1073);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ChangeVehiclePaintjob(LVehicleIDt,1), SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)), LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid)), PlayerInfo[playerid][pCar] = LVehicleIDt;
	}
	else if(params[0] == 8)
	{
        LVehicleIDt = CreateVehicle(535,X,Y,Z,Angle,1,-1,-1), PutPlayerInVehicle(playerid,LVehicleIDt,0), ChangeVehiclePaintjob(LVehicleIDt,1);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		AddVehicleComponent(LVehicleIDt,1109); AddVehicleComponent(LVehicleIDt,1115);
		AddVehicleComponent(LVehicleIDt,1117); AddVehicleComponent(LVehicleIDt,1073);
		AddVehicleComponent(LVehicleIDt,1010); AddVehicleComponent(LVehicleIDt,1087);
		AddVehicleComponent(LVehicleIDt,1114); AddVehicleComponent(LVehicleIDt,1081);
		AddVehicleComponent(LVehicleIDt,1119); AddVehicleComponent(LVehicleIDt,1121);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)), LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid)), PlayerInfo[playerid][pCar] = LVehicleIDt;
	}
	else if(params[0] == 9)
	{
        LVehicleIDt = CreateVehicle(558,X,Y,Z,Angle,1,-1,-1), PutPlayerInVehicle(playerid,LVehicleIDt,0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   		AddVehicleComponent(LVehicleIDt,1092); AddVehicleComponent(LVehicleIDt,1166);
  		AddVehicleComponent(LVehicleIDt,1165); AddVehicleComponent(LVehicleIDt,1090);
	    AddVehicleComponent(LVehicleIDt,1094); AddVehicleComponent(LVehicleIDt,1010);
		AddVehicleComponent(LVehicleIDt,1087); AddVehicleComponent(LVehicleIDt,1163);
	    AddVehicleComponent(LVehicleIDt,1091);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ChangeVehiclePaintjob(LVehicleIDt,2), SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)), LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid)), PlayerInfo[playerid][pCar] = LVehicleIDt;
	}
	else if(params[0] == 10)
	{
        LVehicleIDt = CreateVehicle(562,X,Y,Z,Angle,1,-1,-1), PutPlayerInVehicle(playerid,LVehicleIDt,0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  		AddVehicleComponent(LVehicleIDt,1034); AddVehicleComponent(LVehicleIDt,1038);
  		AddVehicleComponent(LVehicleIDt,1147); AddVehicleComponent(LVehicleIDt,1010);
  		AddVehicleComponent(LVehicleIDt,1073);
  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  		ChangeVehiclePaintjob(LVehicleIDt,0), SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)), LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid)), PlayerInfo[playerid][pCar] = LVehicleIDt;
	}
	else return SendError(playerid, "Invalid car!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vcolor(ESS) return cmd_mycolor(playerid, params);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:mycolor(ESS)
{
	if(PlayerInfo[playerid][pVIP] >= 1)
	{
		if(sscanf(params, "x", params[0])) return SendUsage(playerid, "/mycolor [Color Code]{FF0000} | {FFFFFF}Default: -1");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		params[0] = (params[0] * 256) + 0xAA; SetPlayerColor(playerid, params[0]), Announce(playerid, "~w~~h~Color ~g~~h~~h~Updated", 4000, 4);
		return true;
	}
	else return Error(playerid, 2);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:skate(playerid,params[])
{
    if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInAnyDynamicArea(playerid)) return Error(playerid, 9);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(!IsPlayerInAnyVehicle(playerid))
	{
        if(!PlayerInfo[playerid][SkateActive])
		{
            PlayerInfo[playerid][SkateActive] = true;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            DestroyObject(PlayerInfo[playerid][Skate]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            RemovePlayerAttachedObject(playerid, INDEX_SKATE);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            SetPlayerAttachedObject(playerid, INDEX_SKATE, 19878, 6, -0.055999, 0.013000, 0.000000, -84.099983, 0.000000, -106.099998, 1.000000, 1.000000, 1.000000);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Announce(playerid, "~G~~H~~H~Skate activated~N~~W~~H~use~R~~H~~H~ right~W~~H~ click to use!", 6000, 3);
        }
		else
		{
            PlayerInfo[playerid][SkateActive] = false;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            DestroyObject(PlayerInfo[playerid][Skate]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            RemovePlayerAttachedObject(playerid, INDEX_SKATE);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Announce(playerid, "~G~~H~~H~Skate deactivated~N~~W~~H~use~R~~H~~H~ /skate~W~~H~ to reactivate!", 6000, 3);
        }
    }
    return true;
}
CMD:vbike(playerid)
{
    if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DestroyVehObject(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid,S_Position[playerid][1],S_Position[playerid][2],S_Position[playerid][3]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][pCar] = CreateVehicle(522,S_Position[playerid][1],S_Position[playerid][2],S_Position[playerid][3],0,1,1,10);
	PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCar], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Info(playerid, "~w~~h~You spawned ~r~~h~Special NRG", 5000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SpecialCar[playerid] = (true);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	VBObj[playerid][0] = CreateDynamicObject(362,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(VBObj[playerid][0], PlayerInfo[playerid][pCar], -0.150000,-0.075000,0.300000,0.000000,29.700004,97.199974);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	VBObj[playerid][1] = CreateDynamicObject(362,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(VBObj[playerid][1], PlayerInfo[playerid][pCar], 0.300000,-0.075000,0.300000,0.000000,29.700004,97.199974);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	VBObj[playerid][2] = CreateDynamicObject(359,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(VBObj[playerid][2], PlayerInfo[playerid][pCar], 0.075000,0.074999,-0.299999,102.779983,359.100280,91.799980);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	VBObj[playerid][3] = CreateDynamicObject(359,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(VBObj[playerid][3], PlayerInfo[playerid][pCar], -0.075000,0.074999,-0.299999,-75.419982,359.100280,91.799980);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	VBObj[playerid][4] = CreateDynamicObject(18693,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(VBObj[playerid][4], PlayerInfo[playerid][pCar], -0.375000,0.449999,-1.125000,-2.699998,2.700001,0.000002);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	VBObj[playerid][5] = CreateDynamicObject(18693,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(VBObj[playerid][5], PlayerInfo[playerid][pCar], 0.225000,0.449999,-1.125000,-2.699998,2.700001,0.000002);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:rw(playerid)
{
    if(PlayerInfo[playerid][pVIP] > 1)
    {
		ResetPlayerWeapons(playerid);
		//----------------------------------------------------------------------
		SCM(playerid, -1, "{1DEE01}You got a Running Weapons pack {FF0000}Free{1DEE01}!");
		//----------------------------------------------------------------------
		GivePlayerWeapon(playerid, 4, 1);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 26, 500);
		GivePlayerWeapon(playerid, 22, 500);
    }
    else
    {
	    if(PlayerInfo[playerid][Money] < 200000) return SendError(playerid, "You must have $200.000 to buy Running Weapons pack!");
        //----------------------------------------------------------------------
	    ResetPlayerWeapons(playerid);
	    //----------------------------------------------------------------------
		GivePlayerWeapon(playerid, 4, 1);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 26, 500);
		GivePlayerWeapon(playerid, 22, 500);
		//----------------------------------------------------------------------
		PlayerInfo[playerid][Money] -= 200000, GivePlayerMoney(playerid, -200000);
		//----------------------------------------------------------------------
		SCM(playerid, -1, "{1DEE01}You got Running Weapons pack for {FF0000}$200.000{1DEE01}!");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:ww(playerid)
{
    if(PlayerInfo[playerid][pVIP] > 1)
    {
	    ResetPlayerWeapons(playerid);
	    //----------------------------------------------------------------------
		SCM(playerid, -1, "{1DEE01}You got an Walking Weapons pack {FF0000}Free{1DEE01}!");
		//----------------------------------------------------------------------
		GivePlayerWeapon(playerid, 25, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 4, 1);
		GivePlayerWeapon(playerid, 34, 500);
		GivePlayerWeapon(playerid, 31, 500);
		GivePlayerWeapon(playerid, 29, 500);
    }
    else
    {
	    if(PlayerInfo[playerid][Money] < 200000) return SendError(playerid, "You must have $200.000 to buy Running Weapons pack{1DEE01}!");
		//----------------------------------------------------------------------
	    ResetPlayerWeapons(playerid);
	    //----------------------------------------------------------------------
		GivePlayerWeapon(playerid, 25, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 4, 1);
		GivePlayerWeapon(playerid, 34, 500);
		GivePlayerWeapon(playerid, 31, 500);
		GivePlayerWeapon(playerid, 29, 500);
		//----------------------------------------------------------------------
		PlayerInfo[playerid][Money] -= 200000, GivePlayerMoney(playerid, -200000);
		//----------------------------------------------------------------------
		SCM(playerid, -1, "{1DEE01}You got Walking Weapons pack for {FF0000}$200.000{1DEE01}!");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:spec(ESS)
{
    if(PlayerInfo[playerid][Level] < 1 && PlayerInfo[playerid][pVIP] < 1) return Error(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new SpecPlayer[10];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "s[10]", SpecPlayer)) return SendUsage(playerid, "/spec [Player/OFF]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(SpecPlayer, "off", true) == 0)
	{
	    if(PlayerInfo[playerid][SpecType] == ADMIN_SPEC_TYPE_NONE && PlayerInfo[playerid][SpecSpawn] == 0) return SendError(playerid, "You are not spectating!");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        return PlayerInfo[playerid][Spectating] = 0, PlayerInfo[playerid][SpecSpawn] = 0, StopSpectate(playerid), Announce(playerid, "~W~spectate~R~~H~ off", 1000, 4);
	}
	if(!IsPlayerConnected(strval(SpecPlayer)) || strval(SpecPlayer) == playerid) return Error(playerid, 3);
	else
	{
	    if(PlayerInfo[strval(SpecPlayer)][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[strval(SpecPlayer)][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[strval(SpecPlayer)][Ignore_Spec] == 1 && PlayerInfo[playerid][Level] <= 1) return
        SendError(playerid, "You cannot spectate this player (/Ignore Spec enabled)!");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PlayerInfo[strval(SpecPlayer)][Level] > PlayerInfo[playerid][Level]) return
        SendError(playerid, "You cannot spectate an admin!");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(GetPlayerState(strval(SpecPlayer)) == PLAYER_STATE_SPECTATING && PlayerInfo[strval(SpecPlayer)][SpecID] != INVALID_PLAYER_ID) return
        SCM(playerid, RED, "ERROR: Player spectating someone else");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(GetPlayerState(strval(SpecPlayer)) != 1 && GetPlayerState(strval(SpecPlayer)) != 2 && GetPlayerState(strval(SpecPlayer)) != 3) return
        SCM(playerid, RED, "ERROR: Player not spawned");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PlayerInfo[playerid][Level] >= 1 && PlayerInfo[playerid][Spectating] != 1)
        {
	        foreach(new i: Player) if(PlayerInfo[i][Level] >= 1)
	        FormatMSG(i, ABLUE, "[ADMIN] {00CC00}%s {0066FF} has started spectating player {00CC00}#%d", PN(playerid), strval(SpecPlayer));
	    }
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        Announce(playerid, "~W~now~G~~H~ spectating~N~~W~type~R~~H~ /spec off~W~ to stop", 6000, 3);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        return PlayerInfo[playerid][Spectating] = 1, GetPlayerPos(playerid, Pos[playerid][0], Pos[playerid][1], Pos[playerid][2]), GetPlayerFacingAngle(playerid, Pos[playerid][3]), StartSpectate(playerid, strval(SpecPlayer));
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vipchat(ESS)
{
    if(PlayerInfo[playerid][pVIP] < 1) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][VipChat] == 0) PlayerInfo[playerid][VipChat] = 1, Announce(playerid, "~w~VIP Chat ~R~~H~disabled~N~~Y~~H~use~R~~H~ /vipchat~N~~Y~~H~ to enable", 4000, 3);
    else PlayerInfo[playerid][VipChat] = 0, Announce(playerid, "~w~VIP Chat~G~~H~ enabled~N~~Y~~H~use~R~~H~ /vipchat~Y~~H~ to disable", 4000, 3);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// VIP Commands - Level 2
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:invisible(playerid)
{
    if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][invisible] == 0) PlayerInfo[playerid][invisible] = 1, Announce(playerid, "~W~Invisible on map~N~~G~~H~Enabled!", 6000, 4), SetPlayerColor(playerid, 0xFFFFFF00);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	else if(PlayerInfo[playerid][invisible] == 1) PlayerInfo[playerid][invisible] = 0, Announce(playerid, " ~W~Invisible on map~N~~R~~h~Disabled!", 6000, 4), SetPlayerColor(playerid, 0xFFFFFFFF);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vm(playerid)
{
	if((gettime() - vmtime[playerid]) < 300) return SendError(playerid, "You can use this command only once at every 5 minutes!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][pVIP] == 2)
	{
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    AddVehicleMissiles(GetPlayerVehicleID(playerid),1.1,-0.2);
	    vmtime[playerid] = gettime();
	    return true;
	}
	else return SendError(playerid, "You must be VIP Gold to use this command!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vad(ESS)
{
	if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new String[1024];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "s[60]", params[0])) return SendUsage(playerid, "/vad [Announce]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Muted] == 1) return Announce(playerid, "~w~~h~You are ~r~~h~muted~w~~h~!", 3000, 4), false;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if((gettime() - ADTimer[playerid][1]) < 30) return SCM(playerid, RED, "Sorry, but you need to wait 30 seconds to send an another AD!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "[VIP RADIO] {FF6BFF}%s {FF0000}| Sent by {00FF2F}%s(%d)", params[0], PN(playerid), playerid);
    SCMALL(RED, String);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    ADTimer[playerid][1] = gettime();
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vtank(playerid)
{
    if((gettime() - vTankTimer[playerid]) < 300) return SendError(playerid, "You can use this command only once at every 5 minutes!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
	return CarSpawner(playerid, 432), vTankTimer[playerid] = gettime();
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vheli(playerid)
{
    if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
	return CarSpawner(playerid, 447);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vhydra(playerid)
{
    if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
	return CarSpawner(playerid, 520);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vminigun(playerid)
{
    if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if((gettime() - MgTime[playerid]) < 300) return SendError(playerid, "You can use this command only once at every 5 minutes!");
	return GivePlayerWeapon(playerid, 38, 500), MgTime[playerid] = gettime(), Announce(playerid, "~g~~h~VIP~n~~w~~h~Minigun!", 3000, 4);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vrocket(playerid)
{
    if((gettime() - RocketTime[playerid]) < 300) return SendError(playerid, "You can use this command only once at every 5 minutes!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
    return RocketTime[playerid] = gettime(), GivePlayerWeapon(playerid, 35, 10), Announce(playerid, "~g~~h~VIP~n~~w~~h~Rocket!", 3000, 4);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:spawnme(playerid)
{
    if(PlayerInfo[playerid][pVIP] >= 1) SpawnPlayer(playerid), Announce(playerid, "~B~~H~You have been~N~~R~~H~Spawned", 3000, 4);
	else return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vac(playerid)
{
    if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][VAC] == 1) PlayerInfo[playerid][VAC] = 0, DisableRemoteVehicleCollisions(playerid, 0), Announce(playerid, "~w~~h~Anti-Collisions ~n~~g~~h~Disabled~w~~h~!", 4000, 4);
	else if(PlayerInfo[playerid][VAC] == 0) PlayerInfo[playerid][VAC] = 1, DisableRemoteVehicleCollisions(playerid, 1), Announce(playerid, "~w~~h~Anti-Collisions ~n~~g~~h~Enabled~w~~h~!", 4000, 4);
 	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:dos(playerid)
{
    if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][DingOnShot] == 0) PlayerInfo[playerid][DingOnShot] = 1, Announce(playerid, "~w~~h~Ding on Shoot ~n~~g~~h~Actived~w~~h~!", 4000, 4);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	else if(PlayerInfo[playerid][DingOnShot] == 1) PlayerInfo[playerid][DingOnShot] = 0, Announce(playerid, "~w~~h~Ding on Shoot ~n~~r~~h~Dezactivated~w~~h~!", 4000, 4);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:aka(ESS)
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Level] < 3 && PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "u", params[0])) return SendUsage(playerid, "/aka [ID/Name]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[params[0]][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if(IsPlayerConnected(params[0]))
 	{
        mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Akas` WHERE `IP` = '%s'", GetPlayerIPEx(params[0]));
        mysql_tquery(SQL, eQuery, "ShowPlayerAka", "ii", playerid, params[0]);
		return true;
	}
	else Error(playerid, 10);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:fw(playerid)
{
    if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][FW] == 0)
    {
        if(PlayerInfo[playerid][Language] == 1)
		{
			eString[0] = EOS;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			strcat(eString, "{FFE600}Activand aceasta comanda,{00CC00} Desert Eagle-ul{FFE600} tau va trage cu\n");
			strcat(eString, "{FFE600}gloante explozibile ce se vor aprinde atunci cand vor lovii\n");
			strcat(eString, "{FFE600}un jucator, un vehicul sau pamantul!\n");
			strcat(eString, "\n");
			strcat(eString, "{FFFFFF}Aceasta functie functioneaza doar pe Deser Eagle inafara oricarei zone speciala!\n");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SPD(playerid, DIALOG_FW, MSGBOX, "{FF0000}Fire Weapon", eString, "Close", "Enable");
		}
		else if(PlayerInfo[playerid][Language] == 2)
		{
			eString[0] = EOS;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			strcat(eString, "{FFE600}By activating this command, your{00CC00} Desert Eagle{FFE600} will shoot with\n");
			strcat(eString, "{FFE600}explosive bullets that will light up when they hit\n");
			strcat(eString, "{FFE600}a player, a vehicle or land!\n");
			strcat(eString, "\n");
			strcat(eString, "{FFFFFF}This function works only on Deser Eagle outside any special area!\n");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SPD(playerid, DIALOG_FW, MSGBOX, "{FF0000}Fire Weapon", eString, "Close", "Enable");
		}
    }
    else PlayerInfo[playerid][FW] = 0, Announce(playerid, "~w~Fire Weapon~R~~H~~H~ off", 6000, 3);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vweapons(playerid)
{
    if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][VipWeapons] == 0) PlayerInfo[playerid][VipWeapons] = 1, Announce(playerid, "~w~Vip Weapons~G~~H~~H~ enabled~N~~Y~~H~now your weapons will~N~~Y~~H~ give~R~~H~~H~ health~Y~~H~ for you", 6000, 3);
    else PlayerInfo[playerid][VipWeapons] = 0, Announce(playerid, "~w~Vip Weapons~R~~H~~H~ disabled~N~~Y~~H~use~G~~H~~H~ /vweapons~Y~~H~ to enable", 6000, 3);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:godmode(playerid) return cmd_god(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:god(playerid)
{
    if(PlayerInfo[playerid][pVIP] >= 2 || PlayerInfo[playerid][Level] >= 5)
	{
        if(IsPlayerInAnyDynamicArea(playerid) && PlayerInfo[playerid][RconType] < 1) return Error(playerid, 9);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[playerid][God] == 0)
	    {
	    	PlayerInfo[playerid][God] = 1, SetPlayerHealth(playerid, 999999999.0);
	    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       	    Announce(playerid, "~w~GODMODE~G~~H~ ON", 6000, 4);
       	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       	    if(PlayerInfo[playerid][Level] >= 4) AdminCMD(playerid, "GOD");
	    }
	    else
	    {
            PlayerInfo[playerid][God] = 0;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	        Announce(playerid, "~w~GODMODE~R~~H~ OFF", 6000, 4);
   	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	    SetPlayerHealth(playerid, 100);
	    }
        return true;
	}
	else return Error(playerid, 2);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:godcar(playerid)
{
	if(PlayerInfo[playerid][pVIP] >= 2 || PlayerInfo[playerid][Level] >= 5)
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You need to be in a vehicle to use this command!");
        //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(IsPlayerInAnyDynamicArea(playerid) && PlayerInfo[playerid][RconType] < 1) return Error(playerid, 9);
        else
        {
	    	if(PlayerInfo[playerid][GodCar] == 0)
			{
				PlayerInfo[playerid][GodCar] = 1, Announce(playerid, "~w~Godcar~G~~H~ on", 6000, 4);
				SetVehicleHealth(GetPlayerVehicleID(playerid), 100000.0);
				if(PlayerInfo[playerid][Level] >= 2) AdminCMD(playerid, "GODCAR");
			}
			else PlayerInfo[playerid][GodCar] = 0, Announce(playerid, "~W~Godcar~R~~H~ OFF", 6000, 4), SetVehicleHealth(GetPlayerVehicleID(playerid), 1000);
			return true;
        }
	}
	else return Error(playerid, 2);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:gethere(ESS) return cmd_get(playerid, params);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:get(playerid, params[])
{
	new Float:X, Float:Y, Float:Z, Str[300], Player;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Level] >= 4)
	{
	    if(sscanf(params, "u", Player)) return SendUsage(playerid, "/get [ID/Name]");
	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	if(IsPlayerConnected(Player) && Player != INVALID_PLAYER_ID)
	 	{
			if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[Player][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
			//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(IsPlayerInAnyDynamicArea(playerid) && PlayerInfo[playerid][RconType] < 1) return Error(playerid, 9);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(IsPlayerInSpecialZone(Player) == 1) return SendError(playerid, "You can't get this player because he is in a special zone!");
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   			if(Player == playerid) return Error(playerid, 3);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   			FormatMSG(Player, ABLUE, "Administartor %s has teleported you to him position.", PN(playerid));
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][InRec] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[Player][InDrift] == 1) PlayerInfo[Player][InDrift] = 0, DisablePlayerRaceCheckpoint(Player), Announce(Player, "~w~~h~Drift ~r~~h~failed", 3000, 4);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "GET"), GetPlayerPos(playerid, X, Y, Z), SetPlayerInterior(Player, GetPlayerInterior(playerid)), SetPlayerVirtualWorld(Player, GetPlayerVirtualWorld(playerid));
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(GetPlayerState(Player) == 2) SetVehiclePos(GetPlayerVehicleID(Player), X + 3, Y, Z), LinkVehicleToInterior(GetPlayerVehicleID(Player), GetPlayerInterior(playerid)), SetVehicleVirtualWorld(GetPlayerVehicleID(Player), GetPlayerVirtualWorld(playerid));
			else return SetPlayerPos(Player, X + 2, Y, Z);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			return true;
		}
		else return Error(playerid, 3);
	}
	else if(PlayerInfo[playerid][pVIP] >= 2)
	{
	    if(sscanf(params, "u", Player)) return SendUsage(playerid, "/get [ID/Name]");
	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	if(IsPlayerConnected(Player) && Player != INVALID_PLAYER_ID)
	 	{
		    if(PlayerInfo[Player][Ignore_Get] == 0)
		    {
		        if(PlayerInfo[Player][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                if(IsPlayerInAnyDynamicArea(playerid) && PlayerInfo[playerid][RconType] < 1) return Error(playerid, 9);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                if(IsPlayerInSpecialZone(Player) == 1) return SendError(playerid, "You can't get this player because he is in a special zone!");
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        if(Player == playerid) return Error(playerid, 3);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerInfo[Player][GetInvite] = 1, PlayerInfo[Player][Inviter][1] = playerid;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(Str, sizeof(Str), "%s wants to teleport you to his position! Please {0072FF}/accept {FFFF00}or {0072FF}/decline{FFFF00}!", PN(playerid)), SCM(Player, YELLOW, Str);
	            Announce(playerid, "~w~~h~Invite ~g~~h~Sent", 4000, 4);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        return true;
			}
			else return SendError(playerid, "You cannot get this player (has /ignore get)!");
		}
		else return Error(playerid, 3);
	}
	else return Error(playerid, 2);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:accept(ESS)
{
	new Float:X, Float:Y, Float:Z, Str[300];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][GotoInvite] == 1)
	{
	    if(!IsPlayerInAnyVehicle(PlayerInfo[playerid][Inviter][0]))
		{
			GetPlayerPos(playerid, X, Y, Z), SetPlayerPos(PlayerInfo[playerid][Inviter][0], X+1, Y+1, Z), SetPlayerInterior(PlayerInfo[playerid][Inviter][0], GetPlayerInterior(playerid));
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(Str, sizeof(Str), "%s has teleported to you!", PN(PlayerInfo[playerid][Inviter][0])), SCM(playerid, YELLOW, Str);
			format(Str, sizeof(Str), "You were teleported to %s!", PN(playerid)), SCM(PlayerInfo[playerid][Inviter][0], YELLOW, Str);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][InRec] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][InDrift] == 1) PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), Announce(playerid, "~w~~h~Drift ~r~~h~failed", 3000, 4);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][GotoInvite] = 0;
			PlayerInfo[playerid][Inviter][0] = -1;
		}
		else if(IsPlayerInAnyVehicle(PlayerInfo[playerid][Inviter][0]))
		{
			GetPlayerPos(playerid, X, Y, Z), RemovePlayerFromVehicle(PlayerInfo[playerid][Inviter][0]), SetPlayerPos(PlayerInfo[playerid][Inviter][0], X+1, Y+1, Z);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(Str, sizeof(Str), "%s has teleported to you!", PN(PlayerInfo[playerid][Inviter][0])), SCM(playerid, YELLOW, Str);
			format(Str, sizeof(Str), "You were teleported to %s!", PN(playerid)), SCM(PlayerInfo[playerid][Inviter][0], YELLOW, Str);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][InRec] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][InDrift] == 1) PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), Announce(playerid, "~w~~h~Drift ~r~~h~failed", 3000, 4);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][GotoInvite] = 0;
			PlayerInfo[playerid][Inviter][0] = -1;
		}
	}
	else if(PlayerInfo[playerid][GetInvite] == 1)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			GetPlayerPos(PlayerInfo[playerid][Inviter][1], X, Y, Z), SetPlayerPos(playerid, X+1, Y+1, Z), SetPlayerInterior(playerid, GetPlayerInterior(PlayerInfo[playerid][Inviter][1]));
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(Str, sizeof(Str), "%s was teleported to you!", PN(playerid)), SCM(PlayerInfo[playerid][Inviter][1], YELLOW, Str);
			format(Str, sizeof(Str), "You were teleported to %s!", PN(PlayerInfo[playerid][Inviter][1])), SCM(playerid, YELLOW, Str);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][InDrift] == 1) PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), Announce(playerid, "~w~~h~Drift ~r~~h~failed", 3000, 4);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][GetInvite] = 0;
			PlayerInfo[playerid][Inviter][1] = -1;
		}
		else if(IsPlayerInAnyVehicle(PlayerInfo[playerid][Inviter][1]))
		{
			GetPlayerPos(PlayerInfo[playerid][Inviter][1], X, Y, Z), SetPlayerPos(playerid, X+1, Y+1, Z);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(Str, sizeof(Str), "%s was teleported to you!", PN(playerid)), SCM(PlayerInfo[playerid][Inviter][1], YELLOW, Str);
			format(Str, sizeof(Str), "You were teleported to %s!", PN(PlayerInfo[playerid][Inviter][1])), SCM(playerid, YELLOW, Str);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][InDrift] == 1) PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), Announce(playerid, "~w~~h~Drift ~r~~h~failed", 3000, 4);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][GetInvite] = 0;
			PlayerInfo[playerid][Inviter][1] = -1;
		}
	}
	else if(GInvite[playerid] != 0)
    {
	    if(PlayerInfo[playerid][GangID] != 0) return SendError(playerid, "You are already in an gang!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[playerid][ClanID] != 0) return SendError(playerid, "You are member of any clan!");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SCM(playerid, YELLOW, "Your invite to join the gang was succesfully accepted! Type {00CC00}/gm {FFFF00}for a list with members.");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        PlayerInfo[playerid][GangID] = GInvite[playerid];
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        new date[3]; getdate(date[0], date[1], date[2]);
        format(PlayerInfo[playerid][GangMemberSince], 24, "%d %s, %d", date[2], GetMonth(), date[0]);
        PlayerInfo[playerid][g_Time][5]	= gettime();
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    GInvite[playerid] = 0; PlayerInfo[playerid][g_Rank] = 1;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetupPlayerForGang(playerid, PlayerInfo[playerid][GangID]);
	}
	else if(CInvite[playerid] != 0)
	{
		eQuery[0] = EOS;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][ClanID] != 0) return SendError(playerid, "You are already in an clan!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[playerid][GangID] != 0) return SendError(playerid, "You are member of any gang!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][ClanID] = CInvite[playerid];
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][c_Rank] = 1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetupPlayerForClan(playerid, PlayerInfo[playerid][ClanID]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(PlayerInfo[playerid][ClanName], 30, "%s", Clan[PlayerInfo[playerid][ClanID]][ClanName]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SavePlayerClan(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Clans` SET `Members` = `Members`+1 WHERE `ID` = '%d'", PlayerInfo[playerid][ClanID]);
		mysql_tquery(SQL, eQuery, "", "");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CInvite[playerid] = 0;
	}
	else return SendError(playerid, "You don't have what to accept!");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:decline(ESS)
{
	new Str[300];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][GotoInvite] == 0 || PlayerInfo[playerid][GetInvite] == 0) return SendError(playerid, "You don't have what to decline!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else
	{
		if(PlayerInfo[playerid][GotoInvite] == 1) format(Str, sizeof(Str), "%s has dennied your invite!", PN(playerid)), SCM(PlayerInfo[playerid][Inviter][0], YELLOW, Str), PlayerInfo[playerid][Inviter][0] = -1, PlayerInfo[playerid][GotoInvite] = 0;
		else if(PlayerInfo[playerid][GetInvite] == 1) format(Str, sizeof(Str), "%s has dennied your invite!", PN(playerid)), SCM(PlayerInfo[playerid][Inviter][1], YELLOW, Str), PlayerInfo[playerid][Inviter][0] = -1, PlayerInfo[playerid][GetInvite] = 0;
	}
    if(CInvite[playerid] != 0)
	{
		new string[128];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][ClanID] != 0)  return SendError(playerid, "You are already in an clan!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(string, sizeof(string), "You denyed the clan invite!");
		SCM(playerid, YELLOW, string);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CInvite[playerid] = 0;
		return true;
	}
	else return SendError(playerid, "You have not received any invitation!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:chint(ESS)
{
    new HouseID = GetHouseID(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][House] == 0) return SendError(playerid, "You don't own any house !");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InHouse] == 1) return SendError(playerid, "Sorry, but you need to be out of the house since using this command !");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(HouseID != -1) SPD(playerid, DIALOG_HOUSE_INTERIOR_CHANGE2, LIST, "Change House Interior", "{006FFF}Normal Interiors\n{006FFF}Premium Interiors", "Select", "Close");
	else return SCM(playerid, RED, "Sorry, but you are not in a House pickup!"); return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:s3(playerid)
{
    if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInAnyDynamicArea(playerid)) return Error(playerid, 9);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid, PlayerInfo[playerid][SPosX][3], PlayerInfo[playerid][SPosY][3], PlayerInfo[playerid][SPosZ][3]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return MSGLang(playerid, YELLOW, "Position 3 saved. Use: /L3 to return at it!", "Position 3 saved. Use: /L3 to return at it!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:l3(playerid)
{
    if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][SPosX][3] != 0 && PlayerInfo[playerid][SPosY][3] != 0 && PlayerInfo[playerid][SPosZ][3] != 0)
	{
		if(!IsPlayerInAnyVehicle(playerid)) SetPlayerPos(playerid, PlayerInfo[playerid][SPosX][3], PlayerInfo[playerid][SPosY][3], PlayerInfo[playerid][SPosZ][3]), SetPlayerVirtualWorld(playerid, 0), SetPlayerInterior(playerid, 0);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		else SetVehiclePos(GetPlayerVehicleID(playerid), PlayerInfo[playerid][SPosX][3], PlayerInfo[playerid][SPosY][3], PlayerInfo[playerid][SPosZ][3]), LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0), SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 0);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PlayerInfo[playerid][InDrift] == 1) PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), Announce(playerid, "~w~~h~Drift ~r~~h~failed", 3000, 4);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        PlayerInfo[playerid][InJJ] = 0, PlayerInfo[playerid][InRec] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		return MSGLang(playerid, GREEN, "Position 3 loaded. Use: /S3 to change it!", "Position 3 loaded. Use: /S3 to change it!");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else return SendError(playerid, "You didn't saved any position!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// End of VIP System
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:maze(playerid)
{
    new String[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerInterior(playerid, 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~y~Teleported to~n~~r~The Maze", 3000, 4);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerPos(playerid, 347.8921, -2823.4805, 50.0307);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ResetPlayerWeapons(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][InMaze] = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerVirtualWorld(playerid, 30);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, sizeof(String), "%s {33CCFF}has gone to {00CC00}The Maze {33CCFF}to try finish it. Join him, type {FFFF00}/maze.", PN(playerid));
    SCMALL(ORANGE, String);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:maze2(playerid)
{
    new String[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][InMaze2] = 1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerPos(playerid, 2115.7485, 1578.7141, 1034.0094);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    ResetPlayerWeapons(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Announce(playerid, "~y~Teleported to~n~~r~The Maze 2", 3000, 4);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, sizeof(String), "%s {33CCFF}has gone to {00CC00}The Maze 2 {33CCFF}to try finish it. Join him, type {FFFF00}/maze2.", PN(playerid));
    SCMALL(ORANGE, String);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:nrgmaze(playerid)
{
	new String[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][VUP] = 0, PlayerInfo[playerid][JumpSize] = 0, VupTime[playerid] = 0, VUPLimit[playerid] = 10;
    PlayerInfo[playerid][SpeedSize] = 0, PlayerInfo[playerid][SpeedB] = 0, SpeedTime[playerid] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][NRGMaze] = 1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerVirtualWorld(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerPos(playerid, 3406.8091, 2199.7322, 51.5554);
    SetPlayerFacingAngle(playerid, 182.1990);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    ResetPlayerWeapons(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	Announce(playerid, "~y~Teleported to~n~~r~Nrg Maze", 3000, 4);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "%s {33CCFF}has gone to {00CC00}NRG Maze {33CCFF}to try finish it. Join him, type {FFFF00}/nrgmaze.", PN(playerid));
    SCMALL(ORANGE, String);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:leave(ESS)
{
    if(PlayerInfo[playerid][InDM] == 1 || PlayerInfo[playerid][InDuel] == 1  || PlayerInfo[playerid][InMG][0] == 1 ||
    PlayerInfo[playerid][InMG][2] == 1 || PlayerInfo[playerid][InMG][5] == 1 || PlayerInfo[playerid][InStunt] == 1 ||
    PlayerInfo[playerid][InDrift] == 1 || PlayerInfo[playerid][InStealCar] == 1 || PlayerInfo[playerid][InSkyClimb] == 1 ||
	PlayerInfo[playerid][InFallOut] == 1)
	{
	    Announce(playerid, "~w~~h~Leaving...", 1000, 3);
	    SetTimerEx("OnPlayerLeaveZone", 500, false, "i", playerid);
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    else if(PlayerInfo[playerid][InHNS] == 1)
    {
        if(ServerInfo[HNSStarter] == playerid)
        {
            SetOFFPonts();
	    	RemovePlayerFromHNS(playerid);
        	KillTimer(PlayerInfo[playerid][HNSTimer]);
        	KillTimer(ServerInfo[HNSTimerCFG][0]);
    		KillTimer(ServerInfo[HNSTimerCFG][1]);
    		ResetHNSDefault();
        	TogglePlayerControllable(playerid, true);
        	SCMALL(RED, "Hide'n Seek{00FBFF} s-a terminat. Foloseste{38AD21} /hns{00FBFF} pentru a incepe din nou!");
        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            foreach(new i: Player) if(PlayerInfo[i][InHNS] == 1)
            {
                RemovePlayerFromHNS(i);
				Announce(i, "~R~~H~Ai castigat~N~~Y~2 coins & $1000", 6000, 3);
				PlayerInfo[i][Coins] += 2;
				PlayerInfo[i][Money] += 1000;
				GivePlayerMoney(i, 1000);
            }
        }
        else RemovePlayerFromHNS(playerid);
    }
    else if(PlayerInfo[playerid][InRace] != 0)
    {
        if(Races[PlayerInfo[playerid][InRace]][JoinCount] == 1) StopRace(PlayerInfo[playerid][InRace]);
        Races[PlayerInfo[playerid][InRace]][JoinCount]--;
	   	DestroyVehicle(CreatedRaceVeh[PlayerInfo[playerid][InRace]][playerid]);
	   	DisablePlayerRaceCheckpoint(playerid);
	   	TogglePlayerControllable(playerid, true);
	   	SetCameraBehindPlayer(playerid);
	   	SetPlayerVirtualWorld(playerid, 0);
	   	Joined[PlayerInfo[playerid][InRace]][playerid] = 0;
	   	PlayerInfo[playerid][InRace] = 0;
	   	KillTimer(PlayerInfo[playerid][RaceTextdraw]);
	   	RaceTDHide(playerid);
    }
    else if(PlayerInfo[playerid][InSpringQuest][0] >= 1)
	{
	    PlayerInfo[playerid][InSpringQuest][0] = 0;
	    PlayerInfo[playerid][InSpringQuest][1] = 0;
	    PlayerInfo[playerid][InSpringQuest][2] = 0;
	    DisablePlayerCheckpoint(playerid);
	    DestroyVehicle(PlayerInfo[playerid][SpringQuestVehicle]);
	    for (new i = 0; i < 14; i++) { DestroyObject(PlayerInfo[playerid][QuestObjectInVehicle][i]); }
	}
	else if(PlayerInfo[playerid][InTargets] == 1)
	{
       new string[669];
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       new totalwon = PlayerInfo[playerid][TargetPoints]/4;
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   if(ServerInfo[TargetPlayers] == 1)
	   {
		PlayerInfo[playerid][InTargets] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		DestroyDynamicObject(ServerInfo[TargetObject]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ServerInfo[TargetPlayers]--;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(string, 669, "~Y~~H~You won~G~~H~~H~ +%d~Y~~H~ coins!", totalwon);
        Announce(playerid, string, 6000, 3);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        PlayerInfo[playerid][Coins] += totalwon;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        PlayerTextDrawHide(playerid, Targets1);
        PlayerTextDrawHide(playerid, Targets2);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        PlayerInfo[playerid][TargetPoints] = 0;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SpawnPlayer(playerid);
	   }
	   if(ServerInfo[TargetPlayers] >= 2)
	   {
		   	PlayerInfo[playerid][InTargets] = 0;
	       	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	       	format(string, 669, "~Y~~H~You won~G~~H~~H~ +%d~Y~~H~ coins!", totalwon);
	       	Announce(playerid, string, 6000, 3);
	       	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	       	PlayerInfo[playerid][Coins] += totalwon;
        	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	       	PlayerTextDrawHide(playerid, PlayerText:Targets1);
	       	PlayerTextDrawHide(playerid, PlayerText:Targets2);
	       	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	       	PlayerInfo[playerid][TargetPoints] = 0;
	       	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	       	SpawnPlayer(playerid);
	   }
	}
	else if(PlayerInfo[playerid][InSumo] == 1)
    {
		if(ServerInfo[SumoStarted] == 1)
		{
			PlayerInfo[playerid][InSumo] = 0, TogglePlayerControllable(playerid, true);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        ServerInfo[SumoPlayers]--;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        ServerInfo[SumoSeatOcuped][PlayerInfo[playerid][SumoSeat]] = 0;
	        PlayerInfo[playerid][SumoSeat] = 0;
	        if(SumoCar[playerid] != 0) DestroyVehicle(SumoCar[playerid]), SumoCar[playerid] = 0;
		   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		   	foreach(new i: Player)
		   	{
		   	    if(PlayerInfo[i][InSumo] == 1)
		   	    {
			   	    if(ServerInfo[SumoPlayers] <= 1)
			   	    {
			   	        CheckMinigames();
			   	    }
				}
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SpawnPlayer(playerid);
		}
		else if(ServerInfo[SumoStarted] == 0)
		{
		    PlayerInfo[playerid][InSumo] = 0, TogglePlayerControllable(playerid, true);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        ServerInfo[SumoPlayers]--;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(SumoCar[playerid] != 0) DestroyVehicle(SumoCar[playerid]), SumoCar[playerid] = 0;
		   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		   	SpawnPlayer(playerid);
		}
    }
    else if(PlayerInfo[playerid][InDerby] == 1)
    {
        PlayerInfo[playerid][InDerby] = 0;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        CountPlayersInDerby--;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        BloodringFull[PlayerInfo[playerid][PlayerInBloodring]] = 0;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	PlayerInfo[playerid][PlayerInBloodring] = -1;
	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	foreach(new i: Player)
	   	{
	   	    if(PlayerInfo[i][InDerby] == 1)
	   	    {
		   	    if(CountPlayersInDerby <= 1)
		   	    {
		   	        CheckMinigames();
		   	    }
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SpawnPlayer(playerid);
    }
	else if(PlayerInfo[playerid][InMaze] == 1)
    {
        PlayerInfo[playerid][InMaze] = 0, SpawnPlayer(playerid);
	}
	else if(PlayerInfo[playerid][NRGMaze] == 1)
    {
        PlayerInfo[playerid][NRGMaze] = 0, SpawnPlayer(playerid);
	}
	else if(PlayerInfo[playerid][InMaze2] == 1)
    {
        PlayerInfo[playerid][InMaze2] = 0, SpawnPlayer(playerid);
	}
	else if(PlayerInfo[playerid][InWar] == 1)
    {
        PlayerInfo[playerid][InWar] = 0, CountPlayersInWar--, SpawnPlayer(playerid);
	}
	else if(PlayerInfo[playerid][JobID] != 0)
	{
	    if(JobVehicle[playerid] != 0) DestroyVehicle(JobVehicle[playerid]);
	    if(JobTrailer[playerid] != 0) DestroyVehicle(JobTrailer[playerid]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    DisablePlayerCheckpoint(playerid), JobVehicle[playerid] = 0, JobTrailer[playerid] = 0, PlayerInfo[playerid][JobID] = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetPlayerSkin(playerid, 217), Info(playerid, "~r~~h~INFO: ~w~~h~Acum nu mai muncesti! Scrie /jobs pentru alte joburi!", 5000);
	}
	else if(PlayerInfo[playerid][InNascar] == 1)
	{
        CountPlayersInNascar--;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(CountPlayersInNascar == 0) CountPlayersInNascar = 0, ServerInfo[NascarStarted] = 0, NascarWinner = 0;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        DisablePlayerCheckpoint(playerid);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        DestroyVehicle(NascarVeh[playerid]);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][InNascar] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CPNascar[playerid] = -1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SpawnPlayer(playerid);
	}
	else if(PlayerInfo[playerid][InGarena] == 1)
	{
	    PlayerInfo[playerid][InGarena] = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SpawnPlayer(playerid);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetCameraBehindPlayer(playerid);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    KillTimer(PlayerInfo[playerid][GarenaTimer]);
	}
 	else if(PlayerInfo[playerid][InGangWar] == 1)
	{
	    new Player = PlayerInfo[playerid][gWarPlayer];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SpawnPlayer(playerid);
		SpawnPlayer(Player);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[playerid][InGangWar] = 0;
		PlayerInfo[Player][InGangWar] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		HidePlayerGangTextDraw(playerid);
		HidePlayerGangTextDraw(Player);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Announce(Player, "~G~~H~Gang war cancelled~N~~R~~H~The player has been left!", 3000, 3);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    ResetGwarVariables(playerid);
		ResetGwarVariables(Player);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		KillTimer(PlayerInfo[playerid][gWarUpdateTimer]);
		KillTimer(PlayerInfo[Player][gWarUpdateTimer]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	}
	else if(PlayerInfo[playerid][InSantaLand] == 1)
    {
       PlayerInfo[playerid][InSantaLand] = 0;
       PlayerInfo[playerid][InSantaToyCar] = 0;
       PlayerInfo[playerid][InSantaLottery] = 0;
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       SpawnPlayer(playerid);
       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++)
       {
         if(IsPlayerAttachedObjectSlotUsed(playerid, i))
         {
           RemovePlayerAttachedObject(playerid, i);
         }
       }
    }
    else if(PlayerInfo[playerid][ClanArena] == 1)
    {
        PlayerInfo[playerid][ClanArena] = 0, PlayerInfo[playerid][InDM] = 0;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   		SpawnPlayer(playerid);
    }
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function OnPlayerLeaveZone(playerid)
{
	if(PlayerInfo[playerid][InMG][0] == 1       || PlayerInfo[playerid][InMG][1] == 1       || PlayerInfo[playerid][InMG][2] == 1       ||
       PlayerInfo[playerid][InMG][5] == 1       || PlayerInfo[playerid][InDM] == 1          || PlayerInfo[playerid][InStunt] == 1       ||
	   PlayerInfo[playerid][JobStarted][1] == 1 || PlayerInfo[playerid][JobStarted][2] == 1 || PlayerInfo[playerid][JobStarted][3] == 1 ||
	   PlayerInfo[playerid][JobStarted][4] == 1 || PlayerInfo[playerid][JobStarted][5] == 1 || PlayerInfo[playerid][InDrift] == 1       ||
	   PlayerInfo[playerid][InDuel] == 1        || PlayerInfo[playerid][InStealCar] == 1    || PlayerInfo[playerid][InSkyClimb] == 1	||
	   PlayerInfo[playerid][InFallOut] == 1)
	{
	    SetPlayerWeather(playerid, 2), SetPlayerTime(playerid, 14, 0), SetPlayerVirtualWorld(playerid, 0), TogglePlayerControllable(playerid, 1), ResetPlayerWeapons(playerid);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[playerid][InDM]	    = 0;
	    PlayerInfo[playerid][InMinigun] = 0;
	    PlayerInfo[playerid][ClanArena] = 0;
	    PlayerInfo[playerid][InDE] = 0;
		PlayerInfo[playerid][InM4] = 0;
		PlayerInfo[playerid][InSniper] = 0;
		PlayerInfo[playerid][InMRF] = 0;
		PlayerInfo[playerid][InOH] = 0;
		PlayerInfo[playerid][InPRODM] = 0;
		PlayerInfo[playerid][InRocket] = 0;
		PlayerInfo[playerid][InGG] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerWorldBounds(playerid, WORLD_BOUND_DEFAULT);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		HideWhoMakesEvenetKills(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[playerid][MRFWeaponSelected] = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[playerid][InMG][0]   = 0;
	    PlayerInfo[playerid][InMG][2]   = 0;
	    PlayerInfo[playerid][InDrift]   = 0;
	    PlayerInfo[playerid][InMG][5]   = 0;
	    PlayerInfo[playerid][InLastCar] = 0;
	    PlayerInfo[playerid][InMG][1]   = 0;
	    PlayerInfo[playerid][InStunt]   = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[playerid][JobStarted][1] = 0, PlayerInfo[playerid][JobStarted][2] = 0;
	    PlayerInfo[playerid][JobStarted][3] = 0, PlayerInfo[playerid][JobStarted][4] = 0;
	    PlayerInfo[playerid][JobStarted][5] = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    DisablePlayerCheckpoint(playerid);  DisablePlayerRaceCheckpoint(playerid);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[playerid][InSkyClimb] == 1)
	    {
	        PlayerInfo[playerid][InSkyClimb] = 0;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        TextForSkyClimbHide(playerid);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SpawnPlayer(playerid);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    }
	    if(PlayerInfo[playerid][InFallOut] == 1)
    	{
            PlayerInfo[playerid][InFallOut] = 0;
            FalloutPlayers--;
    	}
	    if(PlayerInfo[playerid][InStealCar] == 1)
	    {
	        if(ServerInfo[StealCarOwner] == playerid)
	        {
	            for(new i; i < MAX_PLAYERS; i++)
	            {
	            	if(PlayerInfo[i][InStealCar] == 1)
				 	{
						DestroyVehicle(StealerCar[i]);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						DestroyVehicle(StealerCar[ServerInfo[StealCarOwner]]);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						PlayerInfo[i][InStealCar] = 0;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						PlayerInfo[playerid][InStealCar] = 0;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
	     				ServerInfo[StealcarStarted] = 0;
	     				//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						ServerInfo[StealCarOwner] = -1;
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						SpawnPlayer(i);
						//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						SCMALL(RED, "Steal the Car{00FBFF} s-a terminat. Foloseste{38AD21} /stealcar{00FBFF} pentru a incepe din nou!");
					}
	            }
	        }
	        else
	        {
	            PlayerInfo[playerid][InStealCar] = 0;
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            SpawnPlayer(playerid);
			}
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[playerid][InDuel] == 1 && playerid == DuelPlayerInvite)
        {
             Announce(DuelPlayerInvite, "~r~~h~YOU LOST THE DUEL!", 3000, 3);
             ResetPlayerWeapons(DuelPlayerInvite);
             SpawnPlayer(DuelPlayerInvite);
             PlayerInfo[DuelPlayerInvite][InDuel] = 0;
             mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `Duels` WHERE `Name` = '%s'", PN(DuelPlayerInvite));
             mysql_tquery(SQL, eQuery, "", "");
             //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             Announce(DuelInviter, "~g~~h~YOU WON THE DUEL!", 3000, 3);
             ResetPlayerWeapons(DuelInviter);
             SpawnPlayer(DuelInviter);
             PlayerInfo[DuelInviter][InDuel] = 0;
             mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `Duels` WHERE `Name` = '%s'", PN(DuelInviter));
             mysql_tquery(SQL, eQuery, "", "");
		}
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PlayerInfo[playerid][InDuel] == 1 && playerid == DuelInviter)
        {
             Announce(DuelInviter, "~r~~h~YOU LOST THE DUEL!", 3000, 3);
             ResetPlayerWeapons(DuelInviter);
             SpawnPlayer(DuelInviter);
             PlayerInfo[DuelInviter][InDuel] = 0;
             mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `Duels` WHERE `Name` = '%s'", PN(DuelInviter));
             mysql_tquery(SQL, eQuery, "", "");
             //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             Announce(DuelPlayerInvite, "~g~~h~YOU WON THE DUEL!", 3000, 3);
             ResetPlayerWeapons(DuelPlayerInvite);
             SpawnPlayer(DuelPlayerInvite);
             PlayerInfo[DuelPlayerInvite][InDuel] = 0;
             mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `Duels` WHERE `Name` = '%s'", PN(DuelPlayerInvite));
             mysql_tquery(SQL, eQuery, "", "");
		}
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     	SpawnPlayer(playerid);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Player Commands
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:credits(playerid)
{
	new StringA[1096], StringB[1096], StringC[1096], StringD[1096], s;
	new ManagerName[24], SupportName[24], thx[542], Intro[542]; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	mysql_query(SQL, "SELECT * FROM `Accounts` WHERE `RconType` = '3' ORDER BY `ID` DESC");
 	new rows; cache_get_row_count(rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i; i != rows; i++)
	{
	    CONTENT(i, "Name", ManagerName);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        format(StringB, sizeof(StringB), "%s\n%s", ManagerName, StringB);
 		format(StringA, sizeof(StringA), "%s", StringB);
	 	s++;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_query(SQL, "SELECT * FROM `Accounts` WHERE `RconType` = '2' ORDER BY `ID` DESC");
	cache_get_row_count(rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i; i != rows; i++)
	{
	    CONTENT(i, "Name", SupportName);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        format(StringD, sizeof(StringD), "%s\n%s", SupportName, StringD);
 		format(StringC, sizeof(StringC), "%s", StringD);
	 	s++;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(PlayerInfo[playerid][Language])
	{
	    case 1:
	    {
	        format(thx, 1000, "{FFFFFF}Iti multumim {FF0000}%s {FFFFFF}ca faci parte din comunitatea noastra!\n\
			{FFFFFF}Nu uita sa ne vizitezi si forumul pentru mai multe lucruri interesante!", PN(playerid));
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(Intro, 1000, "{FFFFFF}Te-ai intrebat vreodata cine a contribui la creerea acestei uimitoare comunitati?\n\
			{FFFFFF}Mai jos gasesti lista cu frumoasa noastra echipa ce a creat si administrat comunitatea!\n");
	    }
	    case 2:
	    {
	        format(thx, 1000, "{FFFFFF}Thank you {FF0000}%s {FFFFFF}for being a part of our community!\n\
			{FFFFFF}Don't forget to also visit our forum for more interesting things!", PN(playerid));
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(Intro, 1000, "{FFFFFF}Have you ever asked who contribuited to this amazing community?\n\
            {FFFFFF}Below is your wonderfull team who created and managed our beautifull community!\n");
	    }
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "%s\n\
									  {FF0000}Developer:\n\
									  {FFFFFF}Johnny & Ghost_\n\
									  \n\
									  {FF0000}Managers:\n\
									  {FFFFFF}%s\n\
									  {FF0000}Support:\n\
									  {FFFFFF}%s\n\
									  {FF0000}Server mapper:\n\
									  {FFFFFF}Kalashnicov.\n\
									  {FFFFFF}Ferg.\n\
									  \n\
									  %s", Intro, StringA, StringC, thx);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SPD(playerid, DIALOG_EMPTY, MSGBOX, "Credits of this server!", eString, "Close", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:rules(playerid)
{
	new string[2048];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Language] == 1)
	{
		strcat(string, "{FFFFFF}Pentru a juca pe server-ul "SERVER_NAME" {FFFFFF}trebuie sa respecti regulamentul!\n\
						{FFFFFF}In randurile de mai jos vei putea vedea regulile pe care trebuie sa le respecti indiferent ca esti: {FF0000}Donator, Admin, VIP, Player, s.a.m.d!\n\n");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		strcat(string, "{FF0000}Regulament - Ce nu ai voie sa faci pe server\n\
						{FFFFFF}1. Utilizarea programelor/modurilor care te ajuta sa fii superior altui jucator este stric interzisa!\n\
						{FFFFFF}2. Nu ai voie sa folosesti un limbaj vulgar in chat!\n\
						{FFFFFF}3. Nu ai voie sa faci spam in chat! Pentru anunturi foloseste /ad sau /vad!\n\
						{FFFFFF}4. Nu abuzati de buguri. Daca ai gasit un bug,raporteaza-l pe forum\n");
		strcat(string, "{FFFFFF}5. Nu faceti DM in zonele de spawn. (Ex: /aa, /bj2, /drag)!\n\n\
	                 	{FF0000}Acestea sunt doar cateva dintre regulile server-ului !\n\
						{FF0000}Viziteaza "SERVER_WEBSITE" pentru a vedea restul regulamentului!\n\
						{FF0000}Respecta acest regulament sau vei fi sanctionat!\n\n");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		strcat(string, "{FFFFFF}Aceste reguli trebuie respectate de toti jucatorii, indiferent de functie sau rank pe care o detin\n\
						{FFFFFF}in comunitate! De asemenea, daca incalci acest regulament o sa fi pedepsit in consecinta, fara exceptii!\n\
						{FFFFFF}Atentie: Daca consideri ca ai fost pedepsit pe nedrept poti face o reclamatie pe forumul nostru: "SERVER_WEBSITE"!\n");
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(PlayerInfo[playerid][Language] == 2)
	{
		strcat(string, "{FFFFFF}To play on server" SERVER_NAME "{FFFFFF}you must follow the rules!\n\
	 					{FFFFFF}In the following lines you will be able to see the rules that you have to respect regardless of whether you are: {FF0000}Donator, Admin, VIP, Player, s.a.m.d!\n\n");
		strcat(string, "{FF0000}Regulation - What you are not allowed to do on the server\n\
					    {FFFFFF}1. Using programs / modes that help you be superior to another player is strictly forbidden!\n\
				   	    {FFFFFF}2. You are not allowed to use vulgar language in chat!\n\
				  	    {FFFFFF}3. You are not allowed to chat in chat! For ads use / ad or / vad!\n\
					    {FFFFFF}4. Do not abuse the bugs. If you found a bug, report it to the forum\n");
		strcat(string, "{FFFFFF}5. Do not make DM in the spawn areas. (Ex: /aa, /bj2, /drag)!\n\n\
					    {FF0000}These are just some of the server rules!\n\
					    {FF0000}Visit "SERVER_WEBSITE" to see the rest of the rules!\n\
					    {FF0000}Respect this policy or be sanctioned!\n\n");
 		strcat(string, "{FFFFFF}These rules must be respected by all players, regardless of the function or rank they hold.\n\
						{FFFFFF}in the community! Also, if you violate this regulation it will be punished accordingly without exception!\n\
						{FFFFFF}Caution: If you think you have been wrongly punished, you can file a complaint with our forum: "SERVER_WEBSITE"!\n");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_EMPTY, MSGBOX, "Regulament", string, "Ok", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:godlist(playerid) return cmd_godp(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:godp(playerid)
{
    new Count, String[1024], String2[1024], String3[128];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player)
    {
        new String4[128];
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PlayerInfo[i][GodCar] == 1 && PlayerInfo[i][God] == 1) String4 = "{00FF22}God + GodCar Active";
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        else if(PlayerInfo[i][GodCar] == 1) String4 = "{00FF22}GodCar Active";
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        else if(PlayerInfo[i][God] == 1) String4 = "{00FF22}God Active";
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PlayerInfo[i][God] == 1 || PlayerInfo[i][GodCar] == 1)
        {
            format(String2, sizeof(String2), "{FF0000}%s\t%d\t%s\n%s", PN(i), i, String4, String2);
	        format(String, sizeof(String), "Name\tID\tStatus\n%s", String2);
	        Count++;
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	format(String3, sizeof(String3), "{FFFFFF}Players with /godmode (Online: {FF0000}%d{FFFFFF})", Count);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	if(Count == 0) return Announce(playerid, "~r~~h~No players with~n~~r~~h~godmode right now!~n~~n~~y~Try again later!", 5000, 3);
	else return SPD(playerid, DIALOG_EMPTY, HEADERS, String3, String, "Close", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:respect(ESS)
{
    new Player, rParam[3], Message[128];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "us[3]S(0)[128]", Player, rParam, Message)) return SendUsage(playerid, "/respect [ID/Name] [1/-1] [message] e.g /respect 2 1 thx bro");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(!IsPlayerConnected(Player) || Player == playerid) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if((gettime() - rldtime[playerid]) < 180) return SCM(playerid, RED, "Sorry, but you can give a point of respect only once in an 3 minutes!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else
	{
		if(strcmp(rParam[1], "1", false) == 0)
		{
		    PlayerInfo[Player][PosRespect] += 1;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[Player][respectMonth][0] ++;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    FormatMSG(Player, YELLOW, "You have recieved a respect point from %s(player: %d).", PN(playerid), playerid);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    FormatMSG(Player, YELLOW, "Message: %s", Message);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			FormatMSG(playerid, YELLOW, "You have sent a respect point to %s(player: %d)", PN(Player), Player);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			rldtime[playerid] = gettime();
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    else if(strcmp(rParam[1], "-1", false) == 0)
		{
  			PlayerInfo[Player][NegRespect] += 1;
  			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  			PlayerInfo[Player][respectMonth][1] ++;
  			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    FormatMSG(Player, YELLOW, "You have recieved a negative respect point from %s(player: %d).", PN(playerid), playerid);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    FormatMSG(Player, YELLOW, "Message: %s", Message);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			FormatMSG(playerid, YELLOW, "You have sent a respect point to %s(player: %d)", PN(Player), Player);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			rldtime[playerid] = gettime();
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:w(ESS) return cmd_whisper(playerid, params);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:whisper(ESS)
{
	if(sscanf(params, "s[128]", params[0])) return SendUsage(playerid, "/whisper [Text]");
	return SetPlayerChatBubble(playerid, params[0], 0xFFFFFFFF, 70.0, 5000), 1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:news(playerid)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(String, "Select your language.\n");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, D_NEWS, MSGBOX, "News", String, "Romana", "English");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:ghostrider(playerid)
{
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 463) return  SendError(playerid,"{FF0000}Trebuie sa fi in Freeway (/car 463) pentru a folosit GhostRider");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendError(playerid,"{FF0000}Trebuie sa fi in Freeway (/car 463) pentru a putea functiona GhostRider");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(GhostRiderObj[playerid][0]) return GhostRiderDeleteObjects(playerid), Announce(playerid, "~r~GhostRider ~w~a fost dezactivat !", 3000, 4);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GhostRiderObj[playerid][0] = CreateDynamicObject(18689, 0.0, 0.0, 0.0, 0.0, 0.0, 256.0);
    GhostRiderObj[playerid][1] = CreateDynamicObject(18689, 0.0, 0.0, 0.0, 0.0, 0.0, 256.0);
    GhostRiderObj[playerid][2] = CreateObject(18693, 0.0, 0.0, 0.0, 0.0, 0.0, 256.0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AttachDynamicObjectToVehicle(GhostRiderObj[playerid][0], GetPlayerVehicleID(playerid), 0.0, 0.6, -1.7, 0.0, 0.0, 0.0);
    AttachDynamicObjectToVehicle(GhostRiderObj[playerid][1], GetPlayerVehicleID(playerid), 0.0, -1.4, -1.7, 0.0, 0.0, 0.0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AttachObjectToPlayer(GhostRiderObj[playerid][2], playerid, 0.0, -0.01, -0.9, 0.0, 0.0, 0.0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ChangeVehicleColor(GetPlayerVehicleID(playerid), 0, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~r~GhostRider ~w~a fost activat!", 3000, 4);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:pm(ESS)
{
    new Str[129], Str2[128], Str3[129];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][hours] < 1) return SendError(playerid, "You don't have a hour played on server to use /PM!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if((gettime() - pmtime[playerid]) < 60) return SendError(playerid, "Please wait 1 minute to send another message!");
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "u", PlayerInfo[playerid][PMID])) return SendUsage(playerid, "/pm [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerConnected(PlayerInfo[playerid][PMID]) && PlayerInfo[playerid][PMID] != INVALID_PLAYER_ID)
	{
		if(PlayerInfo[playerid][PMID] == playerid) return Error(playerid, 3);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][Muted] == 1) return Announce(playerid, "~w~~h~You are ~r~~h~muted~w~~h~!", 3000, 4), false;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[PlayerInfo[playerid][PMID]][Ignore_PM] == 1) return SendError(playerid, "You cannot send this player pms (/Ignore PM enabled)!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[PlayerInfo[playerid][PMID]][LoggedIn] == 0) return SendError(playerid, "Player are not logged in account to send PM!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        format(Str2, sizeof(Str2), "{FFFF33}Textul pe care il trimiti trebuie sa aiba mai mult de 1 caracter.\n", PN(playerid));
		format(Str2, sizeof(Str2), "{00CC00}Scrie mai jos mesajul pe care vrei sa il trimiti:");
		strcat(Str, Str2, sizeof(Str));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(Str2, sizeof(Str2), "{FFFFFF}Mesaj privat catre {FF0000}%s(%d)", PN(PlayerInfo[playerid][PMID]), PlayerInfo[playerid][PMID]);
		strcat(Str3, Str2, sizeof(Str3));
	 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 		return pmtime[playerid] = gettime(), SPD(playerid, DIALOG_PM, INPUT, Str3, Str, "Send", "Close");
	}
	else return Error(playerid, 3);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:a(ESS)
{
	return cmd_anim(playerid, params);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:anim(ESS)
{
	if(isnull(params)) return SendUsage(playerid, "/anim [List/Anim]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(params, "list", true) == 0)
	{
		new Str[2045]; Str[0] = EOS;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		strcat(Str, "{FF9900}Animations Names:\n", 2480);
		strcat(Str, "{FFFFFF}Wave{FFFFFF}, {FFFFFF}Wank{FFFFFF}, {FFFFFF}Fall{FFFFFF}, {FFFFFF}Fall2{FFFFFF}, {FFFFFF}Relax{FFFFFF}, {FFFFFF}Hup{FFFFFF}, {FFFFFF}Bomb{FFFFFF}, {FFFFFF}Rob{FFFFFF}, {FFFFFF}Taichi{FFFFFF}, {FFFFFF}Spank{FFFFFF},{FFFFFF}CJ{FFFFFF},\n", 2480);
		strcat(Str, "{FFFFFF}Sick{FFFFFF}, {FFFFFF}Talk{FFFFFF}, {FFFFFF}Kiss{FFFFFF}, {FFFFFF}Sit{FFFFFF}, {FFFFFF}FuckU{FFFFFF}, {FFFFFF}Coc{FFFFFF}, {FFFFFF}Rocky{FFFFFF}, {FFFFFF}Smoke{FFFFFF}, {FFFFFF}Beach{FFFFFF}, {FFFFFF}Look{FFFFFF}, {FFFFFF}Gro{FFFFFF},\n", 2480);
		strcat(Str, "{FFFFFF}Circ{FFFFFF}, {FFFFFF}Med{FFFFFF}, {FFFFFF}Chat{FFFFFF}, {FFFFFF}Die{FFFFFF}, {FFFFFF}Slap{FFFFFF}, {FFFFFF}Roll{FFFFFF}, {FFFFFF}Glitch{FFFFFF}, {FFFFFF}Fire{FFFFFF}, {FFFFFF}Vomit{FFFFFF}, {FFFFFF}Drunk{FFFFFF}, {FFFFFF}Lbp{FFFFFF},\n", 2480);
		strcat(Str, "{FFFFFF}GetIn{FFFFFF}, {FFFFFF}Pee{FFFFFF}, {FFFFFF}Piss{FFFFFF}, {FFFFFF}Kick{FFFFFF}, {FFFFFF}Cell{FFFFFF}, {FFFFFF}Phone{FFFFFF}, {FFFFFF}Laugh{FFFFFF}, {FFFFFF}Eat{FFFFFF}, {FFFFFF}Inj{FFFFFF}, {FFFFFF}SlapAss{FFFFFF}, {FFFFFF}Deal{FFFFFF},\n", 2480);
		strcat(Str, "{FFFFFF}Lay{FFFFFF}, {FFFFFF}Arrest{FFFFFF}, {FFFFFF}ScaRED{FFFFFF}, {FFFFFF}BJ{FFFFFF}, {FFFFFF}BJ2{FFFFFF}, {FFFFFF}BJ3{FFFFFF}, {FFFFFF}Swat{FFFFFF}, {FFFFFF}Swat2{FFFFFF}, {FFFFFF}Swat3{FFFFFF}, {FFFFFF}Swat4{FFFFFF}, {FFFFFF}Swat5{FFFFFF},\n", 2480);
		strcat(Str, "{FFFFFF}Swat6{FFFFFF}, {FFFFFF}Shout{FFFFFF}, {FFFFFF}Strip{FFFFFF}, {FFFFFF}Strip2{FFFFFF}, {FFFFFF}Strip3{FFFFFF}, {FFFFFF}Strip4{FFFFFF}, {FFFFFF}Strip5{FFFFFF}, {FFFFFF}BaseBall{FFFFFF}, {FFFFFF}BaseBall2{FFFFFF}\n\
		             {FFFFFF}Dealer{FFFFFF}, {FFFFFF}Dealer2.\n\n", 2480);
		strcat(Str, "{FF9900}USAGE: {FFFFFF}/anim [Name] {FF0000}| {FFFFFF}/a [Name]\n", 2480);
		strcat(Str, "{FFFFFF}To stop an animations use {FF0000}/anim stop {FFFFFF}| {FF0000}/a stop{FFFFFF}.\n", 2480);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FFFFFF}Animations - Use: {FF0000}/anim | /a", Str, "Close", "");
	}
	else if(strcmp(params, "wave", true)      == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"ON_LOOKERS","wave_loop",4.0,1,0,0,0,0);
	else if(strcmp(params, "wank", true)      == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"PAULNMAC","wank_loop",1.800001,1,0,0,1,600);
	else if(strcmp(params, "fall", true)      == 0) return PlayAnim(playerid,"PED",   "KO_skid_front",4.1,0,1,1,1,0);
	else if(strcmp(params, "fall2", true)     == 0) return PlayAnim(playerid,"PED",   "FLOOR_hit_f",4.0,1,0,0,0,0);
	else if(strcmp(params, "relax", true)     == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
	else if(strcmp(params, "hup", true)       == 0  && GetPlayerState(playerid) == 1) SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
	else if(strcmp(params, "bomb", true)      == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
	else if(strcmp(params, "rob", true)       == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0);
	else if(strcmp(params, "taichi", true)    == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);
	else if(strcmp(params, "spank", true)     == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);
	else if(strcmp(params, "sick", true)      == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
	else if(strcmp(params, "talk", true)      == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"PED","IDLE_CHAT",1.800001, 1, 1, 1, 1, 13000);
	else if(strcmp(params, "kiss", true)      == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"KISSING", "Grlfrd_Kiss_02", 1.800001, 1, 0, 0, 1, 600);
	else if(strcmp(params, "sit", true)       == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"INT_OFFICE", "OFF_Sit_BoRED_Loop", 1.800001, 1, 0, 0, 1, 600);
	else if(strcmp(params, "fucku", true)     == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"ped", "fucku", 4.1, 0, 1, 1, 1, 1);
	else if(strcmp(params, "coc", true)       == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"CRACK", "crckdeth2", 1.800001, 1, 0, 0, 1, 600);
	else if(strcmp(params, "rocky", true)     == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"GYMNASIUM", "GYMshadowbox", 1.800001, 1, 0, 0, 1, 600);
	else if(strcmp(params, "smoke", true)     == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
	else if(strcmp(params, "beach", true)     == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"BEACH","SitnWait_loop_W",4.1,0,1,1,1,1);
	else if(strcmp(params, "look", true)      == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"ON_LOOKERS","lkup_in",4.1,0,1,1,1,1);
	else if(strcmp(params, "circ", true)      == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"CHAINSAW","CSAW_Hit_2",4.1,0,1,1,1,1);
	else if(strcmp(params, "med", true)       == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,1,1,1,1);
	else if(strcmp(params, "chat", true)      == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
	else if(strcmp(params, "die", true)       == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"PED","BIKE_fallR",4.1,0,1,1,1,1);
	else if(strcmp(params, "slap", true)      == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"PED","BIKE_elbowL",4.1,0,1,1,1,1);
	else if(strcmp(params, "roll", true)      == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"PED","Crouch_Roll_L",4.1,0,1,1,1,1);
	else if(strcmp(params, "glitch", true)    == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"TATTOOS","TAT_Sit_Out_O",4.1,0,1,1,1,1);
	else if(strcmp(params, "fire", true)      == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"SILENCED","SilenceCrouchfire",4.1,0,1,1,1,1);
	else if(strcmp(params, "vomit", true)     == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
	else if(strcmp(params, "drunk", true)     == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"PED","WALK_DRUNK",4.1,0,1,1,1,1);
	else if(strcmp(params, "getin", true)     == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"NEVADA","NEVADA_getin",4.1,0,1,1,1,1);
	else if(strcmp(params, "pee", true)       == 0  && GetPlayerState(playerid) == 1) SetPlayerSpecialAction(playerid, 68);
	else if(strcmp(params, "piss", true)      == 0  && GetPlayerState(playerid) == 1) SetPlayerSpecialAction(playerid, 68);
	else if(strcmp(params, "kick", true)      == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"FIGHT_E","Hit_fightkick",4.1,0,1,1,1,1);
	else if(strcmp(params, "cell", true)      == 0  && GetPlayerState(playerid) == 1) SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
	else if(strcmp(params, "phone", true)     == 0  && GetPlayerState(playerid) == 1) SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
	else if(strcmp(params, "laugh", true)     == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0);
	else if(strcmp(params, "eat", true)       == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
	else if(strcmp(params, "inj", true)       == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid, "SWEET", "Sweet_injuREDloop", 4.0, 1, 0, 0, 0, 0);
	else if(strcmp(params, "slapass", true)   == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);
	else if(strcmp(params, "lay", true)       == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
	else if(strcmp(params, "arrest", true)    == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1);
	else if(strcmp(params, "scaRED", true)    == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0);
	else if(strcmp(params, "cj", true)        == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"PED","CAR_jackedLHS",4.0,0,1,1,1,0);
	else if(strcmp(params, "bj", true)        == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_END_W",4.0,0,1,1,1,0);
	else if(strcmp(params, "bj2", true)       == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_END_P",4.0,0,1,1,1,0);
	else if(strcmp(params, "bj3", true)       == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_LOOP_W",4.0,0,1,1,1,0);
	else if(strcmp(params, "swat", true)      == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"SWAT","gnstwall_injurd",4.0,0,1,1,1,0);
	else if(strcmp(params, "swat2", true)     == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"SWAT","JMP_Wall1m_180",4.0,0,1,1,1,0);
	else if(strcmp(params, "swat3", true)     == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"SWAT","Rail_fall",4.0,0,1,1,1,0);
	else if(strcmp(params, "swat4", true)     == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"SWAT","Rail_fall_crawl",4.0,0,1,1,1,0);
	else if(strcmp(params, "swat5", true)     == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"SWAT","swt_breach_01",4.0,0,1,1,1,0);
	else if(strcmp(params, "swat6", true)     == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"SWAT","swt_breach_02",4.0,0,1,1,1,0);
	else if(strcmp(params, "strip", true)     == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"STRIP","strip_A",4.0,0,1,1,1,0);
	else if(strcmp(params, "strip2", true)    == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"STRIP","strip_B",4.0,0,1,1,1,0);
	else if(strcmp(params, "strip3", true)    == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"STRIP","strip_C",4.0,0,1,1,1,0);
	else if(strcmp(params, "strip4", true)    == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"STRIP","strip_D",4.0,0,1,1,1,0);
	else if(strcmp(params, "strip5", true)    == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"STRIP","strip_E",4.0,0,1,1,1,0);
	else if(strcmp(params, "baseball", true)  == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"BASEBALL","Bat_1",4.0,0,1,1,1,0);
	else if(strcmp(params, "baseball2", true) == 0  && GetPlayerState(playerid) == 1) ApplyAnimation(playerid,"BASEBALL","Bat_2",4.0,0,1,1,1,0);
	else if(strcmp(params, "gro", true) 	  == 0  && GetPlayerState(playerid) == 1) PlayAnim(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);
	else if(strcmp(params, "shout", true)     == 0  && GetPlayerState(playerid) == 1) PlayAnim(playerid,"RIOT","RIOT_shout",4.0,1,0,0,0,0);
	else if(strcmp(params, "lbp", true)       == 0  && GetPlayerState(playerid) == 1) PlayAnim(playerid,"GANGS","shake_carSH",4.0,0,0,0,0,0);
	else if(strcmp(params, "deal", true)      == 0  && GetPlayerState(playerid) == 1) PlayAnim(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0);
	else if(strcmp(params, "dealer", true)    == 0  && GetPlayerState(playerid) == 1) PlayAnim(playerid, "DEALER", "DEALER_IDLE", 4.0, 0, 1, 1, 1, -1);
	else if(strcmp(params, "dealer2", true)   == 0  && GetPlayerState(playerid) == 1) PlayAnim(playerid, "DEALER", "DEALER_IDLE_01", 4.0, 0, 1, 1, 1, -1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(strcmp(params, "stop", true) == 0) return ClearAnimations(playerid);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:skill(ESS)
{
	if(sscanf(params, "i", params[0])) return SendUsage(playerid, "/skill [Skill Level(1-999)]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[0] < 0 || params[0] > 999) return SendUsage(playerid, "/skill [Skill Level(1-999)]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, params[0]);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, params[0]);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, params[0]);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, params[0]);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, params[0]);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, params[0]);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, params[0]);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, params[0]);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, params[0]);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, params[0]);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, params[0]);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:np(ESS)
{
    new NP[32], Float:x, Float:y, Float:z, gpvi;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "s[32]", NP)) return SendUsage(playerid, "/np [Text]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else
	{
		FormatMSG(playerid, YELLOW, "Vehicle Number Plate Successfully changed to {FF0000}%s", NP);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GetPlayerPos(playerid, x, y, z),				gpvi = GetPlayerVehicleID(playerid);
		format(NP, 32, "%s", NP),						SetVehicleNumberPlate(gpvi, NP);
		PutPlayerInVehicle(playerid, gpvi, 0),			SetVehicleToRespawn(gpvi);
		PutPlayerInVehicle(playerid, gpvi, 0),			SetVehiclePos(gpvi, x, y, z),
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][pCar] = gpvi;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][pCar] != -1 && !IsPlayerInAnyVehicle(playerid))
	    EraseVeh(PlayerInfo[playerid][pCar]);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:ro(ESS)
{
	PlayerInfo[playerid][Language] = 1, RandomAds(), Announce(playerid, "~w~~h~Limba~n~~g~~h~Romana~w~~h~!", 4000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < 3; i ++) PlayerTextDrawHide(playerid, Car_Textdraw[i]);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:eng(ESS)
{
    PlayerInfo[playerid][Language] = 2, RandomAds(), Announce(playerid, "~w~~h~Language~n~~g~~h~English~w~~h~!", 4000, 3);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < 3; i ++) PlayerTextDrawHide(playerid, Car_Textdraw[i]);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:lockcar(ESS)
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You need to be in a vehicle to lock the doors");
    return LockVehicle(playerid, GetPlayerVehicleID(playerid)), Announce(playerid, "~w~~h~Vehicle ~g~~h~Locked~w~~h~!", 3000, 3);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:unlockcar(ESS)
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You need to be in a vehicle to lock the doors");
    return UnlockVehicle(GetPlayerVehicleID(playerid)), Announce(playerid, "~w~~h~Vehicle ~r~~h~UnLocked~w~~h~!", 3000, 3);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:carcolor(ESS)
{
	if(sscanf(params, "D(-1)D(-1)", params[0], params[1])) return SendUsage(playerid, "/carcolor [Color1] [Color2]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You are not in a vehicle!");
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(params[0] > 127) return SendError(playerid, "Color (128 - 255) is available for Personal Vehicles (Premium)");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(params[1] > 127) return SendError(playerid, "Color (128 - 255) is available for Personal Vehicles (Premium)");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[0] == -1) params[0] = random(127);
	if(params[1] == -1) params[1] = random(127);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    ChangeVehicleColor(GetPlayerVehicleID(playerid), params[0], params[1]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	FormatMSG(playerid, CARCOLOR, "You have changed the colour of %s to %d,%d", vNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400], params[0], params[1]);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:back(ESS)
{
    if(PlayerInfo[playerid][AFKBRB] == 1 || PlayerInfo[playerid][AFKBRB] == 2)
    {
		TogglePlayerControllable(playerid, 1); eString[0] = EOS;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		AFKTDHide(playerid);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetCameraBehindPlayer(playerid), SetPlayerVirtualWorld(playerid, 0); PlayerInfo[playerid][AFKBRB] = 0; SpawnPlayer(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		foreach(Player, i) format(eString, sizeof(eString), "~n~~n~~n~~n~~n~~n~~n~~n~~r~~h~ %s ~w~~h~is now ~g~~h~BACK.", PN(playerid)), Announce(i, eString, 4000, 3);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:name(ESS) return SendError(playerid, "This command has been disabled temporarly!");
/*{
    new Str3[MAX_PLAYER_NAME]; eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(IsPlayerInAnyDynamicArea(playerid)) return Error(playerid, 9);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][pVIP] >= 2)
    {
		if(sscanf(params, "s[24]", Str3)) return SendUsage(playerid, "/name [New Nick]");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        else
        {
            SavePlayer(playerid);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            UpdatePlayer(PN(playerid), "Status", 0);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `TimePlayed` = 'Disconnected' WHERE `Name` = '%s'", PN(playerid));
			mysql_tquery(SQL, eQuery, "", "");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetPlayerName(playerid, Str3), format(eString, sizeof(eString), "You have changed your name to: {FF0000}%s", Str3), SCM(playerid, LIME, eString);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            PlayerPlaySound(playerid, 1063,0.0,0.0,0.0);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			OnPlayerConnect(playerid);
			return true;
		}
     }
	 else return Error(playerid, 2);
}*/
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:stopdrunk(ESS) return SetPlayerDrunkLevel(playerid, 0);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:bere(ESS) return SetPlayerSpecialAction(playerid, 20), SCM(playerid, ~1, "Drink, and drink and drink, see you not looking to drive cars. /StopDrunk to stop.");
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:para(playerid) return GivePlayerWeapon(playerid, 46, 1);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:fstyles(ESS) return SPD(playerid, DIALOG_STYLE_FIGHT, LIST, "Fighting Styles", "{0072FF}Elbow\n{0072FF}Boxing\n{FFFF00}Grabkick\n{FFFF00}Kneehead\n{FF0000}Kungfu\n{FF0000}Normal", "Select", "Cancel");
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:afk(ESS)
{
	eString[0] = EOS; SetPlayerCameraPos(playerid, 320.2231, -1874.7312, 63.6276), SetPlayerCameraLookAt(playerid, 319.2188, -1874.7430, 63.6075);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AFKTDShow(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player) if(PlayerInfo[i][HideTDS] != 1) format(eString, sizeof(eString), "~n~~n~~n~~n~~n~~n~~n~~n~~r~~h~ %s ~w~~h~is now ~g~~h~AFK.", PN(playerid)), Announce(i, eString, 4000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SetPlayerVirtualWorld(playerid, 80), TogglePlayerControllable(playerid, 0), PlayerInfo[playerid][AFKBRB] = 1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:brb(ESS)
{
    eString[0] = EOS; SetPlayerCameraPos(playerid, 320.2231, -1874.7312, 63.6276), SetPlayerCameraLookAt(playerid, 319.2188, -1874.7430, 63.6075);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AFKTDShow(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player) if(PlayerInfo[i][HideTDS] != 1) format(eString, sizeof(eString), "~n~~n~~n~~n~~n~~n~~n~~n~~r~~h~ %s ~w~~h~is now ~g~~h~BRB.", PN(playerid)), Announce(i, eString, 4000, 3);
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	return SetPlayerVirtualWorld(playerid, 80), TogglePlayerControllable(playerid, 0), PlayerInfo[playerid][AFKBRB] = 2;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:s(playerid)
{
	if(IsPlayerInAnyDynamicArea(playerid)) return Error(playerid, 9);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_CLANS; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 100.0, Clan[i][ClanPos][0], Clan[i][ClanPos][1], Clan[i][ClanPos][2])) return SendError(playerid, "You cannot use this command in clan zone!");
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid, PlayerInfo[playerid][SPosX][1], PlayerInfo[playerid][SPosY][1], PlayerInfo[playerid][SPosZ][1]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return MSGLang(playerid, YELLOW, "Position 1 saved. Use: /L to return at it!", "Position 1 saved. Use: /L to return at it!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:l(playerid)
{
    if(PlayerInfo[playerid][SPosX][1] != 0 && PlayerInfo[playerid][SPosY][1] != 0 && PlayerInfo[playerid][SPosZ][1] != 0)
	{
		if(!IsPlayerInAnyVehicle(playerid)) SetPlayerPos(playerid, PlayerInfo[playerid][SPosX][1], PlayerInfo[playerid][SPosY][1], PlayerInfo[playerid][SPosZ][1]), SetPlayerVirtualWorld(playerid, 0), SetPlayerInterior(playerid, 0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		else SetVehiclePos(GetPlayerVehicleID(playerid), PlayerInfo[playerid][SPosX][1], PlayerInfo[playerid][SPosY][1], PlayerInfo[playerid][SPosZ][1]), LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0), SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][InDrift] == 1) PlayerInfo[playerid][InDrift] = 0, DisablePlayerRaceCheckpoint(playerid), Announce(playerid, "~w~~h~Drift ~r~~h~failed", 3000, 4);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][InJJ] = 0, PlayerInfo[playerid][InRec] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		return MSGLang(playerid, YELLOW, "Position 1 loaded. Use: /S to change it!", "Position 1 loaded. Use: /S to change it!");
    }
	else return SendError(playerid, "You didn't saved any position!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:hm(ESS)
{
	if(!IsPlayerInAnyDynamicArea(playerid))
	{
	    for(new i = 0; i < MAX_SPAWN_ZONES; i++)
		if(IsPlayerInRangeOfPoint(playerid, 80.0, SpawnZones[i][sPosX], SpawnZones[i][sPosY], SpawnZones[i][sPosZ])) return GiveHM(playerid);
		else return Announce(playerid, "~R~~H~You are not in a~N~~B~~H~spawn zone~N~~R~~H~to use this command!", 6000, 3);
	}
	else return Announce(playerid, "~R~~H~You are not in a~N~~B~~H~spawn zone~N~~R~~H~to use this command!", 6000, 3); return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:hidelogo(ESS)
{
    for(new i = 0; i < 4; i++) TextDrawHideForPlayer(playerid, Logo[i]);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:hidetds(ESS)
{
    switch(PlayerInfo[playerid][HideTDS])
    {
        case 0:
        {
		    TextDrawHideForPlayer(playerid, TeleTD), PlayerInfo[playerid][HideTDS] = 1;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    switch(PlayerInfo[playerid][Language])
			{
				case 1: PlayerTextDrawHide(playerid, Random_TD_Texts_RO);
				case 2: PlayerTextDrawHide(playerid, Random_TD_Texts);
			}
		}
		case 1: TextDrawShowForPlayer(playerid, TeleTD), PlayerTextDrawShow(playerid, TD_ADs), PlayerInfo[playerid][HideTDS] = 0;
	}
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:jetpack(ESS)
{
	return SetPlayerSpecialAction(playerid, 2), Announce(playerid, "~w~~h~JetPack ~g~~h~Spawned~w~~h~!", 3000, 4);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vup(ESS)
{
    eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    strcat(eString, "{0066FF}Type 1\n");
    strcat(eString, "{0066FF}Type 2\n");
    strcat(eString, "{0066FF}Type 3 ({FFCC00}VIP Only{0066FF})\n");
    strcat(eString, "{0066FF}Type 4 ({FFCC00}Vip Gold only{0066FF})\n");
    strcat(eString, "{FF0000}Deactivate\n");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SPD(playerid, DIALOG_VUP2, LIST, "{00CC00}Vehicle UP", eString, "Select", "Close");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:kill(playerid) return SetPlayerHealth(playerid, 0);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:nrg(ESS)
{
    if(IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You already have a vehicle!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CarSpawner(playerid, 522), PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CMD(playerid, CMD[])
{
    CallRemoteFunction("OnPlayerCommandText", "is", playerid, CMD);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:n(playerid) return CMD(playerid, "/help");
CMD:ajutor(playerid) return CMD(playerid, "/help");
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:help(ESS)
{
	if(sscanf(params, "s[128]", params[0]))
	{
	    StrH[0] = '\0';
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][Language] == 1)
		{
			strcat(StrH, "Name\tInformation\n\
						{FFA500}About Server\t{FFFFFF}Get information about {FF0000}Server{FFCC00}!\n\
						{FFA500}Server Commands\t{FFFFFF}A list of all commands!\n\
						{FFA500}Am nevoie de ajutor\t{FFFFFF}O sa trimiti un mesaj adminilor");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SPD(playerid, DIALOG_HELP_SELECTION, HEADERS, "Help", StrH, "Select", "Close");
		}
		else if(PlayerInfo[playerid][Language] == 2)
		{
			strcat(StrH, "Nume\tInformatie\n\
						{FFA500}Despre server\t{FFFFFF}O lista cu informatiile despre {FF0000}Server{FFCC00}!\n\
						{FFA500}Comenzile serverului\t{FFFFFF}Comenzile disponibile pe server.\n\
						{FFA500}Am nevoie de ajutor\t{FFFFFF}O sa trimiti un mesaj adminilor");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SPD(playerid, DIALOG_HELP_SELECTION, HEADERS, "Ajutor", StrH, "Select", "Close");
		}
		return true;
	}
	else InputHelp(playerid, params[0]);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:aboutserver(playerid)
{
	StrH[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Language] == 1)
	{
		strcat(StrH, ""SERVER_NAME" {FFFFFF}este un server de GTA San Andreas MultiPlayer car imbina mai multe moduri de joc pentru!\n");
		strcat(StrH, "{FFFFFF}a iti oferi posibilitatea de a te distra la maxim in timpul liber precum si posibilitatea de a cunoaste oameni\n");
		strcat(StrH, "{FFFFFF}noi care iti pot deveni prieteni.\n\n");
		strcat(StrH, "{FFFFFF}Serverul dispune de peste 200 de comenzi tip teleport care te ajuta sa ajungi rapid dintr-un loc in altul, de\n");
		strcat(StrH, "{FFFFFF}peste 20.000 obiecte care formeaza peste 100 de harti de stunt, deathmeach, parkour, race unde iti poti antrena\n");
		strcat(StrH, "{FFFFFF}skillurile si harti fun unde te poti distra impreuna cu prietenii, avem un sistem de clanuri cu diferite comenzi\n");
		strcat(StrH, "{FFFFFF}care permit jucatorului sa aiba propriul clan, un sistem de clan-uri foarte avansat, foarte multe statistici pe\n");
		strcat(StrH, "{FFFFFF}care jucatorul trebuie sa le mareasca pentru a fi cat mai sus in top-ul jucatorilor serverului si multe alte lucruri\n");
		strcat(StrH, "{FFFFFF}pe care urmeaza sa le descoperi pe parcursul jocului.\n\n");
		strcat(StrH, "{FF0000}Comenzi ajutatoare:\n");
		strcat(StrH, "{00FF0D}/REGULAMENT {FFFFFF}- Regulile serverului.\n");
		strcat(StrH, "{00FF0D}/COMENZI {FFFFFF}- Lista cu majoritatea comenzilor de pe server.\n");
		strcat(StrH, "{00FF0D}/TELEPORTARI {FFFFFF}- Lista cu toate teleportarile de pe server.\n");
		strcat(StrH, "{00FF0D}/CREATORI {FFFFFF}- Afla cine a contribuit la crearea serverului.\n");
		strcat(StrH, "{00FF0D}/REPORT [ID] [REASON] {FFFFFF}- Raporteaza un jucator care nu joca corect.\n");
		strcat(StrH, "\n");
		strcat(StrH, "{FFFFFF}Foloseste comanda /help {FF0000}mesaj {FFFFFF}pentru a pune o intrebare adminilor!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_EMPTY, MSGBOX, "Ajutor", StrH, "Inchide", "");
	}
	else if(PlayerInfo[playerid][Language] == 2)
	{
	    strcat(StrH, ""SERVER_NAME" {FFFFFF}is a GTA San Andreas MultiPlayer server that combines a few game modes to\n");
		strcat(StrH, "{FFFFFF}offer you the possibility to have fun at maximum in your free time and to help you to meet new people\n");
		strcat(StrH, "{FFFFFF}that can become your friends.\n\n");
		strcat(StrH, "{FFFFFF}The server has over 200 teleport commands to help you go quickly from one place to another place,\n");
		strcat(StrH, "{FFFFFF}over 20.000 objects in over 100 stunt, deathmeach, parkour, race maps where you can train your\n");
		strcat(StrH, "{FFFFFF}skills, many fun maps where you can have fun with your friends, We have a system of clans with different commands\n");
		strcat(StrH, "{FFFFFF}which allows the player to have his own clan, a clan system highly advanced, many statistics\n");
		strcat(StrH, "{FFFFFF}that the player has to increase in oreder to be above the top of the server players and many other things\n");
		strcat(StrH, "{FFFFFF}which you will find them in the game.\n\n");
		strcat(StrH, "{FF0000}Helpful commands\n");
		strcat(StrH, "{00FF0D}/RULES {FFFFFF}- Server rules.\n");
		strcat(StrH, "{00FF0D}/CMDS {FFFFFF}- List with server commands.\n");
		strcat(StrH, "{00FF0D}/TELES {FFFFFF}- List with all teleports from the server.\n");
		strcat(StrH, "{00FF0D}/CREDITS {FFFFFF}- Find out who has contributed to the server.\n");
		strcat(StrH, "{00FF0D}/REPORT [ID] [REASON] {FFFFFF}- Report a player not playing correctly.\n");
		strcat(StrH, "\n");
		strcat(StrH, "{FFFFFF}Type /help {FF0000}text {FFFFFF}to send your help request to admins!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_EMPTY, MSGBOX, "Help", StrH, "Close", "");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:day(ESS) return SetPlayerTime(playerid, 14, 0);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:zi(ESS) return cmd_day(playerid, params);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:night(ESS) return SetPlayerTime(playerid, 0, 0);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:noapte(ESS) return cmd_night(playerid, params);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:reguli(ESS) return cmd_rules(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:gps(ESS)
{
	new GPSId[10], Str[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "s[10]", GPSId)) return SendUsage(playerid, "/gps [Player/OFF]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(GPSId, "off", true) == 0)
	{
	    if(PlayerInfo[playerid][GPS] == 0) return SendError(playerid, "GPS already disabled!");
		else
		{
      		KillTimer(PlayerInfo[playerid][GPST]), PlayerInfo[playerid][GPS] = 0, PlayerInfo[playerid][GPST] = 0, DisablePlayerCheckpoint(playerid);
       		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       		Announce(playerid, "~g~~h~GPS ~r~~h~Dezactivat~w~~h~!", 4000, 4);
       		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        	return true;
		}
	}
	if(!IsPlayerConnected(strval(GPSId)) || strval(GPSId) == playerid) return Error(playerid, 3);
	else
	{
		if(PlayerInfo[playerid][GPS] == 1) KillTimer(PlayerInfo[playerid][GPST]), PlayerInfo[playerid][GPS] = 0, PlayerInfo[playerid][GPST] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       	PlayerInfo[playerid][GPS] = 1;
       	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        PlayerInfo[playerid][GPST] = SetTimerEx("GetDistanceBetweenPlayers", 800, true, "ii", playerid, strval(GPSId));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		switch(PlayerInfo[playerid][Language])
		{
       		case 1: format(Str, 128, "GPS Activat! Tinta: {00BBF6}%s (ID:%d){00CC00}!", PN(strval(GPSId)), strval(GPSId)), SCM(playerid, GREEN, Str);
       		case 2: format(Str, 128, "GPS Successfully Enabled! Target: {00BBF6}%s (ID:%d){00CC00}!", PN(strval(GPSId)), strval(GPSId)), SCM(playerid, GREEN, Str);
		}
		return true;
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:weapons(playerid) return cmd_arme(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:arme(playerid)
{
	new Str[1500];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(Str, "Item                                         \tPrice\n\
                 {FFFF99}Tear Gas                             \t{FF0000}3500$\n\
				 {FFFF99}9mm                                  \t{FF0000}4000$\n\
				 {FFFF99}Silenced 9mm                         \t{FF0000}4500$\n\
				 {FFFF99}Desert Eagle                         \t{FF0000}5000$\n\
				 {FFFF99}Shotgun                              \t{FF0000}5500$\n\
				 {FFFF99}Sawn-off Shotgun                     \t{FF0000}8000$\n\
				 {FFFF99}Combat Shotgun                       \t{FF0000}7000$\n\
				 {FFFF99}Micro SMG                            \t{FF0000}5000$\n\
                 {FFFF99}MP5                                  \t{FF0000}5500$\n\
                 {FFFF99}AK-47                                \t{FF0000}12000$\n\
                 {FFFF99}M4                                   \t{FF0000}14000$\n\
                 {FFFF99}Tec9                                 \t{FF0000}9000$\n\
                 {FFFF99}Country Rifle                        \t{FF0000}9500$\n\
                 {FFFF99}Sniper Rifle                         \t{FF0000}10000$\n\
                 {FFFF99}Health + Armour                      \t{FF0000}2500$\n\
                 {FFFF99}Remove Weapon                        \t{FF0000}Free\n\
                 {0066FF}Other Weapons                    	  \t{FF0000}/oweapons\n\
                 {0066FF}Dangerous Weapons                    \t{FF0000}/dweapons\n");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SPD(playerid, DIALOG_WEAPONS, HEADERS, "Cumpara arme!", Str, "Buy", "Cancel");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:darme(playerid) return cmd_barme(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:dweapons(playerid) return cmd_farme(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:barme(playerid)
{
	new Str[1500];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(Str, "Item                                    \tPrice\n\
	             {FFFF99}Rocket Launcher                 \t{FF0000}200 coins              \t{FFFF99}5 Ammo\n\
	             {FFFF99}Flame Thrower                   \t{FF0000}500 coins              \t{FFFF99}150 Ammo\n\
				 {FFFF99}HS Rocket Launche               \t{FF0000}300 coins              \t{FFFF99}5 Ammo\n\
				 {FFFF99}Molotov                         \t{FF0000}100 coins              \t{FFFF99}10 Ammo\n\
				 {FFFF99}Grenades                        \t{FF0000}200 coins              \t{FFFF99}10 Ammo\n");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SPD(playerid, DIALOG_BIGWEAPONS, HEADERS, "Cumpara arme puternice!", Str, "Buy", "Close");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:oarme(playerid) return cmd_farme(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:oweapons(playerid) return cmd_farme(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:farme(playerid)
{
    new Str[1500];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    strcat(Str, "Item\n\
                 {FFFF99}Brass Knuckles\n\
				 {FFFF99}Golf Club\n\
				 {FFFF99}Nite Stick\n\
				 {FFFF99}Knife\n\
				 {FFFF99}Baseball Bat\n\
				 {FFFF99}Shovel\n\
				 {FFFF99}Pool Cue\n\
				 {FFFF99}Katana\n\
				 {FFFF99}Chainsaw\n\
                 {FFFF99}Purple Dildo\n\
                 {FFFF99}Small White Vibrator\n\
                 {FFFF99}Large White Vibrator\n\
                 {FFFF99}Silver Vibrator\n\
                 {FFFF99}Flowers\n\
                 {FFFF99}Cane\n\
                 {FFFF99}Spray Can\n\
                 {FFFF99}Fire Extinguisher\n\
                 {FFFF99}Camera\n");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SPD(playerid, DIALOG_FUNNYWEAPONS, HEADERS, "Cumpara arme amuzante! Toate la $1.000", Str, "Buy", "Close");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:up(ESS)
{
	if(IsPlayerInAnyDynamicArea(playerid)) return Error(playerid, 9);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new liHeight, Float:x, Float:y, Float:z;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "i", liHeight)) return SendUsage(playerid, "/up [Height]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(liHeight < 0 || liHeight > 3000) return SendError(playerid, "Invalid height!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(IsPlayerInAnyVehicle(playerid)) GetVehiclePos(GetPlayerVehicleID(playerid), x, y, z), SetVehiclePos(GetPlayerVehicleID(playerid), x, y, z + liHeight);
    else GetPlayerPos(playerid, x, y, z), GivePlayerWeapon(playerid, 46, 1), SetPlayerPos(playerid, x, y, z + liHeight);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:tow(ESS)
{
    new Float:pX, Float:pY, Float:pZ, Float:vX, Float:vY, Float:vZ, Found = 0, vid = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GetPlayerPos(playerid, pX, pY, pZ);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    while(vid < MAX_VEHICLES && !Found)
    {
        vid++, GetVehiclePos(vid, vX, vY, vZ);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if((floatabs(pX-vX) < 7.0) && (floatabs(pY-vY) < 7.0) && (floatabs(pZ-vZ) < 7.0) && (vid != GetPlayerVehicleID(playerid)))
        {
            Found = 1;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return DetachTrailerFromVehicle(GetPlayerVehicleID(playerid)), Announce(playerid, "~w~~h~Vehicle ~r~~h~Detached~w~~h~!", 3000, 4);
            else return AttachTrailerToVehicle(vid, GetPlayerVehicleID(playerid)), Announce(playerid, "~w~~h~Vehicle ~g~~h~Attached~w~~h~!", 3000, 4);
        }
    }
    if(!Found) return SendError(playerid, "Not founded near vehicle, go close to a next vehicle."); return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:tc(ESS)
{
    new idcarro = GetPlayerVehicleID(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(strcmp(params,"1",true) == 0)
	{
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
	    {
	        AddVehicleComponent(idcarro, 1046),	AddVehicleComponent(idcarro, 1171), AddVehicleComponent(idcarro, 1149);
	        AddVehicleComponent(idcarro, 1035), AddVehicleComponent(idcarro, 1147),	AddVehicleComponent(idcarro, 1036);
     		AddVehicleComponent(idcarro, 1040), AddVehicleComponent(idcarro, 1010),	AddVehicleComponent(idcarro, 1081);
	        AddVehicleComponent(idcarro, 1087), ChangeVehiclePaintjob(idcarro, 0),  ChangeVehicleColor(idcarro, 1, 1);
	    }
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
	    {
	        AddVehicleComponent(idcarro, 1028), AddVehicleComponent(idcarro, 1169), AddVehicleComponent(idcarro, 1141);
	        AddVehicleComponent(idcarro, 1032), AddVehicleComponent(idcarro, 1138), AddVehicleComponent(idcarro, 1026);
	        AddVehicleComponent(idcarro, 1027), AddVehicleComponent(idcarro, 1010), AddVehicleComponent(idcarro, 1081);
			AddVehicleComponent(idcarro, 1087), ChangeVehiclePaintjob(idcarro, 0),  ChangeVehicleColor(idcarro, 1, 1);
	    }
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
	    {
	        AddVehicleComponent(idcarro, 1046), AddVehicleComponent(idcarro, 1153), AddVehicleComponent(idcarro, 1150);
	        AddVehicleComponent(idcarro, 1054), AddVehicleComponent(idcarro, 1049), AddVehicleComponent(idcarro, 1047);
	        AddVehicleComponent(idcarro, 1051), AddVehicleComponent(idcarro, 1010), AddVehicleComponent(idcarro, 1081);
	        AddVehicleComponent(idcarro, 1087), ChangeVehiclePaintjob(idcarro, 0),  ChangeVehicleColor(idcarro, 1, 1);
	    }
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
	    {
	        AddVehicleComponent(idcarro, 1065), AddVehicleComponent(idcarro, 1160), AddVehicleComponent(idcarro, 1159);
	        AddVehicleComponent(idcarro, 1067), AddVehicleComponent(idcarro, 1162), AddVehicleComponent(idcarro, 1069);
	        AddVehicleComponent(idcarro, 1071), AddVehicleComponent(idcarro, 1010), AddVehicleComponent(idcarro, 1081);
	        AddVehicleComponent(idcarro, 1087), ChangeVehiclePaintjob(idcarro, 0),  ChangeVehicleColor(idcarro, 1, 1);
	    }
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
	    {
	        AddVehicleComponent(idcarro, 1064), AddVehicleComponent(idcarro, 1155), AddVehicleComponent(idcarro, 1154);
	        AddVehicleComponent(idcarro, 1055), AddVehicleComponent(idcarro, 1158), AddVehicleComponent(idcarro, 1056);
	        AddVehicleComponent(idcarro, 1062), AddVehicleComponent(idcarro, 1010), AddVehicleComponent(idcarro, 1081);
	        AddVehicleComponent(idcarro, 1087), ChangeVehiclePaintjob(idcarro, 0),  ChangeVehicleColor(idcarro, 1, 1);
	    }
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
	    {
	        AddVehicleComponent(idcarro, 1089), AddVehicleComponent(idcarro, 1166), AddVehicleComponent(idcarro, 1168);
	        AddVehicleComponent(idcarro, 1088), AddVehicleComponent(idcarro, 1164), AddVehicleComponent(idcarro, 1090);
	        AddVehicleComponent(idcarro, 1094), AddVehicleComponent(idcarro, 1010), AddVehicleComponent(idcarro, 1081);
	        AddVehicleComponent(idcarro, 1087), ChangeVehiclePaintjob(idcarro, 0),  ChangeVehicleColor(idcarro, 1, 1);
	    }
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575)
	    {
	        AddVehicleComponent(idcarro, 1044), AddVehicleComponent(idcarro, 1174), AddVehicleComponent(idcarro, 1176);
	        AddVehicleComponent(idcarro, 1042), AddVehicleComponent(idcarro, 1099), AddVehicleComponent(idcarro, 1010);
 			AddVehicleComponent(idcarro, 1081),	AddVehicleComponent(idcarro, 1087), ChangeVehiclePaintjob(idcarro, 0), ChangeVehicleColor(idcarro, 1, 1);
	    }
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
	    {
	        AddVehicleComponent(idcarro, 1126),	AddVehicleComponent(idcarro, 1179),	AddVehicleComponent(idcarro, 1180);
	        AddVehicleComponent(idcarro, 1122),	AddVehicleComponent(idcarro, 1101), AddVehicleComponent(idcarro, 1125);
			AddVehicleComponent(idcarro, 1123), AddVehicleComponent(idcarro, 1100), AddVehicleComponent(idcarro, 1010);
			AddVehicleComponent(idcarro, 1081), AddVehicleComponent(idcarro, 1087), ChangeVehiclePaintjob(idcarro, 0), ChangeVehicleColor(idcarro, 1, 1);
	    }
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
	    {
	        AddVehicleComponent(idcarro, 1104), AddVehicleComponent(idcarro, 1182), AddVehicleComponent(idcarro, 1184);
	        AddVehicleComponent(idcarro, 1108), AddVehicleComponent(idcarro, 1107), AddVehicleComponent(idcarro, 1010);
			AddVehicleComponent(idcarro, 1081), AddVehicleComponent(idcarro, 1087), ChangeVehiclePaintjob(idcarro, 0), ChangeVehicleColor(idcarro, 1, 1);
	    }
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
	    {
	        AddVehicleComponent(idcarro, 1129), AddVehicleComponent(idcarro, 1189), AddVehicleComponent(idcarro, 1187);
	        AddVehicleComponent(idcarro, 1102), AddVehicleComponent(idcarro, 1133), AddVehicleComponent(idcarro, 1010);
			AddVehicleComponent(idcarro, 1081), AddVehicleComponent(idcarro, 1087), ChangeVehiclePaintjob(idcarro, 0), ChangeVehicleColor(idcarro, 1, 1);
	    }
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 420)
	    {
	        AddVehicleComponent(idcarro, 1010), AddVehicleComponent(idcarro, 1087), AddVehicleComponent(idcarro, 1081), AddVehicleComponent(idcarro, 1139);
	    }
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 400)
	    {
	        AddVehicleComponent(idcarro, 1010),	AddVehicleComponent(idcarro, 1087), AddVehicleComponent(idcarro, 1018);
			AddVehicleComponent(idcarro, 1013), AddVehicleComponent(idcarro, 1081), AddVehicleComponent(idcarro, 1086);
	    }
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 401)
	    {
	        AddVehicleComponent(idcarro, 1086), AddVehicleComponent(idcarro, 1139), AddVehicleComponent(idcarro, 1081);
			AddVehicleComponent(idcarro, 1010), AddVehicleComponent(idcarro, 1087), AddVehicleComponent(idcarro, 1012);
			AddVehicleComponent(idcarro, 1013), AddVehicleComponent(idcarro, 1042), AddVehicleComponent(idcarro, 1043);
			AddVehicleComponent(idcarro, 1018), AddVehicleComponent(idcarro, 1006), AddVehicleComponent(idcarro, 1007), AddVehicleComponent(idcarro, 1017);
	    }
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
	    {
	        ChangeVehiclePaintjob(idcarro, 0),  ChangeVehicleColor(idcarro, 1, 1),  AddVehicleComponent(idcarro, 1191);
			AddVehicleComponent(idcarro, 1193), AddVehicleComponent(idcarro, 1010), AddVehicleComponent(idcarro, 1018);
			AddVehicleComponent(idcarro, 1081), AddVehicleComponent(idcarro, 1087), AddVehicleComponent(idcarro, 1134), AddVehicleComponent(idcarro, 1137);
	    }
	    else
	    {
	        AddVehicleComponent(idcarro, 1010), AddVehicleComponent(idcarro, 1081), AddVehicleComponent(idcarro, 1087);
	    }
	}
	else if(strcmp(params,"2",true) == 0)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
		{
			AddVehicleComponent(idcarro,1046), AddVehicleComponent(idcarro,1171), AddVehicleComponent(idcarro,1149);
			AddVehicleComponent(idcarro,1035), AddVehicleComponent(idcarro,1147), AddVehicleComponent(idcarro,1036);
			AddVehicleComponent(idcarro,1040), ChangeVehiclePaintjob(idcarro, 1), ChangeVehicleColor(idcarro, 1, 1);
			AddVehicleComponent(idcarro,1010), AddVehicleComponent(idcarro,1081), AddVehicleComponent(idcarro,1087);
	    }
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		{
			AddVehicleComponent(idcarro,1028), AddVehicleComponent(idcarro,1169), AddVehicleComponent(idcarro,1141);
			AddVehicleComponent(idcarro,1032), AddVehicleComponent(idcarro,1138), AddVehicleComponent(idcarro,1026);
		 	AddVehicleComponent(idcarro,1027), ChangeVehiclePaintjob(idcarro, 1), ChangeVehicleColor(idcarro, 1, 1);
			AddVehicleComponent(idcarro,1010), AddVehicleComponent(idcarro,1081), AddVehicleComponent(idcarro,1087);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
		{
			AddVehicleComponent(idcarro,1046), AddVehicleComponent(idcarro,1153), AddVehicleComponent(idcarro,1150);
			AddVehicleComponent(idcarro,1054), AddVehicleComponent(idcarro,1049), AddVehicleComponent(idcarro,1047);
		 	AddVehicleComponent(idcarro,1051), AddVehicleComponent(idcarro,1010), AddVehicleComponent(idcarro,1081);
		 	AddVehicleComponent(idcarro,1087), ChangeVehiclePaintjob(idcarro, 1), ChangeVehicleColor(idcarro, 1, 1);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
		{
			AddVehicleComponent(idcarro,1065), AddVehicleComponent(idcarro,1160), AddVehicleComponent(idcarro,1159);
			AddVehicleComponent(idcarro,1067), AddVehicleComponent(idcarro,1162), AddVehicleComponent(idcarro,1069);
		 	AddVehicleComponent(idcarro,1071), AddVehicleComponent(idcarro,1010), AddVehicleComponent(idcarro,1081);
		 	AddVehicleComponent(idcarro,1087), ChangeVehiclePaintjob(idcarro, 1), ChangeVehicleColor(idcarro, 1, 1);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
		{
			AddVehicleComponent(idcarro,1064), AddVehicleComponent(idcarro,1155), AddVehicleComponent(idcarro,1154);
			AddVehicleComponent(idcarro,1055), AddVehicleComponent(idcarro,1158), AddVehicleComponent(idcarro,1056);
			AddVehicleComponent(idcarro,1062), AddVehicleComponent(idcarro,1010), AddVehicleComponent(idcarro,1081);
		 	AddVehicleComponent(idcarro,1087), ChangeVehiclePaintjob(idcarro, 1), ChangeVehicleColor(idcarro, 1, 1);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
		{
			AddVehicleComponent(idcarro,1089), AddVehicleComponent(idcarro,1166), AddVehicleComponent(idcarro,1168);
			AddVehicleComponent(idcarro,1088), AddVehicleComponent(idcarro,1164), AddVehicleComponent(idcarro,1090);
		 	AddVehicleComponent(idcarro,1094), AddVehicleComponent(idcarro,1010), AddVehicleComponent(idcarro,1081);
		 	AddVehicleComponent(idcarro,1087), ChangeVehiclePaintjob(idcarro, 1), ChangeVehicleColor(idcarro, 1, 1);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575)
		{
			AddVehicleComponent(idcarro,1044), AddVehicleComponent(idcarro,1174), AddVehicleComponent(idcarro,1176);
			AddVehicleComponent(idcarro,1042), AddVehicleComponent(idcarro,1099), AddVehicleComponent(idcarro,1010);
		 	AddVehicleComponent(idcarro,1081), AddVehicleComponent(idcarro,1087), ChangeVehiclePaintjob(idcarro, 1), ChangeVehicleColor(idcarro, 1, 1);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
		{
			AddVehicleComponent(idcarro,1126), AddVehicleComponent(idcarro,1179), AddVehicleComponent(idcarro,1180);
			AddVehicleComponent(idcarro,1122), AddVehicleComponent(idcarro,1101), AddVehicleComponent(idcarro,1125);
		 	AddVehicleComponent(idcarro,1123), AddVehicleComponent(idcarro,1100), AddVehicleComponent(idcarro,1087);
		 	AddVehicleComponent(idcarro,1010), AddVehicleComponent(idcarro,1081), ChangeVehiclePaintjob(idcarro, 1), ChangeVehicleColor(idcarro, 1, 1);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
		{
			AddVehicleComponent(idcarro,1104), AddVehicleComponent(idcarro,1182), AddVehicleComponent(idcarro,1184);
			AddVehicleComponent(idcarro,1108), AddVehicleComponent(idcarro,1107), AddVehicleComponent(idcarro,1010);
		 	AddVehicleComponent(idcarro,1081), AddVehicleComponent(idcarro,1087), ChangeVehiclePaintjob(idcarro, 1), ChangeVehicleColor(idcarro, 1, 1);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
		{
			AddVehicleComponent(idcarro,1129), AddVehicleComponent(idcarro,1189), AddVehicleComponent(idcarro,1187);
			AddVehicleComponent(idcarro,1102), AddVehicleComponent(idcarro,1133), AddVehicleComponent(idcarro,1010);
		 	AddVehicleComponent(idcarro,1081), AddVehicleComponent(idcarro,1087), ChangeVehiclePaintjob(idcarro, 1), ChangeVehicleColor(idcarro, 1, 1);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 420)
		{
			AddVehicleComponent(idcarro,1010), AddVehicleComponent(idcarro,1087), AddVehicleComponent(idcarro,1081), AddVehicleComponent(idcarro,1139);
	 	}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 400)
		{
			AddVehicleComponent(idcarro,1010), AddVehicleComponent(idcarro,1087), AddVehicleComponent(idcarro,1018);
		 	AddVehicleComponent(idcarro,1013), AddVehicleComponent(idcarro,1081), AddVehicleComponent(idcarro,1086);
	    }
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 401)
		{
		 	AddVehicleComponent(idcarro,1139), AddVehicleComponent(idcarro,1081), AddVehicleComponent(idcarro,1010);
		 	AddVehicleComponent(idcarro,1087), AddVehicleComponent(idcarro,1012), AddVehicleComponent(idcarro,1013);
		 	AddVehicleComponent(idcarro,1042), AddVehicleComponent(idcarro,1043), AddVehicleComponent(idcarro,1018);
		 	AddVehicleComponent(idcarro,1006), AddVehicleComponent(idcarro,1007), AddVehicleComponent(idcarro,1017), AddVehicleComponent(idcarro,1086);
        }
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
		{
			ChangeVehiclePaintjob(idcarro,1),  ChangeVehicleColor(idcarro, 1, 1), AddVehicleComponent(idcarro,1191);
		 	AddVehicleComponent(idcarro,1193), AddVehicleComponent(idcarro,1010), AddVehicleComponent(idcarro,1018);
		 	AddVehicleComponent(idcarro,1081), AddVehicleComponent(idcarro,1087), AddVehicleComponent(idcarro,1134), AddVehicleComponent(idcarro,1137);
		}
		else
		{
			AddVehicleComponent(idcarro,1010), AddVehicleComponent(idcarro,1081), AddVehicleComponent(idcarro,1087);
		}
	}
	else if(strcmp(params,"3",true) == 0)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
		{
			AddVehicleComponent(idcarro, 1046),  AddVehicleComponent(idcarro, 1171), AddVehicleComponent(idcarro, 1149);
			AddVehicleComponent(idcarro, 1035), AddVehicleComponent(idcarro, 1147), AddVehicleComponent(idcarro, 1036);
			AddVehicleComponent(idcarro, 1040), ChangeVehiclePaintjob(idcarro, 2),  ChangeVehicleColor(idcarro, 1, 1);
			AddVehicleComponent(idcarro, 1010), AddVehicleComponent(idcarro, 1081), AddVehicleComponent(idcarro, 1087);
	 	}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		{
			AddVehicleComponent(idcarro,1028), AddVehicleComponent(idcarro,1169), AddVehicleComponent(idcarro,1141);
			AddVehicleComponent(idcarro,1032), AddVehicleComponent(idcarro,1138), AddVehicleComponent(idcarro,1026);
		 	AddVehicleComponent(idcarro,1027), ChangeVehiclePaintjob(idcarro, 2), ChangeVehicleColor(idcarro, 1, 1);
			AddVehicleComponent(idcarro,1010), AddVehicleComponent(idcarro,1081), AddVehicleComponent(idcarro,1087);
	 	}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
		{
			AddVehicleComponent(idcarro,1046), AddVehicleComponent(idcarro,1153), AddVehicleComponent(idcarro,1150);
			AddVehicleComponent(idcarro,1054), AddVehicleComponent(idcarro,1049), AddVehicleComponent(idcarro,1047);
		 	AddVehicleComponent(idcarro,1051), AddVehicleComponent(idcarro,1010), AddVehicleComponent(idcarro,1081);
		 	AddVehicleComponent(idcarro,1087), ChangeVehiclePaintjob(idcarro, 2), ChangeVehicleColor(idcarro, 1, 1);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
		{
			AddVehicleComponent(idcarro,1065), AddVehicleComponent(idcarro,1160), AddVehicleComponent(idcarro,1159);
			AddVehicleComponent(idcarro,1067), AddVehicleComponent(idcarro,1162), AddVehicleComponent(idcarro,1069);
		 	AddVehicleComponent(idcarro,1071), AddVehicleComponent(idcarro,1010), AddVehicleComponent(idcarro,1081);
		 	AddVehicleComponent(idcarro,1087), ChangeVehiclePaintjob(idcarro, 2), ChangeVehicleColor(idcarro, 1, 1);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
		{
			AddVehicleComponent(idcarro,1064), AddVehicleComponent(idcarro,1155), AddVehicleComponent(idcarro,1154);
			AddVehicleComponent(idcarro,1055), AddVehicleComponent(idcarro,1158), AddVehicleComponent(idcarro,1056);
		 	AddVehicleComponent(idcarro,1062), AddVehicleComponent(idcarro,1010), AddVehicleComponent(idcarro,1081);
		 	AddVehicleComponent(idcarro,1087), ChangeVehiclePaintjob(idcarro, 2), ChangeVehicleColor(idcarro, 1, 1);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
		{
			AddVehicleComponent(idcarro,1089), AddVehicleComponent(idcarro,1166), AddVehicleComponent(idcarro,1168);
			AddVehicleComponent(idcarro,1088), AddVehicleComponent(idcarro,1164), AddVehicleComponent(idcarro,1090);
		 	AddVehicleComponent(idcarro,1094), AddVehicleComponent(idcarro,1010), AddVehicleComponent(idcarro,1081);
		 	AddVehicleComponent(idcarro,1087), ChangeVehiclePaintjob(idcarro, 2), ChangeVehicleColor(idcarro, 1, 1);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575)
		{
			AddVehicleComponent(idcarro, 1044), AddVehicleComponent(idcarro, 1174), AddVehicleComponent(idcarro, 1176);
			AddVehicleComponent(idcarro, 1042), AddVehicleComponent(idcarro, 1099), AddVehicleComponent(idcarro, 1010);
		 	AddVehicleComponent(idcarro, 1081), AddVehicleComponent(idcarro, 1087), ChangeVehiclePaintjob(idcarro, 2), ChangeVehicleColor(idcarro, 1, 1);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
		{
			AddVehicleComponent(idcarro, 1126), AddVehicleComponent(idcarro, 1179), AddVehicleComponent(idcarro, 1180);
			AddVehicleComponent(idcarro, 1122), AddVehicleComponent(idcarro, 1101), AddVehicleComponent(idcarro, 1125);
		 	AddVehicleComponent(idcarro, 1123), AddVehicleComponent(idcarro, 1100), AddVehicleComponent(idcarro, 1010);
		 	AddVehicleComponent(idcarro, 1081), AddVehicleComponent(idcarro, 1087), ChangeVehiclePaintjob(idcarro, 2), ChangeVehicleColor(idcarro, 1, 1);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
		{
			AddVehicleComponent(idcarro, 1104), AddVehicleComponent(idcarro, 1182), AddVehicleComponent(idcarro, 1184);
			AddVehicleComponent(idcarro, 1108), AddVehicleComponent(idcarro, 1107), AddVehicleComponent(idcarro, 1010);
		 	AddVehicleComponent(idcarro, 1081), AddVehicleComponent(idcarro, 1087), ChangeVehiclePaintjob(idcarro, 2), ChangeVehicleColor(idcarro, 1, 1);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
		{
			AddVehicleComponent(idcarro, 1129), AddVehicleComponent(idcarro, 1189), AddVehicleComponent(idcarro, 1187);
			AddVehicleComponent(idcarro, 1102), AddVehicleComponent(idcarro, 1133), AddVehicleComponent(idcarro, 1010);
		 	AddVehicleComponent(idcarro, 1081),	AddVehicleComponent(idcarro, 1087), ChangeVehiclePaintjob(idcarro, 2), ChangeVehicleColor(idcarro, 1, 1);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 420)
		{
			AddVehicleComponent(idcarro, 1010), AddVehicleComponent(idcarro, 1087), AddVehicleComponent(idcarro, 1081), AddVehicleComponent(idcarro, 1139);
	 	}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 400)
		{
			AddVehicleComponent(idcarro, 1010), AddVehicleComponent(idcarro, 1087), AddVehicleComponent(idcarro, 1018);
		 	AddVehicleComponent(idcarro, 1013), AddVehicleComponent(idcarro, 1081), AddVehicleComponent(idcarro, 1086);
	 	}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 401)
		{
			AddVehicleComponent(idcarro, 1086), AddVehicleComponent(idcarro, 1139), AddVehicleComponent(idcarro, 1081);
		 	AddVehicleComponent(idcarro, 1010), AddVehicleComponent(idcarro, 1087), AddVehicleComponent(idcarro, 1012);
		 	AddVehicleComponent(idcarro, 1013), AddVehicleComponent(idcarro, 1042), AddVehicleComponent(idcarro, 1043);
		 	AddVehicleComponent(idcarro, 1018), AddVehicleComponent(idcarro, 1006), AddVehicleComponent(idcarro, 1007), AddVehicleComponent(idcarro, 1017);
	 	}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
		{
			ChangeVehiclePaintjob(idcarro, 2),   ChangeVehicleColor(idcarro, 1, 1), AddVehicleComponent(idcarro, 1191);
		 	AddVehicleComponent(idcarro, 1193),	AddVehicleComponent(idcarro, 1010), AddVehicleComponent(idcarro, 1018);
		 	AddVehicleComponent(idcarro, 1081),	AddVehicleComponent(idcarro, 1087), AddVehicleComponent(idcarro, 1134),	AddVehicleComponent(idcarro, 1137);
		}
		else
		{
			AddVehicleComponent(idcarro, 1010), AddVehicleComponent(idcarro, 1081), AddVehicleComponent(idcarro, 1087);
		}
	}
	else return SendUsage(playerid, "/tc [1-3]"); return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:tune(ESS)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return ModCar(playerid);
	else return SendError(playerid, "You must be the driver of a car before you start tunning a vehicle!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:ad(ESS)
{
    new Message[128]; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "s[128]", Message)) return SendUsage(playerid, "/ad [Text]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Muted] == 1) return Announce(playerid, "~w~~h~You are ~r~~h~muted~w~~h~!", 3000, 4), false;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if((gettime() - ADTimer[playerid][0]) < 60) return SCM(playerid, RED, "Sorry, but you need to wait 1 minute to send an another AD!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Coins] < 10) return SendError(playerid, "You don't have enoungh Coins!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "AD: {FFFF00}%s {FF0000}| Sent by {00BBF6}%s (%d)", Message, PN(playerid), playerid);
	SCMALL(RED, eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ADTimer[playerid][0] = gettime();
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][Coins] -= 10;
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vc(ESS)
{
    new rParam[10], rParam2[10];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new engine, lights, alarm, doors, bonnet, boot, objective, window_state[4], door_state[4];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You must be in a vehicle to use this command!");
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if(sscanf(params, "s[10]S()[20]", rParam, rParam2)) return SendUsage(playerid, "/vc [Doors / Windows / Lights / Alarm / Hood / Trunk / Engine]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new vehicleid = GetPlayerVehicleID(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	GetVehicleParamsCarWindows(vehicleid, window_state[0], window_state[1], window_state[2], window_state[3]);
	GetVehicleParamsCarDoors(vehicleid, door_state[0], door_state[1], door_state[2], door_state[3]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(rParam, "doors", true) == 0)
	{
	    new dParam[10];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(sscanf(rParam2, "s[10]", dParam)) return SendUsage(playerid, "{FF0000}/vc{49FFFF} Doors [L, R, BL, BR]");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(strcmp(dParam, "l", true) == 0)
		{
	        SetVehicleParamsCarDoors(vehicleid, VEHICLE_PARAMS_ON, door_state[1], door_state[2], door_state[3]);
			SCM(playerid, -1, "Vehicle control: Left door {2F991A}open");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			return true;
		}
		if(strcmp(dParam, "r", true) == 0)
		{
            SetVehicleParamsCarDoors(vehicleid, door_state[0], VEHICLE_PARAMS_ON, door_state[2], door_state[3]);
			SCM(playerid, -1, "Vehicle control: Right door {2F991A}open");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			return true;
		}
		if(strcmp(dParam, "bl", true) == 0)
		{
            SetVehicleParamsCarDoors(vehicleid, door_state[0], door_state[1], VEHICLE_PARAMS_ON, door_state[3]);
			SCM(playerid, -1, "Vehicle control: Back Left door {2F991A}open");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			return true;
		}
		if(strcmp(dParam, "br", true) == 0)
		{
            SetVehicleParamsCarDoors(vehicleid, door_state[0], door_state[1], door_state[2], VEHICLE_PARAMS_ON);
			SCM(playerid, -1, "Vehicle control: Back Right door {2F991A}open");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			return true;
		}
	}
    if(strcmp(rParam, "windows", true) == 0)
	{
	    new wParam[10];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(sscanf(rParam2, "s[10]", wParam)) return SendUsage(playerid, "{FF0000}/vc{49FFFF} Windows [L, R, BL, BR]");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(strcmp(wParam, "l", true) == 0)
		{
		    if(window_state[0] != 0)
        	{
	            SetVehicleParamsCarWindows(vehicleid, VEHICLE_PARAMS_OFF, window_state[1], window_state[2], window_state[3]);
				SCM(playerid, -1, "Vehicle control: Left window {2F991A}open");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				return true;
			}
			else
			{
			    SetVehicleParamsCarWindows(vehicleid, VEHICLE_PARAMS_ON, window_state[1], window_state[2], window_state[3]);
			    SCM(playerid, -1, "Vehicle control: Left window {E31919}closed");
		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    	return true;
		    }
		}
		if(strcmp(wParam, "r", true) == 0)
		{
			if(window_state[1] != 0)
        	{
	            SetVehicleParamsCarWindows(vehicleid, window_state[0], VEHICLE_PARAMS_OFF, window_state[2], window_state[3]);
				SCM(playerid, -1, "Vehicle control: Right window {2F991A}open");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				return true;
			}
			else
			{
			    SetVehicleParamsCarWindows(vehicleid, window_state[0], VEHICLE_PARAMS_ON, window_state[2], window_state[3]);
			    SCM(playerid, -1, "Vehicle control: Right window {E31919}closed");
		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    	return true;
		    }
		}
		if(strcmp(wParam, "bl", true) == 0)
		{
		    if(window_state[2] != 0)
        	{
	            SetVehicleParamsCarWindows(vehicleid, window_state[0], window_state[1], VEHICLE_PARAMS_OFF, window_state[3]);
				SCM(playerid, -1, "Vehicle control: Back Left window {2F991A}open");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				return true;
			}
			else
			{
			    SetVehicleParamsCarWindows(vehicleid, window_state[0], window_state[1], VEHICLE_PARAMS_ON, window_state[3]);
			    SCM(playerid, -1, "Vehicle control: Back Left window {E31919}closed");
		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    	return true;
		    }
		}
		if(strcmp(wParam, "br", true) == 0)
		{
		    if(window_state[3] != 0)
        	{
	            SetVehicleParamsCarWindows(vehicleid, window_state[0], window_state[1], window_state[2], VEHICLE_PARAMS_OFF);
				SCM(playerid, -1, "Vehicle control: Back Right window {2F991A}open");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				return true;
			}
			else
			{
			    SetVehicleParamsCarWindows(vehicleid, window_state[0], window_state[1], window_state[2], VEHICLE_PARAMS_ON);
			    SCM(playerid, -1, "Vehicle control: Back Right window {E31919}closed");
		    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    	return true;
		    }
		}
	}
	if(strcmp(rParam, "lights", true) == 0)
	{
        if(lights != 1)
        {
            SetVehicleParamsEx(vehicleid, engine, VEHICLE_PARAMS_ON, alarm, doors, bonnet, boot, objective);
			SCM(playerid, -1, "Vehicle control: Lights {2F991A}on{FFFFFF}. Use {E31919}/night");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			return true;
		}
		else
		{
            SetVehicleParamsEx(vehicleid, engine, VEHICLE_PARAMS_OFF, alarm, doors, bonnet, boot, objective);
			SCM(playerid, -1, "Vehicle control: Lights {E31919}off{FFFFFF}. Use {2F991A}/day");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			return true;
		}
	}
	if(strcmp(rParam, "alarm", true) == 0)
	{
	    if(alarm != 1)
        {
            SetVehicleParamsEx(vehicleid, engine, lights, VEHICLE_PARAMS_ON, doors, bonnet, boot, objective);
			SCM(playerid, -1, "Vehicle control: Alarm {2F991A}on");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			return true;
		}
		else
		{
            SetVehicleParamsEx(vehicleid, engine, lights, VEHICLE_PARAMS_OFF, doors, bonnet, boot, objective);
			SCM(playerid, -1, "Vehicle control: Alarm {E31919}off");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			return true;
		}
	}
	if(strcmp(rParam, "hood", true) == 0)
	{
	    if(bonnet != 1)
        {
            SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, VEHICLE_PARAMS_ON, boot, objective);
			SCM(playerid, -1, "Vehicle control: Hood {2F991A}open");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			return true;
		}
		else
		{
            SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, VEHICLE_PARAMS_OFF, boot, objective);
			SCM(playerid, -1, "Vehicle control: Hood {E31919}closed");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			return true;
		}
	}
	if(strcmp(rParam, "trunk", true) == 0)
	{
	    if(boot != 1)
        {
            SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_ON, objective);
			SCM(playerid, -1, "Vehicle control: Trunk {2F991A}open");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			return true;
		}
		else
		{
            SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_OFF, objective);
			SCM(playerid, -1, "Vehicle control: Trunk {E31919}closed");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			return true;
		}
	}
	if(strcmp(rParam, "engine", true) == 0)
	{
	    if(engine != 1)
        {
            SetVehicleParamsEx(vehicleid, VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objective);
			SCM(playerid, -1, "Vehicle control: Engine {2F991A}on");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			return true;
		}
		else
		{
            SetVehicleParamsEx(vehicleid, VEHICLE_PARAMS_OFF, lights, alarm, doors, bonnet, boot, objective);
			SCM(playerid, -1, "Vehicle control: Engine {E31919}off");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			return true;
		}
	}
	return true;
}
CMD:weaps(ESS)
{
	if(PlayerInfo[playerid][Level] < 2) return Error(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new string[624], string2[300], count = 0; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    new ammo, weaponID, weaponName[24];
        for(new c = 0; c < 13; c++)
        GetPlayerWeaponData(i, c, weaponID, ammo);
        if(IsPlayerConnected(i) && weaponID == 35 || weaponID == 36 || weaponID == 37 || weaponID == 38 && ammo != 0)
        {
            count++;
            GetWeaponName(weaponID, weaponName, sizeof(weaponName));
            format(string, sizeof(string), "{FF0000}%s{00CC00}(%d)\t{00BBF6}%s{00CC00}(%d)\n%s", PN(i), i, weaponName, ammo, string);
			format(eString, sizeof(eString), "Player information\tWeapon information\n%s", string);
        }
  		if(count == 0) return Announce(playerid, "~Y~No players with~N~~R~~H~big weapons!", 6000, 3);
  		else
		{
		    format(string2, sizeof(string2), "Players with big weapons | Totals: {FF0000}%d", count);
			SPD(playerid, DIALOG_EMPTY, HEADERS, string2, eString, "Ok", "");
		}
	}
	return true;
}
CMD:fakecmd(ESS)
{
	if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "us", params[0], params[1])) return SendUsage(playerid, "/fakecmd [ID/Name] [CMD]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CallRemoteFunction("OnPlayerCommandText", "is", params[0], params[1]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	FormatMSG(params[0], ABLUE, "Admin '%s' has sent command '%s'!", PN(playerid), params[1]);
	FormatMSG(playerid, ABLUE, "You has sent command '%s' for '%s'!", params[1], PN(params[0]));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AdminCMD(playerid, "FAKECMD");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
CMD:fakechat(ESS)
{
	if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "us", params[0], params[1])) return SendUsage(playerid, "/fakechat [ID/Name] [TEXT]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	OnPlayerText(params[0], params[1]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	FormatMSG(params[0], ABLUE, "Admin '%s' has sent message '%s' in chat!", PN(playerid), params[1]);
	FormatMSG(playerid, ABLUE, "You has sent message '%s' in chat for '%s'!", params[1], PN(params[0]));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AdminCMD(playerid, "FAKECHAT");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
CMD:set(ESS)
{
	new Player, rParam[10], Amount, liDays; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][RconType] < 1 && PlayerInfo[playerid][Level] < 2) return Error(playerid, 1);
	else
	{
		if(sscanf(params, "s[10]uI(-1)I(-1)", rParam, Player, Amount, liDays)) return
		SendUsage(playerid, "/set [Item] [ID/Name] [Value]"), SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		else if(!IsPlayerConnected(Player)) return Error(playerid, 10);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(strcmp(rParam, "armour", 		true) 	== 0)
		{
			if(PlayerInfo[playerid][Level] < 4) return Error(playerid, 1);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetPlayerArmour(Player, Amount);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "Administrator '%s' has seted your armour to '%d'!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
			PlayerPlaySound(Player,1057,0.0,0.0,0.0);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' armour to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET ARMOUR");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		}
		if(strcmp(rParam, "health", 		true) 	== 0)
		{
			if(PlayerInfo[playerid][Level] < 4) return Error(playerid, 1);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetPlayerHealth(Player, Amount);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "Administrator '%s' has seted your health to '%d'!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' health to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET HEALTH");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		}
		if(strcmp(rParam, "world", 		true) 	== 0)
		{
			if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetPlayerVirtualWorld(Player, Amount);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "Administrator '%s' has seted your virtual world to '%d'!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' world to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET WORLD");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		}
		if(strcmp(rParam, "interior", 		true) 	== 0)
		{
		    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetPlayerInterior(Player, Amount);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "Administrator '%s' has seted your interior to '%d'!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' interior to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET INTERIOR");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		}
		if(strcmp(rParam, "weather", 		true) 	== 0)
		{
		    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SetPlayerWeather(Player, Amount);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof(eString), "Administrator '%s' has seted your weather to '%d'!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' weather to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET WEATHER");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		}
		if(strcmp(rParam, "time", 		true) 	== 0)
		{
		    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount < 0 || Amount > 24) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SetPlayerTime(Player, Amount, 0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof(eString), "Administrator '%s' has seted your time to '%d'!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' time to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET TIME");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		}
		if(strcmp(rParam, "skin", 		true) 	== 0)
		{
		    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount < 0 || Amount > 311) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SetPlayerSkin(Player, Amount);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof(eString), "Administrator '%s' has seted your skin to '%d'!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' skin to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET SKIN");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		}
		if(strcmp(rParam, "level", 		true) 	== 0)
		{
		    if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(CheckAvailableID(playerid, Player) == 0) return SendError(playerid, "You cannot set for other players stats! Only for you!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[Player][AdminBlacklist] == 1) return SendError(playerid, "You cannot set this player admin because he has a blacklist!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(Amount < 0 || Amount > 5) return SendError(playerid, "You cannot set a level who are lower that 0 or higher that 5!");
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[Player][Level] = Amount;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(Amount != 0) { if(ServerInfo[CountReports] >= 1) { PlayerTextDrawShow(Player, ReportTD); Report(Player); } }
		    else HideReportsTD(Player);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(PlayerInfo[Player][DataSet] == 0)
			{
			    PlayerInfo[Player][AdminTimeConnect] = gettime();
		 		PlayerInfo[Player][DataSet] = 1;
		 		UpdatePlayer(PN(Player), "DataSet", 1);
	        	DataSetTimer(Player);
	        }
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		UpdatePlayer(PN(Player), "Level", Amount);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof(eString), "Administrator '%s' has seted your admin level '%d'!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' admin level to '%d'!", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			eLog[0] = EOS; format(eLog, sizeof(eLog), "RCON: \"%s\" has set \"%s\" Level to ''%d''!", PN(playerid), PN(Player), Amount), SendRconLog(eLog);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET LEVEL");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    }
	    if(strcmp(rParam, "vip", 		true) 	== 0)
		{
			if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(CheckAvailableID(playerid, Player) == 0) return SendError(playerid, "You cannot set for other players stats! Only for you!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(Amount == 3 && liDays == -1) return
	        SendError(playerid, "You must type the amount of days if you want to give temporary VIP");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(Amount == 4 && liDays == -1) return
	        SendError(playerid, "You must type the amount of days if you want to give temporary VIP");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(Amount > 4) return
	        SendError(playerid, "Invalid VIP type!"), SCM(playerid, RED, "VIP TYPES: {00F7FF}1 = VIP NORMAL PERM | 2 = VIP GOLD PERM | 3 = VIP NORMAL TEMP + DAY(S) | 4 = VIP GOLD TEMP + DAY(S)");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        AdminCMD(playerid, "SET VIP");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    switch(Amount)
		    {
		      case 0:
		      {
		        if(PlayerInfo[Player][pVIP] == 0) return SendError(playerid, "Player is not VIP member!");
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerInfo[Player][VIPTime] = 0, PlayerInfo[Player][TVip] = 0;
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            UpdatePlayer(PN(Player), "VIP", 0);
	            UpdatePlayer(PN(Player), "TempVIP", 0);
	            UpdatePlayer(PN(Player), "VIPTime", 0);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(eString, sizeof(eString), "You have Successfully demoted \"%s\" of VIP!", PN(Player));
		        SCM(playerid, ABLUE, eString);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(eString, sizeof(eString), "Administrator \"%s\" has demoted you of VIP!", PN(playerid));
		        SCM(Player, ABLUE, eString);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            eLog[0] = EOS; format(eLog, sizeof(eLog), "RCON: %s demoted %s of VIP.", PN(playerid), PN(Player)), SendRconLog(eLog);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            PlayerInfo[Player][pVIP] = 0, PlayerInfo[Player][TVip] = 0;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        if(PlayerInfo[Player][TVip] == 1) PlayerInfo[Player][VIPTime] = 0, PlayerInfo[Player][TVip] = 0;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(Player, 1057, 0.0, 0.0, 0.0);
		      }
		      case 1:
		      {
		   	    format(eString, sizeof(eString), "You have Successfully has set \"%s\" Vip to 'Normal'!", PN(Player));
				SCM(playerid, ABLUE, eString);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(eString, sizeof(eString), "Administrator \"%s\" has set your Vip to 'Normal'!", PN(playerid));
				SCM(Player, ABLUE, eString);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				eLog[0] = EOS; format(eLog, sizeof(eLog), "RCON: %s made %s VIP Normal.", PN(playerid), PN(Player)), SendRconLog(eLog);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerInfo[Player][pVIP] = 1;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   			if(PlayerInfo[Player][TVip] == 1) PlayerInfo[Player][VIPTime] = 0, PlayerInfo[Player][TVip] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				UpdatePlayer(PN(Player), "VIP", 1);
				UpdatePlayer(PN(Player), "TempVIP", 0);
	            UpdatePlayer(PN(Player), "VIPTime", 0);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerPlaySound(Player, 1057, 0.0, 0.0, 0.0);
		      }
		      case 2:
		      {
		   	    format(eString, sizeof(eString), "You have Successfully has set \"%s\" Vip to 'Gold'!", PN(Player));
				SCM(playerid, ABLUE, eString);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(eString, sizeof(eString), "Administrator \"%s\" has set your Vip to 'Gold'!", PN(playerid));
				SCM(Player, ABLUE, eString);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				eLog[0] = EOS; format(eLog, sizeof(eLog), "RCON: %s made %s VIP Gold.", PN(playerid), PN(Player)), SendRconLog(eLog);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerInfo[Player][pVIP] = 2;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(PlayerInfo[Player][TVip] == 1) PlayerInfo[Player][VIPTime] = 0, PlayerInfo[Player][TVip] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				UpdatePlayer(PN(Player), "VIP", 2);
				UpdatePlayer(PN(Player), "TempVIP", 0);
	            UpdatePlayer(PN(Player), "VIPTime", 0);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerPlaySound(Player, 1057, 0.0, 0.0, 0.0);
		      }
		      case 3:
		      {
	            format(eString, sizeof(eString), "You have Successfully has set \"%s\" Vip to 'Normal' for '%d' day(s)!", PN(Player), liDays);
				SCM(playerid, ABLUE, eString);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(eString, sizeof(eString), "Administrator \"%s\" has set your Vip to 'Normal' for '%d' day(s)!", PN(playerid), liDays);
				SCM(Player, ABLUE, eString);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				eLog[0] = EOS; format(eLog, sizeof(eLog), "RCON: %s made %s VIP Normal for %d Day(s).", PN(playerid), PN(Player), liDays), SendRconLog(eLog);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            PlayerInfo[Player][pVIP] = 1, PlayerInfo[Player][VIPTime] = gettime() + (liDays*86400), PlayerInfo[Player][TVip] = 1;
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            UpdatePlayer(PN(Player), "VIP", 1);
	            UpdatePlayer(PN(Player), "TempVIP", 1);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `VIPTime` = %d + (%d*86400) WHERE `ID` = '%d'", gettime(), liDays, PlayerInfo[Player][AccID]);
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerPlaySound(Player, 1057, 0.0, 0.0, 0.0);
	          }
		      case 4:
		      {
	            format(eString, sizeof(eString), "You have Successfully has set \"%s\" Vip to 'Gold' for '%d' day(s)!", PN(Player), liDays);
				SCM(playerid, ABLUE, eString);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(eString, sizeof(eString), "Administrator \"%s\" has set your Vip to 'Gold' for '%d' day(s)!", PN(playerid), liDays);
				SCM(Player, ABLUE, eString);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				eLog[0] = EOS; format(eLog, sizeof(eLog), "RCON: %s made %s VIP Gold for %d Day(s).", PN(playerid), PN(Player), liDays), SendRconLog(eLog);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            PlayerInfo[Player][pVIP] = 2, PlayerInfo[Player][VIPTime] = gettime() + (liDays*86400), PlayerInfo[Player][TVip] = 1;
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            UpdatePlayer(PN(Player), "VIP", 2);
	            UpdatePlayer(PN(Player), "TempVIP", 1);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `VIPTime` = %d + (%d*86400) WHERE `ID` = '%d'", gettime(), liDays, PlayerInfo[Player][AccID]);
				mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerPlaySound(Player, 1057, 0.0, 0.0, 0.0);
		      }
	    	}
		}
		if(strcmp(rParam, "coins", 		true) 	== 0)
		{
		    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
			//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(CheckAvailableID(playerid, Player) == 0) return SendError(playerid, "You cannot set for other players stats! Only for you!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[Player][Coins] = Amount;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdatePlayer(PN(Player), "Coins", Amount);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof(eString), "Administrator '%s' has seted your '%d' coins!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' coins to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eLog, sizeof(eLog), "RCON: \"%s\" has set \"%s\" Coins to ''%d''!", PN(playerid), PN(Player), Amount), SendRconLog(eLog);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET COINS");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    }
		if(strcmp(rParam, "gems", 	true) 	== 0)
        {
	        if(PlayerInfo[playerid][RconType] < 3) return SendError(playerid, "You are not allowed tu use this command!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount < 0 || Amount > 1000) return SendError(playerid, "You cannot set a big amount of gems! You can set from 0 to 1000!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] + Amount);
		    PlayerInfo[Player][Gems] = Amount;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof(eString), "Administrator '%s' has seted your '%d' gems!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' gems to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdatePlayer(PN(Player), "Gems", Amount);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eLog, sizeof(eLog), "Manager: \"%s\" has set \"%s\" gems to ''%d''!", PN(playerid), PN(Player), Amount), SendRconLog(eLog);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET GEMS");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    }
   		if(strcmp(rParam, "deaths", 	true) 	== 0)
		{
		    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(CheckAvailableID(playerid, Player) == 0) return SendError(playerid, "You cannot set for other players stats! Only for you!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[Player][Deaths] = Amount;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdatePlayer(PN(Player), "Deaths", Amount);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof(eString), "Administrator '%s' has seted your '%d' deaths!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' deaths to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eLog, sizeof(eLog), "RCON: \"%s\" has set \"%s\" Deaths to ''%d''!", PN(playerid), PN(Player), Amount), SendRconLog(eLog);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET DEATHS");
		}
		if(strcmp(rParam, "stunt", 		true) 	== 0)
		{
		    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(CheckAvailableID(playerid, Player) == 0) return SendError(playerid, "You cannot set for other players stats! Only for you!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[Player][StuntPoints] = Amount;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdatePlayer(PN(Player), "StuntScore", Amount);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof(eString), "Administrator '%s' has seted your '%d' stunt points!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' stunts to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eLog, sizeof(eLog), "RCON: \"%s\" has set \"%s\" Stunt Points to ''%d''!", PN(playerid), PN(Player), Amount), SendRconLog(eLog);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET STUNT");
	    }
		if(strcmp(rParam, "drift", 		true) 	== 0)
		{
		    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(CheckAvailableID(playerid, Player) == 0) return SendError(playerid, "You cannot set for other players stats! Only for you!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[Player][DriftPoints] = Amount;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdatePlayer(PN(Player), "DriftScore", Amount);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "Administrator '%s' has seted your '%d' drift points!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' drifts to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eLog, sizeof(eLog), "RCON: \"%s\" has set \"%s\" Drift Points to ''%d''!", PN(playerid), PN(Player), Amount), SendRconLog(eLog);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET DRIFT");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    }
		if(strcmp(rParam, "race", 		true) 	== 0)
		{
		    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(CheckAvailableID(playerid, Player) == 0) return SendError(playerid, "You cannot set for other players stats! Only for you!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[Player][RacePoints] = Amount;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdatePlayer(PN(Player), "RaceScore", Amount);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof(eString), "Administrator '%s' has seted your '%d' race points!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' races to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eLog, sizeof(eLog), "RCON: \"%s\" has set \"%s\" Race Points to ''%d''!", PN(playerid), PN(Player), Amount), SendRconLog(eLog);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET RACE");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    }
		if(strcmp(rParam, "kills", 		true) 	== 0)
		{
		    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(CheckAvailableID(playerid, Player) == 0) return SendError(playerid, "You cannot set for other players stats! Only for you!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[Player][Kills] = Amount;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdatePlayer(PN(Player), "Kills", Amount);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof(eString), "Administrator '%s' has seted your '%d' kills!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' kills to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eLog, sizeof(eLog), "RCON: \"%s\" has set \"%s\" Kills to ''%d''!", PN(playerid), PN(Player), Amount), SendRconLog(eLog);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET KILLS");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    }
		if(strcmp(rParam, "c4", 		true) 	== 0)
		{
		    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(CheckAvailableID(playerid, Player) == 0) return SendError(playerid, "You cannot set for other players stats! Only for you!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[Player][C4] = Amount;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof(eString), "Administrator '%s' has seted your '%d' C4s!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' C4 to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eLog, sizeof(eLog), "RCON: \"%s\" has set \"%s\" C4 to ''%d''!", PN(playerid), PN(Player), Amount), SendRconLog(eLog);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET C4");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    }
		if(strcmp(rParam, "respect+", 	true) 	== 0)
		{
		    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(CheckAvailableID(playerid, Player) == 0) return SendError(playerid, "You cannot set for other players stats! Only for you!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[Player][PosRespect] = Amount;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof(eString), "Administrator '%s' has seted your '%d' positive respect points!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' positive respect to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eLog, sizeof(eLog), "RCON: \"%s\" has set \"%s\" Positive Respect to ''%d''!", PN(playerid), PN(Player), Amount), SendRconLog(eLog);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET RESPECT+");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    }
		if(strcmp(rParam, "respect-", 	true) 	== 0)
		{
		    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(CheckAvailableID(playerid, Player) == 0) return SendError(playerid, "You cannot set for other players stats! Only for you!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[Player][NegRespect] = Amount;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof(eString), "Administrator '%s' has seted your '%d' negative respect points!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' negative respect to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eLog, sizeof(eLog), "RCON: \"%s\" has set \"%s\" Negative Respect to ''%d''!", PN(playerid), PN(Player), Amount), SendRconLog(eLog);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET RESPECT-");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    }
		if(strcmp(rParam, "hours", 		true) 	== 0)
		{
		    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(CheckAvailableID(playerid, Player) == 0) return SendError(playerid, "You cannot set for other players stats! Only for you!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[Player][hours] = Amount;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdatePlayer(PN(Player), "Hours", Amount);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof(eString), "Administrator '%s' has seted your '%d' hours!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' hours to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eLog, sizeof(eLog), "RCON: \"%s\" has set \"%s\" Hours to ''%d''!", PN(playerid), PN(Player), Amount), SendRconLog(eLog);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET HOURS");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    }
		if(strcmp(rParam, "money", 		true) 	== 0)
		{
		    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(CheckAvailableID(playerid, Player) == 0) return SendError(playerid, "You cannot set for other players stats! Only for you!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SCM(playerid, RED, "ITEMS: {00F7FF}skin, time, weather, interior, world, money"), SCM(playerid, RED, "{00F7FF}armour, health, c4, rank, coins, hours, kills"), SCM(playerid, RED, "{00F7FF}stunt, drift, race, level, vip, hours, owner");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    ResetPlayerMoney(Player), GivePlayerMoney(Player, Amount);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[Player][Money] = Amount;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdatePlayer(PN(Player), "Cash", Amount);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof(eString), "Administrator '%s' has seted your '%d' money!", PN(playerid), Amount), SCM(Player, ABLUE, eString);
		    PlayerPlaySound(Player,1057,0.0,0.0,0.0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "You have seted '%s' money to '%d'", PN(Player), Amount), SCM(playerid, ABLUE, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eLog, sizeof(eLog), "RCON: \"%s\" has set \"%s\" Money to ''%d''!", PN(playerid), PN(Player), Amount), SendRconLog(eLog);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "SET MONEY");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    }
	    if(strcmp(rParam, "owner", 		true) 	== 0)
		{
		    if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(CheckAvailableID(playerid, Player) == 0) return SendError(playerid, "You cannot set for other players stats! Only for you!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[Player][ClanID] != 0) return SendError(playerid, "This player is member any clan!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1)
			{
				if(PlayerInfo[Player][GangID] >= 1)
				{
					if(PlayerInfo[Player][g_Rank] == 8)
					{
				        format(eString, sizeof(eString), "Administrator '%s' has demoted you Owner in '%s' gang!", PN(playerid), GangInfo[PlayerInfo[Player][GangID]][GangName]), SCM(Player, ABLUE, eString);
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        PlayerPlaySound(Player,1057,0.0,0.0,0.0), PlayerInfo[Player][g_Rank] = 1;
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    format(eString, sizeof(eString), "You have demoted '%s' owner in gang '%s'", PN(Player), GangInfo[PlayerInfo[Player][GangID]][GangName]), SCM(playerid, ABLUE, eString);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    format(eLog, sizeof(eLog), "RCON: \"%s\" has demoted \"%s\" owner in gang \"%s\"!", PN(playerid), PN(Player), GangInfo[PlayerInfo[Player][GangID]][GangName]), SendRconLog(eLog);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    AdminCMD(playerid, "SET OWNER");
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					}
					else
					{
					    format(eString, sizeof(eString), "Administrator '%s' has made you Owner in '%s' gang!", PN(playerid), GangInfo[PlayerInfo[Player][GangID]][GangName]), SCM(Player, ABLUE, eString);
         				//++++++++++++++++++++++++++++++++++++++++++++++++++++++
				        PlayerPlaySound(Player,1057,0.0,0.0,0.0), PlayerInfo[Player][g_Rank] = 8;
				        //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    format(eString, sizeof(eString), "You have make '%s' owner in gang '%s'", PN(Player), GangInfo[PlayerInfo[Player][GangID]][GangName]), SCM(playerid, ABLUE, eString);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    format(eLog, sizeof(eLog), "RCON: \"%s\" has made \"%s\" owner in gang \"%s\"!", PN(playerid), PN(Player), GangInfo[PlayerInfo[Player][GangID]][GangName]), SendRconLog(eLog);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    PlayerInfo[Player][gWarnInGang][PlayerInfo[Player][GangID]] = 0;
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    AdminCMD(playerid, "SET OWNER");
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					}
        		}
        		else SendError(playerid, "This player is not in any gang!");
			}
			else if(Amount >= 1)
			{
	            if(PlayerInfo[Player][GangID] >= 1) return SendError(playerid, "Player is in a gang!");
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            if(Amount < 1 || Amount > TotalGangs) return SendError(playerid, "Invalid Gang ID!");
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerInfo[Player][GangID] = Amount;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(eString, sizeof(eString), "Administrator '%s' has made you Owner in '%s' gang!", PN(playerid), GangInfo[Amount][GangName]), SCM(Player, ABLUE, eString);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerPlaySound(Player,1057,0.0,0.0,0.0), PlayerInfo[Player][g_Rank] = 8, SpawnPlayer(Player), Announce(Player, "~W~Welcome~n~~W~Type~R~~H~ /gm~W~ for online members~N~and~G~~H~ /gang~W~ for help", 6000, 3);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(eString, sizeof(eString), "You have make '%s' owner in gang '%s'", PN(Player), GangInfo[Amount][GangName]), SCM(playerid, ABLUE, eString);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    new date[3]; getdate(date[0], date[1], date[2]);
        		format(PlayerInfo[Player][GangMemberSince], 24, "%d %s, %d", date[2], GetMonth(), date[0]);
        		PlayerInfo[Player][g_Time][5]	= gettime();
        		//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(eLog, sizeof(eLog), "RCON: \"%s\" has made \"%s\" owner in gang \"%s\"!", PN(playerid), PN(Player), GangInfo[Amount][GangName]), SendRconLog(eLog);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    PlayerInfo[Player][gWarnInGang][Amount] = 0;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    AdminCMD(playerid, "SET OWNER");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    	}
	    }
  		return true;
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Admin Raport System
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:raport(playerid)
{
    if(PlayerInfo[playerid][Level] < 1) return SendError(playerid, "You are not be admin to use this command!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new String[2048], String2[24];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][r_Total] < Raport[GetTotal]) String2 = "{FF0000}Completed";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else String2 = "{FF0000}Incompleted";
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, sizeof(String), "{FFFF00}The report expires every {FF0000}24 hours {FFFF00}/ {FF0000}1 day {FFFF00}!\n\
									{FFFF00}Complete it as quickly as possible to avoid inactivity!\n\n\
									{FF6F00}Player Information\n\
                                    {00FF22}Admin Name: {FF0000}%s\n\
									{00FF22}Admin Level: {00F7FF}%d\n\
									{00FF22}Admin Warns: {00F7FF}%d/5\n\
									{00FF22}Incomplete raports: {00F7FF}%d/%d\n\n\
									{FF6F00}Raport Statistics\n\
									{00FF22}Players Bannned: {00F7FF}%d/%d\n\
									{00FF22}Players Warns: {00F7FF}%d/%d\n\
									{00FF22}Players Kicks: {00F7FF}%d/%d\n\
									{00FF22}Players Jails: {00F7FF}%d/%d\n\
									{00FF22}Players Mutes: {00F7FF}%d/%d\n\
									{00FF22}Reports Solved: {00F7FF}%d/%d\n\
									{00FF22}Events Made: {00F7FF}%d/%d\n\n\
									{FF6F00}Raport Information\n\
									{00FF22}Raport Check: {00F7FF}%d/{FF0000}%d {00FF22}(Status: %s{00FF22}) {00FF22}- Progress: {FF0000}%s{00FF22}!\n\n\
									{FFFFFF}* The report system will be very useful for inactive players with the admin rank.\n\
									{FFFFFF}If you do not fill out a report on a daily basis, you will receive 1/3!\n\
									{FFFFFF}If you do not complete or make the minimum day in the percentage with the minimum required.\n\
								    {FFFFFF}This will bring to the sacrifice for failing to complete the mandatory report by admin!", PN(playerid),
									PlayerInfo[playerid][Level], PlayerInfo[playerid][AWP], PlayerInfo[playerid][r_Check], Raport[RMax], PlayerInfo[playerid][r_Bans], Raport[RBans], PlayerInfo[playerid][r_Warns], Raport[RWarns],
									PlayerInfo[playerid][r_Kicks], Raport[RKicks], PlayerInfo[playerid][r_Jails], Raport[RJails], PlayerInfo[playerid][r_Mutes], Raport[RMutes], PlayerInfo[playerid][r_Reports], Raport[RReports],
									PlayerInfo[playerid][r_Events], Raport[REvents], CalculatePlayerRaport(playerid), CalculateRaport(), String2, CheckRaportProgress(playerid));
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SPD(playerid, DIALOG_EMPTY, MSGBOX, "Raport", String, "Close", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:checkraport(ESS)
{
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new String[128];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "u", params[0])) return SendUsage(playerid, "/checkraport [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][Level] == 0) return SendError(playerid, "This player are not be admin to view raport!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "{FFFFFF}Player {FF0000}%s{FFFFFF} - Raport!", PN(params[0]));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerConnected(params[0])) return SPD(playerid, DIALOG_EMPTY, MSGBOX, String, GetPlayerRaport(params[0]), "Close", "");
 	else Error(playerid, 10);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:rconfig(playerid)
{
    if(PlayerInfo[playerid][RconType] < 3) return Error(playerid, 8);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new String[1024];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, sizeof(String), "Raport Name\tMax Value\n\
                                    {00FF22}Max Bans\t{FFFF00}%d\n\
                                    {00FF22}Max Warns\t{FFFF00}%d\n\
                                    {00FF22}Max Kicks\t{FFFF00}%d\n\
                                    {00FF22}Max Jails\t{FFFF00}%d\n\
                                    {00FF22}Max Mutes\t{FFFF00}%d\n\
                                    {00FF22}Reports Solved\t{FFFF00}%d\n\
                                    {00FF22}Events Made\t{FFFF00}%d\n\
                                    {00FF22}Max Inactivity\t{FFFF00}%d\n\
									{00FF22}Max Raport\t{FFFF00}%d\n\
									{FF0000}Refresh and reload raports", Raport[RBans], Raport[RWarns], Raport[RKicks],
								    Raport[RJails], Raport[RMutes], Raport[RReports], Raport[REvents], Raport[RMax], Raport[RMaxRaport]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SPD(playerid, DIALOG_RAPORT_CONFIG, HEADERS, "Raport Config", String, "Select", "Close");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetVariableStatus(status)
{
	new string[25];
	switch(status)
	{
	    case 0: string = "{FF0000}Disabled";
	    case 1: string = "{00CC00}Enabled";
	}
	return string;
}
CMD:config(playerid)
{
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 8);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new String[1024]; 
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, sizeof(String), "Config\tDescription\tStatus\n\
									{00CC00}Hostname changer\t{FFFFFF}Change hostname to on/off\t{FFFF00}%s\n\
									{00CC00}Change Hostname String\t{FFFFFF}Change the hostname of the server\t{FFFF00}Changed by: %s\n\
									{00CC00}Outdata version\t{FFFFFF}Change auto kick to on/off when it's outdata the version\t{FFFF00}%s\n\
									{00CC00}Spawn Zone Settings\t{FFFFFF}Edit spawn/checkpoint position\t{FFFF00}-",
									GetVariableStatus(ServerInfo[ServerHNC]), ServerInfo[HostNameChangedBy], GetVariableStatus(ServerInfo[AntiVersionOutData]));
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SPD(playerid, DIALOG_CONFIG, HEADERS, "Server Config", String, "Select", "Close");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerRaport(playerid)
{
	new String[2048], String2[24];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][r_Total] < Raport[GetTotal]) String2 = "{FF0000}Completed";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else String2 = "{FF0000}Incompleted";
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, sizeof(String), "{FFFF00}The report expires every {FF0000}24 hours {FFFF00}/ {FF0000}1 day {FFFF00}!\n\
									{FFFF00}Complete it as quickly as possible to avoid inactivity!\n\n\
									{FF6F00}Player Information\n\
                                    {00FF22}Admin Name: {FF0000}%s\n\
									{00FF22}Admin Level: {00F7FF}%d\n\
									{00FF22}Admin Warns: {00F7FF}%d/5\n\
									{00FF22}Incomplete raports: {00F7FF}%d/%d\n\n\
									{FF6F00}Raport Statistics\n\
									{00FF22}Players Bannned: {00F7FF}%d/%d\n\
									{00FF22}Players Warns: {00F7FF}%d/%d\n\
									{00FF22}Players Kicks: {00F7FF}%d/%d\n\
									{00FF22}Players Jails: {00F7FF}%d/%d\n\
									{00FF22}Players Mutes: {00F7FF}%d/%d\n\
									{00FF22}Reports Solved: {00F7FF}%d/%d\n\
									{00FF22}Events Made: {00F7FF}%d/%d\n\n\
									{FF6F00}Raport Information\n\
									{00FF22}Raport Check: {00F7FF}%d/{FF0000}%d {00FF22}(Status: %s{00FF22}) {00FF22}- Progress: {FF0000}%s{00FF22}!\n\n\
									{FFFFFF}* The report system will be very useful for inactive players with the admin rank.\n\
									{FFFFFF}If you do not fill out a report on a daily basis, you will receive 1/3!\n\
									{FFFFFF}If you do not complete or make the minimum day in the percentage with the minimum required.\n\
								    {FFFFFF}This will bring to the sacrifice for failing to complete the mandatory report by admin!", PN(playerid),
									PlayerInfo[playerid][Level], PlayerInfo[playerid][AWP], PlayerInfo[playerid][r_Check], Raport[RMax], PlayerInfo[playerid][r_Bans], Raport[RBans], PlayerInfo[playerid][r_Warns], Raport[RWarns],
									PlayerInfo[playerid][r_Kicks], Raport[RKicks], PlayerInfo[playerid][r_Jails], Raport[RJails], PlayerInfo[playerid][r_Mutes], Raport[RMutes], PlayerInfo[playerid][r_Reports], Raport[RReports],
									PlayerInfo[playerid][r_Events], Raport[REvents], CalculatePlayerRaport(playerid), CalculateRaport(), String2, CheckRaportProgress(playerid));
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CalculateRaport()
{
	new Total = 0;
	mysql_query(SQL, "SELECT * FROM `Raports` WHERE `ID`");
	new rows; cache_get_row_count(rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i; i < rows; i++)
	{
		CACHE(i, "Bans", Raport[RBans]);
	    CACHE(i, "Kicks", Raport[RKicks]);
	    CACHE(i, "Warns", Raport[RWarns]);
	    CACHE(i, "Kicks", Raport[RKicks]);
	    CACHE(i, "Jails", Raport[RJails]);
	    CACHE(i, "Mutes", Raport[RMutes]);
	    CACHE(i, "Reports", Raport[RReports]);
	    CACHE(i, "Events", Raport[REvents]);
	    CACHE(i, "Inactivity", Raport[RMax]);
	    CACHE(i, "MaxRaports", Raport[RMaxRaport]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Total = (Raport[RBans] + Raport[RKicks] + Raport[RWarns] + Raport[RJails] + Raport[RMutes] + Raport[RReports] + Raport[REvents]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Raport[GetTotal] = Total;
	}
    return Total;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CalculatePlayerRaport(playerid)
{
    new Total = 0; Total = (PlayerInfo[playerid][r_Bans] + PlayerInfo[playerid][r_Warns] + PlayerInfo[playerid][r_Kicks] + PlayerInfo[playerid][r_Jails] + PlayerInfo[playerid][r_Mutes] + PlayerInfo[playerid][r_Reports] + PlayerInfo[playerid][r_Events]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][r_Total] = Total;
    return PlayerInfo[playerid][r_Total];
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CheckRaportProgress(playerid)
{
	new String[24];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][r_Total] == 100) String = "100";
	else format(String, sizeof(String), "%d.0", PlayerInfo[playerid][r_Total]);
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SavePlayerRaport(playerid)
{
	UpdatePlayer(PN(playerid), "RBans", PlayerInfo[playerid][r_Bans]);
	UpdatePlayer(PN(playerid), "RWarns", PlayerInfo[playerid][r_Warns]);
	UpdatePlayer(PN(playerid), "RKicks", PlayerInfo[playerid][r_Kicks]);
	UpdatePlayer(PN(playerid), "RJails", PlayerInfo[playerid][r_Jails]);
	UpdatePlayer(PN(playerid), "RMutes", PlayerInfo[playerid][r_Mutes]);
	UpdatePlayer(PN(playerid), "RReports", PlayerInfo[playerid][r_Reports]);
	UpdatePlayer(PN(playerid), "AdminCheck", PlayerInfo[playerid][r_Check]);
	UpdatePlayer(PN(playerid), "REvents", PlayerInfo[playerid][r_Events]);
	UpdatePlayer(PN(playerid), "RTotal", PlayerInfo[playerid][r_Total]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SaveRaports();
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SaveRaports()
{
	eQuery[0] = EOS;
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Raports` SET `Bans` = '%d', `Kicks` = '%d', `Warns` = '%d', `Jails` = '%d', `Mutes` = '%d', `Reports` = '%d', `Events` = '%d', `Inactivity` = '%d', `MaxRaports` = '%d' WHERE 1",
    Raport[RBans], Raport[RKicks], Raport[RWarns], Raport[RJails], Raport[RMutes], Raport[RReports], Raport[REvents], Raport[RMax], Raport[RMaxRaport]);
    mysql_tquery(SQL, eQuery, "", "");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Admin Command List
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:ahelp(playerid) return cmd_acmds(playerid);
CMD:acmds(playerid)
{
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 8);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    strcat(eString, "{FFFFFF}The list contains a quick review of the commands to which you have access!\n\n");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Level] >= 1)
	{
		strcat(eString, "{FF0000}Level 1 Commands:\n");
	    strcat(eString, "{00CC00}/reports, /res, /spec, /disarm, /eject, /kick, /explode, /clearchat(/cc), /mute\n");
	    strcat(eString, "{00CC00}/unmute, /muted, /jail, /unjail, /jailed, /weaps, /freeze, /unfreeze, /frozen, /hidetag\n");
	    strcat(eString, "\n");
    }
    if(PlayerInfo[playerid][Level] >= 2)
    {
	    strcat(eString, "{FF0000}& Level 2 Commands:\n");
	    strcat(eString, "{00CC00}/event, /warn, /asay, /set skin, /set time, /set weather, /set interior, /set world\n");
	    strcat(eString, "{00CC00}/get, /goto, /weaps\n");
	    strcat(eString, "\n");
    }
    if(PlayerInfo[playerid][Level] >= 3)
    {
	    strcat(eString, "{FF0000}& Level 3 Commands:\n");
	    strcat(eString, "{00CC00}/spawn, /aka, /ban, /slap, /announce, /teleplayer, /rweap\n");
	    strcat(eString, "\n");
    }
    if(PlayerInfo[playerid][Level] >= 4)
    {
	    strcat(eString, "{FF0000}& Level 4 Commands:\n");
	    strcat(eString, "{00CC00}/giveweapon, /write, /set health, /set armour, /setcolor, /screen\n");
	    strcat(eString, "\n");
    }
    if(PlayerInfo[playerid][Level] >= 5)
    {
	    strcat(eString, "{FF0000}& Level 5 Commands:\n");
	    strcat(eString, "{00CC00}/god(/godmode), /godcar, /akill, /freezeall, /unfreezeall, /healall, /armourall\n");
	    strcat(eString, "{00CC00}/gotop, /setall time, /setall skin, /giveallweapon, /disarmall\n");
	    strcat(eString, "\n");
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    strcat(eString, "{FFFFFF}Besides these commands, you also have access to admin chat by typing{FF0000} @{FFFFFF} symbol in chat.\n");
    strcat(eString, "{FFFFFF}For more details regarding you admin activity, check {FF0000}/astats{FFFFFF} and also{FF0000} "SERVER_WEBSITE"/admins{FFFFFF}!\n");
    return SPD(playerid, DIALOG_EMPTY, MSGBOX, "Admin Help", eString, "Close", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Admin System - Level 1
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:aimcheck(ESS)
{
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
	//--------------------------------------------------------------------------
	if(sscanf(params, "s[10]", params[0])) return SendUsage(playerid, "/aimcheck [Player/OFF]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(params[0], "off", true) == 0)
	{
	    PlayerInfo[playerid][AimcheckActivated] = 0, PlayerInfo[playerid][AimCheckActivatedForID] = -1;
   		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	Announce(playerid, "~R~~H~Aimcheck~N~~W~~H~Deactivated~R~~H~!", 4000, 4);
       	return true;
	}
	if(!IsPlayerConnected(strval(params[0])) || strval(params[0]) == playerid) return Error(playerid, 3);
	else
	{
		if(PlayerInfo[playerid][AimcheckActivated] == 1) PlayerInfo[playerid][AimcheckActivated] = 0, PlayerInfo[playerid][AimCheckActivatedForID] = -1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       	PlayerInfo[playerid][AimcheckActivated] = 1;
       	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       	PlayerInfo[playerid][AimCheckActivatedForID] = params[0];
       	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Announce(playerid, "~R~~H~Aimcheck~N~~W~~H~Activated~R~~H~!", 4000, 4);
		return true;
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:warn(ESS)
{
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Strs[128]; eString[0] = EOS;
   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "us[128]", params[0], params[1])) return SendUsage(playerid, "/warn [ID/Name] [Reason]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][PWarns]++, PlayerInfo[params[0]][Warnings]++;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][r_Warns] == Raport[RWarns]) return true;
	else PlayerInfo[playerid][r_Warns]++;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[params[0]][Warnings] >= 5)
	{
       	format(eString, sizeof(eString), "Administrator {FF0000}%s{D1D1D1} has banned {00A6FF}%s {D1D1D1}for {00A6FF}10 {D1D1D1}Days. (Reason: %s %d/5 Warns)", PN(playerid), PN(params[0]), params[1], PlayerInfo[params[0]][Warnings]);
		SCMALL(GREY2, eString);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		eLog[0] = EOS; format(eLog, sizeof(eLog), "%s has been warned by %s (Warnings: 5/5). Reason: %s)", PN(params[0]), PN(playerid), params[1]), SendLog(eLog, 3), KickPlayer(params[0]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[params[0]][PWarns] = 0, PlayerInfo[params[0]][Warnings] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(Strs, sizeof(Strs), "%s 5/5 Warns", params[1]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		BanPlayer(GetPlayerIPEx(params[0]), PN(params[0]), PN(playerid), params[1], 10);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SendPlayerBanMessage(params[0], PN(playerid), 10, Strs);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		AdminCMD(playerid, "WARN"), PlayerInfo[playerid][Activity] += 1;
	}
    else
	{
	    new String[512];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(String, 150, "***Admin {00A6FF}%s{FFFF00} has given {FF0000}%s {FFFF00}a warning. (Warning: %d/5)", PN(playerid), PN(params[0]), PlayerInfo[params[0]][Warnings]);
		SCMALL(YELLOW, String);
		format(String, 150, "{00A6FF}Reason: {FFFF00}%s", params[1]);
		SCMALL(-1, String);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		AdminCMD(playerid, "WARN"), PlayerInfo[playerid][Activity] += 1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		eLog[0] = EOS; format(eLog, sizeof(eLog), "%s has been warned by %s (Warnings: %d/5). Reason: %s.)", PN(params[0]), PN(playerid), PlayerInfo[params[0]][Warnings], params[1]), SendLog(eLog, 3);
	}
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:gotohouse(ESS)
{
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "d", params[0])) return SendUsage(playerid, "/gotohouse [House ID]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerPos(playerid, HouseInfo[params[0]][HX], HouseInfo[params[0]][HY], HouseInfo[params[0]][HZ]);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:gotoprop(ESS)
{
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "d", params[0])) return SendUsage(playerid, "/gotoprop [Prop ID]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerPos(playerid, PropInfo[params[0]][PropX], PropInfo[params[0]][PropY], PropInfo[params[0]][PropZ]);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:rac(ESS)
{
	if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AdminCMD(playerid, "RAC");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "All unused cars has been respawned by Administrator %s.", PN(playerid));
	SCMALL(ABLUE, String);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i : Player)
	{
		if(PlayerInfo[i][JobID] != 0) return true;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		else
		{
	 		RespawnCars();
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:hidetag(playerid)
{
	if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(HideTag[playerid] == 0) HideTag[playerid] = 1, Announce(playerid, "~w~Your hidden~n~tag has been~n~~g~~h~activated~h~~w~!", 6000, 3);
	else HideTag[playerid] = 0, Announce(playerid, "~w~Your hidden~n~tag has been~n~~r~~h~deactivated~h~~w~!", 6000, 3);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:bug(ESS)
{
	SPD(playerid, DIALOG_BUG, INPUT, "{FFFFFF}Raportare probleme legate de server", "{FFFF00}Daca ai gasit vre-o problema legata de server\n{00FF22}Sau vrun bug te rugam sa scrii mai jos problema!\n\n{FF0000}* NU TRIMITETI RAPOARTE INUTILE IN CAZ CONTRAL VEI PRIMI BAN PERMANENT!", "Send", "Close");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:bugs(ESS)
{
    if(ServerProtection == 1) return SendErrorEx(playerid, "Nu poti folosi momental aceasta comanda! Te rugam sa incerci mai tarziu.");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Level] < 5) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Count, String2[2048], String_Bug[1048], String_Player[24], String_Status[24]; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_query(SQL, "SELECT * FROM `Bugs` WHERE `ID`");
	new rows; cache_get_row_count(rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i; i < rows; i++)
	{
	    new CheckStatus;
		CACHE(i, "Status", CheckStatus);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CONTENT(i, "Bug", String_Bug);
	 	CONTENT(i, "Player", String_Player);
	 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	if(CheckStatus == 0) String_Status = "{FF0000}Nerezolvat";
	 	else if(CheckStatus == 1) String_Status = "{00FF22}Rezolvat";
	 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	format(String2, sizeof(String2), "{FFFFFF}%s\t{FFFF00}%s\t%s\n%s", String_Bug, String_Player, String_Status, String2);
 		format(eString, sizeof(eString), "\tBug\tPlayer\tStatus\n\
                                		%s", String2);
	 	Count++;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_FIX_BUG, HEADERS, "{FFFFFF}Raportare probleme legate de server", eString, "Option", "Close");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:reports(ESS)
{
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new bool:First2 = false, Count, String[1024], String2[1024];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) if(PlayerInfo[i][ReportedPlayer]) Count++;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(Count == 0) return Announce(playerid, "~R~~H~No~W~~H~ active reports!", 3000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player)
    {
		if(PlayerInfo[i][ReportedPlayer])
	    {
	        if(!First2)
	        {
	            format(String2, sizeof(String2), "{00CC00}#{FFFFFF}%d {FF6600}%s{FFFFFF} reported{FF0000} %s{FFFFFF} : %s", i, PlayerInfo[i][ReportedByPlayer], PN(i), PlayerInfo[i][ReportedByPlayerReason]);
	            First2 = true;
	        }
	        else format(String2, sizeof(String2), "%s\n{00CC00}#{FFFFFF}%d {FF6600}%s{FFFFFF} reported{FF0000} %s{FFFFFF} : %s", String2, i, PlayerInfo[i][ReportedByPlayer], PN(i), PlayerInfo[i][ReportedByPlayerReason]);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        format(String, sizeof(String), "{FF0000}Active reports{FFFFFF} - Use{FF6600} /res [id]{FFFFFF} to resolve the report!");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SPD(playerid, DIALOG_EMPTY, LIST, String, String2, "Close", "");
	    }
	}
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:res(ESS)
{
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new String[128], String2[128], Reception[10];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "iS", params[0], Reception)) return SendUsage(playerid, "/res [Report ID] [Reason(Optional)] {FF0000}|{FFFFFF} Check /reports!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0])) return SendError(playerid, "The specified report doesn't exist, please check /reports!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][ReportedPlayer] == 0) return SendError(playerid, "The specified report doesn't exist, please check /reports!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[params[0]][ReportedID] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(isnull(Reception)) { format(String, sizeof(String), "Your report has been resolved by Admin %s!", PN(playerid)); SCM(PlayerInfo[params[0]][Reporter], ABLUE, String); }
	else { format(String, sizeof(String), "Your report has been resolved by Admin %s(%s)!", PN(playerid), Reception); }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String2, sizeof(String2), "[ADMIN] {00CC00}%s {0066FF} has resolved report id {00CC00}#%d", PN(playerid), params[0]);
    MessageToAdmins(ABLUE, String2);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][ARClosed] += 1, ServerInfo[CountReports]--, PlayerInfo[playerid][r_Reports]++, PlayerInfo[params[0]][ReportedPlayer] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player) if(PlayerInfo[i][Level] >= 1) Report(i);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SolveReport();
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:disarm(ESS)
{
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "u", params[0])) return SendUsage(playerid, "/disarm [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0])) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerPlaySound(params[0], 1057, 0.0, 0.0, 0.0), ResetPlayerWeapons(params[0]), Announce(params[0], "~r~~h~Disarmed~w~~h~!", 3000, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    FormatMSG(playerid, ABLUE, "You have disarmed {0066FF}'%s'", PN(params[0]));
    FormatMSG(params[0], ABLUE, "Administrator '%s' has disarmed you", PN(playerid));
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "DISARM");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:jailed(ESS)
{
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new bool:First2 = false, Count, String[1024], String2[1024];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) if(PlayerInfo[i][Jailed]) Count++;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(Count == 0) return Announce(playerid, "~R~~H~No~W~~H~ players jailed!", 3000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player)
    {
		if(PlayerInfo[i][Jailed])
	    {
	        if(!First2)
	        {
	            format(String, sizeof(String), "{00CC00}#{FFFFFF}%d - {FF6600}%s {FFFFFF}by{FF0000} %s", i, PN(i), PlayerInfo[i][JailedByAdmin]);
	            First2 = true;
	        }
	        else format(String, sizeof(String), "%s\n{00CC00}#{FFFFFF}%d - {FF6600}%s {FFFFFF}by{FF0000} %s", String, i, PN(i), PlayerInfo[i][JailedByAdmin]);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        format(String2, sizeof(String2), "{FF0000}Jailed players:{FFFFFF} %d Use{00CC00} /unjail [id]{FFFFFF} to unjail!", Count);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SPD(playerid, DIALOG_EMPTY, LIST, String2, String, "Close", "");
		}
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:muted(ESS)
{
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new bool:First2 = false, Count, String[1024], String2[1024];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) if(PlayerInfo[i][Muted]) Count++;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(Count == 0) return Announce(playerid, "~R~~H~No~W~~h~ players muted!", 3000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player)
	{
		if(PlayerInfo[i][Muted])
	    {
	        if(!First2)
	        {
	            format(String2, sizeof(String2), "{00CC00}#{FFFFFF}%d - {FF6600}%s {FFFFFF}by{FF0000} %s", i, PN(i), PlayerInfo[i][MutedByAdmin]);
	            First2 = true;
	        }
	        else format(String2, sizeof(String2), "%s\n{00CC00}#{FFFFFF}%d - {FF6600}%s {FFFFFF}by{FF0000} %s", String2, i, PN(i), PlayerInfo[i][MutedByAdmin]);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        format(String, sizeof(String), "{FF0000}Muted players:{FFFFFF} %d Use{00CC00} /unmute [id]{FFFFFF} to unmute!", Count);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SPD(playerid, DIALOG_EMPTY, LIST, String, String2, "Close", "");
	    }
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:frozen(ESS)
{
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new bool:First2 = false, Count, String[1024], String2[1024];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) if(PlayerInfo[i][Frozen]) Count++;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(Count == 0) return Announce(playerid, "~R~~H~No~W~~h~ players frozen!", 3000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player)
	{
		if(PlayerInfo[i][Frozen])
	    {
	        if(!First2)
	        {
	            format(String2, sizeof(String2), "{00CC00}#{FFFFFF}%d - {FF6600}%s {FFFFFF}by{FF0000} %s", i, PN(i), PlayerInfo[i][FrozedByAdmin]);
	            First2 = true;
	        }
	        else format(String2, sizeof(String2), "%s\n{00CC00}#{FFFFFF}%d - {FF6600}%s {FFFFFF}by{FF0000} %s", String2, i, PN(i), PlayerInfo[i][FrozedByAdmin]);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        format(String, sizeof(String), "{FF0000}Frozen players:{FFFFFF} %d Use{00CC00} /unfreeze [id]{FFFFFF} to unfreeze!", Count);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SPD(playerid, DIALOG_EMPTY, LIST, String, String2, "Close", "");
	    }
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:fpm(ESS)
{
	if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Str[128], Str2[128], Str3[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "u", PlayerInfo[playerid][PMID])) return SendUsage(playerid, "/fpm [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerConnected(PlayerInfo[playerid][PMID]) && PlayerInfo[playerid][PMID] != INVALID_PLAYER_ID)
	{
		if(PlayerInfo[playerid][PMID] == playerid) return Error(playerid, 3);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[PlayerInfo[playerid][PMID]][LoggedIn] == 0) return SendError(playerid, "Player are not logged in account to send PM!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(Str2, sizeof(Str2), "Enter the text you want to send");
		strcat(Str, Str2, sizeof(Str));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(Str2, sizeof(Str2), "{3333FF}ADMIN PM {DBDBDB}send to %s(%d)", PN(PlayerInfo[playerid][PMID]), PlayerInfo[playerid][PMID]);
		strcat(Str3, Str2, sizeof(Str3));
	 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 		return SPD(playerid, DIALOG_ADMIN_PM, INPUT, Str3, Str, "Send", "Close");
	}
	else return Error(playerid, 3);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:kick(ESS)
{
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "us[50]", params[0], params[1])) return SendUsage(playerid, "/kick [ID/Name] [Reason]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(!IsPlayerConnected(params[0]) || params[0] == playerid) return Error(playerid, 3);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[params[0]][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if((gettime() - kicktime[playerid]) < 30) return SendError(playerid, "Please wait 30 secounds to kick another player!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][PKicks]++;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][r_Kicks] == Raport[RKicks]) return true;
	else PlayerInfo[playerid][r_Kicks]++;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new String[512];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, 150, "%s {D1D1D1}has been kicked by Admin {00A6FF}%s{D1D1D1}!", PN(params[0]), PN(playerid));
	SCMALL(RED, String);
	format(String, 150, "Reason: {00BBF6}%s", params[1]);
	SCMALL(GREY, String);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	eLog[0] = EOS; format(eLog, sizeof(eLog), "%s has been kicked by %s. Reason: %s", PN(params[0]), PN(playerid), params[1]), SendLog(eLog, 6);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetTimerEx("KickPlayer", 500, 0, "d", params[0]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AdminCMD(playerid, "KICK"), PlayerInfo[playerid][Activity] += 1;
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:explode(ESS)
{
    new Player, Float:burnx, Float:burny, Float:burnz;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "u", params[0])) return
	SendUsage(playerid, "/explode [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[params[0]][God] == 1) Announce(playerid, "~R~~H~Admin-Warning:~N~~Y~player has godmode!", 4000, 3);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(Player, burnx, burny, burnz),	CreateExplosion(burnx, burny , burnz, 7, 10.0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    FormatMSG(params[0], ABLUE, "You have been exploded by Administrator {0066FF}%s", PN(playerid));
    FormatMSG(playerid, ABLUE, "You have exploded {0066FF}%s", PN(Player));
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "EXPLODE"), PlayerInfo[playerid][Activity] += 1;
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:jail(ESS)
{
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "u", liPlayerJail)) return SendUsage(playerid, "/jail [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[liPlayerJail][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[liPlayerJail][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(liPlayerJail) || liPlayerJail == playerid) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[liPlayerJail][Level] > PlayerInfo[playerid][Level]) return SendError(playerid, "You cannot use this command on this admin");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[liPlayerJail][Jailed] >= 1) return SendError(playerid, "Player is already in jail");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_JAIL, LIST, "Jail Reason", "{FFF000}Drive-By / Car DM - {00CC00}5 Minutes\n{FFF000}Spawn Kill - {00CC00}5 Minutes\n{FFF000}Parkour - {00CC00}5 Minutes\n{FFF000}AFK in DM / Clan - {00CC00}5 Minutes\n{FFF000}Jetpack DM - {00CC00}5 Minutes\n{FF0000}Another Reason - {00CC00}5 Minutes", "Select", "Cancel");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:unjail(ESS)
{
	if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Player; eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "u", params[0])) return SendUsage(playerid, "/unjail [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0])) return Error(playerid, 10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][Jailed] == 0) return SendError(playerid, "This player are not in jail!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    JailRelease(Player);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, sizeof(eString), "Administrator {FF0000}%s{D1D1D1} has unjailed {00A6FF}%s{D1D1D1}.", PN(playerid), PN(Player));
    SCMALL(GREY2, eString);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "UNJAIL");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:mute(ESS)
{
	eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new string[128];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "us[30]", params[0], params[1])) return SendUsage(playerid, "/mute [ID/Name] [Reason]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0]) || params[0] == playerid)	return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][Muted] == 1) return SendError(playerid, "This player are already muted!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetTimerEx("UnMute", 300000, 0, "i", params[0]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, sizeof(eString), "%s {D1D1D1}has been muted for 5 minutes by Admin {00A6FF}%s{D1D1D1}!", PN(params[0]), PN(playerid)); SCMALL(RED, eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, sizeof(eString), "Reason: {D1D1D1}%s", params[1]); SCMALL(CBLUE, eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AdminCMD(playerid, "MUTE"), PlayerInfo[playerid][PMutes]++;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[params[0]][Muted] = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerPlaySound(params[0], 1057, 0.0, 0.0, 0.0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(string, 128,"~W~Muted 5 minutes for~R~~h~ reason~N~~Y~~H~%s", params[1]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(params[0], string, 6000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(PlayerInfo[params[0]][MutedByAdmin], 100, "%s", PN(playerid));
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:unmute(ESS)
{
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "u", params[0])) return SendUsage(playerid, "/unmute [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0])) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][Muted] == 0) return SendError(playerid, "Player is not muted!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    UnMute(params[0]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, sizeof(eString), "Admin {FF0000}%s{D1D1D1} has unmuted {00A6FF}%s.", PN(playerid), PN(params[0]));
    SCMALL(GREY2, eString);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "UNMUTE");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:cc(playerid) return cmd_clearchat(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:clearchat(playerid)
{
    if(PlayerInfo[playerid][Level] < 1) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][PClearCH]++;	for (new i = 0; i < 50; i++) SCMALL(~1, " ");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "CLEARCHAT"), PlayerInfo[playerid][Activity] += 1;
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Admin System - Level 2
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:specspawn(ESS)
{
    if(PlayerInfo[playerid][Level] < 2) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new string[257]; eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	{
		if(sscanf(params, "s[10]ui", params[0])) return
		SendUsage(playerid, "/specspawn [Spawn CMD]");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(strcmp(params[0], "/lv", true) == 0)
		{
		    SetPlayerCameraPos(playerid, 2050.937011, 1506.078857, 25.376737), SetPlayerCameraLookAt(playerid, 2049.089355, 1510.593994, 24.281431), PlayerInfo[playerid][SpecSpawn] = 1, AdminCMD(playerid, "SPECSPAWN"), SetPlayerPos(playerid, 2029.9164,1551.9988,-22.1712),  TogglePlayerControllable(playerid, false);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        PlayerTextDrawShow(playerid, Spec_Spawn1);
	        PlayerTextDrawShow(playerid, Spec_Spawn2);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(string, sizeof string, "Spectating Spawn");
		    PlayerTextDrawSetString(playerid, Spec_Spawn1, string);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof eString, "~N~~R~~H~Las Venturas~N~~Y~~H~<~W~ /spec off~Y~~H~ >");
		    PlayerTextDrawSetString(playerid, Spec_Spawn2, eString);
	    }
	    if(strcmp(params[0], "/ls", true) == 0)
		{
		    SetPlayerCameraPos(playerid, 1530.750732, -1594.622314, 39.043674), SetPlayerCameraLookAt(playerid, 1528.790527, -1598.966796, 37.532527), PlayerInfo[playerid][SpecSpawn] = 1, AdminCMD(playerid, "SPECSPAWN"), SetPlayerPos(playerid, 1513.5566,-1622.1206,-22.0586),  TogglePlayerControllable(playerid, false);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        PlayerTextDrawShow(playerid, Spec_Spawn1);
	        PlayerTextDrawShow(playerid, Spec_Spawn2);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(string, sizeof string, "Spectating Spawn");
		    PlayerTextDrawSetString(playerid, Spec_Spawn1, string);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof eString, "~N~~R~~H~Los Santos~N~~Y~~H~<~W~ /spec off~Y~~H~ >");
		    PlayerTextDrawSetString(playerid, Spec_Spawn2, eString);
	    }
		if(strcmp(params[0], "/sf", true) == 0)
		{
		    SetPlayerCameraPos(playerid, -2053.272216, 228.228836, 55.051342), SetPlayerCameraLookAt(playerid, -2049.429199, 231.262252, 54.036220), PlayerInfo[playerid][SpecSpawn] = 1, AdminCMD(playerid, "SPECSPAWN"), SetPlayerPos(playerid, -1998.5144,267.2476,5.9425),  TogglePlayerControllable(playerid, false);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        PlayerTextDrawShow(playerid, Spec_Spawn1);
	        PlayerTextDrawShow(playerid, Spec_Spawn2);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(string, sizeof string, "Spectating Spawn");
		    PlayerTextDrawSetString(playerid, Spec_Spawn1, string);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, sizeof eString, "~N~~R~~H~San Fierro~N~~Y~~H~<~W~ /spec off~Y~~H~ >");
		    PlayerTextDrawSetString(playerid, Spec_Spawn2, eString);
	    }
		return true;
    }
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:eject(ESS)
{
	new Float:x, Float:y, Float:z;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Level] < 2) return Error(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "u", params[0])) return SendUsage(playerid, "/eject [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerInAnyVehicle(params[0])) return SendError(playerid, "Player is not in a vehicle");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GetPlayerPos(params[0], x, y, z), SetPlayerPos(params[0], x, y, z+3);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    FormatMSG(playerid, ABLUE, "You have ejected %s from their vehicle", PN(params[0]));
    FormatMSG(params[0], ABLUE, "VIP %s has ejected you from your vehicle", PN(playerid));
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:asay(ESS)
{
    if(ServerProtection == 1) return SendErrorEx(playerid, "Nu poti folosi momental aceasta comanda! Te rugam sa incerci mai tarziu.");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Level] < 2) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Text[128]; eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "s[128]", Text)) return
	SendUsage(playerid, "/asay [Text]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	format(eString, sizeof(eString), "*** Admin *** {03FF09}%s:{FF6BFF} %s", PN(playerid), Text);
	SCMALL(ASAY, eString);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:event(ESS)
{
    if(ServerProtection == 1) return SendErrorEx(playerid, "Nu poti folosi momental aceasta comanda! Te rugam sa incerci mai tarziu.");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Level] < 2) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new eventstr[800], 	Event1[100], 	Event2[100], 	Event3[100];
 	new Event4[100], 	Event5[100], 	Event6[100],    Event7[100];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(ServerInfo[StarEventStarted] == 1)              Event1 = "{FF0000}Started";
    else if(ServerInfo[StarEventStarted] == -1)        Event1 = "{00CC00}Not Started";
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(ServerInfo[ReactionTest] == 1)                  Event2 = "{FF0000}Started";
    else if(ServerInfo[ReactionTest] == 0)             Event2 = "{00CC00}Not Started";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(ServerInfo[MathTest] == 1)                      Event3 = "{FF0000}Started";
    else if(ServerInfo[MathTest] == 0)                 Event3 = "{00CC00}Not Started";
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(ServerInfo[QStarted] == 1)                      Event4 = "{FF0000}Started";
    else if(ServerInfo[QStarted] == 0)                 Event4 = "{00CC00}Not Started";
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(ServerInfo[WStarted] == 1)                      Event5 = "{FF0000}Started";
	else if(ServerInfo[WStarted] == 0)                 Event5 = "{00CC00}Not Started";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(ServerInfo[WhoMakeMostKillsStarted] == 1)       Event6 = "{FF0000}Started";
	else if(ServerInfo[WhoMakeMostKillsStarted] == 0)  Event6 = "{00CC00}Not Started";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(ServerInfo[SkyClimbEventStarted] == 1)          Event7 = "{FF0000}Started";
	else if(ServerInfo[SkyClimbEventStarted] == 0)     Event7 = "{00CC00}Not Started";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eventstr, sizeof(eventstr),
	    "Type             \tDescription                         \tStatus\n\
		{FFFFFF}#1        \t{006FFF}Hidden pickup               \t%s\n\
        {FFFFFF}#2        \t{006FFF}Reaction test               \t%s\n\
        {FFFFFF}#3        \t{006FFF}Math test                   \t%s\n\
		{FFFFFF}#4        \t{006FFF}Question & answer           \t%s\n\
		{FFFFFF}#5        \t{006FFF}Who say first               \t%s\n\
		{FFFFFF}#6        \t{006FFF}Who makes most kills        \t%s\n\
		{FFFFFF}#7        \t{006FFF}SkyClimb event              \t%s",
        Event1, Event2, Event3, Event4, Event5, Event6, Event7);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SPD(playerid, DIALOG_EVENTS, HEADERS, "{00CC00}Create an event!", eventstr, "Select", "Close");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:spawn(ESS)
{
    if(PlayerInfo[playerid][Level] < 2) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "u", params[0])) return SendUsage(playerid, "/spawn [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0])) return Error(playerid, 10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    FormatMSG(playerid, ABLUE, "You have spawned %s.", PN(params[0]));
    FormatMSG(params[0], ABLUE, "Administrator '%s' has spawned you.", PN(playerid));
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SpawnPlayer(params[0]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "SPAWN");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:readpm(playerid) return cmd_readpms(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:readpms(playerid)
{
    if(PlayerInfo[playerid][Level] < 2) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][ShowPMs] == 0) return AdminCMD(playerid, "READPMS ON"), PlayerInfo[playerid][ShowPMs] = 1, SCM(playerid, RED, "You enable reading PMs!");
    else if(PlayerInfo[playerid][ShowPMs] == 1) return AdminCMD(playerid, "READPMS OFF"), PlayerInfo[playerid][ShowPMs] = 0, SCM(playerid, RED, "You disable reading PMs!");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:ban(ESS)
{
    if(ServerProtection == 1) return SendErrorEx(playerid, "Nu poti folosi momental aceasta comanda! Te rugam sa incerci mai tarziu.");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Level] >= 2)
	{
		if(sscanf(params, "uis[128]", params[0], params[1], params[2])) return SendUsage(playerid, "/ban [ID/Name] [Day(s) (0 = permanent | 1-299 = temporar] [Reason]");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[params[0]][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(params[1] < 0 || params[1] > 299) return SendError(playerid, "You can ban a player between (0 = Permanent) 1 - 299 Day(s)!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(!IsPlayerConnected(params[0]) || params[0] == playerid) return Error(playerid, 3);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[params[0]][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if((gettime() - bantime[playerid]) < 60 && PlayerInfo[playerid][RconType] < 2) return SendError(playerid, "Please wait 1 minute to ban another player!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(params[1] == 0)
		{
		    AdminCMD(playerid, "BAN");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            BanPlayer(GetPlayerIPEx(params[0]), PN(params[0]), PN(playerid), params[2], 0);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            eLog[0] = EOS; format(eLog, sizeof(eLog), "%s has been banned permanent by %s. Reason: %s", PN(params[0]), PN(playerid), params[2]), SendLog(eLog, 5);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            SendAllBan(params[0], PN(playerid), 0, params[2]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            SendPlayerBanMessage(params[0], PN(playerid), 0, params[2]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            SetTimerEx("KickPlayer", 50, false, "d", params[0]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            PlayerInfo[playerid][PBans]++;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][r_Bans] == Raport[RBans]) return true;
			else PlayerInfo[playerid][r_Bans]++;
		}
		else
		{
		    AdminCMD(playerid, "BAN");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            BanPlayer(GetPlayerIPEx(params[0]), PN(params[0]), PN(playerid), params[2], params[1]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            eLog[0] = EOS; format(eLog, sizeof(eLog), "%s has been banned by %s for %d days. Reason: %s", PN(params[0]), PN(playerid), params[1], params[2]), SendLog(eLog, 5);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            SendAllBan(params[0], PN(playerid), params[1], params[2]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            SendPlayerBanMessage(params[0], PN(playerid), params[1], params[2]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            SetTimerEx("KickPlayer", 50, false, "d", params[0]);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            PlayerInfo[playerid][PBans]++;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(PlayerInfo[playerid][r_Bans] == Raport[RBans]) return true;
			else PlayerInfo[playerid][r_Bans]++;
		}
		return bantime[playerid] = gettime(), true;
	}
	else return Error(playerid, 1);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function BanPlayer(bIP[], Player[], Banner[], Reason[], BanDays)
{
    new szDay, szMonth, szYear, szHour, szMinute, szSecond; eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    getdate(szYear, szMonth, szDay);
    gettime(szHour, szMinute, szSecond);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    switch(BanDays)
    {
        case 0:
        {
            mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Bans` (`ID`,`IP`,`Name`,`Reason`,`Admin`,`BanDate`,`BanTime`,`BanExpire`) VALUES(0,'%s','%s','%s','%s','%02d/%02d/%02d','%02d:%02d:%02d','-1')", bIP, Player, Reason, Banner, szDay, szMonth, szYear, szHour, szMinute, szSecond);
	    	mysql_tquery(SQL, eQuery, "", "");
        }
        case 1..299:
        {
            mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Bans` (`ID`,`IP`,`Name`,`Reason`,`Admin`,`BanDate`,`BanTime`,`BanExpire`) VALUES(0,'%s','%s','%s','%s','%02d/%02d/%02d','%02d:%02d:%02d','%d')", bIP, Player, Reason, Banner, szDay, szMonth, szYear, szHour, szMinute, szSecond, gettime() + BanDays * 86400);
	    	mysql_tquery(SQL, eQuery, "", "");
        }
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendPlayerBanMessage(PlayerBanned, BannedBy[], Days, Reason[])
{
    for(new l; l < 20; l++) SCM(PlayerBanned, -1, "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Days == 0)
	{
		if(PlayerInfo[PlayerBanned][Language] == 1)
		{
			format(eString, 150, "{00FF22}Ai primit interdictie permanenta pe server de la {FF0000}%s {00FF22}!", BannedBy);
			SCM(PlayerBanned, -1, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, 150, "{FFFF00}Motiv: %s", Reason);
			SCM(PlayerBanned, -1, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SCM(PlayerBanned, -1, "{00FF22}Apasa F8 pentru a face o poza!");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, 200, "{00FF22}Daca vrei un-ban, viziteaza "SERVER_WEBSITE" si fa o cerere cu numele {FF0000}%s {00FF22}si ip-ul {FF0000}%s {00FF22}!", PN(PlayerBanned), GetPlayerIPEx(PlayerBanned));
			SCM(PlayerBanned, -1, eString);
		}
		else if(PlayerInfo[PlayerBanned][Language] == 2)
		{
	        format(eString, 150, "{00FF22}You have been banned permanent from server by {3399FF}%s {00FF22}!", BannedBy);
			SCM(PlayerBanned, -1, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, 150, "{FFFF00}Reason: %s", Reason);
			SCM(PlayerBanned, -1, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SCM(PlayerBanned, -1, "{00FF22}Press F8 to make a screenshot!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, 200, "{00FF22}If you want a un-ban, visit the site "SERVER_WEBSITE" and make an application with name {FF0000}%s {00FF22} and ip {FF0000}%s {00FF22}!", PN(PlayerBanned), GetPlayerIPEx(PlayerBanned));
			SCM(PlayerBanned, -1, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetTimerEx("KickPlayer", 50, false, "d", PlayerBanned);
		}
	}
	else
	{
	    if(PlayerInfo[PlayerBanned][Language] == 1)
		{
			format(eString, 150, "{00FF22}Ai primit interdictie pe server de la {FF0000}%s {00FF22}pentru {FF0000}%d {00FF22}zile!", BannedBy, Days);
			SCM(PlayerBanned, -1, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, 150, "{FFFF00}Motiv: %s", Reason);
			SCM(PlayerBanned, -1, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SCM(PlayerBanned, -1, "{00FF22}Apasa F8 pentru a face o poza!");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, 200, "{00FF22}Daca vrei un-ban, viziteaza "SERVER_WEBSITE" si fa o cerere cu numele {FF0000}%s {00FF22}si ip-ul {FF0000}%s {00FF22}!", PN(PlayerBanned), GetPlayerIPEx(PlayerBanned));
			SCM(PlayerBanned, -1, eString);
		}
		else if(PlayerInfo[PlayerBanned][Language] == 2)
		{
	        format(eString, 150, "{00FF22}You have been banned from server by {3399FF}%s {00FF22}for {FF0000}%d {00FF22}days!", BannedBy, Days);
			SCM(PlayerBanned, -1, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, 150, "{FFFF00}Reason: %s", Reason);
			SCM(PlayerBanned, -1, eString);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SCM(PlayerBanned, -1, "{00FF22}Press F8 to make a screenshot!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, 200, "{00FF22}If you want a un-ban, visit the site "SERVER_WEBSITE" and make an application with name {FF0000}%s {00FF22} and ip {FF0000}%s {00FF22}!", PN(PlayerBanned), GetPlayerIPEx(PlayerBanned));
			SCM(PlayerBanned, -1, eString);
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendAllBan(PlayerBanned, BannedBy[], Days, Reason[])
{
	new String[1024];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Days == 0)
	{
	    SCMALL(ABLUE, "-------------------BAN INFO-------------------");
		format(String, 150, "%s {D1D1D1}has been banned permanent by Admin {00A6FF}%s{D1D1D1}!", PN(PlayerBanned), BannedBy);
		SCMALL(RED, String);
		format(String, 150, "Reason: {00BBF6}%s", Reason);
		SCMALL(GREY, String);
		SCMALL(ABLUE, "------------------------------------------------------");
	}
	else
	{
	    SCMALL(ABLUE, "-------------------BAN INFO-------------------");
		format(String, 150, "%s {D1D1D1}has been banned by Admin {00A6FF}%s {D1D1D1} for {ff0000}%d {D1D1D1}days!", PN(PlayerBanned), BannedBy, Days);
		SCMALL(RED, String);
		format(String, 150, "Reason: {00BBF6}%s", Reason);
		SCMALL(GREY, String);
		SCMALL(ABLUE, "------------------------------------------------------");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Admin System - Level 3
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:teleplayer(ESS)
{
    if(PlayerInfo[playerid][Level] < 3) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Player, Player2, Float:PosX, Float:PosY, Float:PosZ, intid = GetPlayerInterior(Player2);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "uu", params[0], params[1])) return
	SendUsage(playerid, "/teleplayer [ID/Name 1] to [ID/Name 2]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	if(PlayerInfo[params[1]][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	if(PlayerInfo[params[0]][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
	if(PlayerInfo[params[1]][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0]) || !IsPlayerConnected(params[1])) return SendError(playerid, "A player doesn't exist! Please check if he's connected and try again!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInSpecialZone(params[0]) == 1) SendError(playerid, "You can't teleport player2 to player1 because player1 in a special zone!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(IsPlayerInSpecialZone(params[0]) == 1) SendError(playerid, "You can't teleport player1 to player2 because player2 in a special zone!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GetPlayerPos(Player2, PosX, PosY, PosZ),	SetPlayerInterior(Player, intid),	SetPlayerVirtualWorld(Player, GetPlayerVirtualWorld(Player2));
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(GetPlayerState(Player) == PLAYER_STATE_DRIVER)
    {
        new VehicleID = GetPlayerVehicleID(Player);
        SetVehiclePos(VehicleID, PosX, PosY+4, PosZ);
        LinkVehicleToInterior(VehicleID, intid);
        SetVehicleVirtualWorld(VehicleID, GetPlayerVirtualWorld(Player2));
    }
    else SetPlayerPos(Player, PosX, PosY+2, PosZ);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	FormatMSG(Player, ABLUE, "Administrator %s has teleported %s to %s's location", PN(playerid), PN(Player), PN(Player2));
    FormatMSG(Player2, ABLUE, "Administrator %s has teleported %s to %s's location", PN(playerid), PN(Player), PN(Player2));
    FormatMSG(playerid, ABLUE, "You have teleported %s to %s's location", PN(Player), PN(Player2));
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[Player2][InDrift] == 1) PlayerInfo[Player2][InDrift] = 0, DisablePlayerRaceCheckpoint(Player2), Announce(Player2, "~w~~h~Drift ~r~~h~failed", 3000, 4);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[Player][InDrift] == 1) PlayerInfo[Player][InDrift] = 0, DisablePlayerRaceCheckpoint(Player), Announce(Player, "~w~~h~Drift ~r~~h~failed", 3000, 4);
    AdminCMD(playerid, "TELEPLAYER");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:givecar(ESS)
{
    if(PlayerInfo[playerid][Level] < 3) return Error(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new Car;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "us[30]", params[0], params[1])) return SendUsage(playerid, "/givecar [ID/Name] [Vehicle ID or Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInAnyVehicle(params[0])) return SendError(playerid, "This player are already in a vehicle!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsNumeric(params[1])) Car = strval(params[1]);
    else Car = GetVehicleModelIDFromName(params[1]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(Car < 400 || Car > 611) return SendError(playerid, "Invalid vehicle model/name!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(params[1], 128, "Administrator \"%s\" give you a car!", PN(playerid));
	SCM(params[0], ABLUE, params[1]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(params[1], 128, "You give %s a car", PN(params[0]));
	SCM(playerid, ABLUE, params[1]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CarSpawner(params[0], Car);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:destroycar(playerid)
{
    if(PlayerInfo[playerid][Level] < 3) return Error(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][pCar] != 0) EraseVeh(PlayerInfo[playerid][pCar]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AdminCMD(playerid, "DESTROYCAR");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:rweap(ESS)
{
    if(PlayerInfo[playerid][Level] < 3) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if((gettime() - RandomWeaponTimer[playerid]) < 300) return SCM(playerid, RED, "Sorry, but you need to wait 5 minutes to use this command after your previous usage!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new RandomWeapon = random(13); switch(RandomWeapon)
	{
         case 0: foreach(new i: Player) GivePlayerWeapon(i, 22, 50), Announce(i, "~H~It's time to~N~~B~~H~fight with~N~~H~~H~9mm!~N~~N~~W~~H~Have Fun!", 6000, 3); // 9mm
         case 1: foreach(new i: Player) GivePlayerWeapon(i, 23, 50), Announce(i, "~H~It's time to~N~~B~~H~fight with~N~~H~~H~Silenced 9mm!~N~~N~~W~~H~Have Fun!", 6000, 3); // Silenced 9mm
         case 2: foreach(new i: Player) GivePlayerWeapon(i, 24, 50), Announce(i, "~H~It's time to~N~~B~~H~fight with~N~~H~~H~Desert Eagle!~N~~N~~W~~H~Have Fun!", 6000, 3); // Desert Eagle
         case 3: foreach(new i: Player) GivePlayerWeapon(i, 25, 50), Announce(i, "~H~It's time to~N~~B~~H~fight with~N~~H~~H~Shotgun!~N~~N~~W~~H~Have Fun!", 6000, 3); // Shotgun
         case 4: foreach(new i: Player) GivePlayerWeapon(i, 26, 50), Announce(i, "~H~It's time to~N~~B~~H~fight with~N~~H~~H~Sawnoff Shotgun!~N~~N~~W~~H~Have Fun!", 6000, 3); // Sawnoff Shotgun
         case 5: foreach(new i: Player) GivePlayerWeapon(i, 27, 50), Announce(i, "~H~It's time to~N~~B~~H~fight with~N~~H~~H~Combat Shotgun!~N~~N~~W~~H~Have Fun!", 6000, 3); // Combat Shotgun
         case 6: foreach(new i: Player) GivePlayerWeapon(i, 28, 50), Announce(i, "~H~It's time to~N~~B~~H~fight with~N~~H~~H~Micro SMG/Uzi!~N~~N~~W~~H~Have Fun!", 6000, 3); // Micro SMG/Uzi
         case 7: foreach(new i: Player) GivePlayerWeapon(i, 29, 50), Announce(i, "~H~It's time to~N~~B~~H~fight with~N~~H~~H~MP5!~N~~N~~W~~H~Have Fun!", 6000, 3); // MP5
         case 8: foreach(new i: Player) GivePlayerWeapon(i, 30, 50), Announce(i, "~H~It's time to~N~~B~~H~fight with~N~~H~~H~AK-47!~N~~N~~W~~H~Have Fun!", 6000, 3); // AK-47
         case 9: foreach(new i: Player) GivePlayerWeapon(i, 31, 50), Announce(i, "~H~It's time to~N~~B~~H~fight with~N~~H~~H~M4!~N~~N~~W~~H~Have Fun!", 6000, 3); // M4
         case 10: foreach(new i: Player) GivePlayerWeapon(i, 32, 50), Announce(i, "~H~It's time to~N~~B~~H~fight with~N~~H~~H~Tec-9!~N~~N~~W~~H~Have Fun!", 6000, 3); // Tec-9
         case 11: foreach(new i: Player) GivePlayerWeapon(i, 33, 50), Announce(i, "~H~It's time to~N~~B~~H~fight with~N~~H~~H~Country Rifle!~N~~N~~W~~H~Have Fun!", 6000, 3); // Country Rifle
         case 12: foreach(new i: Player) GivePlayerWeapon(i, 34, 50), Announce(i, "~H~It's time to~N~~B~~H~fight with~N~~H~~H~Sniper Rifle!~N~~N~~W~~H~Have Fun!", 6000, 3); // Sniper Rifle
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AdminCMD(playerid, "RWEAP");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	RandomWeaponTimer[playerid] = gettime();
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:screen(ESS)
{
    if(PlayerInfo[playerid][Level] < 3) return Error(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "us[64]", params[0], params[1])) return SendUsage(playerid, "/screen [ID/Name] [Text]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[params[0]][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0])) return Error(playerid, 10);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    FormatMSG(params[0], ABLUE, "Administrator '%s' has sent you a screen message", PN(playerid));
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    FormatMSG(playerid, ABLUE, "You have sent '%s' a screen message (%s)", PN(params[0]), params[1]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Announce(params[0], params[1], 4000, 4);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "SCREEN");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:slap(ESS)
{
	if(PlayerInfo[playerid][Level] < 3) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "us[24]", params[0])) return SendUsage(playerid, "/slap [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0])) return Error(playerid, 10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new Float:Health, Float:x, Float:y, Float:z;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GetPlayerHealth(params[0], Health);
    SetPlayerHealth(params[0], Health-25);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GetPlayerPos(params[0], x, y, z);
	SetPlayerPos(params[0], x, y, z+5);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerPlaySound(params[0], 1190, 0.0, 0.0, 0.0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    FormatMSG(params[0], ABLUE, "You have been slapped by Administrator %s", PN(playerid));
    FormatMSG(playerid, ABLUE, "You have slapped %s", PN(params[0]));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AdminCMD(playerid, "SLAP");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Admin System - Level 4
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:setcolor(ESS)
{
    if(PlayerInfo[playerid][Level] < 4) return Error(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "ux", params[0], params[1])) return SendUsage(playerid, "/setcolor [ID/Name] [Hex Color]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[params[0]][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0])) return Error(playerid, 10);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    FormatMSG(params[0], ABLUE, "Administrator %s has set your colour to 'Any hex color'!", PN(playerid));
	FormatMSG(playerid, ABLUE, "You was seted %s colour to 'Any hex color'!", PN(params[0]));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	params[1] = (params[1] * 256) + 0xAA;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerColor(params[0], params[1]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "SETCOLOR");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:announce(ESS)
{
	new string[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Level] < 4) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "iis[128]", params[0], params[1], string)) return SendUsage(playerid, "/announce [Style] [Time] [Text]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[0] < 0 || params[0] > 6) return SendError(playerid, "Invalid gametext style. Range: 0 - 6");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[0] == 2) return SendError(playerid, "Sorry, but this style is not allowed!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[1] < 1 || params[1] > 60) return SendError(playerid, "Invalid time. Range: 1 - 60");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new newtime = params[1] * 100;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player) Announce(i, string, newtime, params[0]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "ANNOUNCE");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:write(ESS)
{
	if(PlayerInfo[playerid][Level] >= 4)
	{
	    new Lifetext[128];
		if(sscanf(params, "hs[128]", params[0], Lifetext)) return SendUsage(playerid, "/write [HEX] [Text]");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		params[0] = (params[0] * 256) + 0xAA; SCMALL(params[0], Lifetext);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		AdminCMD(playerid, "WRITE");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		return true;
		}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return Error(playerid, 1);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:spawnall(ESS)
{
    if(PlayerInfo[playerid][Level] < 4) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player) if((i != playerid))
    {
        PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0), SpawnPlayer(i);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PlayerInfo[playerid][InDM] == 1 || PlayerInfo[playerid][InMG][0] == 1 || PlayerInfo[playerid][InMG][2] == 1 || PlayerInfo[playerid][InMG][5] == 1 || PlayerInfo[playerid][InStunt] == 1 || PlayerInfo[playerid][InDrift] == 1 ||
	       PlayerInfo[playerid][JobStarted][1] == 1 || PlayerInfo[playerid][JobStarted][2] == 1 || PlayerInfo[playerid][JobStarted][3] == 1 || PlayerInfo[playerid][JobStarted][4] == 1 || PlayerInfo[playerid][JobStarted][5] == 1) TogglePlayerControllable(playerid, 0), Announce(playerid, "~w~~h~Leaving...", 1000, 3), SetTimerEx("OnPlayerLeaveZone", 500, false, "i", playerid);
    }
    format(eString, 512, "Administrator %s has spawned all players!", PN(playerid));
    SCMALL(ABLUE, eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AdminCMD(playerid, "SPAWNALL");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:giveweapon(ESS)
{
    if(PlayerInfo[playerid][Level] < 4) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Player, WeaponExx[10], Ammo, WeaponID, WeapName[50];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "us[10]I(15)", Player, WeaponExx, Ammo)) return
	SendUsage(playerid, "/giveweapon [ID/Name] [Weapon ID/Weapon Name] [Ammo]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Ammo <= 0 || Ammo > 9999) return
	SendError(playerid, "Invalid ammo entered!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strval(WeaponExx) == 38) return
	SendError(playerid, "This weapons is forbbiden!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(Player)) return Error(playerid, 10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(IsNumeric(WeaponExx))  		WeaponID = strval(WeaponExx);
    else                            WeaponID = GetWeaponIDFromName(WeaponExx);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(!IsValidWeapon(WeaponID)) return SendError(playerid, "Invalid weapon ID/Name!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(WeaponID == 35 || WeaponID == 36 || WeaponID == 38)
	{
	    if((gettime() - RconWeaponRestriction[Player]) < 120) return SCM(playerid, RED, "Sorry, but you need to wait 2 minute to give another weapon for this player!");
		if(Ammo > 15) return SCM(playerid, RED, "Sorry, but you can give only 15 ammo of this weapon!");
		else RconWeaponRestriction[Player] = gettime();
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GetWeaponName(WeaponID, WeapName, 50),   GivePlayerWeapon(Player, WeaponID, Ammo);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    FormatMSG(Player, ABLUE, "Administrator %s gave you a %s(%d) with %d rounds of ammo", PN(playerid), WeapName, WeaponID, Ammo);
    FormatMSG(playerid, ABLUE, "You have given %s a %s(%d) with %d rounds of ammo", PN(Player), Player, WeapName, WeaponID, Ammo);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player) if(PlayerInfo[i][Level] >= 1)
    FormatMSG(i, ABLUE, "[ADMIN] {00CC00}%s {0066FF} has used the command {00CC00}GiveWeapon %s", PN(playerid), WeapName);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:disarmall(ESS)
{
    if(PlayerInfo[playerid][Level] < 4) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player) PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0), ResetPlayerWeapons(i);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, 512, "Administrator %s has disarmed all players!", PN(playerid));
    SCMALL(ABLUE, eString);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "DISARMALL");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:burn(ESS)
{
    if(PlayerInfo[playerid][Level] < 4) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new Player, Float:x, Float:y, Float:z;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "u", Player)) return
	SendUsage(playerid, "/burn [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[Player][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(Player) || Player == playerid) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GetPlayerPos(Player, x, y, z),	CreateExplosion(x, y, z+3, 1, 10);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	FormatMSG(Player, ABLUE, "Administrator %s has burnt you", PN(playerid));
 	FormatMSG(playerid, ABLUE, "You have burnt %s", PN(Player));
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	AdminCMD(playerid, "BURN");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Admin System - Level 5
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:freeze(ESS)
{
    if(PlayerInfo[playerid][Level] < 5) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Player, Reason[50], string[128];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "us[30]", Player, Reason)) return SendUsage(playerid, "/freeze [ID/Name] [Reason]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[Player][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(Player) || Player == playerid) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[Player][Frozen] == 1) return SendError(playerid, "Player is already frozed!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "FREEZE"), PlayerInfo[Player][Frozen] = 1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetTimerEx("UnFreeze", 300000, 0, "i", Player);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, sizeof(eString), "Administrator {FF0000}%s{D1D1D1} has freezed {00A6FF}%s {D1D1D1}for {00A6FF}5 {D1D1D1}minutes.(Reason: %s)", PN(playerid), PN(Player), Reason);
    SCMALL(GREY2, eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(string, 128,"~W~Frozed 5 minutes by~R~~h~ admin~N~~Y~~H~%s", Reason);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(Player, string, 6000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TogglePlayerControllable(Player, false);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(PlayerInfo[Player][FrozedByAdmin], 100, "%s", PN(playerid));
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:unfreeze(ESS)
{
    if(PlayerInfo[playerid][Level] < 5) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Player; eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "u", Player)) return
	SendUsage(playerid, "/unfreeze [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(Player)) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[Player][Frozen] == 0) return
	SendError(playerid, "Player is not frozen");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    UnFreezeMe(Player),	SetPlayerVirtualWorld(Player, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, sizeof(eString), "Administrator {FF0000}%s{D1D1D1} has unfrozen {00A6FF}%s{D1D1D1}.", PN(playerid), PN(Player));
    SCMALL(GREY2, eString);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "UNFREEZE");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:healall(ESS)
{
    if(PlayerInfo[playerid][Level] < 5) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new String[128];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player) if(IsPlayerConnected(i) && PlayerInfo[i][God] == 0) PlayerPlaySound(i, 1057,0.0,0.0,0.0), SetPlayerHealth(i, 100.0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, sizeof(String), "Administrator \"%s\" has restored all players health!", PN(playerid));
    SCMALL(ABLUE, String);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "HEALALL"), PlayerInfo[playerid][Activity] += 1;
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:armourall(ESS)
{
    if(PlayerInfo[playerid][Level] < 5) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new String[128];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player) if(IsPlayerConnected(i) && PlayerInfo[i][God] == 0) PlayerPlaySound(i, 1057,0.0,0.0,0.0), SetPlayerArmour(i, 100.0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, sizeof(String), "Administrator \"%s\" has restored all players armour!", PN(playerid));
    SCMALL(ABLUE, String);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "ARMOURALL"), PlayerInfo[playerid][Activity] += 1;
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:gotop(ESS)
{
	if(PlayerInfo[playerid][Level] < 5) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Float:x, Float:y, Float:z;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(isnull(params)) return
	SendUsage(playerid, "/gotop [X,Y,Z]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    sscanf(params, "p<,>fff", x, y, z);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(CheckIfPosAreGangTerry(x, y, z) == 1 && PlayerInfo[playerid][RconType] == 0) return SendError(playerid, "You can't teleport nearby to a gang territory!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(GetPlayerState(playerid) == 2) SetVehiclePos(GetPlayerVehicleID(playerid), x, y, z);
    else SetPlayerPos(playerid, x, y, z);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	FormatMSG(playerid, ABLUE, "You have been teleported at the following position: %.2f, %.2f, %.2f!", x, y, z);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AdminCMD(playerid, "GOTOP");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:akill(ESS)
{
    if(PlayerInfo[playerid][Level] < 5) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Player;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "u", Player)) return
	SendUsage(playerid, "/akill [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[Player][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[Player][Level] > PlayerInfo[playerid][Level]) return Error(playerid, 12);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(Player)) return Error(playerid, 10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerHealth(Player, 0.0), SetPlayerArmour(Player, 0.0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    FormatMSG(Player, ABLUE, "Administrator %s has killed you.", PN(playerid));
    FormatMSG(playerid, ABLUE, "You have killed %s.", PN(Player));
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "AKILL");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:freezeall(ESS)
{
	if(PlayerInfo[playerid][Level] < 5) return Error(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) PlayerPlaySound(i,1057,0.0,0.0,0.0),	TogglePlayerControllable(i,false),	PlayerInfo[i][Frozen] = 1, format(PlayerInfo[i][FrozedByAdmin], 100, "Server");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, 512, "Administrator %s has frozen all players!", PN(playerid));
    SCMALL(ABLUE, eString);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "FREEZEALL");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:unfreezeall(ESS)
{
	if(PlayerInfo[playerid][Level] < 5) return Error(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) PlayerPlaySound(i,1057,0.0,0.0,0.0), TogglePlayerControllable(i,true), PlayerInfo[i][Frozen] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, 512, "Administrator %s has unfrozen all players!", PN(playerid));
    SCMALL(ABLUE, eString);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "UNFREEZEALL");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:giveallweapon(ESS)
{
    if(PlayerInfo[playerid][Level] < 5) return Error(playerid, 1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new WeaponExx[10], Ammo, WeapName[32], WeaponID;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "s[10]D(15)", WeaponExx, Ammo)) return
	SendUsage(playerid, "/giveallweapon [Weapon ID/Weapon Name] [Ammo]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Ammo <= 0) return
	SendError(playerid, "Invalid ammo entered!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(IsNumeric(WeaponExx))    WeaponID = strval(WeaponExx);
    else                        WeaponID = GetWeaponIDFromName(WeaponExx);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsValidWeapon(WeaponID)) return SendError(playerid, "Invalid weapon ID/Name!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(WeaponID == 35 || WeaponID == 36 || WeaponID == 38 && PlayerInfo[playerid][RconType] < 2 && Ammo > 15) return SCM(playerid, RED, "Sorry, but you can give only 15 ammo of this weapon!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GetWeaponName(WeaponID, WeapName, sizeof(WeapName));
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player) PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0), GivePlayerWeapon(i, WeaponID, Ammo);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, 512, "Administrator %s has given all players %s(%d) with %d rounds of ammo!", PN(playerid), WeapName, WeaponExx, Ammo);
    SCMALL(ABLUE, eString);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "GIVEALLWEAPON");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:setall(ESS)
{
    eString[0] = EOS;
    new rParam[10], Value;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Level] < 4) return Error(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "s[10]i", rParam, Value)) return SendUsage(playerid, "/setall [Time, Skin, Weather] [Value]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(strcmp(rParam, "time", true) == 0)
	{
		if(Value < 0 || Value > 24) return SendError(playerid, "Invalid hour!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    foreach(new i: Player)
		{
			PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
		    SetPlayerTime(i, Value, 0);
		}
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        format(eString, 512, "Administrator %s has set %d time to all players!", PN(playerid), Value);
        SCMALL(ABLUE, eString);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        AdminCMD(playerid, "SETALL TIME");
    }
    if(strcmp(rParam, "weather", true) == 0)
	{
		if(Value < 0 || Value > 20) return SendError(playerid, "Invalid Weather!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    foreach(new i: Player)
		{
			PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
		    SetWeather(Value);
		}
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        format(eString, 512, "Administrator %s has set %d weather to all players!", PN(playerid), Value);
        SCMALL(ABLUE, eString);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        AdminCMD(playerid, "SETALL WEATHER");
    }
    if(strcmp(rParam, "skin", true) == 0)
	{
		if(Value < 1 || Value > 311) return SendError(playerid, "Invalid skin ID!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    foreach(new i: Player)
		{
	 		PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
	 		SetPlayerSkin(i, Value);
		}
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        format(eString, 512, "Administrator %s has set %d skin to all players!", PN(playerid), Value);
        SCMALL(ABLUE, eString);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        AdminCMD(playerid, "SETALL SKIN");
    }
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// King Commands
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:songforall(ESS)
{
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 8);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "s[250]", params[0])) return SendUsage(playerid, "/songforall [URL]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i)) PlayAudioStreamForPlayerEx(i, params[0]), PlayerInfo[i][RadioListen] = 0;
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:setdj(ESS)
{
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "ui", params[0], params[1])) return SendUsage(playerid, "/setdj [ID/Name] [1 = ON / 0 = DEMOTE]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[params[0]][DJ] = params[1];
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function SetPlayerRconRankDB(playerid, Player, Type)
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `RconType` = '%d' WHERE `ID` = '%d'", Type, PlayerInfo[Player][AccID]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[Player][RconType] >= PlayerInfo[playerid][RconType]) return true;
	if(Type >= 1) if(IsPlayerAdmin(Player)) PlayerInfo[Player][RconType] = Type;
	if(Type == 0) if(IsPlayerAdmin(Player)) Kick(Player);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:setrcon(ESS)
{
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "ui", params[0], params[1])) return SendUsage(playerid, "/setrcon [ID/Name] [1 = ON / 0 = DEMOTE]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][AdminBlacklist] == 1) return SendError(playerid, "You cannot set this player admin because he has a blacklist!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[1] == 1) SetPlayerRconRankDB(playerid, params[0], 1);
	else if(params[1] == 0) SetPlayerRconRankDB(playerid, params[0], 0);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:blacklist(ESS)
{
    if(PlayerInfo[playerid][RconType] < 3) return Error(playerid, 8);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "ui", params[0], params[1])) return SendUsage(playerid, "/blacklist [ID/Name] [1 = ON / 0 = OFF]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[params[0]][AdminBlacklist] = params[1];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[params[0]][AdminBlacklist] == 1)
	{
	    FormatMSG(params[0], ABLUE, "SERVER: Owner %s has been removed your admin blacklist!", PN(playerid));
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[params[0]][AdminBlacklist] = 0;
	}
	else if(PlayerInfo[params[0]][AdminBlacklist] == 0)
	{
	    FormatMSG(params[0], ABLUE, "SERVER: Owner %s set you blacklist on admin, you can never be an admin again!", PN(playerid));
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[params[0]][Level] = 0;
	}
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:setsupport(ESS)
{
    if(PlayerInfo[playerid][RconType] < 3) return Error(playerid, 8);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "ui", params[0], params[1])) return SendUsage(playerid, "/setsupport [ID/Name] [1 = ON / 0 = DEMOTE]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][AdminBlacklist] == 1) return SendError(playerid, "You cannot set this player admin because he has a blacklist!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[1] == 1) SetPlayerRconRankDB(playerid, params[0], 2);
	else if(params[1] == 0) SetPlayerRconRankDB(playerid, params[0], 0);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:setking(ESS)
{
    if(PlayerInfo[playerid][RconType] < 3) return Error(playerid, 8);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "ui", params[0], params[1])) return SendUsage(playerid, "/setking [ID/Name] [1 = ON / 0 = DEMOTE]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][AdminBlacklist] == 1) return SendError(playerid, "You cannot set this player admin because he has a blacklist!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[1] == 1) SetPlayerRconRankDB(playerid, params[0], 3);
	else if(params[1] == 0) SetPlayerRconRankDB(playerid, params[0], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/*
<DATABASE CLEAR ALL>

UPDATE `Accounts` SET `BlackList` = 0, `Level` = 0, `AdminCheck` = 0, `AdminBl` = 0,
    `AccLocked` = 0, `VIP` = 0, `Cash` = 0, `Coins` = 0, `Headshots` = 0, `Kills` = 0, `Deaths` = 0, `Hours` = 0,
    `Minutes` = 0, `Seconds` = 0, `HoursMonth` = 0, `MinutesMonth` = 0, `SecondsMonth` = 0, `BestKillings` = 0, `KillingSpree` = 0,
    `FavStation` = 0, `FavRadio` = 0, `FavSkin` = 0, `UseSkin` = 0, `House` = 0, `Property` = 0, `Positive` = 0, `Negative` = 0,
    `ReportsClosed` = 0, `HoursAdmin` = 0, `MinutesAdmin` = 0, `SecondsAdmin` = 0, `EventsMaded` = 0, `Kicks` = 0, `Bans` = 0,
    `Jails` = 0, `Warns` = 0, `ClearChats` = 0, `ReactionTest` = 0, `MathTest` = 0, `Mutes` = 0, `Jailed` = 0, `JailTime` = 0,
    `Frozen` = 0, `FreezeTime` = 0, `Muted` = 0, `MuteTime` = 0, `RaceScore` = 0, `StuntScore` = 0, `DriftScore` = 0, `C4` = 0,
    `StatsNote` = 0, `VIPTime` = 0, `FreeVIP` = 0, `TempVIP` = 0, `Gifts` = 0, `Gems` = 0, `Warnings` = 0, `Activity` = 0, `RaceMonth` = 0,
    `DriftMonth` = 0, `MySkin` = 0, `KillsMonth` = 0, `StuntMonth` = 0, `AdmWarns` = 0, `VIPWarns` = 0, `KickW` = 0, `AWP` = '0',
    `Status` = 0, `GangID` = 0, `ClanID` = 0, `ClanPoints` = 0, `ClanSkin` = 0, `ClanCaptures` = 0, `ClanKills` = 0, `ClanDeaths` = 0,
    `ClanRank` = 0, `ClanEXP` = 0, `ClanTotalP` = 0, `GangRank` = 0, `GangSkin` = 0, `GangKills` = 0, `GangDeaths` = 0, `GangWarns` = 0,
    `GangCaptures` = 0, `GangPoints` = 0, `GangHours` = 0, `GangMinutes` = 0, `GangSeconds` = 0, `GangWarns1` = 0, `GangWarns2` = 0,
    `GangWarns3` = 0, `GangWarns4` = 0, `GangWarns5` = 0, `GangWarns6` = 0, `GangWarns7` = 0, `JobFinished1` = 0, `JobFinished2` = 0,
    `JobFinished3` = 0, `JobFinished4` = 0, `JobFinished5` = 0, `JobFinished6` = 0, `JobFinished7` = 0, `JobFinished8` = 0, `JobFinished9` = 0,
    `JobsFinishedCount` = 0, `GoldVIPTaken` = 0, `CrateTimer` = 0
</DATABASE CLEAR ALL>
*/
CMD:resetstats(ESS)
{
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "u", params[0])) return SendUsage(playerid, "/resetstats [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][RconType] > PlayerInfo[playerid][RconType]) return Error(playerid, 11);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0])) return Error(playerid, 10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[params[0]][Level] = 0, PlayerInfo[params[0]][pVIP] = 0;
	PlayerInfo[params[0]][Coins] = 0, PlayerInfo[params[0]][Money] = 0;
	PlayerInfo[params[0]][StuntPoints] = 0, PlayerInfo[params[0]][DriftPoints] = 0;
	PlayerInfo[params[0]][RacePoints] = 0, PlayerInfo[params[0]][hours] = 0;
	PlayerInfo[params[0]][Kills] = 0, PlayerInfo[params[0]][Deaths] = 0;
	PlayerInfo[params[0]][Gems] = 0, UpdatePlayer(PN(params[0]), "Gems", 0);
	PlayerInfo[params[0]][ClanID] = 0;
	PlayerInfo[params[0]][NegRespect] = 0, PlayerInfo[params[0]][PosRespect] = 0;
	if(PlayerInfo[params[0]][RconType] == 1) PlayerInfo[params[0]][RconType] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AdminCMD(playerid, "RESETSTATS");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	MSG(playerid, YELLOW, "Jucatorul {FF0000}%s {FFFF00}a primit status zero (0/10)!", PN(params[0]));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	MSG(params[0], ABLUE, "Administrator %s has removed your statistics. Check /stats!", PN(playerid));
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:restart(ESS)
{
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GameTextForAll("~R~~H~Restart", 10000000, 0);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:kickall(ESS)
{
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i : Player) if(i != playerid || PlayerInfo[i][InDM] == 0) KickPlayer(i);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:getall(ESS)
{
    if(PlayerInfo[playerid][RconType] < 2) return false;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Float:x, Float:y, Float:z;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid, x, y, z);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i : Player) if(PlayerInfo[i][InDM] == 0 && i != playerid)
	{
 		SetPlayerPos(i, x + 2, y, z);
 		SetPlayerInterior(i, GetPlayerInterior(playerid));
	 	SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(playerid));
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, 512, "Administrator %s has teleported all players to his position.", PN(playerid));
    SCMALL(ABLUE, eString); AdminCMD(playerid, "GETALL");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:resetvips(playerid)
{
    new String[128]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player) if(PlayerInfo[i][pVIP] != 0) PlayerInfo[i][pVIP] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `VIP` = '0' WHERE `VIP` >= '1'");
    mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, 128, "Administrator %s has been reseted all VIP User's!", PN(playerid));
	SCMALL(ABLUE, String);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:unbanall(playerid)
{
	if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new String[128]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `Bans`");
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "Administrator %s has been UnBanned All Players!", PN(playerid));
	SCMALL(ABLUE, String);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AdminCMD(playerid, "UNBANALL");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	eLog[0] = EOS; format(eLog, sizeof(eLog), "Administrator %s has used /unbanall", PN(playerid)), SendLog(eLog, 5);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:setpass(ESS)
{
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new String[128]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "s[24]s[64]", params[0], params[1])) return SendUsage(playerid, "/setpass [Name] [New Password]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(CheckAcc(params[0]) == 0) return SendError(playerid, "This player is not exist in database!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AdminCMD(playerid, "SETPASS");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `Password` = '%s' WHERE `Name` = '%s'", MD5_Hash(params[0]), params[1]),
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "You changed password \"%s\" to the password: \"%s\"", params[0], params[1]);
	SCM(playerid, ABLUE, String);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:resetawarn(ESS)
{
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "u", params[0])) return SendUsage(playerid, "/resetawarn [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][Level] == 0) return SendError(playerid, "This player is not have admin to use this command!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[params[0]][AWP] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	FormatMSG(params[0], ABLUE, "Administrator %s reset your admin warning and now you have %d/5", PN(playerid), PlayerInfo[params[0]][AWP]);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:awarn(ESS)
{
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "us[128]", params[0], params[1])) return SendUsage(playerid, "/awarn [ID/Name] [Reason]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][Level] == 0) return SendError(playerid, "This player is not have admin to use this command!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[params[0]][AWP]++;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	FormatMSG(params[0], ABLUE, "Administrator %s gave you a warning and now you have %d/5 (Reason: %s)!", PN(playerid), PlayerInfo[params[0]][AWP], params[1]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][AWP] == 5)
	{
	    SCM(params[0], RED, "Ai primit demote pentru ca ai acumulat 5/5 Admin Warns!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[params[0]][Level] = 0;
		if(PlayerInfo[params[0]][RconType] == 1) PlayerInfo[params[0]][RconType] = 0;
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:resetadmins(playerid)
{
	new String[128]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player) ResetPlayerAdmin(i);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `Level` = '0', `Activity` = '0', `ReportsClosed` = '0' WHERE `Level` >= '1'");
    mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, 128, "Administrator %s has been reseted all Admininistrator's!", PN(playerid));
	SCMALL(ABLUE, String);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:resethouses(playerid)
{
	new String[128], rCoins = random(5), rMoney = random(6), Amount[2]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(rCoins)
	{
	    case 0: Amount[0] = 100;
	    case 1: Amount[0] = 250;
		case 2: Amount[0] = 400;
		case 3: Amount[0] = 500;
		case 4: Amount[0] = 1000;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(rMoney)
	{
	    case 0: Amount[1] = 1000000;
	    case 1: Amount[1] = 2000000;
		case 2: Amount[1] = 3000000;
		case 3: Amount[1] = 4000000;
		case 4: Amount[1] = 5000000;
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < MAX_PLAYERS; i++) PlayerInfo[i][House] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new d = 0; d < MAX_HOUSES; d++)
	{
	    new StringEx[256];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(HouseInfo[d][Name], 24, "ForSale"); HouseInfo[d][Locked] = 1;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		HouseInfo[d][HTime] = -1, HouseInfo[d][Cost] = Amount[0], HouseInfo[d][CostM] = Amount[1];
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		HouseInfo[d][h_Level] = 1;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(StringEx, sizeof(StringEx), "{00CC00}Cost: {FF0000}%d Coins and $%d\n{00CC00}Type {FF9900}/House {00CC00}for more.", HouseInfo[d][Cost], HouseInfo[d][CostM]);
		UpdateDynamic3DTextLabelText(housei[d], 0xFF0000AA, StringEx);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    DestroyDynamicPickup(HousePickup[d]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    HousePickup[d] = CreateDynamicPickup(1273, 23, HouseInfo[d][HX], HouseInfo[d][HY], HouseInfo[d][HZ]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Houses` SET `HouseOwner` = 'ForSale', `HouseTime` = '-1', `HouseCost` = '%d', `HouseCostM` = '%d', `Level` = '1' WHERE `ID`", HouseInfo[d][Cost], HouseInfo[d][CostM]);
	    mysql_tquery(SQL, eQuery, "", "");
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `House` = '0' WHERE `House` >= '1'");
    mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, 128, "Administrator %s has been reseted houses!", PN(playerid));
	SCMALL(ABLUE, String);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:resetprops(playerid)
{
	new String[128], rCoins = random(4), rMoney = random(5), rCoinsE = random(5), rMoneyE = random(5), Amount[4]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(rCoins)
	{
	    case 0: Amount[0] = 1000;
	    case 1: Amount[0] = 1500;
		case 2: Amount[0] = 2500;
		case 3: Amount[0] = 5000;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(rMoney)
	{
	    case 0: Amount[1] = 1000000;
	    case 1: Amount[1] = 2000000;
		case 2: Amount[1] = 3000000;
		case 3: Amount[1] = 4000000;
		case 4: Amount[1] = 5000000;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(rCoinsE)
	{
	    case 0: Amount[2] = 3;
	    case 1: Amount[2] = 4;
		case 2: Amount[2] = 8;
		case 3: Amount[2] = 10;
		case 4: Amount[2] = 20;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(rMoneyE)
	{
	    case 0: Amount[3] = 100000;
	    case 1: Amount[3] = 200000;
		case 2: Amount[3] = 300000;
		case 3: Amount[3] = 400000;
		case 4: Amount[3] = 500000;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < MAX_PLAYERS; i++) PlayerInfo[i][Property] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new d = 0; d < MAX_PROPS; d++)
	{
	    new StringEx[256];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(PropInfo[d][PropName], 24, "ForSale"); format(PropInfo[d][PropOwner], 24, "Nobody");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    DestroyDynamicMapIcon(PropInfo[d][PropMapIcon]); PropInfo[d][PropMapIcon] = CreateDynamicMapIcon(PropInfo[d][PropX], PropInfo[d][PropY], PropInfo[d][PropZ], 52, 52);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PropInfo[d][PTime] = 0, PropInfo[d][Cost] = Amount[0], PropInfo[d][CostM] = Amount[1], PropInfo[d][Earning] = Amount[2], PropInfo[d][EarningM] = Amount[3];
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PropInfo[d][p_Level] = 1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(StringEx, sizeof(StringEx), "{9C9621}\"%s\"\n{9C9621}Property is For Sale\n{2982FF}Cost: {00FF22}%d Coins and $%d\n{2982FF}Win: {00FF22}%d Coins and $%d\n{DE00BD}/business", PropInfo[d][PropName], PropInfo[d][Cost], PropInfo[d][CostM], PropInfo[d][Earning], PropInfo[d][EarningM]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    UpdateDynamic3DTextLabelText(Prop3D[d], ~1, StringEx);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Properties` SET `PropName` = 'ForSale', `PropTime` = '0', `PropCost` = '%d', `PropCostM` = '%d', `PropEarning` = '%d', `PropEarningM` = '%d', `PropOwner` = 'ForSale', `Level` = '1' WHERE `ID`", PropInfo[d][Cost], PropInfo[d][CostM], PropInfo[d][Earning], PropInfo[d][EarningM]);
	    mysql_tquery(SQL, eQuery, "", "");
    }
    ///+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `Property` = '0' WHERE `Property` >= '1'");
    mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, 128, "Administrator %s has been reseted all business's!", PN(playerid));
	SCMALL(ABLUE, String);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:resetrcons(playerid)
{
	new String[128]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player)
	{
	    if(PlayerInfo[i][RconType] == 1) PlayerInfo[i][RconType] = 0;
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `Rcon` = '0' WHERE `Rcon` >= '1'");
    mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, 128, "Administrator %s has been reseted all Rcon Administrator's!", PN(playerid));
	SCMALL(ABLUE, String);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Rcon Commands
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:unbanip(ESS)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "s[128]", params[0])) SendUsage(playerid, "/unbanip [Players IP]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    else
    {
        format(String, sizeof(String), "unbanip %s", params[0]);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SendRconCommand(String), SendRconCommand("reloadbans");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        AdminCMD(playerid, "UNBANIP");
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:rvm(playerid)
{
	if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AddVehicleMissiles(GetPlayerVehicleID(playerid), 1.1, -0.2);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/*CMD:editplayer(ESS)
{
    eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 8);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(eString, "Type                         \tDescription\n\
                   {FF0000}Remove Admin           \t{FFFFFF}Remove a player admin by typing the player name\n\
                   {FF0000}Remove RCON            \t{FFFFFF}Remove a player RCON by typing the player name\n\
                   {FF0000}Add awp                \t{FFFFFF}Add Admin-Warn-Point by typing the player name\n\
				   {FF0000}Remove VIP             \t{FFFFFF}Remove a player VIP by typing the player name\n\
				   {FF0000}Remove Gems            \t{FFFFFF}Remove a player Gems by typing the player name\n\
				   {FF0000}Block/Unblock Account  \t{FFFFFF}Block a player account / Blacklist by typing the player name");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_EDITPLAYER, HEADERS, "{FF0000}EDIT ACCOUNT {FFFFFF}panel", eString, "Select", "Close");
	return true;
}*/
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:rstart(ESS)
{
    if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) GivePlayerWeapon(i, 35, 99999);
	GameTextForAll("~R~~H~Rocket event~n~~G~~H~started~N~~y~~h~win by killing~N~~R~~H~most players", 1000, 0);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:rend(ESS)
{
    if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) ResetPlayerWeapons(i);
	GameTextForAll("~R~~H~Rocket event~n~~G~~H~ende", 1000, 0);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:saveall(ESS)
{
	if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	OnUpdate(4);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "SAVEALL");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Announce(playerid, "~r~~H~~H~All data ~N~~G~~H~~H~has been saved~R~~H~~H~!", 6000, 3);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:fireworks(ESS)
{
    if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new firework = EmptyFireworkSlot(); eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(!firework) return SCM(playerid, RED, "Sorry, but there are no more fireworks slots free!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GetPlayerPos(playerid, FireworkInfo[firework][FPos][0],FireworkInfo[firework][FPos][1],FireworkInfo[firework][FPos][2]);
    GetPlayerFacingAngle(playerid, FireworkInfo[firework][FPos][3]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    FireworkInfo[firework][FRocketsReleased] = -2;
    FireworkInfo[firework][FRadius] = 10;
    FireworkInfo[firework][FHeight] = 30;
    FireworkInfo[firework][FOwner] = playerid;
    FireworkInfo[firework][FAmount] = 10;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    FireworkInfo[firework][FPos][0] += (2.0 * floatsin(-FireworkInfo[firework][FPos][3],degrees));
    FireworkInfo[firework][FPos][1] += (2.0 * floatcos(-FireworkInfo[firework][FPos][3],degrees));
    FireworkInfo[firework][FPos][2] -= 0.9;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    FireworkInfo[firework][FBox] = CreateObject(0, FireworkInfo[firework][FPos][0], FireworkInfo[firework][FPos][1], FireworkInfo[firework][FPos][2], 0, 0, 0);
    FireworkInfo[firework][FTimer] = SetTimerEx("StartFirework", 3500, true, "d", firework);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    AdminCMD(playerid, "FIREWORKS");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, 512, "Administrator '%s' has started launching fireworks at his position. Type /night!", PN(playerid));
    SCMALL(ABLUE, eString);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Announce(playerid, "~G~~H~~H~Fire works planted!~N~~Y~~H~The launch will start~N~~Y~~H~in~R~~H~ 5~Y~~H~ seconds!", 4000, 3);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:unban(ESS)
{
    if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "s[128]", BanName)) return SendUsage(playerid, "/unban [Player Name]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Bans` WHERE `Name` = '%s'", BanName);
	mysql_tquery(SQL, eQuery, "UnbanPlayer", "i", playerid);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:giveall(ESS)
{
    new rParam[10], Amount; eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else
	{
		if(sscanf(params, "s[10]I(-1)", rParam, Amount)) return SendUsage(playerid, "/giveall [Coins, Money, Gift, Respect+, Respect-, VIP, Level, Weapon, Crates] [Value]");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(strcmp(rParam, "coins", 		true) 	== 0)
		{
		    if(GiveProtection[playerid] == 1) return SendErrorEx(playerid, "Aceasta comanda are protectie anti-spam. Te rugam reincearca peste minim 10 secunde.");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SendError(playerid, "You can type the value of coins!");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount < 1 || Amount > 10000) return SendError(playerid, "You can type a coins amount only 1 - 10.000!");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    foreach(new i: Player) PlayerInfo[i][Coins] += Amount, format(eString, sizeof(eString), "Administrator '%s' has gave all players '%d' coins!", PN(playerid), Amount), SCM(i, ABLUE, eString), PlayerPlaySound(i,1057,0.0,0.0,0.0);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "GIVEALL COINS");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetTimerEx("GiveTimer", 10*1000, 0, "i", playerid), GiveProtection[playerid] = 1;
	    }
		if(strcmp(rParam, "money", 		true) 	== 0)
		{
		    if(GiveProtection[playerid] == 1) return SendErrorEx(playerid, "Aceasta comanda are protectie anti-spam. Te rugam reincearca peste minim 10 secunde.");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount < 1 || Amount > 100000000) return SendError(playerid, "You can type a coins amount only 1 - 100.000.000!");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    foreach(new i: Player) GivePlayerMoney(i, Amount), PlayerInfo[i][Money] += Amount, format(eString, sizeof(eString), "Administrator '%s' has gave all players '%d' money!", PN(playerid), Amount), SCM(i, ABLUE, eString), PlayerPlaySound(i,1057,0.0,0.0,0.0);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "GIVEALL MONEY");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetTimerEx("GiveTimer", 10*1000, 0, "i", playerid), GiveProtection[playerid] = 1;
	    }
	    if(strcmp(rParam, "gems", 		true) 	== 0)
		{
		    if(GiveProtection[playerid] == 1) return SendErrorEx(playerid, "Aceasta comanda are protectie anti-spam. Te rugam reincearca peste minim 10 secunde.");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(PlayerInfo[playerid][RconType] < 3) return Error(playerid, 8);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Amount == -1) return SendError(playerid, "You can type the value of gems!");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(Amount < 1 || Amount > 100) return SendError(playerid, "You can type a gems amount only 1-100!");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    foreach(new i: Player) PlayerInfo[i][Gems] += Amount, UpdatePlayer(PN(i), "Gems", PlayerInfo[i][Gems] + Amount), format(eString, sizeof(eString), "Administrator '%s' has gave all players '%d' gems!", PN(playerid), Amount), SCM(i, ABLUE, eString), PlayerPlaySound(i,1057,0.0,0.0,0.0);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "GIVEALL GEMS");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetTimerEx("GiveTimer", 10*1000, 0, "i", playerid), GiveProtection[playerid] = 1;
	    }
		if(strcmp(rParam, "gift", 		true) 	== 0)
		{
		    if(GiveProtection[playerid] == 1) return SendErrorEx(playerid, "Aceasta comanda are protectie anti-spam. Te rugam reincearca peste minim 10 secunde.");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    foreach(new i: Player) format(eString, sizeof(eString), "You have received +1 Gift from Administrator %s!", PN(playerid)), SCM(i, ABLUE, eString), PlayerInfo[i][Gifts] += 1, PlayerPlaySound(i,1057,0.0,0.0,0.0);
		    GameTextForAll("~G~~H~~H~You got +1 gift!~N~~Y~Open it on our website~N~~Y~"SERVER_WEBSITE"", 6000, 6);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "GIVEALL GIFT");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetTimerEx("GiveTimer", 10*1000, 0, "i", playerid), GiveProtection[playerid] = 1;
	    }
		if(strcmp(rParam, "respect+",   true) 	== 0)
		{
		    if(GiveProtection[playerid] == 1) return SendErrorEx(playerid, "Aceasta comanda are protectie anti-spam. Te rugam reincearca peste minim 10 secunde.");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    foreach(new i: Player) format(eString, sizeof(eString), "%s (%d) has given you a positive respect point!", PN(playerid), playerid), SCM(i, YELLOW, eString), PlayerPlaySound(i,1057,0.0,0.0,0.0), PlayerInfo[i][PosRespect] += 1;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "GIVEALL RESPECT+");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetTimerEx("GiveTimer", 10*1000, 0, "i", playerid), GiveProtection[playerid] = 1;
	    }
	    if(strcmp(rParam, "respect-",   true) 	== 0)
		{
		    if(GiveProtection[playerid] == 1) return SendErrorEx(playerid, "Aceasta comanda are protectie anti-spam. Te rugam reincearca peste minim 10 secunde.");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    foreach(new i: Player) format(eString, sizeof(eString), "%s (%d) has given you a negative respect point!", PN(playerid), playerid), SCM(i, YELLOW, eString), PlayerPlaySound(i,1057,0.0,0.0,0.0), PlayerInfo[i][NegRespect] += 1;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "GIVEALL RESPECT-");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetTimerEx("GiveTimer", 10*1000, 0, "i", playerid), GiveProtection[playerid] = 1;
	    }
	    if(strcmp(rParam, "vip",   true) 	== 0)
	    {
	        if(GiveProtection[playerid] == 1) return SendErrorEx(playerid, "Aceasta comanda are protectie anti-spam. Te rugam reincearca peste minim 10 secunde.");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    eString[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			foreach(new i: Player) if(PlayerInfo[i][pVIP] != 2 && i != playerid) PlayerInfo[i][pVIP]++, PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, 512, "Administrator %s has gave all players VIP UP.", PN(playerid));
		    SCMALL(ABLUE, eString);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			AdminCMD(playerid, "GIVEALL VIP");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetTimerEx("GiveTimer", 10*1000, 0, "i", playerid), GiveProtection[playerid] = 1;
	    }
	    if(strcmp(rParam, "level",   true) 	== 0)
	    {
	        if(GiveProtection[playerid] == 1) return SendErrorEx(playerid, "Aceasta comanda are protectie anti-spam. Te rugam reincearca peste minim 10 secunde.");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    	if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    eString[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			foreach(new i: Player) if(PlayerInfo[i][Level] != 0 && PlayerInfo[i][Level] != 5 && i != playerid) PlayerInfo[i][Level]++, PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, 512, "Administrator %s has gave all admins Level UP.", PN(playerid));
		    SCMALL(ABLUE, eString); AdminCMD(playerid, "GIVEALL LEVEL");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetTimerEx("GiveTimer", 10*1000, 0, "i", playerid), GiveProtection[playerid] = 1;
	    }
	    if(strcmp(rParam, "crates",   true) 	== 0)
	    {
	        if(GiveProtection[playerid] == 1) return SendErrorEx(playerid, "Aceasta comanda are protectie anti-spam. Te rugam reincearca peste minim 10 secunde.");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    	if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    eString[0] = EOS;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			foreach(new i: Player) PlayerInfo[i][Crate][0]++, PlayerInfo[i][Crate][1]++, PlayerInfo[i][Crate][2]++, PlayerInfo[i][Crate][3]++, PlayerInfo[i][Crate][4]++, PlayerInfo[i][Crate][5]++;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(eString, 512, "Administrator %s has gave all crates for mystery box! Type (/crate).", PN(playerid));
		    SCMALL(ABLUE, eString); AdminCMD(playerid, "GIVEALL CRATES");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetTimerEx("GiveTimer", 10*1000, 0, "i", playerid), GiveProtection[playerid] = 1;
	    }
		return true;
    }
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:asell(ESS)
{
    new String[512], PropID = GetPropID(playerid), HouseID = GetHouseID(playerid); eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PropID != -1)
    {
		if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(PropInfo[PropID][PropName], 24, "ForSale"), 	format(PropInfo[PropID][PropOwner], 24, "Nobody");
		PlayerInfo[playerid][Property] = 0, PlayerInfo[playerid][Coins] += PropInfo[PropID][Cost]/2;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    DestroyDynamicMapIcon(PropInfo[PropID][PropMapIcon]), Announce(playerid, "~w~~h~Property have been ~n~~r~~h~sold~w~~h~!", 3000, 4);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PropInfo[PropID][PropMapIcon] = CreateDynamicMapIcon(PropInfo[PropID][PropX], PropInfo[PropID][PropY], PropInfo[PropID][PropZ], 52, 52);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(String, sizeof(String), "{9C9621}\"%s\"\n\
										  {9C9621}Property is For Sale\n\
										  {2982FF}Cost: {00FF22}%d Coins and $%d\n\
										  {2982FF}Win: {00FF22}%d Coins and $%d\n\
										  {DE00BD}/business", PropInfo[PropID][PropName], PropInfo[PropID][Cost], PropInfo[PropID][CostM], PropInfo[PropID][Earning], PropInfo[PropID][EarningM]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    UpdateDynamic3DTextLabelText(Prop3D[PropID], ~1, String);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Properties` SET `PropOwner` = 'Nobody', `PropName` = 'ForSale' WHERE `ID` = '%d'", PropID);
		mysql_tquery(SQL, eQuery, "", "");
	    return true;
	}
	else if(HouseID != -1)
	{
	    if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
      	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       	Announce(playerid, "~w~~h~House ~r~~h~Sold~w~~h~!", 3000, 4);
      	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       	eQuery[0] = EOS;
       	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Houses` SET `HouseOwner` = 'ForSale' WHERE `ID` = '%d'", HouseID);
		mysql_tquery(SQL, eQuery, "", "");
  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	format(HouseInfo[HouseID][Name], 24, "ForSale"), HouseInfo[HouseID][Locked] = 1;
     	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     	PlayerInfo[playerid][Coins] += HouseInfo[HouseID][Sell]/2, PlayerInfo[playerid][House] = 0;
      	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        format(String, sizeof(String), "{00CC00}Cost: {FF0000}%d Coins and $%d\n\
								        {00CC00}Type {FF9900}/House {00CC00}for more.", HouseInfo[HouseID][Cost], HouseInfo[HouseID][CostM]);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		UpdateDynamic3DTextLabelText(housei[HouseID], ~1, String), DestroyDynamicPickup(HousePickup[HouseID]);
  		HousePickup[HouseID] = CreateDynamicPickup(1273, 23, HouseInfo[HouseID][HX], HouseInfo[HouseID][HY], HouseInfo[HouseID][HZ]);
    	return true;
	}
	else return SendError(playerid, "You are not in a House/Business Pickup!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// End Admin Commands
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vw(ESS)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "i", params[0])) return SendUsage(playerid, "/vw [0-999]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[0] > 999) return SendUsage(playerid, "/vw [0-999]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInAnyDynamicArea(playerid)) return Error(playerid, 9);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, sizeof(String), "{FFFFFF}Lumea Virtuala: %d -{FF0000} /vw 0", params[0]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	SPD(playerid, DIALOG_EMPTY, MSGBOX, String, virtualworld(), "Close", "");
   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	if(IsPlayerInAnyVehicle(playerid)) return SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), params[0]), SetPlayerVirtualWorld(playerid, params[0]);
    else return SetPlayerVirtualWorld(playerid, params[0]);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:count(playerid)
{
    if(GMCount >= 3)
    {
        eString[0] = EOS;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        format(eString, sizeof(eString), "%s {0072FF}has started the countdown! Type {FF0000}/count {0072FF}to start CountDown again.", PN(playerid));
        SCMALL(RED, eString);
        return GMCountDown();
    }
    else return SendError(playerid, "Countdown is progress...");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:fericit(ESS) return cmd_happy(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:happy(playerid)
{
	if(AntiSadSpam[playerid] == 1)
	{
	    SendError(playerid, "This command can be used once at every 10 secound!");
		return true;
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, 144, "%s este foarte fericit! :)", PN(playerid));
    SCMALL(INDIGO, eString);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetTimerEx("AntiSad", 10*1000, 0, "i", playerid);
	AntiSadSpam[playerid] = 1;
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:trist(ESS) return cmd_sad(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:sad(playerid)
{
	if(AntiSadSpam[playerid] == 1)
	{
	    SendError(playerid, "This command can be used once at every 10 secound!");
		return true;
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, 144, "%s este foarte trist! :(", PN(playerid));
    SCMALL(GRAY, eString);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetTimerEx("AntiSad", 10*1000, 0, "i", playerid);
	AntiSadSpam[playerid] = 1;
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:skin(ESS)
{
    if(IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You are in a vehicle! Please leave the car to use /skin!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	if(!sscanf(params, "i", params[0]))
	{
	    if(params[0] < 1 || params[0] > 311) return SendUsage(playerid, "/skin [0-311]");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SetPlayerSkin(playerid, params[0]);
	}
	else ShowModelSelectionMenu(playerid, skinss, "Skins", 0x00000044, 0x00000088, 0x0080FF99);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:dance(ESS)
{
    if(sscanf(params, "i", params[0])) return SendUsage(playerid, "/dance [style 1-4]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    switch(params[0])
    {
        case 1: SetPlayerSpecialAction(playerid, 5);
        case 2: SetPlayerSpecialAction(playerid, 6);
        case 3: SetPlayerSpecialAction(playerid, 7);
        case 4: SetPlayerSpecialAction(playerid, 8);
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:smoke(playerid)
{
    return ApplyAnimation(playerid, "JST_BUISNESS", "smoke_01", 4.1, 1, 1, 1, 1, 1), SetPlayerWeather(playerid, -66);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:stopsmoke(playerid)
{
    return SetPlayerWeather(playerid, 2);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:piss(playerid)
{
    if(IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You can't urinate in a vehicle!");
    else return SetPlayerSpecialAction(playerid, 68);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:beer(playerid)
{
    return SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:dick(playerid)
{
 	return SetPlayerAttachedObject(playerid, 1, 19086, 8, -0.049768, -0.014062, -0.108385, 87.458297, 263.478149, 184.123764, 0.622413, 1.041609, 1.012785); // ChainsawDildo1 - lolatdick
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:cmds(playerid)
{
    eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Language] == 1)
	{
		strcat(eString, ""SERVER_NAME" {FFFFFF}Comenzi!\n");
	 	strcat(eString, "{FFFFFF}Toate comenzile pot fi folosite apasand T, ` sau F6. Incearca-le pe toate!\n\n\n");
		strcat(eString, "{03DA00}Comenzi de mare interes fara o categorie specifia:\n");
		strcat(eString, "{FF0000}/taxi {FFFFFF}- Cheama un taxi.\n");
		strcat(eString, "{FF0000}/hold {FFFFFF}- Ataseaza obiecte de corp pentru a-ti unica infatisarea.\n");
		strcat(eString, "{FF0000}/jobs {FFFFFF}- Ai nevoie de bani sau coins? I-ati un job.\n");
		strcat(eString, "{FF0000}/createclan {FFFFFF}- Vrei sa fii liderul unui clan? Creaza-ti unul folosind aceasta comanda.\n");
		strcat(eString, "{FF0000}/animlist {FFFFFF}- Afla toate animatiile disponibile pe server.\n");
		strcat(eString, "{FF0000}/ad {FFFFFF}- Ai de facut un anunt? Foloseste aceasta comanda.\n");
		strcat(eString, "{FF0000}/mp3 {FFFFFF}- Cea mai noua muzica direct la noi pe server.\n");
		strcat(eString, "{FF0000}/buyvip {FFFFFF}- Un Very Important Player benefciaza de multe comenzi noi.\n");
		strcat(eString, "{FF0000}/vcmds {FFFFFF}- Afla comenzile unui VIP.\n");
		strcat(eString, "{FF0000}/spassword {FFFFFF}- Adauga o parola secundara pentru cont.\n");
		strcat(eString, "{FF0000}/cadouri {FFFFFF}- Informatii despre sistemul de cadouri.\n");
		strcat(eString, "{FF0000}/ro, /eng {FFFFFF}- Schimba limba server-ului.\n\n");
		strcat(eString, "{03DA00}Comenzi pentru Teleportari:\n");
		strcat(eString, "{FF0000}/teles {FFFFFF}- Toate teleportarile de pe server le gasesti aici.\n");
		strcat(eString, "{FF0000}/int {FFFFFF}- Teleportari catre interioare.\n");
		strcat(eString, "{FF0000}/up {FFFFFF}- Teleporteaza-te in al noulea cer.\n");
		strcat(eString, "{FF0000}/s {FFFFFF}- Salveaza-ti pozitia.\n");
		strcat(eString, "{FF0000}/l {FFFFFF}- Intoarce-te la pozitia salvata.\n", 1900);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_CMDS, MSGBOX, "Comenzi Pagina 1", eString, "Pagina 2", "Inchide");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(PlayerInfo[playerid][Language] == 2)
	{
		strcat(eString, ""SERVER_NAME" {FFFFFF}Commands!\n");
	 	strcat(eString, "{FFFFFF}You can use those commands in chat (T or F6). Try them all!\n\n\n");
		strcat(eString, "{03DA00}Very usefull commands without a category:\n");
		strcat(eString, "{FF0000}/taxi {FFFFFF}- Receive an taxi.\n");
		strcat(eString, "{FF0000}/hold {FFFFFF}- Attach objects on your body to create a unique look.\n");
		strcat(eString, "{FF0000}/jobs {FFFFFF}- Do you need money or coins? Get a job.\n");
		strcat(eString, "{FF0000}/createclan {FFFFFF}- Do you want to be leader in a clan? Create one.\n");
		strcat(eString, "{FF0000}/animlist {FFFFFF}- All avabile animations.\n");
		strcat(eString, "{FF0000}/ad {FFFFFF}- Do you want to make an advertisement? Use this command.\n");
		strcat(eString, "{FF0000}/mp3 {FFFFFF}- Newest music directly on our server.\n");
		strcat(eString, "{FF0000}/buyvip {FFFFFF}- A Very Important Player can use more interesting commands.\n");
		strcat(eString, "{FF0000}/vcmds {FFFFFF}- See all VIP commands and benefits.\n");
		strcat(eString, "{FF0000}/spassword {FFFFFF}- Add a secondary password to your account.\n");
		strcat(eString, "{FF0000}/cadouri {FFFFFF}- Informations about Gifts System.\n");
		strcat(eString, "{FF0000}/ro, /eng {FFFFFF}- Change server language.\n\n");
		strcat(eString, "{03DA00}Commands to teleport:\n");
		strcat(eString, "{FF0000}/teles {FFFFFF}- Al most all teleports you can find here.\n");
		strcat(eString, "{FF0000}/int {FFFFFF}- Teleports to interiors.\n");
		strcat(eString, "{FF0000}/up {FFFFFF}- Teleport to seventh heaven.\n");
		strcat(eString, "{FF0000}/s {FFFFFF}- Save your curent position.\n");
		strcat(eString, "{FF0000}/l {FFFFFF}- Load your last saved position.\n", 1900);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_CMDS, MSGBOX, "Commands - Page 1:", eString, "Page 2", "Close");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:give(ESS)
{
	new Player, rParam[10], Amount; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][AccLocked] != 0) return AccountProtect(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "s[10]uI(-1)", rParam, Player, Amount)) return SendUsage(playerid, "/give [Money/Coins/Gems/Gift] [ID/Name] [Value]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(Player) || Player == playerid) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(rParam, "money", true) == 0)
	{
	    if(GiveProtection[playerid] == 1) return SendErrorEx(playerid, "Aceasta comanda are protectie anti-spam. Te rugam reincearca peste minim 10 secunde.");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(Amount < 1 || Amount > GetPlayerMoney(playerid)) return SendError(playerid, "You don't have that amount of Money!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    GivePlayerMoney(playerid, -Amount), GivePlayerMoney(Player, Amount);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[Player][Money] += Amount, PlayerInfo[playerid][Money] -= Amount;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "%s has given you %d money!", PN(playerid), Amount), SCM(Player, YELLOW, eString);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "You have sent %d money to %s!", Amount, PN(Player)), SCM(playerid, YELLOW, eString);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetTimerEx("GiveTimer", 10*1000, 0, "i", playerid), GiveProtection[playerid] = 1;
	}
	if(strcmp(rParam, "coins", true) == 0)
	{
	    if(GiveProtection[playerid] == 1) return SendErrorEx(playerid, "Aceasta comanda are protectie anti-spam. Te rugam reincearca peste minim 10 secunde.");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(Amount < 1 || Amount > PlayerInfo[playerid][Coins]) return
	    SendError(playerid, "You don't have that amount of Coins!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[Player][Coins] += Amount, PlayerInfo[playerid][Coins] -= Amount;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "%s has given you %d coins!", PN(playerid), Amount), SCM(Player, YELLOW, eString);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "You have sent %d coins to %s!", Amount, PN(Player)), SCM(playerid, YELLOW, eString);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetTimerEx("GiveTimer", 10*1000, 0, "i", playerid), GiveProtection[playerid] = 1;
	}
	if(strcmp(rParam, "gems", true)	== 0)
	{
	    if(GiveProtection[playerid] == 1) return SendErrorEx(playerid, "Aceasta comanda are protectie anti-spam. Te rugam reincearca peste minim 10 secunde.");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(Amount < 1 || Amount > PlayerInfo[playerid][Gems]) return
	    SendError(playerid, "You don't have that amount of Gems!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    UpdatePlayer(PN(Player), "Gems", PlayerInfo[Player][Gems] + Amount), PlayerInfo[Player][Gems] += Amount;
		UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] - Amount), PlayerInfo[playerid][Gems] -= Amount;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "%s has given you %d gems!", PN(playerid), Amount), SCM(Player, YELLOW, eString);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "You have sent %d gems to %s!", Amount, PN(Player)), SCM(playerid, YELLOW, eString);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetTimerEx("GiveTimer", 10*1000, 0, "i", playerid), GiveProtection[playerid] = 1;
	}
	if(strcmp(rParam, "gift", true) == 0)
	{
	    if(GiveProtection[playerid] == 1) return SendErrorEx(playerid, "Aceasta comanda are protectie anti-spam. Te rugam reincearca peste minim 10 secunde.");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][Gifts] == 0) return SendError(playerid, "You don't have enough gift to use this command!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[Player][Gifts] += 1, PlayerInfo[playerid][Gifts] -= 1;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "%s has given you 1 Gift! - Open it on our website "SERVER_WEBSITE"", PN(playerid)), SCM(Player, YELLOW, eString);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "You have sent 1 gift to %s! ", PN(Player)), SCM(playerid, YELLOW, eString);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetTimerEx("GiveTimer", 10*1000, 0, "i", playerid), GiveProtection[playerid] = 1;
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//Teles
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:teles(playerid) return SPD(playerid, Teles_D, HEADERS, "{FFFFFF}Teleports", String_Teles(), "Teleport", "Close"), 1;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:jumps(ESS) return SPD(playerid, DIALOG_JUMPS, HEADERS, "Jumps", String_Jumps(), "Teleport", "Back"), 1;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:parkour(ESS) return SPD(playerid, Teles_D + 6, HEADERS, "Parkour", String_Parkours(), "Teleport", "Back"), 1;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:stunts(playerid) return SPD(playerid, Teles_D + 1, HEADERS, "Stunts", String_Stunts(), "Teleport", "Back"), 1;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:minigames(playerid) return SPD(playerid, DIALOG_MINIGAMES, HEADERS, "Mini Games", String_Minigames(), "Teleport", "Back");
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:football(ESS)
{
    SetPlayerInterior(playerid, 0), 							SetPlayerVirtualWorld(playerid, 69);
    SetPlayerHealth(playerid, 100.0),							SetPlayerArmour(playerid, 100.0);
    SetPlayerPos(playerid, 1597.9755, -2017.6384, 737.4656),    ResetPlayerWeapons(playerid);
    PlayerInfo[playerid][InMG][5] = 1;
    Announce(playerid, "~r~~h~Loading the Minigame...~n~~w~~h~Press Right Click~n~~g~~h~to Kick the Ball", 5000, 3);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:drifts(playerid) return SPD(playerid, Drifts_D, HEADERS, "Drift Routes", String_Drifts(), "Teleport", "Back"), 1;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:drift(ESS)
{
    TPlayer(playerid, "Desert Drift", "drift", SpawnZones[3][sPosX], SpawnZones[3][sPosY], SpawnZones[3][sPosZ], SpawnZones[3][sPosA], false, "Kalashnicov");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:drift2(ESS)
{
    TPlayer(playerid, "Forrest Drift", "drift2", -1068.6615, -1647.0188, 76.3759, 0, false);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:drift3(ESS)
{
    TPlayer(playerid, "Downhill Drift", "drift3", -2396.7542, -590.1077, 132.6484, 0, false);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:drift4(ESS)
{
    TPlayer(playerid, "Parking Drift Track 1", "drift4",  2223.4197, 1964.7053, 31.7797, 0, false);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:drift5(ESS)
{
    TPlayer(playerid, "Parking Drift Track 2", "drift5", 2261.7908, 1398.9540, 42.8203, 0, false);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:drift6(ESS)
{
    TPlayer(playerid, "Deposits Drift Track", "drift6", 1647.1736, 919.6669, 10.6719, 0, false);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:sdrift(ESS)  return TPlayer(playerid, "Short Drift", "sdrift", 1616.7253, -1132.7117, 23.6333, 0, false);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:int(ESS) return SPD(playerid, Int_D, HEADERS, "Interiors", String_Int(), "Select", "Back"), 1;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:sz(ESS) return SPD(playerid, Teles_D + 5, HEADERS, "Special Zones", String_sPlaces(), "Teleport", "Back");
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:others(playerid) return SPD(playerid, Teles_D + 3, HEADERS, "Other Teleports", String_Other(), "Teleport", "Back"), 1;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:dm(playerid)
{
	eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "\
	Command\tDescription\tPlayers Online\n\
 	{FFFF00}/mg\t{00CC00}Minigun DM\t{FFFFFF}%d\n\
	{FFFF00}/de\t{00CC00}Deagle Death Match\t{FFFFFF}%d\n\
	{FFFF00}/m4\t{00CC00}M4 Death Match\t{FFFFFF}%d\n\
	{FFFF00}/sniper\t{00CC00}Sniper Death Match\t{FFFFFF}%d\n\
	{FFFF00}/mrf\t{00CC00}Mingun-Rocket-Flame\t{FFFFFF}%d\n\
	{FFFF00}/prodm\t{00CC00}Pro Death Match\t{FFFFFF}%d\n\
	{FFFF00}/rocket\t{00CC00}Rocket Death Match\t{FFFFFF}%d\n\
	{FFFF00}/oh\t{00CC00}One Hit Death Match\t{FFFFFF}%d\n\
	{FFFF00}/gg\t{00CC00}Gun Game\t{FFFFFF}%d",
	PlayersInDM(0), PlayersInDM(1), PlayersInDM(2), PlayersInDM(3), PlayersInDM(4),
	PlayersInDM(5), PlayersInDM(6), PlayersInDM(7), PlayersInDM(8));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return ShowPlayerDialog(playerid, Teles_D+2, DIALOG_STYLE_TABLIST_HEADERS, "Death Match", eString, "Teleport", "Back"), 1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function SpawnVehicle(playerid, vehicleMod)
{
    if(PlayerInfo[playerid][pCar] != 0) { DestroyVehicle(PlayerInfo[playerid][pCar]); }
    new Float:p[4]; GetPlayerPos(playerid, p[0], p[1], p[2]); GetPlayerFacingAngle(playerid, p[3]);
    PlayerInfo[playerid][pCar] = CreateVehicle(vehicleMod, p[0], p[1], p[2], p[3], 0, 0, -1);
    PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCar], 0);
}
function DeleteVehicle(playerid)
{
	if(PlayerInfo[playerid][pCar] != 0) { DestroyVehicle(PlayerInfo[playerid][pCar]); }
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function jj(playerid) // For Jizzy Jump - Random Coins Give From Server
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid, 10, JJ_1) || IsPlayerInRangeOfPoint(playerid, 10, JJ_2) ||
		IsPlayerInRangeOfPoint(playerid, 10, JJ_3) || IsPlayerInRangeOfPoint(playerid, 10, JJ_4) ||
		IsPlayerInRangeOfPoint(playerid, 10, JJ_5))
        {
	    	if(PlayerInfo[playerid][InJJ] == 1)
	  		{
	  		    new rCoins = randomEx(1, 5);
	  		    new rMoney = randomEx(500, 1500);
	  		    new rStunt = randomEx(1, 10);
	  		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		    new string[123];
	  		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		    format(string, sizeof(string), "~Y~~H~Perfect jump!~N~~G~~H~~H~+%d stunt point and~N~~Y~~H~$%d, +%d coins", rStunt, rMoney, rCoins);
	  		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      			Announce(playerid, string, 3000, 3);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            PlayerInfo[playerid][Coins] += rCoins, PlayerInfo[playerid][StuntMonth] += rStunt, PlayerInfo[playerid][StuntPoints] += rStunt, PlayerInfo[playerid][Money] += rMoney, PlayerInfo[playerid][InJJ] = 0;
	  		}
	 	}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetTimerEx("jj", 1, false, "i", playerid);
    return true;
}
CMD:jj(playerid)
{
    TPlayer(playerid, "Jizzy Jump", "jj", -3834.1921,1392.4305,402.4087,267.0688, false);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][InJJ] = 1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetTimerEx("jj", 1, false, "i", playerid);
    if(!IsPlayerInAnyVehicle(playerid)) SetTimerEx("SpawnVehicle", 500, false, "dd", playerid, 411);
    return true;
}
CMD:bcar(playerid)
{
    TPlayer(playerid, "Basket Car", "bcar", -2084.0842,-42.6324,918.6706,271.9389, false);
    if(!IsPlayerInAnyVehicle(playerid)) SetTimerEx("SpawnVehicle", 500, false, "dd", playerid, 411);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> HNS Minigame
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ResetHNSDefault()
{
    ServerInfo[HNSStarter] = -1;
    ServerInfo[HNSStatus] = 0;
}
function RemovePlayerFromHNS(playerid)
{
	PlayerInfo[playerid][InHNS] = 0;
	SpawnPlayer(playerid);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerWeather(playerid, 2);
	SetPlayerTime(playerid, 14, 0);
	SetPlayerColor(playerid, 0xFFFFFFFF);
	SetPlayerWorldBounds(playerid, WORLD_BOUND_DEFAULT);
}
function CheckHNSTimer()
{
	if(PlayerInfo[ServerInfo[HNSStarter]][InHNS] == 1)
	{
	    KillTimer(ServerInfo[HNSTimerCFG][0]);
	    Announce(ServerInfo[HNSStarter], "~R~~H~Ai pierdut!", 6000, 3);
	    RemovePlayerFromHNS(ServerInfo[HNSStarter]);
        KillTimer(PlayerInfo[ServerInfo[HNSStarter]][HNSTimer]);
        KillTimer(ServerInfo[HNSTimerCFG][1]);
        ResetHNSDefault();
        SCMALL(RED, "Hide'n Seek{00FBFF} s-a terminat. Foloseste{38AD21} /hns{00FBFF} pentru a incepe din nou!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		foreach(new i: Player)
		{
			if(PlayerInfo[i][InHNS] == 1)
			{
				RemovePlayerFromHNS(i);
				Announce(i, "~R~~H~Ai castigat~N~~Y~50 coins & $10.000", 6000, 3);
				PlayerInfo[i][Coins] += 10;
				PlayerInfo[i][Money] += 1000;
				GivePlayerMoney(i, 1000);
			}
		}
	}
}
function CheckAvailablePlayersHNS()
{
    new sStr; for(new s = 0; s < MAX_PLAYERS; s++) if(PlayerInfo[s][InHNS] == 1) sStr++;
    if(sStr == 1)
	{
	    KillTimer(ServerInfo[HNSTimerCFG][0]);
	    KillTimer(ServerInfo[HNSTimerCFG][1]);
	    Announce(ServerInfo[HNSStarter], "~R~~H~Joc terminat!~N~~Y~Niciun jucator ramas!", 6000, 3);
	    RemovePlayerFromHNS(ServerInfo[HNSStarter]);
	    ResetHNSDefault();
	    SetOFFPonts();
	    SCMALL(RED, "Hide'n Seek{00FBFF} s-a terminat. Foloseste{38AD21} /hns{00FBFF} pentru a incepe din nou!");
	}
}
function HNSStartUP()
{
	if(ServerInfo[HNSStatus] == 1)
	{
		if(ServerInfo[HNSTime] != 0)
		{
		    if(ServerInfo[HNSTime] == 15) Announce(ServerInfo[HNSStarter], "~R~~H~15~G~~H~ secunde ramase!~N~~Y~Fi gata de start!", 6000, 3);
	    	ServerInfo[HNSTime]--;
	    }
	    else if(ServerInfo[HNSTime] == 0)
	    {
	        SetOFFPonts();
	        ServerInfo[HNSStatus] = 2;
	        TogglePlayerControllable(ServerInfo[HNSStarter], true);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        ServerInfo[HNSTimerCFG][0] = SetTimer("CheckAvailablePlayersHNS", 500, true);
	        PlayerInfo[ServerInfo[HNSStarter]][HNSTimer] = SetTimer("CheckHNSTimer", 300000, false);
	        GivePlayerWeapon(ServerInfo[HNSStarter], 38, 99999);
	        Announce(ServerInfo[HNSStarter], "~R~~H~Incepe cautarea!~N~~Y~Ai timp~R~~H~ 5~Y~ minute sa~N~~Y~ omori toti jucatorii!", 6000, 3);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        foreach(new i: Player) if(PlayerInfo[i][InHNS] == 1 && ServerInfo[HNSStarter] != i) Announce(i, "~R~~H~Ascunde-te!~N~~Y~Ai grija sa nu te gaseasca!", 6000, 3);
	    }
	}
}
function ProgresPlayerToHNS(playerid, type)
{
	if(type == 1)
	{
	    ServerInfo[HNSStatus] = 1;
	    ServerInfo[HNSTime] = 60;
	    ServerInfo[HNSStarter] = playerid;
	    SetPlayerPos(playerid, 5346.2793, -1447.4238, 526.4041);
	    TogglePlayerControllable(playerid, false);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    ServerInfo[HNSTimerCFG][1] = SetTimer("HNSStartUP", 1000, true);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(eString, sizeof(eString), "%s{00FBFF} a dat start la {38AD21}Hide'n Seek{00FBFF}! Daca vrei sa te alaturi, foloseste {FF1A00}/hns{00FBFF}!", PN(playerid));
		SCMALL(RED, eString);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SendPontText(2, "~R~~H~Hide'n Seek ~Y~~H~game has started.~N~~Y~~H~Do you want to join ? Use ~R~~H~/hns.~N~~B~~H~~H~Prize: 50 coins & 10.000$!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Announce(playerid, "~G~~H~Jocul va incepe in~N~~R~~H~60 de secunde!~N~~W~~H~Te rugam asteapta aici!", 6000, 3);
	}
	else if(type == 2)
	{
	    new rpos = random(4); LoadObjectsProtection(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		switch(rpos)
		{
			case 0: SetPlayerPos(playerid, 5333.3521, -1444.8984, 526.3100);
			case 1: SetPlayerPos(playerid, 5368.8374, -1456.0692, 526.3100);
			case 2: SetPlayerPos(playerid, 5372.7778, -1406.5133, 526.3100);
			case 3: SetPlayerPos(playerid, 5393.8716, -1488.7950, 526.3100);
		}
		Announce(playerid, "~G~~H~Jocul va incepe in~N~~R~~H~60 de secunde!~N~~W~~H~Du-te si ascunde-te!", 6000, 3);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerWorldBounds(playerid, WORLD_BOUND_HNS);
	ResetPlayerWeapons(playerid);
	SetPlayerWeather(playerid, 9);
	SetPlayerTime(playerid, 0, 0);
	PlayerInfo[playerid][InHNS] = 1;
	SetPlayerVirtualWorld(playerid, 6959);
	SetPlayerInterior(playerid, 0);
	SetPlayerColor(playerid, 0xFFFFFF00);
}
CMD:hns(ESS)
{
	if(ServerInfo[HNSStatus] == 2) return SCM(playerid, RED, "Sorry, but the HNS Minigame are already started. Plelase try again later!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(ServerInfo[HNSStatus] == 1) ProgresPlayerToHNS(playerid, 2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(ServerInfo[HNSStatus] == 0) ProgresPlayerToHNS(playerid, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Derby Minigame
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:derby(ESS)
{
	new String[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(DerbyPlaying == 1) return SendError(playerid, "Sorry, but derby already started!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(CountPlayersInDerby == 15) return SendError(playerid, "The derby is full, wait for the next round!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][InDerby] = 1, CountPlayersInDerby++;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GivePlayerWeapon(playerid, 28, 9999), TogglePlayerControllable(playerid, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Announce(playerid, "~W~~H~Please wait...~N~~R~~H~Derby starting soon!", 6000, 3);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    switch(DerbyOn)
    {
        case 0:
        {
            DerbyOn = 1;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SetPlayerInterior(playerid, 15), SetPlayerVirtualWorld(playerid, 1);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        BloodringFull[0] = 1, PutPlayerInVehicle(playerid, Bloodring[0], 0);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        PlayerInfo[playerid][PlayerInBloodring] = 0;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			DerbyCount = 30, SetTimer("StartDerby", 999, 0);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        format(String, 256, "%s{00FBFF} a dat start la {38AD21}Derby{00FBFF}! Daca vrei sa te alaturi, foloseste {FF1A00}/derby{00FBFF}!", PN(playerid));
			SCMALL(RED, String);
    	}
    	case 1:
    	{
	        SetPlayerInterior(playerid, 15), SetPlayerVirtualWorld(playerid, 1);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			for(new i = 0; i < 15; i++)
	        {
	            if(BloodringFull[i] == 0)
	            {
	                BloodringFull[i] = 1;
	                PutPlayerInVehicle(playerid, Bloodring[i], 0);
	                PlayerInfo[playerid][PlayerInBloodring] = i;
	                break;
	            }
	        }
	    }
	}
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:nascar(playerid)
{
	new Random = random(10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(ServerInfo[NascarStarted] == 1) return SendError(playerid, "The start was started! Please wait...");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InNascar] == 1) return SendError(playerid, "You already are have in nascar!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][InNascar] = 1, SetPlayerVirtualWorld(playerid, 79), SetPlayerInterior(playerid, 7);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][SpeedSize] = 0, PlayerInfo[playerid][SpeedB] = 0, SpeedTime[playerid] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(CountPlayersInNascar >= 1)
	{
		CountPlayersInNascar ++;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(CountPlayersInNascar == 0)
	{
		SCMALL(RED, "RACE: {0072FF}A new {FFFF00}Nascar {0072FF}race will start in 60 seconds! Type {FF0000}/NASCAR {0072FF}to join!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CountPlayersInNascar ++;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ServerInfo[NascarCount] = 60, LoadNascar();
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(Random)
	{
	    case 0:
	    {
 			NascarVeh[playerid] = CreateVehicle(494, -1398.2465, -239.2120, 1043.2223, 8.0336, -1, -1, -1);
 			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        LinkVehicleToInterior(NascarVeh[playerid], 7);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SetVehicleVirtualWorld(NascarVeh[playerid], GetPlayerVirtualWorld(playerid));
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 			PutPlayerInVehicle(playerid, NascarVeh[playerid], 0);
		}
		case 1:
		{
		    NascarVeh[playerid] = CreateVehicle(494, -1399.4694, -230.5527, 1043.1112, 7.9964, -1, -1, -1);
 			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        LinkVehicleToInterior(NascarVeh[playerid], 7);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SetVehicleVirtualWorld(NascarVeh[playerid], GetPlayerVirtualWorld(playerid));
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 			PutPlayerInVehicle(playerid, NascarVeh[playerid], 0);
		}
		case 2:
		{
		    NascarVeh[playerid] = CreateVehicle(494, -1400.1166, -219.4010, 1043.0323, 3.5136, -1, -1, -1);
 			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        LinkVehicleToInterior(NascarVeh[playerid], 7);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SetVehicleVirtualWorld(NascarVeh[playerid], GetPlayerVirtualWorld(playerid));
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 			PutPlayerInVehicle(playerid, NascarVeh[playerid], 0);
		}
		case 3:
		{
		    NascarVeh[playerid] = CreateVehicle(494, -1393.9293, -218.6205, 1043.0388, 3.2387, -1, -1, -1);
 			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        LinkVehicleToInterior(NascarVeh[playerid], 7);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SetVehicleVirtualWorld(NascarVeh[playerid], GetPlayerVirtualWorld(playerid));
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 			PutPlayerInVehicle(playerid, NascarVeh[playerid], 0);
		}
		case 4:
		{
		    NascarVeh[playerid] = CreateVehicle(494, -1393.3733, -228.4703, 1043.1218, 3.2412, -1, -1, -1);
 			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        LinkVehicleToInterior(NascarVeh[playerid], 7);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SetVehicleVirtualWorld(NascarVeh[playerid], GetPlayerVirtualWorld(playerid));
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 			PutPlayerInVehicle(playerid, NascarVeh[playerid], 0);
		}
		case 5:
		{
		    NascarVeh[playerid] = CreateVehicle(494, -1392.6868, -240.8450, 1043.2953, 3.1933, -1, -1, -1);
 			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        LinkVehicleToInterior(NascarVeh[playerid], 7);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SetVehicleVirtualWorld(NascarVeh[playerid], GetPlayerVirtualWorld(playerid));
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 			PutPlayerInVehicle(playerid, NascarVeh[playerid], 0);
		}
		case 6:
		{
		    NascarVeh[playerid] = CreateVehicle(494, -1398.2158, -241.7791, 1043.2621, 7.4614, -1, -1, -1);
 			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        LinkVehicleToInterior(NascarVeh[playerid], 7);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SetVehicleVirtualWorld(NascarVeh[playerid], GetPlayerVirtualWorld(playerid));
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 			PutPlayerInVehicle(playerid, NascarVeh[playerid], 0);
		}
		case 7:
		{
		    NascarVeh[playerid] = CreateVehicle(494, -1390.6113, -243.2172, 1043.3555, 10.6782, -1, -1, -1);
 			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        LinkVehicleToInterior(NascarVeh[playerid], 7);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SetVehicleVirtualWorld(NascarVeh[playerid], GetPlayerVirtualWorld(playerid));
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 			PutPlayerInVehicle(playerid, NascarVeh[playerid], 0);
		}
		case 8:
		{
		    NascarVeh[playerid] = CreateVehicle(494, -1385.5142, -260.2474, 1043.8251, 21.2910, -1, -1, -1);
 			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        LinkVehicleToInterior(NascarVeh[playerid], 7);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SetVehicleVirtualWorld(NascarVeh[playerid], GetPlayerVirtualWorld(playerid));
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 			PutPlayerInVehicle(playerid, NascarVeh[playerid], 0);
		}
		case 9:
		{
		    NascarVeh[playerid] = CreateVehicle(494, -1394.3450, -259.6716, 1043.7006, 19.3148, -1, -1, -1);
 			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        LinkVehicleToInterior(NascarVeh[playerid], 7);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        SetVehicleVirtualWorld(NascarVeh[playerid], GetPlayerVirtualWorld(playerid));
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 			PutPlayerInVehicle(playerid, NascarVeh[playerid], 0);
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TogglePlayerControllable(playerid, false);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function LoadNascar()
{
    new String[128];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i : Player)
    {
		if(PlayerInfo[i][InNascar] == 1)
		{
			format(String, sizeof(String), "~r~~h~%d ~g~~h~Secounds Remaining", ServerInfo[NascarCount]);
			Announce(i, String, 4000, 4);
		}
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(ServerInfo[NascarCount] == 0)
	{
	    foreach(new i : Player)
	    {
			if(PlayerInfo[i][InNascar] == 1)
			{
			    Announce(i, "~w~S~r~~h~t~w~a~r~~h~r~w~t", 4000, 4);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    ServerInfo[NascarStarted] = 1;
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    DisablePlayerCheckpoint(i), SetPlayerCheckpoint(i, -1418.0818, -137.0870, 1044.5697, 20);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	            TogglePlayerControllable(i, true), CPNascar[i] = 0;
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		KillTimer(ServerInfo[NascarTimer]);
	}
	else ServerInfo[NascarTimer] = SetTimer("LoadNascar", 1000, 0), ServerInfo[NascarCount]--;
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:war(playerid)
{
	new String[256], Random = random(7);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(CountPlayersInWar != 0) CountPlayersInWar++;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(CountPlayersInWar == 0)
	{
	    format(String, sizeof(String), "%s{00FBFF} a dat start la {38AD21}War{00FBFF}! Daca vrei sa te alaturi, foloseste {FF1A00}/war{00FBFF}!", PN(playerid));
		SCMALL(RED, String);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CountPlayersInWar++;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][InWar] = 1, SetPlayerHealth(playerid, 100.0), PlayerInfo[playerid][God] = 0, PlayerInfo[playerid][GodCar] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(Random)
	{
	    case 0: SetPlayerPos(playerid, 298.8192, 1816.7129, 4.7109);
	    case 1: SetPlayerPos(playerid, 202.9068, 1860.2457, 13.1406);
	    case 2: SetPlayerPos(playerid, 115.2222, 1934.1691, 18.9118);
	    case 3: SetPlayerPos(playerid, 262.6087, 1850.5929, 8.7578);
	    case 4: SetPlayerPos(playerid, 273.2715, 1802.8964, 17.6406);
	    case 5: SetPlayerPos(playerid, 386.6334, 1892.8403, 17.6406);
	    case 6: SetPlayerPos(playerid, 270.2111, 2036.7317, 17.6406);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ResetPlayerWeapons(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GivePlayerWeapon(playerid, 35, 30), GivePlayerWeapon(playerid, 16, 100), GivePlayerWeapon(playerid, 23, 100), GivePlayerWeapon(playerid, 32, 1000), GivePlayerWeapon(playerid, 31, 100);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerVirtualWorld(playerid, 78);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ReturnPlayerWar(playerid)
{
	if(PlayerInfo[playerid][InWar] == 1)
	{
		new Random = random(7);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerHealth(playerid, 100.0), PlayerInfo[playerid][God] = 0, PlayerInfo[playerid][GodCar] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		switch(Random)
		{
		    case 0: SetPlayerPos(playerid, 298.8192, 1816.7129, 4.7109);
		    case 1: SetPlayerPos(playerid, 202.9068, 1860.2457, 13.1406);
		    case 2: SetPlayerPos(playerid, 115.2222, 1934.1691, 18.9118);
		    case 3: SetPlayerPos(playerid, 262.6087, 1850.5929, 8.7578);
		    case 4: SetPlayerPos(playerid, 273.2715, 1802.8964, 17.6406);
		    case 5: SetPlayerPos(playerid, 386.6334, 1892.8403, 17.6406);
		    case 6: SetPlayerPos(playerid, 270.2111, 2036.7317, 17.6406);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ResetPlayerWeapons(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GivePlayerWeapon(playerid, 35, 30), GivePlayerWeapon(playerid, 16, 100), GivePlayerWeapon(playerid, 23, 100), GivePlayerWeapon(playerid, 32, 1000), GivePlayerWeapon(playerid, 31, 100);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerVirtualWorld(playerid, 78);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Death Match Teleport Commands
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:gg(ESS)
{
	PlayerInfo[playerid][InDM] = 1;
	PlayerInfo[playerid][InGG] = 1;
	SpawnPlayer(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~y~~h~Welcome to ~n~~g~~h~Gun Game", 4000, 3);
	return true;
}
CMD:minigun(ESS) return cmd_mg(playerid);
CMD:mg(playerid)
{
	PlayerInfo[playerid][InDM] = 1;
	PlayerInfo[playerid][InMinigun] = 1;
	SpawnPlayer(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~y~~h~Welcome to ~n~~g~~h~Minigun", 4000, 3);
    return true;
}
CMD:rocket(playerid)
{
	PlayerInfo[playerid][InDM] = 1;
	PlayerInfo[playerid][InRocket] = 1;
	SpawnPlayer(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~y~~h~Welcome to ~n~~g~~h~Rocket", 4000, 3);
	return true;
}
CMD:de(playerid)
{
    PlayerInfo[playerid][InDM] = 1;
	PlayerInfo[playerid][InDE] = 1;
	SpawnPlayer(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~y~~h~Welcome to ~n~~g~~h~Desert Eagle", 4000, 3);
  	return true;
}
CMD:m4(playerid)
{
    PlayerInfo[playerid][InDM] = 1;
	PlayerInfo[playerid][InM4] = 1;
	SpawnPlayer(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~y~~h~Welcome to ~n~~g~~h~M4 Deathmatch", 4000, 3);
    return true;
}
CMD:prodm(playerid)
{
    PlayerInfo[playerid][InDM] = 1;
	PlayerInfo[playerid][InPRODM] = 1;
	SpawnPlayer(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~y~~h~Welcome to ~n~~g~~h~Prodm", 4000, 3);
	return true;
}
CMD:sniper(playerid)
{
    PlayerInfo[playerid][InDM] = 1;
	PlayerInfo[playerid][InSniper] = 1;
	SpawnPlayer(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~y~~h~Welcome to ~n~~g~~h~Sniper", 4000, 3);
    return true;
}
CMD:mrf(ESS)
{
	PlayerInfo[playerid][InDM] = 1;
	PlayerInfo[playerid][InMRF] = 1;
	SpawnPlayer(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~y~~h~Welcome to ~n~~g~~h~MRF Deathmatch", 4000, 3);
	return true;
}
CMD:oh(ESS)
{
    PlayerInfo[playerid][InDM] = 1;
	PlayerInfo[playerid][InOH] = 1;
	SpawnPlayer(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~y~~h~Welcome to ~n~~g~~h~One hit", 4000, 3);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:party(ESS)
{
	if(sscanf(params, "i", params[0])) return SPD(playerid, DIALOG_TELES_PARTY, LIST, "Party Places", "{00FF22}Party Map 1 - {FFFF00}/party 1\n\
																														   {00FF22}Party Map 2 - {FFFF00}/party 2\n\
																														   {00FF22}Party Map 3 - {FFFF00}/party 3\n\
																														   {00FF22}Party Map 4 - {FFFF00}/party 4\n\
																														   {00FF22}Swimming Pool - {FFFF00}/sp", "Select", "Back");
	//--------------------------------------------------------------------------
	if(params[0] < 1 || params[0] > 5) return SendUsage(playerid, "/party [1-5]");
	//--------------------------------------------------------------------------
	if(params[0] == 1)                 return TPlayer(playerid, "Party 1", "party 1",  -805.4929,-1920.9489,6.8689,   0, true);
	if(params[0] == 2)                 return TPlayer(playerid, "Party 2", "party 2", -1248.2914,-1193.4233,125.5738, 0, true);
	if(params[0] == 3)                 return TPlayer(playerid, "Party 3", "party 3", -1846.2693,1004.8452,46.0872,  0, true);
	if(params[0] == 4)                 return TPlayer(playerid, "Party 4", "party 4", 1246.7513,-2418.4761,11.2263,  0, true);
	if(params[0] == 5)                 return TPlayer(playerid, "Swimming Pool", "party 5", 1246.7513,-2418.4761,11.2263,  0, true);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:djs(playerid)
{
	if(PlayerInfo[playerid][DJ] >= 1) TPlayer(playerid, "DJ Studio", "djs", 185.4732,-1832.8484,7.9479,269.9482, true);
	else TPlayer(playerid, "DJ Studio", "djs", 233.8438,-1832.8920,3.7231,89.9482, true);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Teleport Commands TPlayer parameters: playerid, teleport_name, x,y,z,a, vehicle delete ?, by, interior=0, world=0
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:vipisland(ESS)
{
	if(PlayerInfo[playerid][pVIP] < 2) return Error(playerid, 2);
	TPlayer(playerid, "Vip Island", "vipisland", -517.7502,3551.5803,5.7700,265.0286, true);
	return true;
}
CMD:hh(ESS)          return TPlayer(playerid, "Halloween House","hh", -648.2441,-1941.4138,1641.9138,0.0000, true, "Trippl3redd", 20, 5421);
CMD:interstellar(ESS)return TPlayer(playerid, "Interstellar", "interstellar", -1535.0448,418.4753,1944.0903,90.1246, true, "[9mm]Limitless");
CMD:tj(ESS)	 		 return TPlayer(playerid, "Tube Jump", "tj", 1434.8781,1789.0686,470.3594,180.1425, false);
CMD:mj(ESS)	 		 return TPlayer(playerid, "Mega Jump", "mj", 1668.5182,-1342.4410,944.3337,266.9860, false);
CMD:sp(ESS)	         return TPlayer(playerid, "Swimming Pool", "sp", 34.7349,-3370.0093,5.4689,324.6043, true);
CMD:sanchez(ESS)     return TPlayer(playerid, "Sanchez", "sanchez", 1493.4004,-1317.4912,23.6416,179.3086, true);
CMD:bmx(ESS)         return TPlayer(playerid, "BMX", "bmx", -2307.1326,630.2067,42.1307,137.9482, true);
CMD:bj1(ESS)         return TPlayer(playerid, "Building Jump 1", "bj1", 4058.3645,-1351.5557,55.4319,270.4726, false);
CMD:bj2(ESS)         return TPlayer(playerid, "Building Jump 2", "bj2", 4546.3291,777.7902,80.7988,267.2626, false);
CMD:sj(ESS)          return TPlayer(playerid, "Stunt Jizzy", "sj", SpawnZones[2][sPosX], SpawnZones[2][sPosY], SpawnZones[2][sPosZ], SpawnZones[2][sPosA], true, "Kalashnicov");
CMD:mc(ESS)          return TPlayer(playerid, "Monster Crash", "mc", -1183.8324,-1082.0883,129.3814,89.9595, true);
CMD:th(ESS)          return TPlayer(playerid, "Tree House", "th", -2213.2241,7106.3594,10.5664,0.0000, true, "NoLife");
CMD:th2(ESS)         return TPlayer(playerid, "Tree House 2", "th2", -677.9390,1287.0006,9.0420,299.6421, true);
CMD:quad(ESS)        return TPlayer(playerid, "Quad Parkour", "quad", -1241.8976,-1219.0630,798.9700,235.2185, true);
CMD:sg(ESS)          return TPlayer(playerid, "Stunt Golf", "sg", SpawnZones[1][sPosX], SpawnZones[1][sPosY], SpawnZones[1][sPosZ], SpawnZones[1][sPosA], false, "Kalashnicov");
CMD:lspd(ESS)        return TPlayer(playerid, "Los Santos PD", "lspd", 1603.4476,-1624.8726,13.5026,180, false);
CMD:sfpd(ESS)        return TPlayer(playerid, "San Fierro PD", "sfpd", -1636.8832,651.4521,7.1875,180, false);
CMD:lvpd(ESS)        return TPlayer(playerid, "Las Venturas PD", "lvpd", 2294.0544,2452.0610,10.8203,180, false);
CMD:ramp(ESS)        return TPlayer(playerid, "Desert Ramp", "ramp", -659.9482,2319.7434,138.6691,77.9657, true);
CMD:skatepark(ESS)   return TPlayer(playerid, "Skate Park", "skatepark", 1920.3247,-1402.8632,13.5703,0.0000, true);
CMD:lst(ESS)         return TPlayer(playerid, "Los Santos Trains", "lst", 1730.2751,-1949.7240,14.1172,270.0000, true);
CMD:sft(ESS)         return TPlayer(playerid, "San Fierro Trains", "sft", -1967.2286,137.8676,27.6875,270.0000, true);
CMD:lvt(ESS)         return TPlayer(playerid, "Las Venturas Trains", "lvt", 1432.7722,2623.4712,11.3926,0.0000, true);
CMD:ls(ESS) 		 return NormalTele(playerid, "Los Santos", "ls", 1476.3208, -1554.2457, 13.3004, 269.0398, 1504.9484, -1502.6752, 14.1269, 186.8951, "Kalashnicov");
CMD:sf(ESS)          return NormalTele(playerid, "San Fierro", "sf", -2014.2072, 295.7911, 34.3316, 181.2624, -1955.8425, 259.1920, 35.5333, 89.2358, "Ferg.");
CMD:lv(ESS)          return NormalTele(playerid, "Las Venturas", "lv", 2037.5223, 1517.9135, 10.4708, 2.6085, 2020.5759, 1545.6337, 10.8882, 270.1992, "Ferg.");
CMD:aa(ESS)          return NormalTele(playerid, "Abandoned Airport", "aa", -17.1142, 2483.9229, 16.2115, 270.5319, SpawnZones[5][sPosX], SpawnZones[5][sPosY], SpawnZones[5][sPosZ], SpawnZones[5][sPosA], "[9mm]Limitless");
CMD:lsair(ESS)       return TPlayer(playerid, "LS Airport Drifts", "lsair", SpawnZones[8][sPosX], SpawnZones[8][sPosY], SpawnZones[8][sPosZ], SpawnZones[8][sPosA], false, "[9mm]Limitless");
CMD:sfair(ESS)       return TPlayer(playerid, "SF Airport Drifts", "sfair", SpawnZones[7][sPosX], SpawnZones[7][sPosY], SpawnZones[7][sPosZ], SpawnZones[7][sPosA], false, "[9mm]Limitless");
CMD:lvair(ESS)       return TPlayer(playerid, "LV Airport Drifts", "lvair", SpawnZones[6][sPosX], SpawnZones[6][sPosY], SpawnZones[6][sPosZ], SpawnZones[6][sPosA], false);
CMD:dam(ESS)       	 return TPlayer(playerid, "Dam", "dam", SpawnZones[11][sPosX], SpawnZones[11][sPosY], SpawnZones[11][sPosZ], SpawnZones[11][sPosZ], false, "Kalashnicov");
CMD:planes(ESS)      return TPlayer(playerid, "Planes", "planes", 3092.3774,-965.8937,5.7865,224.1397, true, "Kalashnicov");
CMD:beach(ESS)       return TPlayer(playerid, "Beach", "beach", SpawnZones[10][sPosX], SpawnZones[10][sPosY], SpawnZones[10][sPosZ], SpawnZones[10][sPosA], true, "Ghost");
CMD:vinewood(ESS)    return TPlayer(playerid, "Vinewood", "vinewood", 1413.2775,-871.3857,46.9813, 0, false);
CMD:grove(ESS)       return TPlayer(playerid, "Grove Street", "grove", 2330.0674,-1650.4922,13.6542,197.7152, false);
CMD:chilliad(ESS)    return TPlayer(playerid, "Mount Chilliad", "chilliad", SpawnZones[9][sPosX], SpawnZones[9][sPosY], SpawnZones[9][sPosZ], SpawnZones[9][sPosA], false, "Kalashnicov");
CMD:basejump(ESS)    return TPlayer(playerid, "Base Jump", "basejump", -3338.0164,1157.7462,5821.8892,180.0000, true, "[ESS]Genius"), GivePlayerWeapon(playerid, 46, 999), 1;
CMD:pimps(ESS)       return TPlayer(playerid, "Pimps", "pimps", -2227.6587,2326.2891,7.5894,85.8590, false, "[9mm]Limitless");
CMD:a51(ESS)         return TPlayer(playerid, "Area 51", "a51", 214.3265,1857.0044,20.5685,359.7704, false);
CMD:park(ESS)        return TPlayer(playerid, "Park", "park", 2947.6226,-1476.6720,10.9194,261.5465, true);
CMD:sc(ESS)          return TPlayer(playerid, "Stunt Chrome", "sc", SpawnZones[4][sPosX], SpawnZones[4][sPosY], SpawnZones[4][sPosZ], SpawnZones[4][sPosA], false);
CMD:drag(ESS)        return TPlayer(playerid, "Drag", "drag", -2077.2339,1371.2360,7.1183,358.5586, false);
CMD:drag2(ESS)       return TPlayer(playerid, "Drag2", "drag2", -3010.0276,2757.1934,3.7278,91.7581, false);
CMD:kart(ESS)        return TPlayer(playerid, "Karting", "kart", 285.2266,1080.1578,611.3300,359.1342, true);
CMD:as(ESS)          return TPlayer(playerid, "Air Ship", "as", 1385.9863,-2048.8328,548.4388,178.1472, true);
CMD:dj(ESS)          return TPlayer(playerid, "Death Jump", "dj", -2696.3784,796.1121,1001.3923,178.5778, false);
CMD:wj(ESS)          return TPlayer(playerid, "Water Jump", "wj", -1378.2271,-1111.9880,1822.2136,340.2113, false);
CMD:nj(ESS)          return TPlayer(playerid, "Neon Jump", "nj", 1442.9556,3858.1746,1901.3625,179.6995, false), SetPlayerTime(playerid, 0, 0);
CMD:gj(ESS)          return TPlayer(playerid, "Glass Jump", "gj", -816.4337,685.6909,498.6484,184.2878, false);
CMD:lvstrip(ESS) 	 return TPlayer(playerid, "Las Venturas Strip", "lvstrip", 2028.6366,1351.3407,10.8203,266.8694, true);
CMD:lvcaligula(ESS)	 return TPlayer(playerid, "Las Venturas Caligula", "lvcaligula", 2159.5867,1677.9711,10.6875,269.9888, true);
CMD:lv4d(ESS)		 return TPlayer(playerid, "Las Venturas Casino", "lv4d", 2023.9523,1008.2184,10.8203,267.9888, true);
CMD:lvtrans(ESS)	 return TPlayer(playerid, "Las Venturas Tuning", "lvtrans", 2387.8733,1034.4077,10.8203,5.6303, true);
CMD:lvammu(ESS)		 return TPlayer(playerid, "Las Venturas Ammu", "lvammu", 2159.2546,945.7769,10.8203,83.9888, true);
CMD:lvps(ESS)		 return TPlayer(playerid, "Las Venturas Pay'n'Spray", "lvps", 1958.6022,2162.1301,10.8203,271.3515, true);
CMD:hut1(ESS)		 return TPlayer(playerid, "Hunted Woods 1", "hut1", -2816.1846,-1512.2142,139.2891,270.3932, true);
CMD:hut2(ESS)		 return TPlayer(playerid, "Hunted Woods 2", "hut2", -1632.5287,-2251.1802,31.3772,92.3134, true);
CMD:lsap(ESS)		 return TPlayer(playerid, "Los Santos Airport", "lsap", 1447.8729,-2287.0039,13.5469,90.0000, true);
CMD:lstrain(ESS)     return TPlayer(playerid, "Los Santos Trains", "lstrain", 1718.4211,-1961.8966,14.1172,0.2994, true);
CMD:lsammu(ESS)      return TPlayer(playerid, "Los Santos Ammo", "lsammu", 1363.7096,-1278.8940,13.5469,291.4827, true);
CMD:disco(ESS)       return TPlayer(playerid, "Disco", "disco", 1832.7153,-1682.1190,13.5035,63.9288, true);
CMD:sea1(ESS)        return TPlayer(playerid, "Sea1", "sea1", 139.7088,230.9938,-47.6543,291.482, true);
CMD:sea2(ESS)        return TPlayer(playerid, "Sea2", "sea2", -238.3578,-571.6083,-51.5113,291.4827, true);
CMD:sea3(ESS)        return TPlayer(playerid, "Sea3", "sea3", 1096.6357,-2730.0249,-12.4922,291.4827, true);
CMD:sea4(ESS)        return TPlayer(playerid, "Sea4", "sea4", -2231.2471,2421.9380,-42.5625,291.4827, true);
CMD:sffire(ESS)      return TPlayer(playerid, "San Fierro Fire", "sffire", -2044.5574,57.2549,28.3977,266.3181, true);
CMD:sfhospital(ESS)  return TPlayer(playerid, "San Fierro Hospital", "sfhospital", -2662.8206,621.0546,14.4531,182.4522, true);
CMD:sftrain(ESS)     return TPlayer(playerid, "San Fierro Trains", "sftrain", -1986.2827,137.5190,27.6875,176.2583, true);
CMD:sfps(ESS)        return TPlayer(playerid, "San Fierro Pay'n'Spray", "sfps", -2426.1794,1039.8589,50.3906,179.5328, true);
CMD:sfammu(ESS)      return TPlayer(playerid, "San Fierro Ammo", "sfammu", -2626.4656,212.8103,4.6051,174.6689, true);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:sstunts(playerid) return SPD(playerid, Stunt_D, LIST, "Simple Stunts", "{0072FF}Simple Stunt 1\n{0072FF}Simple Stunt 2\n{0072FF}Simple Stunt 3\n{0072FF}Simple Stunt 4\n{0072FF}Simple Stunt 5\n{0072FF}Simple Stunt 6\n{0072FF}Simple Stunt 7\n{0072FF}Simple Stunt 8\n{0072FF}Simple Stunt 9\n{FFFF00}Simple Stunt 10\n{FFFF00}Simple Stunt 11\n{FFFF00}Simple Stunt 12\n{FFFF00}Simple Stunt 13\n{FFFF00}Simple Stunt 14\n{FFFF00}Simple Stunt 15\n{FFFF00}Simple Stunt 16\n{FFFF00}Simple Stunt 17\n{FFFF00}Simple Stunt 18\n{FFFF00}Simple Stunt 19\n{FFFF00}Simple Stunt 20\n{FFFF00}Simple Stunt 21\n{FF0000}Simple Stunt 22\n{FF0000}Simple Stunt 23\n{FF0000}Simple Stunt 24\n{FF0000}Simple Stunt 25\n{FF0000}Simple Stunt 26\n{FF0000}Simple Stunt 27\n{FF0000}Simple Stunt 28\n{FF0000}Simple Stunt 29\n", "Select", "Back"), 1;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:ss(ESS)
{
    new StuntID;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "i", StuntID)) return SendUsage(playerid, "/ss [StuntID(1-29)]");
    if(StuntID < 1 || StuntID > 30) return SendUsage(playerid, "/ss [StuntID(1-29)]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    else if(StuntID == 1)  TPToStunt(playerid,1843.689941,1455.381835,11.197062);
    else if(StuntID == 2)  TPToStunt(playerid,1838.994873,1586.723144,8.527256);
    else if(StuntID == 3)  TPToStunt(playerid,2335.312255,2149.432128,10.249174);
    else if(StuntID == 4)  TPToStunt(playerid,1922.183959,2008.699096,10.116531);
    else if(StuntID == 5)  TPToStunt(playerid,1943.340087,2199.185791,10.392769);
    else if(StuntID == 6)  TPToStunt(playerid,2876.097167,1579.139160,10.393080);
    else if(StuntID == 7)  TPToStunt(playerid,-2264.446044,320.152679,34.956920);
    else if(StuntID == 8)  TPToStunt(playerid,-2490.424072,441.591400,27.666994);
    else if(StuntID == 9)  TPToStunt(playerid,1872.261840,-1427.949462,10.135522);
    else if(StuntID == 10) TPToStunt(playerid,-2003.273559,-283.168212,34.892936);
    else if(StuntID == 11) TPToStunt(playerid,2008.712158,900.844909,10.390938);
    else if(StuntID == 12) TPToStunt(playerid,2218.766113,2406.661132,10.385766);
    else if(StuntID == 13) TPToStunt(playerid,-1795.686645,730.918395,34.581394);
    else if(StuntID == 14) TPToStunt(playerid,1536.790649,-1742.266601,13.120272);
    else if(StuntID == 15) TPToStunt(playerid, 1855.901489, -1467.969238, 12.967999);
    else if(StuntID == 16) TPToStunt(playerid, -2020.3922, 280.9665, 33.2408);
    else if(StuntID == 17) TPToStunt(playerid, -2267.8865,-102.2022,34.8777);
	else if(StuntID == 18) TPToStunt(playerid, 1874.7471,-1444.6841,13.1259);
	else if(StuntID == 19) TPToStunt(playerid, 2066.0383,-1340.6486,23.3591);
	else if(StuntID == 20) TPToStunt(playerid, 2140.0562,-2223.0105,12.9609);
	else if(StuntID == 21) TPToStunt(playerid, 1454.1095,-1300.9236,12.9429);
	else if(StuntID == 22) TPToStunt(playerid, 1618.0255,-1592.3456,13.1173);
	else if(StuntID == 23) TPToStunt(playerid, 2168.9751,1213.4734,10.3896);
	else if(StuntID == 24) TPToStunt(playerid, 1878.1769,933.1486,10.2434);
	else if(StuntID == 25) TPToStunt(playerid, 1373.9457,-939.9440,33.6631);
	else if(StuntID == 26) TPToStunt(playerid, 1338.1849,-1282.4756,12.9523);
	else if(StuntID == 27) TPToStunt(playerid, -2706.2771,77.6983,3.7186);
	else if(StuntID == 28) TPToStunt(playerid, -1721.1573,1103.3372,44.8680);
	else if(StuntID == 29) TPToStunt(playerid, 343.3551,-1467.3721,35.0749);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:myhouse(ESS) return SpawnPlayerAtHouse(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:mybusiness(ESS) return SpawnPlayerAtBusiness(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:start(ESS)
{
	new Float:X, Float:Y, Float:Z; GetPlayerPos(playerid, X, Y, Z);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][InStunt] == 1 || PlayerInfo[playerid][InDrift] == 1) return SendError(playerid, "You have already started a special action!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Simple Stunts
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(IsPlayerInRangeOfPoint(playerid, 10, 1843.689941,1455.381835,11.197062)) 	return StartStunt(playerid, 2119.226806,1484.166137,23.713024);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 1838.994873,1586.723144,8.527256)) 	return StartStunt(playerid, 1855.949462,1404.554565,16.494167);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 2335.312255,2149.432128,10.249174))    return StartStunt(playerid, 2076.076171,2189.884277,16.371088);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 1922.183959,2008.699096,10.116531))	return StartStunt(playerid, 1959.837646,1951.906982,22.804206);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 1943.340087,2199.185791,10.392769))    return StartStunt(playerid, 2201.198974,2224.700927,24.488876);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 2876.097167,1579.139160,10.393080))	return StartStunt(playerid, 2808.418212,1247.089599,23.330883);
	else if(IsPlayerInRangeOfPoint(playerid, 10, -2264.446044,320.152679,34.956920)) 	return StartStunt(playerid, -1946.526855,299.878601,47.703125);
	else if(IsPlayerInRangeOfPoint(playerid, 10, -2490.424072,441.591400,27.666994))	return StartStunt(playerid, -2352.336425,595.131164,41.985321);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 1872.261840,-1427.949462,10.135522))	return StartStunt(playerid, 1975.505737,-1415.686401,27.968750);
	else if(IsPlayerInRangeOfPoint(playerid, 10, -2003.273559,-283.168212,34.892936))	return StartStunt(playerid, -2040.905273,-54.725399,46.821090);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 2008.712158,900.844909,10.390938))		return StartStunt(playerid, 1773.128417,895.525634,26.882812);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 2218.766113,2406.661132,10.385766))	return StartStunt(playerid, 2397.446533,2434.597900,26.599334);
	else if(IsPlayerInRangeOfPoint(playerid, 10, -1795.686645,730.918395,34.581394))	return StartStunt(playerid, -1385.793212,673.886657,3.070312);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 1536.790649,-1742.266601,13.120272))	return StartStunt(playerid, 1564.367431,-1651.952636,28.395606);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 1855.901489,-1467.969238,12.967999))	return StartStunt(playerid, 2046.514648,-1411.622924,37.214241);
	else if(IsPlayerInRangeOfPoint(playerid, 10, -2267.8716,-102.2001,35.3203))			return StartStunt(playerid, -2239.0806,-116.1189,47.2874);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 1874.7556,-1444.6968,13.5510))			return StartStunt(playerid, 1899.7488,-1354.8217,23.3599);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 2066.1096,-1340.9332,23.8203))			return StartStunt(playerid, 1812.8020,-1333.7844,29.9844);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 2140.0549,-2223.0105,13.3899))			return StartStunt(playerid, 2320.2915,-2036.7924,25.7939);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 1453.5579,-1300.2125,13.3828))			return StartStunt(playerid, 1741.1683,-1328.5615,29.9844);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 1618.0244,-1592.3458,13.5469))			return StartStunt(playerid, 1847.0667,-1590.5660,28.4121);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 2168.9238,1213.3776,10.8203))			return StartStunt(playerid, 2004.1073,1210.7656,18.0859);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 1878.1779,933.1486,10.6719))			return StartStunt(playerid, 2101.7417,952.3642,15.7348);
	else if(IsPlayerInRangeOfPoint(playerid, 10, -2291.7871,726.4196,49.4384))			return StartStunt(playerid, -2549.2312,733.8956,45.0234);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 1373.9473,-939.9419,34.1875))			return StartStunt(playerid, 1131.6395,-920.9791,58.1868);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 1338.1860,-1282.4750,13.3828))			return StartStunt(playerid, 1175.8544,-1295.8167,29.0859);
	else if(IsPlayerInRangeOfPoint(playerid, 10, -2706.2795,77.7037,4.2400))			return StartStunt(playerid, -2741.9507,440.2217,22.5568);
	else if(IsPlayerInRangeOfPoint(playerid, 10, -1721.1564,1103.3379,45.2969))			return StartStunt(playerid, -1989.5371,1117.8669,74.0608);
	else if(IsPlayerInRangeOfPoint(playerid, 10, 343.6186,-1467.6818,35.5760))			return StartStunt(playerid, 411.7508,-1416.7096,42.7109);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Drifts
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    else if(IsPlayerInRangeOfPoint(playerid, 10, -303.2536,1505.5580,75.1785)) 	  return StartDrift(playerid, -298.6440,1401.0804,72.0432, -366.2761,1463.2701,62.9382), 	PlayerInfo[playerid][DriftCP][0] = 1, PlayerInfo[playerid][Drift0] = gettime();
    else if(IsPlayerInRangeOfPoint(playerid, 10, -1064.4688,-1647.8483,76.6258))  return StartDrift(playerid, -1018.5343,-1687.4703,77.2974, -892.9836,-1726.3636,76.8200), 	PlayerInfo[playerid][DriftCP][1] = 1, PlayerInfo[playerid][Drift1] = gettime();
    else if(IsPlayerInRangeOfPoint(playerid, 10, -2411.7566,-601.1371,132.5680))  return StartDrift(playerid, -2441.7380,-576.8684,129.5878, -2499.8108,-481.5539,94.1763), 	PlayerInfo[playerid][DriftCP][2] = 1, PlayerInfo[playerid][Drift2] = gettime();
    else if(IsPlayerInRangeOfPoint(playerid, 10, 2228.4851,1964.6354,31.7797)) 	  return StartDrift(playerid, 2303.6814,1963.6531,31.5022, 2295.4634,1959.8706,26.0264), 	PlayerInfo[playerid][DriftCP][3] = 1, PlayerInfo[playerid][Drift3] = gettime();
    else if(IsPlayerInRangeOfPoint(playerid, 10, 2261.7908,1398.9540,42.8203)) 	  return StartDrift(playerid, 2314.1326,1407.2189,42.5474, 2283.5173,1513.1539,42.5474), 	PlayerInfo[playerid][DriftCP][4] = 1, PlayerInfo[playerid][Drift4] = gettime();
    else if(IsPlayerInRangeOfPoint(playerid, 10, 1638.1107,-1129.9386,23.9063))   return StartDrift(playerid, 1665.4717,-1119.8839,23.9063, 1697.8661,-1075.7421,23.9063),   PlayerInfo[playerid][DriftCP][5] = 1, PlayerInfo[playerid][Drift5] = gettime();
    else if(IsPlayerInRangeOfPoint(playerid, 10, 1647.1736,919.6669,10.6719))     return StartDrift(playerid, 1666.2180,942.8900,10.2418, 1689.3176,999.3296,10.3903),   PlayerInfo[playerid][DriftCP][6] = 1, PlayerInfo[playerid][Drift6] = gettime();
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:fishmarket(playerid)
{
    if(!IsPlayerInRangeOfPoint(playerid, 2, 360.6447, -2031.58, 7.8359)) return SendError(playerid, "You are not around Fish Market!");
	return SPD(playerid, DIALOG_FISH, LIST, "Fish {FF0000}Market", "{00CC00}Fishing Rod - {00BBF6}3000$\n{00CC00}Mixed Baits - {00BBF6}1000$", "Buy", "Close"), 1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:fish(ESS)
{
    if(!ValidFishPlace(playerid)) return SendError(playerid, "You are not around a vaild Fishing place!");
	if(IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You can't fish when you are in a car!");
	if(PlayerInfo[playerid][Bait] == 0) return SendError(playerid, "You do not have any routs left!");
	if(PlayerInfo[playerid][Rod] == 0) return SendError(playerid, "You do not have any Fishing Rod!");
	if(PlayerInfo[playerid][Fishing] == 1) return SendError(playerid, "You already fishing. Please wait!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TogglePlayerControllable(playerid, 0), ApplyAnimation(playerid, "SWORD", "sword_block", 50.0, 0, 1, 0, 1, 1), PlayerInfo[playerid][Fishing] = 1, PlayerInfo[playerid][Bait] = PlayerInfo[playerid][Bait] - 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetTimerEx("FishTimer", 40000, false, "i", playerid), SetTimerEx("AnimFixer", 1000, false, "i", playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return MSGLang(playerid, YELLOW, "You have threw the routs in the sea, please wait...", "Ai aruncat râmele in apa. Asteapta pana prinzi ceva...");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:session(ESS)
{
	new Player, lihsession, limsession, lissession, lihsession2, limsession2, lissession2;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	if(!sscanf(params, "u", Player))
	{
	  SessionGameTime(Player, lihsession, limsession, lissession);
	  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      format(eString, 669, "ACCOUNT: %s(%d) has %d hours, %d minutes & %d seconds since connect!", PN(Player), Player, lihsession, limsession, lissession);
      SCM(playerid, LIME, eString);
	}
	else
	{
	  SessionGameTime(playerid, lihsession2, limsession2, lissession2);
	  //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      format(eString, 669, "ACCOUNT: %s(%d) has %d hours, %d minutes & %d seconds since connect!", PN(playerid), playerid, lihsession2, limsession2, lissession2);
      SCM(playerid, LIME, eString);
	}
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:rec(ESS)
{
	new id;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	if(!sscanf(params, "u", id)) SetPlayerVirtualWorld(playerid, id);
   	else SetPlayerVirtualWorld(playerid, 0);
   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerPos(playerid, -2134.6411,-2373.8792,645.5083);
    SetPlayerFacingAngle(playerid, 89.9171);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerInterior(playerid, 10000000000000), ResetPlayerWeapons(playerid);
    Announce(playerid, "~G~~H~Welcome to~N~~R~~h~Recruitment zone~N~~N~~W~do not shot here!", 6000, 3);
    PlayerInfo[playerid][InRec] = 1;
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Dialog Cars - /v
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:v(playerid)
{
    if(IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "Already drive a car. Out of the car and try again.");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(IsPlayerInAnyDynamicArea(playerid) && PlayerInfo[playerid][RconType] < 2) return Error(playerid, 9);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SPD(playerid, DIALOG_VEHICLES, LIST, "{FFFF00}Vehicles", "{00CC00}Bicycles\n{FF0000}Bikes\n{FFFF00}Monster trucks\n{33CCFF}Boats\n{FF9900}Helicopters\n{A52A2A}Planes\n{10F441}Cars\n{FFC0CB}RC vehicles\n{FAD8AC}Special Vehicles", "Select", "Cancel");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:onb(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You need to drive a vehicle, to use this command!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Act[playerid] == 0) return Act[playerid] = 1, Announce(playerid, "~w~~h~Anti-Fall off bike is now ~g~~h~On", 4000, 4);
	else return Act[playerid] = 0, Announce(playerid, "~w~~h~Anti-Fall off bike is now ~r~~h~Off", 4000, 4);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:fix(playerid)
{
	SetVehicleHealth(GetPlayerVehicleID(playerid), 1000);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:car(ESS)
{
    new Car[30], Color[2], sCarModel, Float:cPos[4], int1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(IsPlayerInAnyDynamicArea(playerid) && PlayerInfo[playerid][RconType] < 2) return Error(playerid, 9);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "s[30]D(-1)D(-1)", Car, Color[0], Color[1])) return cmd_v(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You are already in a vehicle!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(IsNumeric(Car)) sCarModel = strval(Car);
    else sCarModel = GetVehicleModelIDFromName(Car);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(Color[0] > 127) return SendError(playerid, "Color (128 - 255) is available for Personal Vehicles (Premium)");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(Color[1] > 127) return SendError(playerid, "Color (128 - 255) is available for Personal Vehicles (Premium)");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sCarModel < 400 || sCarModel > 611) return SendError(playerid, "Invalid vehicle model/name!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Color[0] == -1) Color[0] = random(127);
	if(Color[1] == -1) Color[1] = random(127);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][pCar] != 0) { DestroyVehicle(PlayerInfo[playerid][pCar]); }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GetPlayerPos(playerid, cPos[0], cPos[1], cPos[2]); GetPlayerFacingAngle(playerid, cPos[3]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	if(PlayerInfo[playerid][pCar] == 432 && PlayerInfo[playerid][pVIP] < 2) return Announce(playerid, "~R~~H~You are not allowed to ~N~~R~~H~Use this vehicle!", 3000, 3);
	if(PlayerInfo[playerid][pCar] == 425 && PlayerInfo[playerid][pVIP] < 2) return Announce(playerid, "~R~~H~You are not allowed to ~N~~R~~H~Use this vehicle!", 3000, 3);
	if(PlayerInfo[playerid][pCar] == 520 && PlayerInfo[playerid][pVIP] < 2) return Announce(playerid, "~R~~H~You are not allowed to ~N~~R~~H~Use this vehicle!", 3000, 3);
	if(PlayerInfo[playerid][pCar] == 447 && PlayerInfo[playerid][pVIP] < 2) return Announce(playerid, "~R~~H~You are not allowed to ~N~~R~~H~Use this vehicle!", 3000, 3);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    int1 = GetPlayerInterior(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][pCar] = CreateVehicle(sCarModel, cPos[0], cPos[1], cPos[2], cPos[3], Color[0], Color[1], -1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    LinkVehicleToInterior(PlayerInfo[playerid][pCar], int1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    FormatMSG(playerid, SPAWNCAR, "You spawned a %s Model %d with Colors %d, %d", vNames[sCarModel-400], sCarModel, Color[0], Color[1]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetVehicleNumberPlate(PlayerInfo[playerid][pCar], DEFAULT_NUMBER_PLATE);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetVehicleVirtualWorld(PlayerInfo[playerid][pCar], GetPlayerVirtualWorld(playerid));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCar], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i, j = MAX_OBJECTS; i < j; i++)
	{
        if(HoldsInfo[playerid][i][HoldUsed] == true && PlayerInfo[playerid][HoldInCar] != 0 && PlayerInfo[playerid][HoldCID] != sCarModel)
        {
           SetPlayerAttachedObject(playerid, HoldsInfo[playerid][i][HoldIndex], HoldsInfo[playerid][i][HoldModel], HoldsInfo[playerid][i][HoldBone], HoldsInfo[playerid][i][fOffsetX1], HoldsInfo[playerid][i][fOffsetY1], HoldsInfo[playerid][i][fOffsetZ1], HoldsInfo[playerid][i][fRotX1], HoldsInfo[playerid][i][fRotY1], HoldsInfo[playerid][i][fRotZ1], HoldsInfo[playerid][i][fScaleX1], HoldsInfo[playerid][i][fScaleY1], HoldsInfo[playerid][i][fScaleZ1]);
		}
		else if(HoldsInfo[playerid][i][HoldUsed] == true && PlayerInfo[playerid][HoldCID] == sCarModel)
		{
           SetPlayerAttachedObject(playerid, HoldsInfo[playerid][i][HoldIndex], HoldsInfo[playerid][i][HoldModel], HoldsInfo[playerid][i][HoldBone], HoldsInfo[playerid][i][fOffsetX1], HoldsInfo[playerid][i][fOffsetY1], HoldsInfo[playerid][i][fOffsetZ1], HoldsInfo[playerid][i][fRotX1], HoldsInfo[playerid][i][fRotY1], HoldsInfo[playerid][i][fRotZ1], HoldsInfo[playerid][i][fScaleX1], HoldsInfo[playerid][i][fScaleY1], HoldsInfo[playerid][i][fScaleZ1]);
        }
	}
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:admins(ESS)
{
    if(PlayerInfo[playerid][pVIP] < 1) return SCM(playerid, RED, "Use: /report [ID/Name] [Reason] instead (Ex: /report 3 hack)!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new astr[2048], arank[50], TotalCount = 0, DCaption[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
   		if(IsPlayerConnected(i) && PlayerInfo[i][Level] > 0)
		{
			if(PlayerInfo[i][RconType] == 3 && PlayerInfo[i][AFKBRB] == 0)   	arank = "{00BBF6}- {FF0000}Manager";
			else if(PlayerInfo[i][RconType] == 2 && PlayerInfo[i][AFKBRB] == 0) arank = "{00BBF6}- {FF5555}Support";
			else if(PlayerInfo[i][RconType] == 1 && PlayerInfo[i][AFKBRB] == 0) arank = "{00BBF6}- {FFFFFF}RCON";
			else if(PlayerInfo[i][AFKBRB] >= 1)						           	arank = "{FFFF00}- AFK";
			else if(PlayerInfo[i][AFKBRB] == 0)                                	arank = "";
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(astr, sizeof(astr), "{FF0000}%s {00CC00}(%d){00BBF6} Level: %d %s\n%s", PN(i), i, PlayerInfo[i][Level], arank, astr);
			TotalCount++;
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(DCaption, 128, "{FFFFFF}Administrators -{FF0000} %d{FFFFFF} online", TotalCount);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(TotalCount == 0) return ShowOfflineAdmins(playerid);
	else return SPD(playerid, DIALOG_ADMINS, LIST, DCaption, astr, "Close", "All admins");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:report(ESS)
{
    new String[256];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "us[128]", params[0], params[1])) return SendUsage(playerid, "/report [ID/Name] [Reason]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if((gettime() - ReportTime[playerid]) < 30) return SendError(playerid, "You can use this command only once at every 30 secounds!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[params[0]][LoggedIn] == 0) return SendError(playerid, "Player must be registered and logged in!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "/REPORTS: {FF0000}%s(%d){FF6600} reported{FF0000} %s(%d){FF6600} Reason: %s", PN(playerid), playerid, PN(params[0]), params[0], params[1]);
	MessageToAdmins(REPORT2, String);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[params[0]][ReportedID] = 1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[params[0]][Reporter] = playerid;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    ServerInfo[InactivityReports] = SetTimer("Inactivity", 300000, true);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[params[0]][ReportedPlayer] == 0) ServerInfo[CountReports]++;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i: Player) if(PlayerInfo[i][Level] >= 1) PlayerTextDrawShow(i, ReportTD), Report(i);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(PlayerInfo[params[0]][ReportedByPlayer], 100, "%s", PN(playerid));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(PlayerInfo[params[0]][ReportedByPlayerReason], 1000, "%s", params[1]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[params[0]][ReportedPlayer] = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, sizeof(eString), "/REPORT: %s a fost reportat adminilor online. Motiv: %s", PN(params[0]), params[1]);
    SCM(playerid, REPORT, eString);
	return Reports[MAX_REPORTS-1] = String, ReportTime[playerid] = gettime();
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:ranks(playerid)
{
	new String[1024];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(String, "{FFFFFF}Rank       \t\t{FF0000}Kills      \t\t{FF0000}Drift points    \t\t{FF0000}Race points 	\t\t{FF0000}Stunt points\n");
	strcat(String, "{FF4800}Begginer   \t{FFFFFF}1+         \t{FFFFFF}1+            	\t{FFFFFF}1+          		\t{FFFFFF}1+\n");
	strcat(String, "{FFAE00}Advanced   \t{FFFFFF}500+       \t{FFFFFF}1500+           	\t{FFFFFF}100+        		\t{FFFFFF}250+\n");
	strcat(String, "{FFFF00}Specialist \t{FFFFFF}3000+      \t{FFFFFF}10000+          	\t{FFFFFF}1000+       		\t{FFFFFF}1000+\n");
	strcat(String, "{6AFF00}Master     \t{FFFFFF}10000+     \t{FFFFFF}20000+          	\t{FFFFFF}5000+       		\t{FFFFFF}2500+\n");
	strcat(String, "{0088FF}King       \t{FFFFFF}30000+     \t{FFFFFF}500000+          	\t{FFFFFF}15000+     		\t{FFFFFF}10000+\n");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_EMPTY, MSGBOX, "Stats Ranks", String, "Close", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Player Statistics - /stats
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:stats(ESS)
{
    if(ServerProtection == 1) return SendErrorEx(playerid, "Nu poti folosi momental aceasta comanda! Te rugam sa incerci mai tarziu.");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!sscanf(params, "u", params[0]))
	{
	    if(IsPlayerConnected(params[0])) return SPD(playerid, DIALOG_EMPTY, MSGBOX, "Player Stats", ShowStats(params[0]), "Ok", "");
	    else return Error(playerid, 10);
	}
	else return SPD(playerid, DIALOG_DESCRIPTION_D, MSGBOX, "Player Stats", ShowStats(playerid), "Ok", "Description");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ShowStats(playerid)
{
    new lsHouse[64], lsProp[64], Hours, Minutes, Secounds;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    eString[0] = EOS; StrH[0] = '\0'; StrH2[0] = '\0';
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TotalGameTime(playerid, Hours, Minutes, Secounds);
    GetPlayerStatsPoints(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	lsHouse = (PlayerInfo[playerid][House]) ? ("{33FFFF}Yes") : ("{FF0000}No");
    lsProp = (PlayerInfo[playerid][Property]) ? ("{33FFFF}Yes") : ("{FF0000}No");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(StrH, sizeof(StrH), "%s%s%s", PlayerInfo[playerid][DLine1], PlayerInfo[playerid][DLine2], PlayerInfo[playerid][DLine3]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!strlen(StrH)) format(StrH2, sizeof(StrH2), "\0");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else
	{
	    format(StrH2, sizeof(StrH2), "\n{FF6F00}Description:\n\
					              	  {FFFFFF}%s\n\
								      {FFFFFF}%s\n\
								      {FFFFFF}%s", PlayerInfo[playerid][DLine1], PlayerInfo[playerid][DLine2], PlayerInfo[playerid][DLine3]);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, sizeof(eString), "{FF0000}%s{00CC00}'s (ID: {00F7FF}%i{00CC00}, Age: {00F7FF}%d{00CC00}, {00CC00}Warns: {00F7FF}%d/5{00CC00})\n\n\
				                      {FF6F00}General statistics\n\
                                      {00CC00}Money: {00EEFF}$%d\n\
                                      {00CC00}Coins: {00EEFF}%d\n\
                                      {00CC00}Online time: {00EEFF}%d {00CC00}hrs, {00EEFF}%d {00CC00}mins, {00EEFF}%d {00CC00}secs\n\
                                      {00CC00}Respect: {00EEFF}%d / -%d\n\
                                      {00CC00}Admin: %s\n\
                                      {00CC00}VIP: %s\n\
                                      {00CC00}Gems: {00EEFF}%d\n\
                                      %s\n\
                                      {FF6F00}Killer statistics\n\
                                      {00CC00}Kills: {00EEFF}%d {00CC00}\n\
                                      {00CC00}Killing Spree: {00EEFF}%d {00CC00}| Best Killing Spree: {00EEFF}%d\n\
                                      {00CC00}Deaths: {00EEFF}%d\n\
                                      {00CC00}Killer rank: %s\n\n\
                                      {FF6F00}Driving skills\n\
                                      {00CC00}Drift points: {00EEFF}%d {00CC00}(%s{00CC00})\n\
                                      {00CC00}Stunt points: {00EEFF}%d {00CC00}(%s{00CC00})\n\
                                      {00CC00}Race points: {00EEFF}%d {00CC00}(%s{00CC00})\n\n\
                                      {FF6F00}Properties\n\
                                      {00CC00}House: {FF0000}%s\n\
                                      {00CC00}Business: {FF0000}%s\n\
                                      {00CC00}Personal vehicles: {FF0000}%s\n\n\
                                      {FF6F00}Quests Finished: %s\n\
                                      {FF6F00}Stats Note: {00F7FF}%d{FF0000}/{FF0000}10\n%s",
    PN(playerid), playerid, PlayerInfo[playerid][Age], PlayerInfo[playerid][Warnings], PlayerInfo[playerid][Money], PlayerInfo[playerid][Coins], Hours, Minutes, Secounds, PlayerInfo[playerid][PosRespect], PlayerInfo[playerid][NegRespect], GetPlayerAdmin(playerid),
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GetPlayerVip(playerid), PlayerInfo[playerid][Gems], GetPlayerSkill(playerid), PlayerInfo[playerid][Kills], PlayerInfo[playerid][KillingSpree], PlayerInfo[playerid][BestKillingSpree], PlayerInfo[playerid][Deaths],
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][KillerRank], PlayerInfo[playerid][DriftPoints], PlayerInfo[playerid][DriftRank], PlayerInfo[playerid][StuntPoints], PlayerInfo[playerid][StuntRank], PlayerInfo[playerid][RacePoints], PlayerInfo[playerid][RaceRank],
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    lsHouse, lsProp, GetPlayerVehicles(playerid), GetPlayerQuests(playerid), GiveNote(playerid), StrH2);
	return eString;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerPointsRank(playerid)
{
	new String[35];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CalculateGangPoints(PlayerInfo[playerid][GangID]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CalculateClanPoints(PlayerInfo[playerid][ClanID]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][ClanID] >= 1)
	{
		if(PlayerInfo[playerid][c_Total] >= 0) format(PlayerInfo[playerid][ClanRank], 35, "Newbie");
		if(PlayerInfo[playerid][c_Total] >= 50) format(PlayerInfo[playerid][ClanRank], 35, "Advanced");
		if(PlayerInfo[playerid][c_Total] >= 250) format(PlayerInfo[playerid][ClanRank], 35, "Elite");
		if(PlayerInfo[playerid][c_Total] >= 500) format(PlayerInfo[playerid][ClanRank], 35, "Master");
		if(PlayerInfo[playerid][c_Total] >= 1000) format(PlayerInfo[playerid][ClanRank], 35, "Veteran");
		if(PlayerInfo[playerid][c_Total] >= 2000) format(PlayerInfo[playerid][ClanRank], 35, "Legendary");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(String, 35, "%s", PlayerInfo[playerid][ClanRank]);
	}
	if(PlayerInfo[playerid][GangID] >= 1)
	{
		if(PlayerInfo[playerid][g_Total] >= 0) format(PlayerInfo[playerid][GangRank], 35, "Newbie");
		if(PlayerInfo[playerid][g_Total] >= 50) format(PlayerInfo[playerid][GangRank], 35, "Advanced");
		if(PlayerInfo[playerid][g_Total] >= 250) format(PlayerInfo[playerid][GangRank], 35, "Elite");
		if(PlayerInfo[playerid][g_Total] >= 500) format(PlayerInfo[playerid][GangRank], 35, "Master");
		if(PlayerInfo[playerid][g_Total] >= 1000) format(PlayerInfo[playerid][GangRank], 35, "Veteran");
		if(PlayerInfo[playerid][g_Total] >= 2000) format(PlayerInfo[playerid][GangRank], 35, "Legendary");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(String, 35, "%s", PlayerInfo[playerid][GangRank]);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerSkill(playerid)
{
	new String[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CalculateGangPoints(PlayerInfo[playerid][GangID]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CalculateClanPoints(PlayerInfo[playerid][ClanID]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][ClanID] >= 1)
	{
	    format(String, sizeof(String), "\n{FF6F00}Character statistics\n\
										  {00CC00}Clan: {00F7FF}%s {00CC00}- Rank: {FF0000}%s\n\
										  {00CC00}Overall Points: {00F7FF}%d {00CC00}({FF0000}%s{00CC00})\n", Clan[PlayerInfo[playerid][ClanID]][ClanName], GetPlayerClanRank(playerid), PlayerInfo[playerid][c_Total], GetPlayerPointsRank(playerid));
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][GangID] >= 1)
	{
	    format(String, sizeof(String), "\n{FF6F00}Character statistics\n\
										  {00CC00}Gang: {00F7FF}%s {00CC00}- Rank: {FF0000}%s\n\
										  {00CC00}Overall Points: {00F7FF}%d {00CC00}({FF0000}%s{00CC00})\n", GangInfo[PlayerInfo[playerid][GangID]][GangName], GetPlayerGangRank(playerid), PlayerInfo[playerid][g_Total], GetPlayerPointsRank(playerid));
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerWarns(playerid)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Warnings] == 0) String = "";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(PlayerInfo[playerid][Warnings] != 0) format(String, sizeof(String), "%d/5", PlayerInfo[playerid][Warnings]);
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerStatsPoints(playerid)
{
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Kills Points
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Kills] > 0) format(PlayerInfo[playerid][KillerRank], 35, "{FF0000}Noob");
	if(PlayerInfo[playerid][Kills] > 1) format(PlayerInfo[playerid][KillerRank], 35, "{FF6600}Begginer");
	if(PlayerInfo[playerid][Kills] > 1000) format(PlayerInfo[playerid][KillerRank], 35, "{FF9D00}Advanced");
	if(PlayerInfo[playerid][Kills] > 3000) format(PlayerInfo[playerid][KillerRank], 35, "{00C8FF}Specialist");
	if(PlayerInfo[playerid][Kills] > 10000) format(PlayerInfo[playerid][KillerRank], 35, "{00D5FF}Master");
	if(PlayerInfo[playerid][Kills] > 20000) format(PlayerInfo[playerid][KillerRank], 35, "{008CFF}King of deathmatch");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Race Points
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][RacePoints] > 0) format(PlayerInfo[playerid][RaceRank], 35, "{FF0000}Noob");
	if(PlayerInfo[playerid][RacePoints] > 1) format(PlayerInfo[playerid][RaceRank], 35, "{FF6600}Begginer");
	if(PlayerInfo[playerid][RacePoints] > 1000) format(PlayerInfo[playerid][RaceRank], 35, "{FF9D00}Advanced");
	if(PlayerInfo[playerid][RacePoints] > 2000) format(PlayerInfo[playerid][RaceRank], 35, "{00C8FF}Specialist");
	if(PlayerInfo[playerid][RacePoints] > 3000) format(PlayerInfo[playerid][RaceRank], 35, "{00D5FF}Master");
	if(PlayerInfo[playerid][RacePoints] > 5000) format(PlayerInfo[playerid][RaceRank], 35, "{008CFF}King of the Streets");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Drift Points
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][DriftPoints] > 0) format(PlayerInfo[playerid][DriftRank], 35, "{FF0000}Noob");
	if(PlayerInfo[playerid][DriftPoints] > 1) format(PlayerInfo[playerid][DriftRank], 35, "{FF6600}Begginer");
	if(PlayerInfo[playerid][DriftPoints] > 2000) format(PlayerInfo[playerid][DriftRank], 35, "{FF9D00}Advanced");
	if(PlayerInfo[playerid][DriftPoints] > 5000) format(PlayerInfo[playerid][DriftRank], 35, "{00C8FF}Specialist");
	if(PlayerInfo[playerid][DriftPoints] > 10000) format(PlayerInfo[playerid][DriftRank], 35, "{00D5FF}Master");
	if(PlayerInfo[playerid][DriftPoints] > 30000) format(PlayerInfo[playerid][DriftRank], 35, "{008CFF}King of the Streets");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Stunt Points
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][StuntPoints] > 0) format(PlayerInfo[playerid][StuntRank], 35, "{FF0000}Noob");
	if(PlayerInfo[playerid][StuntPoints] > 1) format(PlayerInfo[playerid][StuntRank], 35, "{FF6600}Begginer");
	if(PlayerInfo[playerid][StuntPoints] > 1000) format(PlayerInfo[playerid][StuntRank], 35, "{FF9D00}Advanced");
	if(PlayerInfo[playerid][StuntPoints] > 4000) format(PlayerInfo[playerid][StuntRank], 35, "{00C8FF}Specialist");
	if(PlayerInfo[playerid][StuntPoints] > 8000) format(PlayerInfo[playerid][StuntRank], 35, "{00D5FF}Master");
	if(PlayerInfo[playerid][StuntPoints] > 10000) format(PlayerInfo[playerid][StuntRank], 35, "{008CFF}King of the Streets");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerVehicles(playerid)
{
	new String[234];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < MAX_VEH; i++)
    {
        if(Vehicles[i][vehOwner] == PlayerInfo[playerid][AccID])
		{
			if(CountPlayerPersonalCars(playerid) == 0) format(String, sizeof(String), "{FF0000}No");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			else if(CountPlayerPersonalCars(playerid) != 0) format(String, sizeof(String), "{00F7FF}Yes, %d {1DEE01}vehicles", CountPlayerPersonalCars(playerid));
		}
    }
    return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// SKYCLIMB SYSTEM
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:skyclimb(ESS)
{
	PlayerInfo[playerid][InSkyClimb] = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TextForSkyClimbShow(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerPos(playerid, -2600.3765,2254.7878,8.2109);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerVirtualWorld(playerid, 2022);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SkyClimbTimer[playerid] = gettime();
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~y~~h~Welcome to ~n~~g~~h~SkyClimb", 4000, 4);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function TextForSkyClimbShow(playerid)
{
    skyclimb3Dtext[0] = CreatePlayer3DTextLabel(playerid, "{00CC00}You completed\n{FF0000}1%\n{00CC00}of /Skyclimb!", -1, -2620.1328,2265.8120,16.0819, 20.0);
    skyclimb3Dtext[1] = CreatePlayer3DTextLabel(playerid, "{00CC00}You completed\n{FF0000}1%\n{00CC00}of /Skyclimb!", -1, -2620.1328,2265.8120,16.0819, 20.0);
    skyclimb3Dtext[2] = CreatePlayer3DTextLabel(playerid, "{00CC00}You completed\n{FF0000}10%\n{00CC00}of /Skyclimb!", -1, -2608.6287,2255.4922,336.9819, 20.0);
    skyclimb3Dtext[3] = CreatePlayer3DTextLabel(playerid, "{00CC00}You completed\n{FF0000}20%\n{00CC00}of /Skyclimb!", -1, -2620.2007,2266.9224,658.1418, 20.0);
    skyclimb3Dtext[4] = CreatePlayer3DTextLabel(playerid, "{00CC00}You completed\n{FF0000}30%\n{00CC00}of /Skyclimb!", -1, -2608.4507,2255.1045,977.8718, 20.0);
    skyclimb3Dtext[5] = CreatePlayer3DTextLabel(playerid, "{00CC00}You completed\n{FF0000}40%\n{00CC00}of /Skyclimb!", -1, -2619.6384,2266.6340,1300.7920, 20.0);
    skyclimb3Dtext[6] = CreatePlayer3DTextLabel(playerid, "{00CC00}You completed\n{FF0000}50%\n{00CC00}of /Skyclimb!", -1, -2608.4758,2254.9619,1624.7820, 20.0);
    skyclimb3Dtext[7] = CreatePlayer3DTextLabel(playerid, "{00CC00}You completed\n{FF0000}60%\n{00CC00}of /Skyclimb!", -1, -2619.4932,2265.5137,1946.1919, 20.0);
    skyclimb3Dtext[8] = CreatePlayer3DTextLabel(playerid, "{00CC00}You completed\n{FF0000}70%\n{00CC00}of /Skyclimb!", -1, -2608.3789,2255.0239,2267.1519, 20.0);
    skyclimb3Dtext[9] = CreatePlayer3DTextLabel(playerid, "{00CC00}You completed\n{FF0000}80%\n{00CC00}of /Skyclimb!", -1, -2620.0833,2266.6350,2587.0820, 20.0);
    skyclimb3Dtext[10] = CreatePlayer3DTextLabel(playerid, "{00CC00}You completed\n{FF0000}90%\n{00CC00}of /Skyclimb!", -1, -2608.5842,2255.1255,2909.8918, 20.0);
    skyclimb3Dtext[11] = CreatePlayer3DTextLabel(playerid, "{00CC00}You completed\n{FF0000}99%\n{00CC00}of /Skyclimb!", -1, -2608.4712,2254.8335,3241.7820, 20.0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    skyclimb3Dtext[12] = CreatePlayer3DTextLabel(playerid, "{00CC00}Enter here to{FF0000} win{00CC00} the event!", -1, -2592.6045,2131.9963,3250.1370, 50.0);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function TextForSkyClimbHide(playerid)
{
    for(new i = 0; i < 13; i++) DeletePlayer3DTextLabel(playerid, skyclimb3Dtext[i]);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// SUMO SYSTEM
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:sumo(playerid)
{
	eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(ServerInfo[SumoPlayers] == 7) return SCM(playerid, RED, "Sorry, but the sumo minigame have been reached the maximum players! (7)");
	if(ServerInfo[SumoStarted] == 1) return SCM(playerid, RED, "Sorry, but the sumo minigame are already started! Please try again later!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(ServerInfo[SumoTimerStarted] == 0)
	{
	    PlayerInfo[playerid][InSumo] = 1;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    ServerInfo[SumoPlayers]++;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    ProgresPlayerForSumo(playerid);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    ServerInfo[SumoCount] = 30;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    ServerInfo[SumoStarted] = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    ServerInfo[SumoTimerStarted] = 1;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    ServerInfo[SumoTimer] = SetTimer("SumoCountDown", 1000, 0);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(eString, sizeof(eString), "%s{00FBFF} a dat start la {38AD21}Sumo{00FBFF}! Daca vrei sa te alaturi, foloseste {FF1A00}/sumo{00FBFF}!", PN(playerid));
		SCMALL(RED, eString);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SendPontText(2, "~R~~H~Sumo ~Y~~H~game has started.~N~~Y~~H~Do you want to join ? Use ~R~~H~/sumo.~N~~B~~H~~H~Prize: 150 coins & 10.000$!");
	}
	else if(ServerInfo[SumoTimerStarted] == 1)
	{
	    PlayerInfo[playerid][InSumo] = 1;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    ServerInfo[SumoPlayers]++;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    ProgresPlayerForSumo(playerid);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ProgresPlayerForSumo(playerid)
{
    new Float:RandomCarPosX, Float:RandomCarPosY, Float:RandomCarPosZ, Float:RandomCarPosAngle;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(ServerInfo[SumoSeatOcuped][1] == 0) RandomCarPosX = 1110.5682, RandomCarPosY = -3516.2715, RandomCarPosZ = 13.9101, RandomCarPosAngle = 292.4113;
 	else if(ServerInfo[SumoSeatOcuped][2] == 0) RandomCarPosX = 1257.7333, RandomCarPosY = -3517.0349, RandomCarPosZ = 13.9099, RandomCarPosAngle = 49.9488;
  	else if(ServerInfo[SumoSeatOcuped][3] == 0) RandomCarPosX = 1233.6624, RandomCarPosY = -3497.7095, RandomCarPosZ = 13.9198, RandomCarPosAngle = 89.0741;
	else if(ServerInfo[SumoSeatOcuped][4] == 0) RandomCarPosX = 1167.3447, RandomCarPosY = -3497.5022, RandomCarPosZ = 13.9199, RandomCarPosAngle = 90.3446;
	else if(ServerInfo[SumoSeatOcuped][5] == 0) RandomCarPosX = 1138.0964, RandomCarPosY = -3448.3743, RandomCarPosZ = 13.9196, RandomCarPosAngle = 2.4986;
	else if(ServerInfo[SumoSeatOcuped][6] == 0) RandomCarPosX = 1106.0387, RandomCarPosY = -3360.4458, RandomCarPosZ = 13.9193, RandomCarPosAngle = 267.1353;
	else if(ServerInfo[SumoSeatOcuped][7] == 0) RandomCarPosX = 1264.5862, RandomCarPosY = -3365.0884, RandomCarPosZ = 13.9193, RandomCarPosAngle = 185.6187;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ServerInfo[SumoSeatOcuped][ServerInfo[SumoPlayers]] = 1;
	PlayerInfo[playerid][SumoSeat] = ServerInfo[SumoPlayers];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerPos(playerid, 181.5446,-3431.0837,71.8131);
	SetTimerEx("PutInVehicleSumo", 1500, false, "iffff", playerid, RandomCarPosX, RandomCarPosY, RandomCarPosZ, RandomCarPosAngle);
	SetPlayerVirtualWorld(playerid, -5);
	SetPlayerInterior(playerid, 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TogglePlayerControllable(playerid, false);
	return true;
}
function PutInVehicleSumo(playerid, Float:x, Float:y, Float:z, Float:a)
{
    SumoCar[playerid] = CreateVehicle(457, x, y, z, a, 0, 0, -1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetVehicleVirtualWorld(SumoCar[playerid], GetPlayerVirtualWorld(playerid));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PutPlayerInVehicle(playerid, SumoCar[playerid], 0);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function SumoCountDown()
{
    new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(ServerInfo[SumoCount] > 0)
	{
		foreach(new i : Player)
		{
			if(PlayerInfo[i][InSumo] == 1)
			{
		    	format(String, sizeof(String), "~w~~h~Starting in: ~r~~h~%d", ServerInfo[SumoCount]);
			    Announce(i, String, 6000, 3);
			}
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(ServerInfo[SumoCount] == 0)
	{
		foreach(new i : Player)
		{
			if(PlayerInfo[i][InSumo] == 1)
			{
			    SetOFFPonts();
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    if(ServerInfo[SumoPlayers] >= 2)
				{
					Announce(i, "~w~~h~G~r~~h~O ~w~~h~G~r~~h~O ~w~~h~G~r~~h~O", 2500, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    ServerInfo[SumoStarted] = 1, TogglePlayerControllable(i, true);
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    KillTimer(ServerInfo[SumoTimer]);
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    DisableRemoteVehicleCollisions(i, 1), SetTimer("DisableCollisionsForSumo", 10000, 0);
			    }
			    else
				{
				    ServerInfo[SumoSeatOcuped][1] = 0;
				    PlayerInfo[i][SumoSeat] = 0;
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			 		SendError(i, "The sumo minigame stopped, because there were not enough players(+2)");
			 		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				 	KillTimer(ServerInfo[SumoTimer]), ServerInfo[SumoStarted] = 0, PlayerInfo[i][InSumo] = 0;
				 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				 	if(SumoCar[i] != 0) DestroyVehicle(SumoCar[i]), SumoCar[i] = 0;
				 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				 	ServerInfo[SumoPlayers] = 0, SpawnPlayer(i), TogglePlayerControllable(i, true);
				 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				 	ServerInfo[SumoTimerStarted] = 0;
				 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				 	Announce(i, "~R~~H~Sumo has been canceled~N~~W~Reason:~R~~H~ Not enough players!", 6000, 3);
				}
			}
		}
	}
	else SetTimer("SumoCountDown", 999, 0), ServerInfo[SumoCount]--;
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function DisableCollisionsForSumo()
{
    foreach(new i : Player)
	{
		if(PlayerInfo[i][InSumo] == 1)
		{
		    DisableRemoteVehicleCollisions(i, 0);
		    Announce(i, "~R~~H~The collisions has~N~~R~~H~been disabled!", 6000, 3);
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function IsPlayerInWater(playerid)
{
    new Float: PosX, Float: PosY, Float: PosZ;
    GetPlayerPos(playerid, PosX, PosY, PosZ);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PosZ < 0.0)
    {
	    if(PlayerInfo[playerid][InSumo] == 1)
	    {
			PlayerInfo[playerid][InSumo] = 0, TogglePlayerControllable(playerid, true);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][SumoSeat] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        ServerInfo[SumoPlayers]--;
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(SumoCar[playerid] != 0) DestroyVehicle(SumoCar[playerid]), SumoCar[playerid] = 0;
		   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		   	foreach(new i: Player) if(PlayerInfo[i][InSumo] == 1 && ServerInfo[SumoPlayers] <= 1) CheckMinigames();
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SpawnPlayer(playerid);
	    }
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Fallout Minigame
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:fallout(ESS)
{
    eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(FalloutPlayers == 0)
	{
		if(FalloutStarted == 1) return SendError(playerid, "The Minigame is already started! Please try again later!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	format(eString, sizeof(eString), "%s{00FBFF} a dat start la {38AD21}Fall Out{00FBFF}! Daca vrei sa te alaturi, foloseste {FF1A00}/fallout{00FBFF}!", PN(playerid));
		SCMALL(RED, eString);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FalloutTimer[0] = SetTimer("FalloutStarting", 30000*1, 0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][InFallOut] = 1;
		FalloutPlayers++;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerPos(playerid, -1737.18042, 845.63318, 435.79611);
		SetPlayerVirtualWorld(playerid, 5000);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Announce(playerid, "~W~~H~~H~Please wait to start~N~~W~~H~~H~fall out minigame...", 30000, 3);
		TogglePlayerControllable(playerid, false);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ResetPlayerWeapons(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Platforms();
	}
	else if(FalloutPlayers >= 1)
	{
		if(FalloutStarted == 1) return SendError(playerid, "The Minigame is already started! Please try again later!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FalloutPlayers++;
		PlayerInfo[playerid][InFallOut] = 1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerPos(playerid, -1737.18042, 845.63318, 435.79611);
		SetPlayerVirtualWorld(playerid, 5000);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Announce(playerid, "~W~~H~~H~Please wait to start~N~~W~~H~~H~fall out minigame...", 30000, 3);
		TogglePlayerControllable(playerid, false);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ResetPlayerWeapons(playerid);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function FalloutStarting(playerid)
{
	if(FalloutPlayers >= 2)
	{
	    FalloutStarted = 1;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    foreach(new i: Player)
	    {
	        if(PlayerInfo[i][InFallOut] == 1)
	        {
			    Announce(i, "~W~~H~~H~Success!", 1000, 3);
				TogglePlayerControllable(i, true);
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    FalloutTimer[2] = SetTimer("FallingPlat", 5000, true);
	}
	else
	{
	    foreach(new i: Player)
	    {
	    	if(PlayerInfo[i][InFallOut] == 1)
			{
			    Announce(i, "~R~~H~~H~Fall Out minigame~N~~R~~H~~H~has been canceled!~N~~N~~W~~H~Not enought players!", 6000, 3);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    KillTimer(FalloutTimer[0]);
				KillTimer(FalloutTimer[1]);
				KillTimer(FalloutTimer[2]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SpawnPlayer(i);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    PlayerInfo[i][InFallOut] = 0;
			    FalloutStarted = 0;
            	FalloutPlayers--;
            	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
               	for(new o=0;o<sizeof(PlatformObject);o++) if(IsValidDynamicObject(PlatformObject[o])) DestroyDynamicObject(PlatformObject[o]);
			}
		}
	}
	FalloutTimer[1] = SetTimer("CheckPlayerFallOut", 1000, true);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CheckPlayerFallOut()
{
	if(FalloutStarted == 1)
	{
	    if(FalloutPlayers == 1)
	    {
	        foreach(new i: Player)
	        {
	            if(PlayerInfo[i][InFallOut] == 1)
	            {
	                new String[256];
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	               	format(String, sizeof(String), "%s {00FBFF}a castigat {38AD21}Fall Out{00FBFF} si a primit {FF1A00}1000$ & 10 Coins!", PN(i));
					SCMALL(RED, String);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					KillTimer(FalloutTimer[0]);
					KillTimer(FalloutTimer[1]);
					KillTimer(FalloutTimer[2]);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	               	GivePlayerMoney(i, 1000);
	               	PlayerInfo[i][Coins] += 10;
	               	SpawnPlayer(i);
	               	SetPlayerVirtualWorld(i, 0);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	               	PlayerInfo[i][InFallOut] = 0;
	              	FalloutStarted = 0;
	               	FalloutPlayers = 0;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	               	for(new o=0;o<sizeof(PlatformObject);o++) if(IsValidDynamicObject(PlatformObject[o])) DestroyDynamicObject(PlatformObject[o]);

	        	}
	    	}
	    }
		else
		{
			foreach(new i: Player)
			{
		        new Float:p[3]; GetPlayerPos(i, p[0], p[1], p[2]);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        if(IsPlayerConnected(i))
		        {
				    if(PlayerInfo[i][InFallOut] == 1)
				    {
			            if(p[2] < 400)
			            {
				            FalloutPlayers--;
				            PlayerInfo[i][InFallOut] = 0;
				            SpawnPlayer(i);
				            SetPlayerVirtualWorld(i,0);
				        }
		            }
			    }
			}
	    }
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function GetARandomFallingPlat()
{
	new value;
	for (new i = 0; i < FALLOUT_PLATFORMS; i++) if(FalloutStatusPlatform[i] == 0) value = random(i);
	return value;
}
function FallingPlat() SetTimerEx("RoateObject", 1000, false, "ii", GetARandomFallingPlat(), 1);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function RoateObject(X, type)
{
    new Float:x, Float:y, Float:z;
    new Float:x2, Float:y2, Float:z2;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GetDynamicObjectPos(PlatformObject[X], x2, y2, z2);
    GetDynamicObjectRot(PlatformObject[X], x, y, z);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(type == 1)
	{
	    SetDynamicObjectPos(PlatformObject[X], x2, y2, z2-0.1);
		SetDynamicObjectRot(PlatformObject[X], x + 6, y, z + 6);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetTimerEx("RoateObject", 1000, false, "ii", X, 2);
	}
	if(type == 2)
	{
	    SetDynamicObjectRot(PlatformObject[X], x - 12, y, z - 12);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SetTimerEx("DestroyPlatObj", 1000, false, "i", X);
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function DestroyPlatObj(X)
{
    new Float:p[3]; GetDynamicObjectPos(PlatformObject[X], p[0], p[1], p[2]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    MoveDynamicObject(PlatformObject[X], p[0], p[1], p[2]-10, 5);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetTimerEx("DestroyObjTotal", 2000, false, "i", X);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function DestroyObjTotal(X) DestroyDynamicObject(PlatformObject[X]), FalloutStatusPlatform[X] = 1;
function RegenPlatforms() Platforms();
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock Platforms()
{
	for (new i = 0; i < FALLOUT_PLATFORMS; i++) FalloutStatusPlatform[i] = 0;
	PlatformObject[1] = CreateDynamicObject(1649, -1737.18042, 845.63318, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[2] = CreateDynamicObject(1649, -1740.48816, 841.32959, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[3] = CreateDynamicObject(1649, -1737.22803, 841.29327, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[4] = CreateDynamicObject(1649, -1743.76868, 841.38629, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[5] = CreateDynamicObject(1649, -1743.70081, 845.68628, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[6] = CreateDynamicObject(1649, -1743.67358, 850.00671, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[7] = CreateDynamicObject(1649, -1740.37341, 849.96948, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[8] = CreateDynamicObject(1649, -1737.11243, 849.93317, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[9] = CreateDynamicObject(1649, -1733.85181, 849.89679, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[10] = CreateDynamicObject(1649, -1733.93787, 845.51715, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[11] = CreateDynamicObject(1649, -1733.96399, 841.24866, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[12] = CreateDynamicObject(1649, -1730.74585, 841.14685, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[13] = CreateDynamicObject(1649, -1730.63953, 845.54553, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[14] = CreateDynamicObject(1649, -1730.59717, 849.84680, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[15] = CreateDynamicObject(1649, -1743.81250, 837.06433, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[16] = CreateDynamicObject(1649, -1740.53174, 837.00037, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[17] = CreateDynamicObject(1649, -1737.23096, 836.97479, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[18] = CreateDynamicObject(1649, -1734.09045, 836.91614, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[19] = CreateDynamicObject(1649, -1730.79199, 836.81165, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[20] = CreateDynamicObject(1649, -1747.12341, 837.09131, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[21] = CreateDynamicObject(1649, -1747.06689, 841.43445, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[22] = CreateDynamicObject(1649, -1747.01526, 845.75745, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[23] = CreateDynamicObject(1649, -1746.95740, 849.99884, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[24] = CreateDynamicObject(1649, -1730.82996, 832.48993, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[25] = CreateDynamicObject(1649, -1734.09753, 832.52924, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[26] = CreateDynamicObject(1649, -1737.34229, 832.58447, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[27] = CreateDynamicObject(1649, -1740.63342, 832.60742, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[28] = CreateDynamicObject(1649, -1743.83813, 832.65540, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[29] = CreateDynamicObject(1649, -1747.13342, 832.65881, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[30] = CreateDynamicObject(1649, -1750.43262, 832.73029, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[31] = CreateDynamicObject(1649, -1750.41174, 837.09027, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[32] = CreateDynamicObject(1649, -1750.32996, 841.42944, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[33] = CreateDynamicObject(1649, -1750.28845, 845.78906, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[34] = CreateDynamicObject(1649, -1750.24622, 850.10901, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[35] = CreateDynamicObject(1649, -1730.54651, 854.22644, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[36] = CreateDynamicObject(1649, -1733.78687, 854.29486, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[37] = CreateDynamicObject(1649, -1737.08728, 854.30304, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[38] = CreateDynamicObject(1649, -1740.26367, 854.29370, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[39] = CreateDynamicObject(1649, -1743.52954, 854.32788, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[40] = CreateDynamicObject(1649, -1746.84167, 854.36127, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[41] = CreateDynamicObject(1649, -1750.14624, 854.45685, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[42] = CreateDynamicObject(1649, -1753.71252, 832.77502, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[43] = CreateDynamicObject(1649, -1753.56506, 837.16809, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[44] = CreateDynamicObject(1649, -1753.59863, 841.46564, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[45] = CreateDynamicObject(1649, -1753.53516, 845.80377, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[46] = CreateDynamicObject(1649, -1753.46643, 850.09772, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[47] = CreateDynamicObject(1649, -1753.44092, 854.44940, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[48] = CreateDynamicObject(1649, -1730.49390, 858.64581, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[49] = CreateDynamicObject(1649, -1733.77344, 858.66431, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[50] = CreateDynamicObject(1649, -1737.05298, 858.68329, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[51] = CreateDynamicObject(1649, -1740.31287, 858.70197, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[52] = CreateDynamicObject(1649, -1743.45178, 858.75903, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[53] = CreateDynamicObject(1649, -1746.75024, 858.76831, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[54] = CreateDynamicObject(1649, -1750.05212, 858.79803, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[55] = CreateDynamicObject(1649, -1753.37537, 858.88470, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[56] = CreateDynamicObject(1649, -1756.61438, 858.90198, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[57] = CreateDynamicObject(1649, -1756.71008, 854.54590, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[58] = CreateDynamicObject(1649, -1756.71973, 850.21057, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[59] = CreateDynamicObject(1649, -1756.76819, 845.92291, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[60] = CreateDynamicObject(1649, -1756.84387, 841.63708, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[61] = CreateDynamicObject(1649, -1756.79749, 837.29614, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[62] = CreateDynamicObject(1649, -1756.81995, 832.97583, 428.79611, -90.00000, 0.00000, -90.60000);
	PlatformObject[63] = CreateDynamicObject(1649, -1740.44092, 845.66888, 428.79611, -90.00000, 0.00000, -90.60000);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:stealcar(playerid)
{
	if(ServerInfo[StealcarStarted] == 0)
	{
		new RandomCar;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		new cars = random(8); switch(cars)
		{
	    	case 0: RandomCar = 411;
		    case 1: RandomCar = 410;
		    case 2: RandomCar = 424;
		    case 3: RandomCar = 437;
		    case 4: RandomCar = 442;
		    case 5: RandomCar = 444;
		    case 6: RandomCar = 445;
		    case 7: RandomCar = 552;
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerPos(playerid, -1365.8009,-666.5114,1055.5798), Announce(playerid, "~R~~H~Steal the car - started~N~~W~~H~remain in car 5 minutes to win!", 6000, 3);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ServerInfo[StealCarOwner] = playerid, ServerInfo[StealcarStarted] = 1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][InStealCar] = 1, SetPlayerInterior(playerid, 4); SetPlayerVirtualWorld(playerid, -4);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		new int1 = 4;
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	StealerCar[playerid] = CreateVehicle(RandomCar, -1365.8009, -666.5114, 1055.5798, 84.9107, 0, 0, -1);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	ServerInfo[StealCarID] = StealerCar[playerid], LinkVehicleToInterior(StealerCar[playerid], int1);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	SetVehicleVirtualWorld(StealerCar[playerid], GetPlayerVirtualWorld(playerid));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	PutPlayerInVehicle(playerid, StealerCar[playerid], 0);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "%s{00FBFF} a dat start la {38AD21}Steal the Car{00FBFF}! Daca vrei sa te alaturi, foloseste {FF1A00}/stealcar{00FBFF}!", PN(playerid));
		SCMALL(RED, eString);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ServerInfo[StealCarTimes] = SetTimerEx("StealCarFinish", 300000, false, "i", playerid);
		return true;
	}
	else if(ServerInfo[StealcarStarted] == 1)
	{
		SetPlayerInterior(playerid, 4);
		SetPlayerVirtualWorld(playerid, -4);
		SetPlayerPos(playerid, -1459.4417,-658.4731,1053.5564);
		PlayerInfo[playerid][InStealCar] = 1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "~R~~H~Steal~W~~H~ %s~R~~H~ car~N~~Y~~H~he is marked with yellow on map~N~~P~~H~/v, /car, /nrg", PN(ServerInfo[StealCarOwner]));
		Announce(playerid, eString, 6000, 3);
		return true;
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:targets(playerid)
{
    new string[1000], Color, Object = random(9);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(ServerInfo[TargetPlayers] == 0)
    {
		SetPlayerPos(playerid, 911.4256,1413.9539,1403.6322), PlayerInfo[playerid][InTargets] = 1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		LoadObjectsProtection(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Announce(playerid, "~R~~H~Welcome to targets~N~~R~~H~shot the targets!", 6000, 3);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ServerInfo[TargetPlayers]++, ResetPlayerWeapons(playerid), GivePlayerWeapon(playerid, 33, 99999999);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerVirtualWorld(playerid, -2999), Color = GetPlayerColor(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerTextDrawColor(playerid, Targets1, Color), PlayerTextDrawColor(playerid, Targets2, Color);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(string, sizeof string, "Points:~W~~H~ %d", PlayerInfo[playerid][TargetPoints]);
		PlayerTextDrawSetString(playerid, Targets2, string);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerTextDrawShow(playerid, PlayerText:Targets1),PlayerTextDrawShow(playerid, PlayerText:Targets2);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		switch(Object)
		{
			case 0: ServerInfo[TargetObject] = CreateObject(1586, 922.331177, 1462.805298, 1385.181030, 0.000000, 0.000000, 0.000000);
			case 1: ServerInfo[TargetObject] = CreateObject(1586, 911.711975, 1462.854248, 1385.181030, 0.000000, 0.000000, 0.000000);
			case 2: ServerInfo[TargetObject] = CreateObject(1586, 911.650330, 1473.943115, 1385.181030, 0.000000, 0.000000, 0.000000);
			case 3: ServerInfo[TargetObject] = CreateObject(1586, 903.255127, 1449.840332, 1385.181030, 0.000000, 0.000000, 0.000000);
			case 4: ServerInfo[TargetObject] = CreateObject(1586, 903.113770, 1473.840576, 1385.181030, 0.000000, 0.000000, 0.000000);
			case 5: ServerInfo[TargetObject] = CreateObject(1586, 921.801086, 1474.339600, 1385.181030, 0.000000, 0.000000, 0.000000);
			case 6: ServerInfo[TargetObject] = CreateObject(1586, 922.805786, 1449.672607, 1385.181030, 0.000000, 0.000000, 0.000000);
			case 7: ServerInfo[TargetObject] = CreateObject(1586, 911.7436, 1449.8085, 1385.1810, 0.000000, 0.000000, 0.000000);
			case 8: ServerInfo[TargetObject] = CreateObject(1586, 903.2529, 1462.8131, 1385.1810, 0.000000, 0.000000, 0.000000);
		}
	}
    if(ServerInfo[TargetPlayers] >= 1)
    {
	    SetPlayerPos(playerid, 911.4256,1413.9539,1403.6322); PlayerInfo[playerid][InTargets] = 1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		LoadObjectsProtection(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ResetPlayerWeapons(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GivePlayerWeapon(playerid, 33, 99999999);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerVirtualWorld(playerid, -2999);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Color = GetPlayerColor(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerTextDrawColor(playerid, Targets1, Color);
	    PlayerTextDrawColor(playerid, Targets2, Color);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(string, sizeof string, "Points:~W~~H~ %d", PlayerInfo[playerid][TargetPoints]);
	    PlayerTextDrawSetString(playerid, Targets2, string);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerTextDrawShow(playerid, Targets1);
	    PlayerTextDrawShow(playerid, Targets2);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Announce(playerid, "~R~~H~Welcome to targets~N~~R~~H~shot the targets!", 6000, 3);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ServerInfo[TargetPlayers]++;
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:astats(ESS)
{
    if(ServerProtection == 1) return SendErrorEx(playerid, "Nu poti folosi momental aceasta comanda! Te rugam sa incerci mai tarziu.");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Player;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!sscanf(params, "u", Player))
	{
	    if(IsPlayerConnected(Player)) return SPD(playerid, DIALOG_EMPTY, MSGBOX, "Admin Statistics", ShowAStats(Player), "Ok", "");
	    else return Error(playerid, 10);
	}
	else return SPD(playerid, DIALOG_EMPTY, MSGBOX, "Admin Statistics", ShowAStats(playerid), "Ok", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:changename(playerid)
{
    if(ServerProtection == 1) return SendErrorEx(playerid, "Nu poti folosi momental aceasta comanda! Te rugam sa incerci mai tarziu.");
    SendErrorEx(playerid, "Nu poti folosi momental aceasta comanda! Deoarece sa produs niste probleme din cauza ei!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	/*if(PlayerInfo[playerid][AccLocked] != 0) return AccountProtect(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInAnyDynamicArea(playerid)) return Error(playerid, 9);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Level] != 0) return SendError(playerid, "You can't change your name if you're an admin!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Language] == 1)
	{
		format(StrH, sizeof(StrH), "{FF0000}Citeste cu atentie!\n\
									{FFFF00}Folosiind aceasta comanda iti putea schimba numele de pe server fara a-ti pierde staticile!\n\
		            				{00CC00}Introdu mai jos parola contului pentru a continua ({FF0000}prima parola{00CC00}):");
		return SPD(playerid, DIALOG_CHECK_ACCOUNT_PASSWORD, DIALOG_STYLE_PASSWORD, "Change Name", StrH, "Continua", "Close");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(PlayerInfo[playerid][Language] == 2)
	{
		format(StrH, sizeof(StrH), "{FF0000}Read this carefully!\n\
	            					{FFFF00}Using the command you will change your name on our server without losing your statics!\n\
	            					{00CC00}Enter below your account password in order to continue ({FF0000}fist password{00CC00}):");
		return SPD(playerid, DIALOG_CHECK_ACCOUNT_PASSWORD, DIALOG_STYLE_PASSWORD, "Change Name", StrH, "Continue", "Close");
	}*/
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:speed(playerid)
{
	eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][SpeedB] == 1) strcat(eString, "{0066FF}Speed pe {FF0000}Click{0066FF} - {00CC00}Activat\n");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][SpeedB] == 0) strcat(eString, "{0066FF}Speed pe {FF0000}Click{0066FF} - {FF0000}Dezactivat\n");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(eString, "{0066FF}Poti folosii speed odata la cateva secunde!");
	return SPD(playerid, DIALOG_SPEEDBOOST2, LIST, "{00CC00}Speed Boost", eString, "Select", "Close");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:top(playerid)
{
    if(ServerProtection == 1) return SendErrorEx(playerid, "Nu poti folosi momental aceasta comanda! Te rugam sa incerci mai tarziu.");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_TOP, LIST, "{F3FF70}Top", "{00CC00}Top Gangs\n{00CC00}Top Clans\n{00CC00}Top Admins\n{00CC00}Top jucatori in aceasta luna\n{FFF8B5}Top 100 si mult altele, numai pe{FF0000} "SERVER_WEBSITE"", "Select", "Cancel");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:spassword(playerid)
{
    if(ServerProtection == 1) return SendErrorEx(playerid, "Nu poti folosi momental aceasta comanda! Te rugam sa incerci mai tarziu.");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][AccLocked] != 0) return AccountProtect(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(PlayerInfo[playerid][Language])
	{
	    case 1:
	    {
		    strcat(eString, "{FF0000}CITESTE CU ATENTIE!\n\n\
			{FFFFFF}Atunci cand te inregistrezi pe alt server si folosesti acceasi parola ca pe serverul nostru,\n\
		 	{FFFFFF}ai sansa sa pierzi contul de pe "SERVER_NAME2" deoarece cei la care le apartin serverul pe care\n\
		 	{FFFFFF}ai intrat, se uita la parola ta si apoi o incearca pe serverul nostru ca sa iti fure contul.\n\n\
		 	{FFFFFF}Pentru ca acest lucru sa nu se intample, iti oferim sansa de a iti seta o parola secundara.\n\
		 	{FFFFFF}Aceasta parola secundara va trebui sa o scri de fiecare data cand te loghezi, dupa prima parola\n\n\
		    {FFFFFF}Pentru a nu fi prada unor tepari, te rugam sa introduci o parola secundara, sa o tii foarte bine minte\n\
		 	{FFFFFF}si sa nu o mai folosesti nicaieri.\n\n\
		 	{FF0000}Parola Secundara:");
		 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SPD(playerid, DIALOG_ADD_SPASSWORD, PASS, "Parola Secundara", eString, "Ok", "Renunta");
		}
		case 2:
		{
            strcat(eString, "{FF0000}READ CAREFULLY!\n\n\
			{FFFFFF}When you sign up for another server and use the same password as our server,\n\
			{FFFFFF}you have the chance to lose your account on "SERVER_NAME2" because those who belong to the server that\n\
			{FFFFFF}You entered, looked at your password and then tried it on our server to steal your account.\n\n\
			{FFFFFF}To prevent this from happening, we offer you the chance to set a secondary password.\n\
			{FFFFFF}This secondary password will need to write it every time you sign in after the first password\n\n\
			{FFFFFF}In order not to booty boobs, please enter a secondary password, remember it very well\n\
			{FFFFFF}and stop using it anywhere.\n\n\
			{FF0000}Secondary Password:");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	     	SPD(playerid, DIALOG_ADD_SPASSWORD, PASS, "Secondary Password", eString, "Ok", "Cancel");
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//Property & House
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:bname(ESS)
{
    if(ServerProtection == 1) return SendErrorEx(playerid, "Nu poti folosi momental aceasta comanda! Te rugam sa incerci mai tarziu.");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new PropID = GetPropID(playerid), lsPropName[24]; eQuery[0] = EOS; eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new string[123], String2[512];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][Property] == 0) return SendError(playerid, "You don't own any business.");
    if(PropID == -1) return SendError(playerid, "You're not close enough to a business");
	if(strcmp(PropInfo[PropID][PropOwner], PN(playerid), true) && PlayerInfo[playerid][RconType] < 1) return SendError(playerid, "This business isn't yours!");
	if(sscanf(params, "s[24]", lsPropName)) return SendUsage(playerid, "/bname [New Business Name]");
	if(strlen(lsPropName) < 2 || strlen(lsPropName) > 24) return SendError(playerid, "Invalid name size! Only between 2 and 24 characters!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(strfind(lsPropName, "'", true) != -1) return SendError(playerid, "You can't type in the Prop name symbol: (')!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Announce(playerid, "~w~~h~Business name have ~n~~w~~h~been~n~~g~~h~changed~w~~h~!", 3000, 4); format(PropInfo[PropID][PropName], 24, "%s", lsPropName);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PropInfo[PlayerInfo[playerid][Property]][p_Level] == 1) string = "{FF9900}Standard";
    else if(PropInfo[PlayerInfo[playerid][Property]][p_Level] == 2) string = "{FF0000}Premium";
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String2, sizeof(String2), "{9C9621}\"%s\"\n{2982FF}Business Owner: {00FF22}%s\n{2982FF}Business level: %s\n{2982FF}Cost: {00FF22}%d Coins and $%d\n{2982FF}Win: {00FF22}%d coins and $%d\n{DE00BD}/business", PropInfo[PropID][PropName], PropInfo[PropID][PropOwner], string, PropInfo[PropID][Cost], PropInfo[PropID][CostM], PropInfo[PropID][Earning], PropInfo[PropID][EarningM]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	UpdateDynamic3DTextLabelText(Prop3D[PropID], ~1, String2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Properties` SET `PropName` = '%s' WHERE `ID` = '%d'", lsPropName, PlayerInfo[playerid][Property]);
	mysql_tquery(SQL, eQuery, "", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:deletehouse(ESS)
{
    if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new hid = GetHouseID(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(hid == -1) return SendError(playerid, "You're not close enough to a house.");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DestroyDynamic3DTextLabel(housei[hid]), DestroyDynamicPickup(HousePickup[hid]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `Houses` WHERE `ID` = '%d'", hid);
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < MAX_PLAYERS; i++) if(PlayerInfo[i][House] == hid) PlayerInfo[i][House] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    HouseInfo[hid][HX] = 0, HouseInfo[hid][HY] = 0, HouseInfo[hid][HZ] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SCM(playerid, RED, "House Removed.");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:createhouse(ESS)
{
	if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(GetPlayerVirtualWorld(playerid) != 0) return SendError(playerid, "You are in virtual world, please type /vw 0!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new CostCoins, CostMoney, H, Float:X, Float:Y, Float:Z; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "dd", CostCoins, CostMoney)) return SendUsage(playerid, "/createhouse [Cost Coins] [Cost Money]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid, X, Y, Z);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Houses`(`ID`, `HouseOwner`, `HouseCost`, `HouseCostM`, `HouseSell`, `HouseInterior`, `HouseLocked`, `HouseIntX`, `HouseIntY`, `HouseIntZ`, `HouseX`, `HouseY`, `HouseZ`, `HouseRent`) VALUES (0,'ForSale',%d,%d,%d,0,1,0.00,0.00,0.00,%.2f,%.2f,%.2f,0)", CostCoins, CostMoney, CostMoney/2, X, Y, Z);
	mysql_tquery(SQL, eQuery, "OnHouseCreated", "ddddfff", playerid, H, CostCoins, CostMoney, X, Y, Z);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:deleteprop(ESS)
{
    if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new propid = GetPropID(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(propid == -1) return SendError(playerid, "You're not close enough to a Business");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DestroyDynamic3DTextLabel(Prop3D[propid]), DestroyDynamicMapIcon(PropInfo[propid][PropMapIcon]), DestroyDynamicPickup(PropPickUP[propid]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `Properties` WHERE `ID` = '%d'", propid);
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_PLAYERS; i++) if(PlayerInfo[i][Property] == propid) PlayerInfo[i][Property] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PropInfo[propid][PropX] = 0, PropInfo[propid][PropY] = 0, PropInfo[propid][PropZ] = 0, PropInfo[propid][PTime] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SCM(playerid, RED, "Prop Removed.");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:createprop(ESS)
{
	if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(GetPlayerVirtualWorld(playerid) != 0) return SendError(playerid, "You are in virtual world, please type /vw 0!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new szCoins, szMoney, szEarning, szEarningM, P, Float:pPos[3]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "iiii", szCoins, szMoney, szEarning, szEarningM)) return SendUsage(playerid, "/createprop [Coins] [Money] [Earning Coins] [Earning Money]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid, pPos[0], pPos[1], pPos[2]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `Properties` VALUES(0, 'ForSale', 'Nobody', '%d', '%d', '0', '0', '0', '%.2f', '%.2f', '%.2f', '0', '0', '%d', '%d', '1')", szCoins, szMoney, pPos[0], pPos[1], pPos[2], szEarning, szEarningM);
	mysql_tquery(SQL, eQuery, "OnPropertyCreated", "ddddddfff", playerid, P, szCoins, szMoney, szEarning, szEarningM, pPos[0], pPos[1], pPos[2]);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:editprop(ESS)
{
    if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new szCoins, szMoney, szEarning, szEarningM, String2[512], propid = GetPropID(playerid); eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "iiii", szCoins, szMoney, szEarning, szEarningM)) return SendUsage(playerid, "/editprop [Coins] [Money] [Earning Coins] [Earning Money]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(propid == -1) return SendError(playerid, "You're not close enough to a Business");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PropInfo[propid][Cost] = szCoins, PropInfo[propid][CostM] = szMoney, PropInfo[propid][Earning] = szEarning, PropInfo[propid][EarningM] = szEarningM;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Properties` SET `PropCost` = '%d', `PropCostM` = '%d', `PropEarning` = '%d', `PropEarningM` = '%d' WHERE `ID` = '%d'", szCoins, szMoney, szEarning, szEarningM, propid);
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    MSG(playerid, RED, "Prop ID %d edited! %d coins %d money %d / $%d prop earning", propid, szCoins, szMoney, szEarning, szEarningM);
   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	format(String2, sizeof(String2), "{9C9621}\"%s\"\n{2982FF}Business Owner: {00FF22}%s\n{2982FF}Cost: {00FF22}%d Coins and $%d\n{2982FF}Win: {00FF22}%d Coins and $%d\n{DE00BD}/business", PropInfo[propid][PropName], PropInfo[propid][PropOwner], PropInfo[propid][Cost], PropInfo[propid][CostM], PropInfo[propid][Earning], PropInfo[propid][EarningM]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  	UpdateDynamic3DTextLabelText(Prop3D[propid], ~1, String2);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:edithouse(ESS)
{
    if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new szCoins, szMoney, String2[512], houseid = GetHouseID(playerid); eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "ii", szCoins, szMoney)) return SendUsage(playerid, "/edithouse [Coins] [Money]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(houseid == -1) return SendError(playerid, "You're not close enough to a House");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	HouseInfo[houseid][Cost] = szCoins, HouseInfo[houseid][CostM] = szMoney;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Houses` SET `HouseCost` = '%d', `HouseCostM` = '%d' WHERE `ID` = '%d'", szCoins, szMoney, houseid);
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    MSG(playerid, RED, "House ID %d edited! %d Coins / $%d", houseid, szCoins, szMoney);
   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String2, sizeof(String2), "{00CC00}Cost: {FF0000}%d Coins and $%d\n\
							    	  {00CC00}Type {FF9900}/house {00CC00}for more.", HouseInfo[houseid][Cost], HouseInfo[houseid][CostM]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	UpdateDynamic3DTextLabelText(housei[houseid], ~1, String2), DestroyDynamicPickup(HousePickup[houseid]);
	HousePickup[houseid] = CreateDynamicPickup(1273, 23, HouseInfo[houseid][HX], HouseInfo[houseid][HY], HouseInfo[houseid][HZ]);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:renew(ESS)
{
    new AvaibleDays = 30, HouseID = GetHouseID(playerid), PropID = GetPropID(playerid); eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(HouseID != -1)
	{
		if(PlayerInfo[playerid][Coins] < HouseInfo[HouseID][Cost]) return SendError(playerid, "Not enough coins!");
		if(strcmp(HouseInfo[HouseID][Name], PN(playerid), false)) return SendError(playerid, "This house isn't yours!");
		if(HouseInfo[HouseID][HTime] > gettime() + 129*86400) return SendError(playerid, "Max renew time is 120 days, plase come back later!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		HouseInfo[HouseID][HTime] = gettime() + AvaibleDays*86400;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Houses` SET `HouseTime` = %d + (%d*86400) WHERE `ID` = %d", gettime(), AvaibleDays, HouseID);
		mysql_tquery(SQL, eQuery, "", "");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][Coins] -= HouseInfo[PlayerInfo[playerid][House]][Cost];
		Announce(playerid, "~w~~h~House ~n~~g~~h~~h~renewed~w~~h~!", 3000, 3); return true;
	}
	if(PropID != -1)
	{
		if(PlayerInfo[playerid][Coins] < PropInfo[PropID][Cost]) return SendError(playerid, "Not enough coins!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(strcmp(PropInfo[PropID][PropOwner], PN(playerid), true)) return
		SendError(playerid, "This property isn't yours!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PropInfo[PropID][PTime] > gettime() + 129*86400) return SendError(playerid, "Max renew time is 120 days, plase come back later!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PropInfo[PropID][PTime] = gettime() + AvaibleDays*86400;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Properties` SET `PropTime` = %d + (%d*86400) WHERE `ID` = %d", gettime(), AvaibleDays, PropID);
		mysql_tquery(SQL, eQuery, "", "");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][Coins] -= PropInfo[PropID][Cost];
		Announce(playerid, "~w~~h~Property ~n~~g~~h~~h~renewed~w~~h~!", 3000, 3); return true;
	}
	else return SendError(playerid, "You are not close enough to a property/house to use this command!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:myprops(ESS)
{
	new EDIALOG[200], edialog1[50], edialog2[50], edialog3[50], edialog4[50];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PropInfo[PlayerInfo[playerid][Property]][PTime] != 0)		    format(edialog1, sizeof(edialog1), "%d Days", floatround(PropInfo[PlayerInfo[playerid][Property]][PTime] - gettime()) / 86400 + 1);
	else if(PropInfo[PlayerInfo[playerid][Property]][PTime] == 0)		edialog1 = "{FFFFFF}-";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(HouseInfo[PlayerInfo[playerid][House]][HTime] != 0)		        format(edialog2, sizeof(edialog2), "%d Days", floatround(HouseInfo[PlayerInfo[playerid][House]][HTime] - gettime()) / 86400 + 1);
	else if(HouseInfo[PlayerInfo[playerid][House]][HTime] == 0)		    edialog2 = "{FFFFFF}-";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Property] == 0)		                        edialog3 = "{FF0000}No";
	else if(PlayerInfo[playerid][Property] != 0)		                edialog3 = "{00CC00}Yes";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][House] == 0)		                        edialog4 = "{FF0000}No";
	else if(PlayerInfo[playerid][House] != 0)		                    edialog4 = "{00CC00}Yes";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(EDIALOG, sizeof(EDIALOG),
    "Item\tAvailable\tCurrent expiry\n\
	{FFE600}House\t%s\t%s\n\
    {FFE600}Business\t%s\t%s",
    edialog4, edialog2, edialog3, edialog1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_EMPTY, HEADERS, "{FF0000}My properties", EDIALOG, "Ok", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:buy(ESS)
{
    if(PlayerInfo[playerid][AccLocked] != 0) return AccountProtect(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new PropID = GetPropID(playerid), HouseID = GetHouseID(playerid), AvaibleDays = 15;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	eString[0] = EOS; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PropID != -1)
	{
 		if(PlayerInfo[playerid][Property] != 0) return SendError(playerid, "You own already a business, please sell it before buying new.");
		if(PlayerInfo[playerid][hours] < 9) return SendError(playerid, "You don't have 10 hours to buy this business!");
	    if(strcmp(PropInfo[PropID][PropOwner], "Nobody", true)) return SendError(playerid, "This business isn't for sale!");
	    if(PlayerInfo[playerid][Coins] < PropInfo[PropID][Cost]) return SendError(playerid, "You haven't enough Coins for buy this business!");
	    if(PlayerInfo[playerid][Money] < PropInfo[PropID][CostM]) return SendError(playerid, "You haven't enough Money for buy this business!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Announce(playerid, "~w~~h~Business have been ~n~~g~~h~bought~w~~h~!~n~~w~for ~r~~h~30 ~w~days~w~~h~!", 6000, 4);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PropInfo[PropID][PropName] = PN(playerid), PropInfo[PropID][PropOwner] = PN(playerid), PlayerInfo[playerid][Property] = PropID,
		PlayerInfo[playerid][Coins] -= PropInfo[PropID][Cost], PlayerInfo[playerid][Money] -= PropInfo[PropID][CostM];
		PropInfo[PropID][PTime] = gettime() + AvaibleDays*86400;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Properties` SET `PropOwner` = '%s', `PropTime` = %d + (%d*86400) WHERE `ID` = %d", PN(playerid), gettime(), AvaibleDays, PropID);
	    mysql_tquery(SQL, eQuery, "", "");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    new String[24], String2[512];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PropInfo[PlayerInfo[playerid][Property]][p_Level] == 1) String = "{FF9900}Standard";
		if(PropInfo[PlayerInfo[playerid][Property]][p_Level] == 2) String = "{FF0000}Premium";
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(String2, sizeof(String2), "{9C9621}\"%s\"\n{2982FF}Business Owner: {00FF22}%s\n{2982FF}Business level: %s\n{2982FF}Cost: {00FF22}%d Coins and $%d\n{2982FF}Win: {00FF22}%d coins and $%d\n{DE00BD}/business", PropInfo[PropID][PropName], PropInfo[PropID][PropOwner], String, PropInfo[PropID][Cost], PropInfo[PropID][CostM], PropInfo[PropID][Earning], PropInfo[PropID][EarningM]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		UpdateDynamic3DTextLabelText(Prop3D[PropID], ~1, String2);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    DestroyDynamicMapIcon(PropInfo[PropID][PropMapIcon]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PropInfo[PropID][PropMapIcon] = CreateDynamicMapIcon(PropInfo[PropID][PropX], PropInfo[PropID][PropY], PropInfo[PropID][PropZ], 36, 36);
		return true;
	}
	if(HouseID != -1)
	{
		if(PlayerInfo[playerid][House] != 0) return SendError(playerid, "You already own a house! Sell that house before buy another!");
		if(strcmp(HouseInfo[HouseID][Name], "ForSale", true)) return SendError(playerid, "This house isn't for sale!");
		if(PlayerInfo[playerid][Coins] < HouseInfo[HouseID][Cost]) return SendError(playerid, "No enough coins!");
		if(PlayerInfo[playerid][Money] < HouseInfo[HouseID][CostM]) return SendError(playerid, "No enough Money!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  		Announce(playerid, "~w~~h~House ~g~~h~Bought~w~~h~!", 3000, 4);
  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		HouseInfo[HouseID][HTime] = gettime() + AvaibleDays*86400;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Houses` SET `HouseOwner` = '%s', `HouseTime` = %d + (%d*86400) WHERE `ID` = %d", PN(playerid), gettime(), AvaibleDays, HouseID);
	    mysql_tquery(SQL, eQuery, "", "");
  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	PlayerInfo[playerid][Money] -= HouseInfo[HouseID][CostM], PlayerInfo[playerid][Coins] -= HouseInfo[HouseID][Cost], PlayerInfo[playerid][House] = HouseID;
	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		new String[24], String2[512];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(HouseInfo[PlayerInfo[playerid][House]][h_Level] == 1) String = "{FF9900}Standard";
		if(HouseInfo[PlayerInfo[playerid][House]][h_Level] == 2) String = "{FF0000}Premium";
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(String2, sizeof(String2), "{00FF22}Owned by: {FF0000}%s\n\
					  	  	  			  {00FF22}House Level: {FF0000}%s\n\
                              			  {00FF22}Type {FF9900}/house {00FF22}for more details.", PN(playerid), String);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		UpdateDynamic3DTextLabelText(housei[HouseID], ~1, String2);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(HouseInfo[HouseID][Name], 24, "%s", PN(playerid)), DestroyDynamicPickup(HousePickup[HouseID]);
 		HousePickup[HouseID] = CreateDynamicPickup(1272, 23, HouseInfo[HouseID][HX], HouseInfo[HouseID][HY], HouseInfo[HouseID][HZ]);
		return true;
	}
	else return SCM(playerid, RED, "Sorry, but you are not in a House or Business pickup!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:sell(ESS)
{
    if(PlayerInfo[playerid][AccLocked] != 0) return AccountProtect(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new PropID = GetPropID(playerid), String2[512], HouseID = GetHouseID(playerid); eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PropID != -1)
    {
		if(PlayerInfo[playerid][Property] == 0) return SendError(playerid, "You don't own any property.");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(strcmp(PropInfo[PropID][PropOwner], PN(playerid), true) && PlayerInfo[playerid][RconType] < 1) return SendError(playerid, "This property isn't yours!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(PropInfo[PropID][PropName], 24, "ForSale"), format(PropInfo[PropID][PropOwner], 24, "Nobody");
		PlayerInfo[playerid][Property] = 0, PlayerInfo[playerid][Coins] += PropInfo[PropID][Cost]/2, PlayerInfo[playerid][Money] += PropInfo[PropID][CostM]/2;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    DestroyDynamicMapIcon(PropInfo[PropID][PropMapIcon]), Announce(playerid, "~w~~h~Property have been ~n~~r~~h~sold~w~~h~!", 3000, 4);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PropInfo[PropID][PropMapIcon] = CreateDynamicMapIcon(PropInfo[PropID][PropX], PropInfo[PropID][PropY], PropInfo[PropID][PropZ], 52, 52);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PropInfo[PlayerInfo[playerid][Property]][p_Level] = 1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(String2, sizeof(String2), "{9C9621}\"%s\"\n\
										  {9C9621}Property is For Sale\n\
										  {2982FF}Cost: {00FF22}%d Coins and $%d\n\
										  {2982FF}Win: {00FF22}%d Coins and $%d\n\
										  {DE00BD}/business", PropInfo[PropID][PropName], PropInfo[PropID][Cost], PropInfo[PropID][CostM], PropInfo[PropID][Earning], PropInfo[PropID][EarningM]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    UpdateDynamic3DTextLabelText(Prop3D[PropID], ~1, String2);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Properties` SET `PropOwner` = 'Nobody', `PropName` = 'ForSale', `Level` = '%d' WHERE `ID` = '%d'", PropInfo[PropID][p_Level], PropID);
		mysql_tquery(SQL, eQuery, "", "");
	    return true;
	}
	else if(HouseID != -1)
	{
	    if(PlayerInfo[playerid][House] == 0) return SendError(playerid, "You don't own any house !");
     	if(strcmp(HouseInfo[HouseID][Name], PN(playerid), false)) return SendError(playerid, "This house isn't yours!");
      	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       	Announce(playerid, "~w~~h~House ~r~~h~Sold~w~~h~!", 3000, 4);
      	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		HouseInfo[PlayerInfo[playerid][House]][h_Level] = 1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       	eQuery[0] = EOS;
       	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Houses` SET `HouseOwner` = 'ForSale', `Level` = '1' WHERE `ID` = '%d'", HouseID);
		mysql_tquery(SQL, eQuery, "", "");
  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  		SaveHouse(HouseID);
  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	format(HouseInfo[HouseID][Name], 24, "ForSale"), HouseInfo[HouseID][Locked] = 1;
     	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     	PlayerInfo[playerid][Coins] += HouseInfo[HouseID][Sell]/2, PlayerInfo[playerid][House] = 0;
      	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        format(String2, sizeof(String2), "{00CC00}Cost: {FF0000}%d Coins and $%d\n\
								    	  {00CC00}Type {FF9900}/House {00CC00}for more.", HouseInfo[HouseID][Cost], HouseInfo[HouseID][CostM]);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		UpdateDynamic3DTextLabelText(housei[HouseID], ~1, String2), DestroyDynamicPickup(HousePickup[HouseID]);
  		HousePickup[HouseID] = CreateDynamicPickup(1273, 23, HouseInfo[HouseID][HX], HouseInfo[HouseID][HY], HouseInfo[HouseID][HZ]);
    	return true;
	}
	else return SendError(playerid, "You are not in a House/Business Pickup!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:lock(ESS)
{
	new housenumber = GetHouseID(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(housenumber == -1) return SendError(playerid, "You are not close enough to a house to use this command!");
 	if(strcmp(HouseInfo[housenumber][Name], PN(playerid), false)) return SendError(playerid, "This house isn't yours!");
	if(HouseInfo[housenumber][Locked] == 0)
	{
	    Announce(playerid, "~w~~h~House ~n~~r~~h~~h~Locked~w~~h~!", 4000, 3), HouseInfo[housenumber][Locked] = 1;
	}
	else Announce(playerid, "~w~~h~House ~n~~g~~h~~h~UnLocked~w~~h~!", 4000, 3), HouseInfo[housenumber][Locked] = 0;
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:visit(ESS)
{
    new housenumber = GetHouseID(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(housenumber == -1) return SCM(playerid, RED, "Sorry, but you are not in a House pickup!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if(strcmp(HouseInfo[housenumber][Name], PN(playerid), false))
	{
		return SPD(playerid, DIALOG_VISITHOUSE, MSGBOX, "{FFFFFF}Enter the house", eString, "Pay", "Cancel");
	}
	Announce(playerid, "~w~~h~You ~g~~h~entered ~w~~h~in house!", 3000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerInterior(playerid, HouseInfo[housenumber][Interior]), SetPlayerPos(playerid, HouseInfo[housenumber][InteriorX], HouseInfo[housenumber][InteriorY], HouseInfo[housenumber][InteriorZ]), PlayerInfo[playerid][InHouse] = 1; return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:enter(ESS)
{
	new HouseID = GetHouseID(playerid);
	new PropID = GetPropID(playerid);
	new gID = GetGangHouseID(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(HouseID != -1)
	{
	    if(HouseInfo[HouseID][Locked] == 1) return SCM(playerid, RED, "Sorry, but this house is Locked!");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetPlayerInterior(playerid, HouseInfo[HouseID][Interior]), SetPlayerPos(playerid, HouseInfo[HouseID][InteriorX], HouseInfo[HouseID][InteriorY], HouseInfo[HouseID][InteriorZ]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetPlayerVirtualWorld(playerid, 100+HouseID);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     	return PlayerInfo[playerid][InHouse] = HouseID, Announce(playerid, "~G~~H~You have been~N~~G~~H~entered in house!~N~~N~~W~~H~type~R~~H~ /exit~W~~H~ to exit!", 4000, 3), LoadObjectsProtection(playerid);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(PropID != -1)
	{
        SetPlayerInterior(playerid, PropInfo[PropID][IntID]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerPos(playerid, PropInfo[PropID][InteriorX], PropInfo[PropID][InteriorY], PropInfo[PropID][InteriorZ]);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SetPlayerVirtualWorld(playerid, 100+PropID);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        return PlayerInfo[playerid][InBusiness] = PropID, Announce(playerid, "~G~~H~You have been~N~~G~~H~entered in business!~N~~N~~W~~H~type~R~~H~ /exit~W~~H~ to exit!", 4000, 3), LoadObjectsProtection(playerid);
	}
	else if(gID != -1)
	{
	    if(PlayerInfo[playerid][GangID] == gID)
	    {
		    SetPlayerInterior(playerid, gHouseInfo[gID][HouseInterior]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SetPlayerPos(playerid, gHouseInfo[gID][gHouseInt][1], gHouseInfo[gID][gHouseInt][2], gHouseInfo[gID][gHouseInt][3]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SetPlayerVirtualWorld(playerid, 100+gID);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    return PlayerInfo[playerid][gHouse] = gID, Announce(playerid, "~G~~H~You have been~N~~G~~H~entered in gang house!~N~~N~~W~~H~type~R~~H~ /exit~W~~H~ to exit!", 4000, 3), LoadObjectsProtection(playerid);
		}
		else return SendError(playerid, "You are not in this gang to enter here!");
	}
	else return SCM(playerid, RED, "Sorry, but you are not in a House, Business or Gang House pickup!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:exit(ESS)
{
    if(PlayerInfo[playerid][InHouse] >= 1)
	{
	    new houseID = PlayerInfo[playerid][InHouse];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        PlayerInfo[playerid][InHouse] = 0;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerPos(playerid, HouseInfo[houseID][HX], HouseInfo[houseID][HY], HouseInfo[houseID][HZ]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerInterior(playerid, 0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerVirtualWorld(playerid, 0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        LoadObjectsProtection(playerid);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        return true;
    }
	else if(PlayerInfo[playerid][InBusiness] >= 1)
	{
	    new businessID = PlayerInfo[playerid][InBusiness];
	    ///+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        PlayerInfo[playerid][InBusiness] = 0;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerPos(playerid, PropInfo[businessID][PropX], PropInfo[businessID][PropY], PropInfo[businessID][PropZ]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerInterior(playerid, 0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerVirtualWorld(playerid, 0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        LoadObjectsProtection(playerid);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        return true;
	}
	else if(PlayerInfo[playerid][gHouse] >= 1)
	{
	    new gID = PlayerInfo[playerid][gHouse];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[playerid][gHouse] = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 		SetPlayerPos(playerid, gHouseInfo[gID][gHousePos][1], gHouseInfo[gID][gHousePos][2], gHouseInfo[gID][gHousePos][3]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetPlayerInterior(playerid, 0);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetPlayerVirtualWorld(playerid, 0);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    LoadObjectsProtection(playerid);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    return true;
	}
	else return SendError(playerid, "You are not in a house, business or gang house!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Hold System
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:hold(playerid)
{
    new holdstr[600];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(PlayerInfo[playerid][Language])
	{
		case 1:
		{
			strcat(holdstr, "Optiune             \tDescriere\n\
			{FFA500}Creaza-ti propriul hold      \t{FFFFFF}Creeaza sau editeaza holdul\n\
			{FFA500}Holduri prefabricate         \t{FFFFFF}Lista holduri deja facute\n\
			{FFA500}Setari                       \t{FFFFFF}Preferinte generale despre holduri\n\
			{FFA500}Sterge holduri               \t{FFFFFF}Sterge holdurile existente{FF0000} /holdoff\n");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            SPD(playerid, Holds_D +5, HEADERS, "{0DFF00}Creeaza, modifica, foloseste holduri si {FF0000}Distreaza-te!", holdstr, "Select", "Close");
		}
		case 2:
		{
			strcat(holdstr, "Option              \tDescription\n\
			{FFA500}Create hold                  \t{FFFFFF}Create or edit existing hold\n\
			{FFA500}Premade holds                \t{FFFFFF}Already made holds list\n\
			{FFA500}Settings                     \t{FFFFFF}General preferences of your holds\n\
			{FFA500}Remove holds                 \t{FFFFFF}Delete existing holds{FF0000} /holdoff\n");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SPD(playerid, Holds_D +5, HEADERS, "{0DFF00}Create, customize, use holds and {FF0000}Have Fun!", holdstr, "Select", "Cancel");
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:holdoff(playerid)
{
    for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++)
	{
		if(IsPlayerAttachedObjectSlotUsed(playerid, i))
		{
			RemovePlayerAttachedObject(playerid, i);
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Other Commands & Systems
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:neon(ESS)
{
    if(!IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "You are not in a vehicle!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return SendError(playerid, "You are not the driver!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new PCar = GetVehicleModel(GetPlayerVehicleID(playerid));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PCar == 522 || PCar == 462 || PCar == 521 || PCar == 461 || PCar == 463 ||
	PCar == 581 || PCar == 448 || PCar == 586 || PCar == 523 || PCar == 468 || PCar == 471) return SendError(playerid, "You can not add neon to a bike!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SPD(playerid, DIALOG_NEON, LIST, "Choose a color!", "Dark Blue\nRed\nGreen\nWhite\nViolet\nYellow\nCyan\nLight Blue\nPink\nOrange\nLight Green\nLight Yellow\n{FF0000}Remove Neons", "Select", "Close");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:c4(ESS)
{
	new c4string[2048], c4string2[50]; format(c4string2, sizeof(c4string2), "{FF0000}Available C4:{FFFFFF} %d", PlayerInfo[playerid][C4]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(c4string, "Description\tDetails\n\
					  {FF0000}Purchase\t{FFFF00}10 coins\n\
				      {FF0000}Plant\t{FFFF00}In this place\n\
					  {FF0000}Detonate\t{FFFF00}Planted C4");
	return SPD(playerid, DIALOG_C4, HEADERS, c4string2, c4string, "Select", "Close");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:duel(ESS)
{
   if(sscanf(params, "u", DuelPlayerInvite)) return SendUsage(playerid, "/duel [ID/Name]");
   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   if(!IsPlayerConnected(DuelPlayerInvite) || DuelPlayerInvite == playerid) return Error(playerid, 3);
   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   if(IsPlayerInSpecialZone(DuelPlayerInvite) == 1) return SendError(playerid, "This player in a special zone!");
   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   if(PlayerInfo[DuelPlayerInvite][Spawned] == 0) return SendError(playerid, "Player is not spawned!");
   //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   else SPD(playerid, DUEL_D, LIST, "{FFFFFF}Duel | Chose weapon #1", "{00CC00}Chainsaw (Drujba)\n{0066FF}Pistol 9mm\n{FFFF00}Desert Eagle\n{00CC00}Shotgun\n{0066FF}Sawnoff Shotgun\n{FFFF00}Combat Shotgun\n{00CC00}Micro SMG/Uzi\n{0066FF}MP5\n{FFFF00}AK-47\n{00CC00}M4\n{0066FF}Tec-9\n{FFFF00}Country Rifle\n{00CC00}Sniper Rifle", "Select", "Cancel");
   return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:invite(ESS)
{
	new Player, string[128]; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "u", Player)) return SendUsage(playerid, "/invite [ID/Name]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(!IsPlayerConnected(Player) || Player == playerid) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][ClanID] >= 1)
	{
		if(PlayerInfo[playerid][c_Rank] < 1) return SendError(playerid, "You need to be Clan leader to use this command!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[Player][ClanID] >= 1 || PlayerInfo[Player][GangID] >= 1) return SendError(playerid, "Player is in a another clan or or gang!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(string, sizeof(string), "%s te-a invitat in clan-ul lui! Foloseste {0072FF}/accept{FFFF00} sau {0072FF}/decline{FFFF00} pentru a-i raspunde.", PN(playerid));
	   	SCM(Player, YELLOW, string);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Announce(playerid, "~w~~h~Invite ~g~~h~Sent", 4000, 4);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CInvite[Player] = PlayerInfo[playerid][ClanID];
	}
	else if(PlayerInfo[playerid][GangID] >= 1)
	{
	    new giid = PlayerInfo[playerid][GangID];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][g_Rank] < 6) return SendError(playerid, "You need to be Gang Co-Leader to use this command!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PlayerInfo[Player][ClanID] >= 1 || PlayerInfo[Player][GangID] >= 1) return SendError(playerid, "Player is in a another clan or or gang!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[Player][gWarnInGang][giid] == 5) return SendError(playerid, "The player are banned in this gang!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(string, sizeof(string), "%s te-a invitat in gang-ul lui! Foloseste {0072FF}/accept{FFFF00} sau {0072FF}/decline{FFFF00} pentru a-i raspunde.", PN(playerid));
	   	SCM(Player, YELLOW, string);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Announce(playerid, "~w~~h~Invite ~g~~h~Sent~N~~y~~h~Please wait...", 6000, 4);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    GInvite[Player] = PlayerInfo[playerid][GangID];
	}
	else return SendError(playerid, "You are not in a gang or clan!");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:stophold(ESS)
{
	for(new i; i < MAX_PLAYER_ATTACHED_OBJECTS; i++) RemovePlayerAttachedObject(playerid, i);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerSpecialAction(playerid, 0);
	SetPlayerWeather(playerid, 2); SetPlayerTime(playerid, 14,0);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:lockserver(ESS)
{
    if(ServerProtection == 1) return SendErrorEx(playerid, "Nu poti folosi momental aceasta comanda! Te rugam sa incerci mai tarziu.");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new string[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "s[10]", params[0])) return SendUsage(playerid, "/lockserver [0 = Unlocked / 1 = Locked]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(strcmp(params[0], "0", false) == 0)
	{
	    SetTimer("HostNameChanger", 5000, true);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SendRconCommand("password 0");
	    SendRconCommand("hostname "SERVER_NAME2" - "SERVER_WEBSITE"");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(string, 128, "Owner %s unlocked the server.", PN(playerid));
	    SCMALL(RED, string);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    ServerInfo[ServerHNC] = 1;
	}
	else if(strcmp(params[0], "1", false) == 0)
	{
	    SendRconCommand("password "SERVER_PASSWORD"");
	    SendRconCommand("hostname "SERVER_NAME2" - We'll be back!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(string, 128, "Owner %s locked the server.", PN(playerid));
	    SCMALL(RED, string);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SCMALL(RED, "The server has been closed for maintenance!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
			if(PlayerInfo[i][Level] >= 1 || PlayerInfo[i][RconType] >= 1) return true;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            SetTimerEx("KickPlayer", 300, false, "i", i);
		}
        ServerInfo[ServerHNC] = 0;
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:gmx(ESS)
{
    if(ServerProtection == 1) return SendErrorEx(playerid, "Nu poti folosi momental aceasta comanda! Te rugam sa incerci mai tarziu.");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SCMALL(RED, "Server is restarting..."), SendRconCommand("gmx");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// TextDraw => Connect, Disconnect & Others
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock AddToTDLogs(what[])
{
    new String[512];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(strlen(TDString[0]) < 5) format(TDString[0], 256, what);
	else
	{
		format(TDString[2], 256, "%s", TDString[1]);
		format(TDString[1], 256, "%s", TDString[0]);
		format(TDString[0], 256, what);
	}
	format(String, sizeof(String), "%s~n~%s~n~%s", TDString[0], TDString[1], TDString[2]);
	TextDrawSetString(TeleTD, String);
}
stock OnDisconnect(playerid, reasonid)
{
	new ReasonOfExit[30], StrD[1024];
	switch(reasonid)
	{
	    case 0: ReasonOfExit = "Timeout";
		case 1: ReasonOfExit = "Leaving";
		case 2: ReasonOfExit = "Kicked/Banned";
	}
	format(StrD, sizeof(StrD), "~R~~H~%s(%d) ~G~~H~has left the server ~R~~H~(%s)!", PN(playerid), playerid, ReasonOfExit);
	AddToTDLogs(StrD);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock OnConnect(playerid)
{
	new StrC[1024];
	format(StrC, sizeof(StrC), "~R~~H~%s(%d) ~B~~H~has joined the server!", PN(playerid), playerid);
	AddToTDLogs(StrC);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Atrade & Trade System
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:atrade(ESS)
{
    if(PlayerInfo[playerid][AccLocked] != 0) return AccountProtect(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "u", params[0])) return SendUsage(playerid, "/atrade [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0])) return Error(playerid, 10);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[0] == playerid) return SendError(playerid, "You can't accept trade to yourself!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][BuyerID] == params[0])
	{
	    PlayerInfo[playerid][BuyerID] = -1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SCM(playerid, RED, "Accept trade deactivated - Use /atrade [id] to accept trade from a player id");
	    return true;
	}
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][BuyerID] = params[0];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "{18FF00}Accept trade from %s(%d) activated! Type {FF0000}/atrade {18FF00}without id to deactivate.", PN(params[0]), params[0]);
	SCM(playerid, -1, eString);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:trade(playerid)
{
    if(PlayerInfo[playerid][AccLocked] != 0) return AccountProtect(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	StrH[0] = '\0'; StrH2[0] = '\0';
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][Language] == 1)
	{
	    format(StrH, 200, "{FFFF00}Salut, {FF0000}%s{FFFF00}!\n", PN(playerid)), strcat(StrH2, StrH, 200);
	    strcat(StrH2,     "{FFCC00}Acest dialog iti permite sa faci afaceri cu alti jucatori de pe server!\n\n", 500);
	    strcat(StrH2,     "{FF0000}Te rugam sa introduci mai jos {FFFF00}ID-ul{FF0000} jucatorului cu care vrei sa faci afaceri!", 300);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SPD(playerid, DIALOG_TRADE, INPUT, "Trade", StrH2, "Incepe", "Renunta");
	}
	else if(PlayerInfo[playerid][Language] == 2)
	{
	    format(StrH, 200, "{FFFF00}Hi, {FF0000}%s{FFFF00}!\n", PN(playerid)), strcat(StrH2, StrH, 200);
	    strcat(StrH2,     "{FFCC00}This dialog let you to make trades with other players from the server!\n\n", 500);
	    strcat(StrH2,     "{FF0000}Please enter before player's {FFFF00}ID{FF0000}!", 300);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SPD(playerid, DIALOG_TRADE, INPUT, "Trade", StrH2, "Start", "Cancel");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:toroman(ESS)
{
    SetPlayerAttachedObject(playerid, 0, 2045, 5, 0.054017, -0.143008, -0.296382, 236.015472, 0.000000, 0.000000, 1.677617, 1.000000, 1.000000); // CJ_BBAT_NAILS - baros
    SetPlayerAttachedObject(playerid, 1, 1736, 15, -0.052946, -0.209805, 0.302906, 0.000000, 0.000000, 0.000000, 1.438930, 1.000000, 1.000000); // CJ_Stags_head - cu baros merge	return 1;
   	return 1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:scut(ESS)
{
    SetPlayerAttachedObject(playerid, 0, 18645, 1, 0.442329, 0.053743, -0.000982, 84.805229, 81.320098, 0.000000, 1.434422, 1.000000, 1.107518); // MotorcycleHelmet1 - casca
    SetPlayerAttachedObject(playerid, 1, 18637, 13, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); // PoliceShield1 - scut
   	return 1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:alien(ESS)
{
    SetPlayerAttachedObject(playerid, 0, 18645, 2, 0.017478, 0.051500, 0.003912, 285.055511, 90.860740, 171.179550, 1.780549, 0.912008, 1.208514); // MotorcycleHelmet1 - HEAD
    SetPlayerAttachedObject(playerid, 1, 18690, 2, -2.979508, 0.306475, -0.388553, 285.055511, 90.860740, 171.179550, 1.780549, 0.912008, 1.208514); // fire_car - fire2
    SetPlayerAttachedObject(playerid, 2, 18716, 2, -2.979508, 0.306475, -0.388553, 285.055511, 90.860740, 171.179550, 1.780549, 0.912008, 1.208514); // prt_smoke_expand - smoke3
   	return 1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:iron(ESS)
{
	SetPlayerAttachedObject(playerid, 0, 1114, 1, 0.138007, 0.002714, -0.157366, 350.942352, 16.794704, 32.683506, 0.791829, 0.471535, 1.032759); // exh_lr_slv2 - 4
	SetPlayerAttachedObject(playerid, 1, 1114, 1, 0.138007, 0.002714, 0.064523, 342.729064, 354.099456, 32.369094, 0.791829, 0.471535, 1.032759); // exh_lr_slv2 - 4
	return 1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:bigdick(ESS)
{
 	SetPlayerAttachedObject(playerid, 1, 19086, 8, -0.049768, -0.014062, -0.108385, 87.458297, 263.478149, 184.123764, 0.622413, 1.041609, 1.012785); // ChainsawDildo1 - lolatdick
	return 1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Clan System (Functions)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CheckClanName(playerid, cName[])
{
	format(pClanName[playerid], 30, "%s", cName);
	new rows; cache_get_row_count(rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(rows)
	{
	    if(PlayerInfo[playerid][Language] == 1) return format(StrH, 512, "{BBFF00}Un Clan numit {FF0000}'%s'{BBFF00} exista deja!\nIncearca inca odata cu un alt nume...", cName), SPD(playerid, DIALOG_CREATECLAN, INPUT, "{BBFF00}Create {00BBF6}Clan{BBFF00} - /clan, /cinfo", StrH, "Continuare", "Inchide"), 1;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		else if(PlayerInfo[playerid][Language] == 2) return format(StrH, 512, "{BBFF00}A clan named {FF0000}'%s'{BBFF00} already exists!\nPlease try again with another name...", cName), SPD(playerid, DIALOG_CREATECLAN, INPUT, "{BBFF00}Create {00BBF6}Clan{BBFF00} - /clan, /cinfo", StrH, "Continue", "Close"), 1;
	}
	else
	{
		if(PlayerInfo[playerid][Language] == 1) return SPD(playerid, DIALOG_CREATECLAN + 1, LIST, "{FFFFFF}Create Clan{FF0000} - Members Skin", "{00CC00}Selecteaza un skin dintr-o lista\n{FFFFFF}Scrie ID-ul skinului", "Continue", "Close"), 1;
		else if(PlayerInfo[playerid][Language] == 2) return SPD(playerid, DIALOG_CREATECLAN + 1, LIST, "{FFFFFF}Create Clan{FF0000} - Members Skin", "{00CC00}Select skin from a list\n{FFFFFF}Type skin ID", "Continue", "Close"), 1;
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function OnClanCreate(playerid)
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new clanID = cache_insert_id();
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][ClanID] = clanID;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][c_Rank] = 4;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    ClanTers[PlayerInfo[playerid][ClanID]][owner] = PlayerInfo[playerid][ClanID];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Clan[PlayerInfo[playerid][ClanID]][ClanLevel] = 1;
	Clan[PlayerInfo[playerid][ClanID]][EXP] = 0;
	Clan[PlayerInfo[playerid][ClanID]][ClanCaptures] = 0;
	Clan[PlayerInfo[playerid][ClanID]][ClanDeaths] = 0;
	Clan[PlayerInfo[playerid][ClanID]][ClanKills] = 0;
	Clan[PlayerInfo[playerid][ClanID]][ClanPoints] = 0;
	Clan[PlayerInfo[playerid][ClanID]][Losts] = 0;
	Clan[PlayerInfo[playerid][ClanID]][ZoneLocked] = 0;
	Clan[PlayerInfo[playerid][ClanID]][Wins] = 0;
	Clan[PlayerInfo[playerid][ClanID]][Skin] = pClanSkin[playerid];
	Clan[PlayerInfo[playerid][ClanID]][ClanColor] = pClanColor[playerid];
	Clan[PlayerInfo[playerid][ClanID]][CaptureTime] = CAPTURE_TIME;
	Clan[PlayerInfo[playerid][ClanID]][Weapon][0] = pClanWeapon[playerid][0];
	Clan[PlayerInfo[playerid][ClanID]][Weapon][1] = pClanWeapon[playerid][1];
	Clan[PlayerInfo[playerid][ClanID]][Weapon][2] = pClanWeapon[playerid][2];
	Clan[PlayerInfo[playerid][ClanID]][Weapon][3] = pClanWeapon[playerid][3];
	Clan[PlayerInfo[playerid][ClanID]][Weapon][4] = pClanWeapon[playerid][4];
	Clan[PlayerInfo[playerid][ClanID]][Weapon][5] = pClanWeapon[playerid][5];
	format(Clan[PlayerInfo[playerid][ClanID]][ClanName], 30, "%s", pClanName[playerid]);
	format(Clan[PlayerInfo[playerid][ClanID]][Since], 30, "%s", pClanSince[playerid]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new x = 1; x < 6; x++) GivePlayerWeapon(playerid, Clan[PlayerInfo[playerid][ClanID]][Weapon][x], 9999);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerSkin(playerid, Clan[PlayerInfo[playerid][ClanID]][Skin]);
 	SetPlayerColor(playerid, Clan[PlayerInfo[playerid][ClanID]][ClanColor]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "\
	UPDATE `Clans` SET `Name` = '%s', `Skin` = '%d', `Color` = '%d', `W1` = '%d', `W2` = '%d', `W3` = '%d', `W4` = '%d', `W5` = '%d', `W6` = '%d',\
	`X` = '0.0', `Y` = '0.0', `Z` = '0.0', `A` = '0.0', `Kills` = '0', `Deaths` = '0', `Wins` = '0', `Losts` = '0', `Points` = '0',\
 	`Captures` = '0', `EXP` = '0', `Since` = '%s', `Level` = '1', `Owner` = '%d' WHERE `ID` = '%d'",
	Clan[PlayerInfo[playerid][ClanID]][ClanName], Clan[PlayerInfo[playerid][ClanID]][Skin], Clan[PlayerInfo[playerid][ClanID]][ClanColor],
  	Clan[PlayerInfo[playerid][ClanID]][Weapon][0], Clan[PlayerInfo[playerid][ClanID]][Weapon][1], Clan[PlayerInfo[playerid][ClanID]][Weapon][2], Clan[PlayerInfo[playerid][ClanID]][Weapon][3],
	Clan[PlayerInfo[playerid][ClanID]][Weapon][4], Clan[PlayerInfo[playerid][ClanID]][Weapon][5], Clan[PlayerInfo[playerid][ClanID]][Since], PlayerInfo[playerid][ClanID], PlayerInfo[playerid][ClanID]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `ClanID` = '%d', `ClanName` = '%s', `ClanRank`= '4' WHERE `Name` = '%s'", PlayerInfo[playerid][ClanID], Clan[PlayerInfo[playerid][ClanID]][ClanName], PN(playerid));
    mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Clans` SET `Owner` = '%d', `Level` = '1' WHERE `ID` = '%s'", ClanTers[PlayerInfo[playerid][ClanID]][owner], PlayerInfo[playerid][ClanID]);
    mysql_tquery(SQL, eQuery, "", "");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function SaveClans()
{
    eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 1; i < MAX_CLANS; i++)
	{
	    mysql_format(SQL, eQuery, sizeof(eQuery), "\
		UPDATE `Clans` SET `W1` = '%d', `W2` = '%d', `W3` = '%d', `W4` = '%d', `W5` = '%d', `W6` = '%d',\
 		`Kills` = '%d', `Points` = '%d', `EXP` = '%d', `Level` = '%d', `Captures` = '%d', `Losts` = '%d',\
  		`Wins` = '%d', `Deaths` = '%d' WHERE `ID` = '%d'", Clan[i][Weapon][0], Clan[i][Weapon][1], Clan[i][Weapon][2],
        Clan[i][Weapon][3], Clan[i][Weapon][4], Clan[i][Weapon][5], Clan[i][ClanKills], Clan[i][ClanPoints],
        Clan[i][EXP], Clan[i][ClanLevel], Clan[i][ClanCaptures], Clan[i][Losts], Clan[i][Wins], Clan[i][ClanDeaths], i);
	    mysql_tquery(SQL, eQuery, "", "");
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function StealCarFinish(playerid)
{
	if(PlayerInfo[playerid][InStealCar] == 1)
	{
        for(new i; i < MAX_PLAYERS; i++)
        {
            if(PlayerInfo[i][InStealCar] == 1)
		 	{
		 	    Announce(playerid, "~G~~H~You won~N~~Y~~H~10 coins, +15.000$", 6000, 3);
		 	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		 	    PlayerInfo[playerid][Coins] += 10;
		 	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		 	    GivePlayerMoney(playerid, 15000);
		 	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                PlayerInfo[playerid][InStealCar] = 0;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerInfo[i][InStealCar] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				ServerInfo[StealCarOwner] = -1;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SpawnPlayer(i);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SpawnPlayer(playerid);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SCMALL(RED, "Steal the Car{00FBFF} s-a terminat. Foloseste{38AD21} /stealcar{00FBFF} pentru a incepe din nou!");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(StealerCar[playerid] != 0)
				{
					DestroyVehicle(StealerCar[playerid]);
				}
			}
		}
	}
}
function PlayerTimers()
{
    foreach(new i: Player)
    {
   		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// -> Steal Car Timer
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[i][InStealCar] == 1)
		{
			if(i != ServerInfo[StealCarOwner])
		  	{
				if(IsPlayerInVehicle(i, ServerInfo[StealCarID]))
				{
					Announce(ServerInfo[StealCarOwner], "~W~~H~Car stolen!~N~~R~~H~You lost!", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					Announce(i, "~W~~H~Car successfully stolen~N~~G~~H~you won~Y~~H~ +15 coins, +15.000$", 6000, 3);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[i][Coins] += 15;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					GivePlayerMoney(i, 15000);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					DestroyVehicle(StealerCar[i]);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					StealerCar[i] = 0;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					DestroyVehicle(StealerCar[ServerInfo[StealCarOwner]]);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					StealerCar[ServerInfo[StealCarOwner]] = 0;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[i][InStealCar] = 0;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerInfo[ServerInfo[StealCarOwner]][InStealCar] = 0;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SpawnPlayer(ServerInfo[StealCarOwner]);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 				ServerInfo[StealcarStarted] = 0;
	 				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					ServerInfo[StealCarOwner] = -1;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					SpawnPlayer(i);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					format(eString, sizeof(eString), "%s{00FBFF} a castigat{38AD21} Steal the Car{00FBFF} si a primit{FF0000} 15.000$ & 15 Coins! ", PN(i));
					SCMALL(RED, eString);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				    if(PlayerInfo[i][InStealCar] == 1)
				    {
			      		SpawnPlayer(i);
			      		//++++++++++++++++++++++++++++++++++++++++++++++++++++++
				 		PlayerInfo[i][InStealCar] = 0;
				 		//++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    DestroyVehicle(StealerCar[i]);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    StealerCar[i] = 0;
				    }
				}
		  	}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		new Hour, Min, Sec, Day, Month, Year, TimeString3[256], year, month,day, mtext[40];
		new ServerYear, ServerMonth, ServerDay; getdate(ServerYear, ServerMonth, ServerDay);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PlayerInfo[i][LoggedIn] == 1)
    	{
		    gettime(Hour, Min, Sec); getdate(Year, Month, Day); getdate(year, month, day);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            mtext = GetMonth();
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(Day <= 9) format(TimeString3,25,"0%d %s", Day, mtext);
			else format(TimeString3,25,"%d %s", Day, mtext);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			TextDrawSetString(HClock3, TimeString3); TextDrawShowForAll(HClock3);
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[i][NRGMaze] == 1)
		{
			if(IsPlayerInRangeOfPoint(i, 3.0, 3744.4180, 2437.7612, 63.0299))
			{
			    Info(i, "~h~~r~Congratulations~n~~g~You finished the NRG Maze.", 5000);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerInfo[i][Money] += 100000, GivePlayerMoney(i, 100000), PlayerInfo[i][Coins] += 50;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SCM(i, YELLOW, "You will receive $100.000 and 50 coins!");
		        PlayerInfo[i][NRGMaze] = 0, SpawnPlayer(i);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        FormatMSG(i, -1, "{00FF22}%s {FFFF00}has finished NRG-Maze (/nrgmaze)!", PN(i));
			}
		}
		if(PlayerInfo[i][InMaze2] == 1)
		{
			if(IsPlayerInRangeOfPoint(i, 3.0, 2117.3745, 1671.7856, 1032.8600))
			{
		        SpawnPlayer(i);
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        Info(i, "~h~~r~Congratulations~n~~g~You finished the Maze 2.", 5000);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerInfo[i][Money] += 100000, GivePlayerMoney(i, 100000), PlayerInfo[i][Coins] += 25;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SCM(i, YELLOW, "You will receive $100.000 and 25 coins!");
		        PlayerInfo[i][InMaze2] = 0;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        FormatMSG(i, -1, "{00FF22}%s {FFFF00}has finished maze2 (/maze2)!", PN(i));
	        }
		}
		if(PlayerInfo[i][InMaze] == 1)
		{
			if(IsPlayerInRangeOfPoint(i, 3.0, 650.6606, -2830.9033, 46.4035))
			{

			    SpawnPlayer(i);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        Info(i, "~h~~r~Congratulations~n~~g~You finished the Maze.", 5000);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerInfo[i][Money] += 100000, GivePlayerMoney(i, 50000), PlayerInfo[i][Coins] += 15;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        SCM(i, YELLOW, "You will receive $50.000 and 15 coins!");
		        PlayerInfo[i][InMaze] = 0;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        FormatMSG(i, -1, "{00FF22}%s {FFFF00}has finished maze (/maze)!", PN(i));
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    // -> SUMO
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[i][InSumo] == 1)
	    {
	    	ServerInfo[WaterDetectTimer] = SetTimerEx("IsPlayerInWater", 999, false, "i", i);
	    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(!IsPlayerInAnyVehicle(i)) PutPlayerInVehicle(i, SumoCar[i], 0);
	    }
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // AFK Player Time
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CheckPlayerAFK();
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public OnRconCommand(cmd[])
{
    if(!strcmp(cmd, "hello", true))
    {
        SendClientMessageToAll(0xFFFFFFAA, "Hello World!");
        print("You said hello to the world."); // This will appear to the player who typed the rcon command in the chat in white
        return 1;
    }
    return 0;
}
function GivePlayerRconByLogin(i)
{
	if(PlayerInfo[i][LoggedIn] == 1)
	{
		new string[124];
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CACHE(0, "RconType", PlayerInfo[i][RconType]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(string, sizeof(string), "~N~~N~~N~~N~~N~~N~~W~~H~You has been logged~N~~W~~H~in as~R~~H~~H~ %s", GetRconType(PlayerInfo[i][RconType]));
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[i][RconType] >= 1) Announce(i, string, 6000, 3);
	    if(PlayerInfo[i][RconType] == 0) Kick(i);
	}
	else return Kick(i);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
public OnRconLoginAttempt(ip[], password[], success)
{
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Auto-Rcon-Kick
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(success)
    {
        new pip[16]; eQuery[0] = EOS;
        for(new i = GetPlayerPoolSize(); i != -1; --i)
        {
            GetPlayerIp(i, pip, sizeof(pip));
            if(!strcmp(ip, pip, true))
            {
	            mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT * FROM `Accounts` WHERE `ID` = '%d'", PlayerInfo[i][AccID]);
	   			mysql_tquery(SQL, eQuery, "GivePlayerRconByLogin", "d", i);
			}
        }
    }
    else if(!success)
    {
        new pip[16];
        for(new i = GetPlayerPoolSize(); i != -1; --i)
        {
            GetPlayerIp(i, pip, sizeof(pip));
            if(!strcmp(ip, pip, true)) Kick(i);
        }
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock RefreshColors(playerid)
{
    new Apply = random(9);
	//--------------------------------------------------------------------------
    switch(Apply)
	{
	    case 0: SetPlayerColor(playerid, 0xFFFFFFAA);
	    case 1: SetPlayerColor(playerid, 0xFF0000AA);
		case 2: SetPlayerColor(playerid, 0x395DFFAA);
		case 3: SetPlayerColor(playerid, 0xFFFFFFAA);
		case 4: SetPlayerColor(playerid, 0x00BBF6AA);
		case 5: SetPlayerColor(playerid, 0xAFAFAFAA);
	    case 6: SetPlayerColor(playerid, 0xFF9900AA);
		case 7: SetPlayerColor(playerid, 0xFFEB7BAA);
		case 8: SetPlayerColor(playerid, 0xFFCC00AA);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerClanRank(playerid)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    switch(PlayerInfo[playerid][c_Rank])
    {
        case 0: String = "None";
		case 1: String = "Member";
        case 2: String = "Co-Leader";
        case 3: String = "Leader";
        case 4: String = "Founder";
    }
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetClanName(clanid)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "%s", Clan[clanid][ClanName]);
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendClanSetRank(playerid, message[])
{
	foreach(new i : Player) if(PlayerInfo[i][ClanID] == playerid) SCM(i, SETRANK, message);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetConnectedClanMembers(cID)
{
	new M_Connected;
	foreach(new i : Player) if(PlayerInfo[i][ClanID] == cID) M_Connected++;
	return M_Connected;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendClanMessage(playerid, message[])
{
	foreach(Player, i) if(PlayerInfo[i][ClanID] == playerid) SCM(i, GREEN, message);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock RemovePlayerFromClan(playerid)
{
    if(PlayerInfo[playerid][c_Rank] == 4)
	{
	    foreach(new i : Player)
	    {
			if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID])
			{
				new x = PlayerInfo[playerid][ClanID]; eQuery[0] = EOS;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    PlayerInfo[i][c_Rank] = 0;
			    PlayerInfo[i][c_Kills] = 0;
				PlayerInfo[i][c_Deaths] = 0;
				PlayerInfo[i][c_Captures] = 0;
				PlayerInfo[i][c_Points] = 0;
				PlayerInfo[i][c_Skin] = 0;
				SetPlayerSkin(i, 217);
				SpawnPlayer(i);
			 	RefreshColors(i);
			    ResetPlayerWeapons(i);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   				Clan[x][ClanDeaths] = 0;
				Clan[x][ClanCaptures] = 0;
				Clan[x][EXP] = 0;
				Clan[x][ClanKills] = 0;
				Clan[x][Skin] = 0;
				Clan[x][ClanPoints] = 0;
				Clan[x][ClanLevel] = 0;
				Clan[x][Losts] = 0;
				Clan[x][Wins] = 0;
				Clan[x][Capturing] = 0;
				Clan[x][MaxDeaths] = 0;
				Clan[x][TurfingClan] = 0;
				Clan[x][CaptureTime] = 0;
				Clan[x][IsAttacked] = 0;
				Clan[x][c_CaptureJoins] = 0;
				Clan[x][CapturingClan] = 0;
				Clan[x][ID] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				for(new l = 0; l < 7; l++) Clan[x][Weapon][l] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				for(new l = 0; l < 4; l++) Clan[x][ClanPos][l] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(Clan[x][Since], 30, "-1");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(Clan[x][ClanName], 30, "-1");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `ClanPoints` = '0', `ClanKills` = '0', `ClanDeaths` = '0', `ClanName` = 'None', `ClanCaptures` = '0', `ClanID` = '0' WHERE `ClanID` = '%d'", x);
			    mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `Clans` WHERE `ID` = '%d'", x);
			    mysql_tquery(SQL, eQuery, "", "");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    DestroyDynamicMapIcon(Clan[x][MapIcon]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    DestroyDynamic3DTextLabel(ClanPickUp3D[x]), DestroyDynamicPickup(ClanPickUp[x]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    PlayerInfo[i][ClanID] = 0;
			}
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else
	{
		PlayerInfo[playerid][ClanID] = 0;
		PlayerInfo[playerid][c_Rank] = 0;
		PlayerInfo[playerid][c_Kills] = 0;
		PlayerInfo[playerid][c_Deaths] = 0;
		PlayerInfo[playerid][c_Captures] = 0;
		PlayerInfo[playerid][c_Points] = 0;
		PlayerInfo[playerid][c_EXP] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerSkin(playerid, 217), SpawnPlayer(playerid), RefreshColors(playerid), ResetPlayerWeapons(playerid);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CaptureClan(playerid, clanid)
{
    new tick = GetTickCount() - Clan[clanid][ZoneLocked], StringEx[256];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(tick > (60000 * LOCKED_MINUTES))
	{
	 	if(ClanTers[clanid][owner] == PlayerInfo[playerid][ClanID]) return SendError(playerid, "This teritory is already captured by your Clan!");
	  	if(PlayerInfo[playerid][c_Capturing] == 1) return SendError(playerid, "You already capturing this Clan!");
	    if(ClanTers[clanid][turfing] == true) return true;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ClanTers[clanid][turfing] = true;
		ClanTers[clanid][turfingby] = PlayerInfo[playerid][ClanID];
		Clan[PlayerInfo[playerid][ClanID]][TurfingClan] = ClanTers[clanid][owner];
		Clan[PlayerInfo[playerid][ClanID]][CapturingClan] = 1;
		Clan[PlayerInfo[playerid][ClanID]][c_CaptureJoins]++;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	PlayerInfo[playerid][clanturfe] = clanid;
	 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	Clan[PlayerInfo[playerid][clanturfe]][IsAttacked] = 1;
	 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  	PlayerInfo[playerid][c_Capturing] = 1;
	  	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  	Clan[PlayerInfo[playerid][ClanID]][Capturing] = 1;
	  	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetTimerEx("CaptureClanEx", 999, 0, "i", playerid);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		foreach(new i: Player)
		{
		    if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID])
		    {
		        new String[128];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, sizeof(String), "~r~~h~Capture started by~n~~h~~g~%s~n~~y~Follow %s!", PN(playerid), PN(playerid));
		        Announce(i, String, 10000, 3);
		    }
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(PlayerInfo[i][ClanID] == ClanTers[Clan[PlayerInfo[playerid][ClanID]][TurfingClan]][owner])
		    {
				if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][clanturfe]) return true;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				else
				{
			        new String[128];
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			        format(String, sizeof(String), "~r~~h~Your territory is ~n~~r~~h~under attack by~n~~w~%s~n~~y~~h~/spawnme!", Clan[PlayerInfo[playerid][ClanID]][ClanName]);
		            Announce(i, String, 8000, 3);
				}
			}
		}
	}
	else
	{
	    format(StringEx, sizeof(StringEx), "You cannot capture this clan because it was recently captured! Wait 0%.2f seconds to catch him!", floatdiv(60000 * LOCKED_MINUTES - tick, 60 * 1000));
	    SCM(playerid, RED, StringEx);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CaptureClanTerr(playerid, clanid)
{
	eString[0] = EOS;
	//--------------------------------------------------------------------------
 	if(ClanTers[clanid][owner] == PlayerInfo[playerid][ClanID]) return SendError(playerid, "This teritory is already captured by your clan!");
 	if(PlayerInfo[playerid][c_Capturing] == 1) return SendError(playerid, "You already capturing this clan!");
    if(ClanTers[clanid][turfing] == true) return true;
    //--------------------------------------------------------------------------
    Clan[PlayerInfo[playerid][ClanID]][TurfingClan] = ClanTers[clanid][owner];
	Clan[PlayerInfo[playerid][ClanID]][CapturingClan] = 1;
	Clan[PlayerInfo[playerid][ClanID]][c_CaptureJoins]++;
	ClanTers[clanid][turfing] 	= true;
	ClanTers[clanid][turfingby] = PlayerInfo[playerid][ClanID];
 	PlayerInfo[playerid][clanturfe] = clanid;
 	PlayerInfo[playerid][c_Capturing] = 1;
 	Clan[PlayerInfo[playerid][ClanID]][Capturing] = 1;
    GangZoneFlashForAll(ClanTers[clanid][ID], Clan[PlayerInfo[playerid][ClanID]][ClanColor]);
    SetTimerEx("ProgresTurfingClan", 1000, 0, "i", playerid);
    //--------------------------------------------------------------------------
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID])
	    {
	        new String[128];
	        //------------------------------------------------------------------
	        format(String, sizeof(String), "~h~~r~~H~Territory was started by~n~~h~~g~~H~%s~n~~y~~H~/capture info~n~~y~~H~/capture join", PN(playerid));
	        Announce(i, String, 10000, 3);
	        //------------------------------------------------------------------
	    }
	}
	foreach(new a: Player)
	{
	    if(PlayerInfo[a][ClanID] == ClanTers[Clan[PlayerInfo[playerid][ClanID]][TurfingClan]][owner])
	    {
	        format(eString, sizeof(eString), "~r~~h~Your territory is ~n~~r~~h~under attack by~n~~w~%s~n~~y~~h~/spawnme!", Clan[PlayerInfo[playerid][ClanID]][ClanName]);
            Announce(a, eString, 8000, 3);
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CaptureClanEx(playerid)
{
    if(PlayerInfo[playerid][clanturfe] == 0) return Clan[PlayerInfo[playerid][ClanID]][CaptureTime] = CAPTURE_TIME;
   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new t = PlayerInfo[playerid][clanturfe], j = PlayerInfo[playerid][ClanID];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Clan[PlayerInfo[playerid][ClanID]][CaptureTime]--;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][c_Capturing] == 1)
	{
		format(eString, sizeof(eString), "~r~~h~Capturing...~n~~y~~h~Please wait ~g~~h~%i ~y~~h~seconds", Clan[PlayerInfo[playerid][ClanID]][CaptureTime]);
		Announce(playerid, eString, 999, 4);
	}
	else if(PlayerInfo[playerid][c_Capturing] == 0) return PlayerInfo[playerid][c_Capturing] = 0, ClanTers[t][turfing] = false, ClanTers[t][turfingby] = 0;
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Clan[j][CaptureTime] == 0)
	{
		if(PlayerInfo[playerid][c_Capturing] == 1)
	 	{
	    	foreach(new i: Player)
	    	{
	      		if(PlayerInfo[i][ClanID] == ClanTers[Clan[j][TurfingClan]][owner])
	      		{
	          		format(eString, sizeof(eString), "~g~~h~~H~Your clan defense ~n~~r~~h~~H~failed!", Clan[j][ClanName]);
              		Announce(i, eString, 8000, 3);
		  		}
		  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID])
	   			{
	      			format(eString, sizeof(eString), "~y~~h~your clan won the turf!~n~~r~~h~~h~+ 15 GP!", Clan[j][ClanName]);
		            Announce(i, eString, 8000, 3);
	             	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
           	 		if(PlayerInfo[i][Capturing] == 1)
		            {
             			PlayerInfo[i][c_Captures] ++, PlayerInfo[i][c_Points] += 15, Clan[j][CapturingClan] = 0, PlayerInfo[i][c_Capturing] = 0;
		            }
				}
	    	}
		}
 	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][ClanID] == PlayerInfo[playerid][clanturfe])
		{
			ClanTers[t][turfing] = false, ClanTers[t][turfingby] = 0, ClanTers[t][owner] = j;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][c_CaptureJoins] = 0;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[PlayerInfo[playerid][ClanID]][CaptureTime] = CAPTURE_TIME;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][ZoneLocked] = GetTickCount();
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][ClanCaptures] ++;
			Clan[j][ClanPoints] += 15;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][c_Captures] ++;
			PlayerInfo[playerid][c_Points] += 15;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdatePlayer(PN(playerid), "ClanCaptures", PlayerInfo[playerid][c_Captures]);
			UpdatePlayer(PN(playerid), "ClanPoints", PlayerInfo[playerid][c_Points]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][c_Capturing] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][TurfingClan] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][Capturing] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][MaxDeaths] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	   	PlayerInfo[playerid][c_EXP] ++;
			Clan[j][EXP] ++;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdateClan("Points", Clan[j][ClanPoints], PlayerInfo[playerid][ClanID]);
			UpdateClan("Captures", Clan[j][ClanCaptures], PlayerInfo[playerid][ClanID]);
			UpdateClan("Wins", Clan[j][Wins], PlayerInfo[playerid][ClanID]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdateClan("Losts", Clan[t][Losts], PlayerInfo[playerid][clanturfe]);
			UpdateClan("Owner", ClanTers[t][owner], PlayerInfo[playerid][clanturfe]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[playerid][clanturfe] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdateClan3D();
		}
		else
		{
		    ClanTers[t][turfing] = false, ClanTers[t][turfingby] = 0, ClanTers[t][owner] = j;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][c_CaptureJoins] = 0;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[PlayerInfo[playerid][ClanID]][CaptureTime] = CAPTURE_TIME;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][ClanCaptures] ++;
			Clan[j][ClanPoints] += 15;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][c_Captures] ++;
			PlayerInfo[playerid][c_Points] += 15;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdatePlayer(PN(playerid), "ClanCaptures", PlayerInfo[playerid][c_Captures]);
			UpdatePlayer(PN(playerid), "ClanPoints", PlayerInfo[playerid][c_Points]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][c_Capturing] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][TurfingClan] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][Capturing] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][MaxDeaths] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	   	PlayerInfo[playerid][c_EXP] ++;
			Clan[j][EXP] ++;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 		Clan[t][Losts] ++;
	 		Clan[t][ZoneLocked] = GetTickCount();
		    Clan[j][Wins] ++;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdateClan("Points", Clan[j][ClanPoints], PlayerInfo[playerid][ClanID]);
			UpdateClan("Captures", Clan[j][ClanCaptures], PlayerInfo[playerid][ClanID]);
			UpdateClan("Wins", Clan[j][Wins], PlayerInfo[playerid][ClanID]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdateClan("Losts", Clan[t][Losts], PlayerInfo[playerid][clanturfe]);
			UpdateClan("Owner", ClanTers[t][owner], PlayerInfo[playerid][clanturfe]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[playerid][clanturfe] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdateClan3D();
		}
	    return true;
	}
	SetTimerEx("CaptureClanEx", 999, 0, "i", playerid);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ProgresTurfingClan(playerid)
{
	if(PlayerInfo[playerid][clanturfe] == 0) return Clan[PlayerInfo[playerid][ClanID]][CaptureTime] = 300;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Clan[PlayerInfo[playerid][ClanID]][CaptureTime]--;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new t = PlayerInfo[playerid][clanturfe], j = PlayerInfo[playerid][ClanID];
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Clan[j][CaptureTime] == 0)
	{
		if(PlayerInfo[playerid][c_Capturing] == 1)
	 	{
	    	foreach(new i: Player)
	    	{
	      		if(PlayerInfo[i][ClanID] == ClanTers[Clan[j][TurfingClan]][owner])
	      		{
	          		format(eString, sizeof(eString), "~g~~h~~H~Your clan defense ~n~~r~~h~~H~failed!", Clan[j][ClanName]);
              		Announce(i, eString, 8000, 3);
		  		}
		  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  		if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID])
	   			{
	      			format(eString, sizeof(eString), "~y~~h~your clan won the turf!~n~~r~~h~~h~+ 15 GP!", Clan[j][ClanName]);
		            Announce(i, eString, 8000, 3);
	             	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
           	 		if(PlayerInfo[i][Capturing] == 1)
		            {
             			PlayerInfo[i][c_Captures] ++, PlayerInfo[i][c_Points] += 15, Clan[j][CapturingClan] = 0, PlayerInfo[i][c_Capturing] = 0;
		            }
				}
	    	}
		}
 	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][ClanID] == PlayerInfo[playerid][clanturfe])
		{
			ClanTers[t][turfing] = false, ClanTers[t][turfingby] = 0, ClanTers[t][owner] = j;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][c_CaptureJoins] = 0;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[PlayerInfo[playerid][ClanID]][CaptureTime] = 300;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][ClanCaptures] ++;
			Clan[j][ClanPoints] += 15;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][c_Captures] ++;
			PlayerInfo[playerid][c_Points] += 15;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdatePlayer(PN(playerid), "ClanCaptures", PlayerInfo[playerid][c_Captures]);
			UpdatePlayer(PN(playerid), "ClanPoints", PlayerInfo[playerid][c_Points]);
			UpdatePlayer(PN(playerid), "ClanTotalP", PlayerInfo[playerid][c_Total]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][c_Capturing] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][TurfingClan] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][Capturing] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][MaxDeaths] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	   	PlayerInfo[playerid][c_EXP] ++;
			Clan[j][EXP] ++;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdateClan("Points", Clan[j][ClanPoints], PlayerInfo[playerid][ClanID]);
			UpdateClan("Captures", Clan[j][ClanCaptures], PlayerInfo[playerid][ClanID]);
			UpdateClan("Wins", Clan[j][Wins], PlayerInfo[playerid][ClanID]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdateClan("Losts", Clan[t][Losts], PlayerInfo[playerid][clanturfe]);
			UpdateClan("Owner", ClanTers[t][owner], PlayerInfo[playerid][clanturfe]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[playerid][clanturfe] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdateClan3D();
		}
		else
		{
		    ClanTers[t][turfing] = false, ClanTers[t][turfingby] = 0, ClanTers[t][owner] = j;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	  		GangZoneHideForAll(ClanTers[t][ID]), GangZoneShowForAll(ClanTers[t][ID], Clan[j][ClanColor]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    ClanTers[t][turfing] = false, ClanTers[t][turfingby] = 0, ClanTers[t][owner] = j;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][c_CaptureJoins] = 0;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[PlayerInfo[playerid][ClanID]][CaptureTime] = 300;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][ClanCaptures] ++;
			Clan[j][ClanPoints] += 15;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][c_Captures] ++;
			PlayerInfo[playerid][c_Points] += 15;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdatePlayer(PN(playerid), "ClanCaptures", PlayerInfo[playerid][c_Captures]);
			UpdatePlayer(PN(playerid), "ClanPoints", PlayerInfo[playerid][c_Points]);
			UpdatePlayer(PN(playerid), "ClanTotalP", PlayerInfo[playerid][c_Total]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][c_Capturing] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][TurfingClan] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][Capturing] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[j][MaxDeaths] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	   	PlayerInfo[playerid][c_EXP] ++;
			Clan[j][EXP] ++;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 		Clan[t][Losts] ++;
	 		Clan[t][ZoneLocked] = GetTickCount();
		    Clan[j][Wins] ++;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdateClan("Points", Clan[j][ClanPoints], PlayerInfo[playerid][ClanID]);
			UpdateClan("Captures", Clan[j][ClanCaptures], PlayerInfo[playerid][ClanID]);
			UpdateClan("Wins", Clan[j][Wins], PlayerInfo[playerid][ClanID]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdateClan("Losts", Clan[t][Losts], PlayerInfo[playerid][clanturfe]);
			UpdateClan("Owner", ClanTers[t][owner], PlayerInfo[playerid][clanturfe]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[playerid][clanturfe] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdateClan3D();
		}
	    return true;
	}
	SetTimerEx("ProgresTurfingClan", 999, 0, "i", playerid);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock JoinCapturing(playerid, clanid)
{
  	if(PlayerInfo[playerid][ClanID] == 0) return SendError(playerid, "You are not a member of any Clan!");
 	if(ClanTers[clanid][owner] == PlayerInfo[playerid][ClanID]) return SendError(playerid, "This teritory is already captured by your Clan!");
  	if(PlayerInfo[playerid][c_Capturing] == 1) return SendError(playerid, "You already capturing this Clan!");
    if(ClanTers[clanid][turfing] == true) return true;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ClanTers[clanid][turfing] = true;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ClanTers[clanid][turfingby] = PlayerInfo[playerid][ClanID];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	PlayerInfo[playerid][clanturfe] = clanid;
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  	PlayerInfo[playerid][c_Capturing] = 1;
  	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetTimerEx("JoinCapturingEx", 999, 0, "i", playerid);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function JoinCapturingEx(playerid)
{
	if(Clan[PlayerInfo[playerid][ClanID]][CaptureTime] == 0)
	{
	    Clan[PlayerInfo[playerid][ClanID]][Capturing] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ClanTers[PlayerInfo[playerid][clanturfe]][turfing] = false;
		ClanTers[PlayerInfo[playerid][clanturfe]][turfingby] = 0;
		ClanTers[PlayerInfo[playerid][clanturfe]][owner] = PlayerInfo[playerid][ClanID];
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[playerid][clanturfe]	= 0;
		Clan[PlayerInfo[playerid][ClanID]][CaptureTime] = CAPTURE_TIME;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][c_Captures] ++;
		PlayerInfo[playerid][c_Points] += 15;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		UpdatePlayer(PN(playerid), "ClanCaptures", PlayerInfo[playerid][c_Captures]);
		UpdatePlayer(PN(playerid), "ClanPoints", PlayerInfo[playerid][c_Points]);
		UpdatePlayer(PN(playerid), "ClanTotalP", PlayerInfo[playerid][c_Total]);
 	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	   	PlayerInfo[playerid][c_EXP] ++;
		Clan[PlayerInfo[playerid][ClanID]][EXP] ++;
 	   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Announce(playerid, "~g~~h~Succesfully capturing~n~~r~clan!", 4000, 4);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		UpdateClan3D();
	    return true;
	}
	SetTimerEx("CaptureClanEx", 999, 0, "i", playerid);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock StopCapturing(playerid)
{
    if(PlayerInfo[playerid][ClanID] == 0) return SendError(playerid, "You are not a member of any Clan!");
    if(PlayerInfo[playerid][c_Capturing] == 0) return SendError(playerid, "You are not capturing any Clan!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach(new i : Player)
	{
	    if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID])
     	{
		    if(PlayerInfo[i][c_Capturing] == 1)
		    {
		        Clan[PlayerInfo[playerid][ClanID]][CaptureTime] = CAPTURE_TIME;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        Clan[PlayerInfo[i][ClanID]][Capturing] = 0;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		       	ClanTers[PlayerInfo[i][clanturfe]][turfing] = false;
		       	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				ClanTers[PlayerInfo[i][clanturfe]][turfingby]	= 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        PlayerInfo[i][c_Capturing] = 0;
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        UpdateClan3D();
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        Announce(playerid, "~w~Capturing has been~n~~r~~h~stopped!", 4000, 4);
			}
	    }
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ErrorSpawnSet(playerid) return Announce(playerid, "~R~~H~You cannot set a~N~~R~~H~spawn here!~N~~N~~W~~H~Try on another location!", 6000, 3);
function ErrorSpawnForPersVehicle(playerid) return Announce(playerid, "~R~~H~You cannot set your~N~~R~~H~vehicle spawn here!~N~~N~~W~~H~Try on another location!", 6000, 3);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function UpdateClan(varname[], amount, id)
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Clans` SET `%s` = '%d' WHERE `ID` = '%d'", varname, amount, id);
	mysql_tquery(SQL, eQuery, "", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CalculateClanPoints(playerid)
{
	PlayerInfo[playerid][c_Total] = (PlayerInfo[playerid][c_Points] + PlayerInfo[playerid][c_Kills] + PlayerInfo[playerid][c_Captures]);
	return PlayerInfo[playerid][c_Total];
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Clan System (Commands)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:resetlosts(playerid)
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][RconType] < 3) return Error(playerid, 8);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 1; i < MAX_CLANS; i++) Clan[i][Losts] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Clans` SET `Losts` = '0'");
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i : Player) format(eString, sizeof(eString), "Administrator '%s' has been reseted all Clans losts!", PN(playerid)), SCM(i, ABLUE, eString), PlayerPlaySound(i,1057,0.0,0.0,0.0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	UpdateClan3D(), AdminCMD(playerid, "RESETLOSTS");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:editclan(ESS)
{
	if(sscanf(params, "s[24]uI(-1)", params[0], params[1], params[2]))
	{
 		SendUsage(playerid, "/editclan [Points/Level/EXP/Capture/Deaths/Kills/Wins/Losts] [ID/Name] [Amount]");
 		return true;
	}
	else if(!IsPlayerConnected(params[1])) return Error(playerid, 10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(params[0], "points", true) == 0)
 	{
 	    if(PlayerInfo[params[1]][ClanID] == 0) return SendError(playerid, "This player are not in clan!");
 	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Clan[PlayerInfo[params[1]][ClanID]][ClanPoints] = params[2];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FormatMSG(playerid, ABLUE, "You setted clan %s clan points to '%d'!", Clan[PlayerInfo[params[1]][ClanID]][ClanName], params[2]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
 	}
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(params[0], "level", true) == 0)
 	{
 	    if(PlayerInfo[params[1]][ClanID] == 0) return SendError(playerid, "This player are not in clan!");
 	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Clan[PlayerInfo[params[1]][ClanID]][ClanLevel] = params[2];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FormatMSG(playerid, ABLUE, "You setted clan %s clan level to '%s'!", Clan[PlayerInfo[params[1]][ClanID]][ClanName], ClanType(PlayerInfo[params[1]][ClanID]));
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
 	}
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(params[0], "exp", true) == 0)
 	{
 	    if(PlayerInfo[params[1]][ClanID] == 0) return SendError(playerid, "This player are not in clan!");
 	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Clan[PlayerInfo[params[1]][ClanID]][EXP] = params[2];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FormatMSG(playerid, ABLUE, "You setted clan %s clan EXP to '%d'!", Clan[PlayerInfo[params[1]][ClanID]][ClanName], params[2]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
 	}
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(params[0], "capture", true) == 0)
 	{
 	    if(PlayerInfo[params[1]][ClanID] == 0) return SendError(playerid, "This player are not in clan!");
 	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Clan[PlayerInfo[params[1]][ClanID]][ClanCaptures] = params[2];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FormatMSG(playerid, ABLUE, "You setted clan %s clan captures to '%d'!", Clan[PlayerInfo[params[1]][ClanID]][ClanName], params[2]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
 	}
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(params[0], "deaths", true) == 0)
 	{
 	    if(PlayerInfo[params[1]][ClanID] == 0) return SendError(playerid, "This player are not in clan!");
 	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Clan[PlayerInfo[params[1]][ClanID]][ClanDeaths] = params[2];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    FormatMSG(playerid, ABLUE, "You setted clan %s clan deaths to '%d'!", Clan[PlayerInfo[params[1]][ClanID]][ClanName], params[2]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
 	}
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(params[0], "kills", true) == 0)
	{
	    if(PlayerInfo[params[1]][ClanID] == 0) return SendError(playerid, "This player are not in clan!");
 	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Clan[PlayerInfo[params[1]][ClanID]][ClanKills] = params[2];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    FormatMSG(playerid, ABLUE, "You setted clan %s clan kills to '%d'!", Clan[PlayerInfo[params[1]][ClanID]][ClanName], params[2]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
 	}
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(params[0], "wins", true) == 0)
 	{
 	    if(PlayerInfo[params[1]][ClanID] == 0) return SendError(playerid, "This player are not in clan!");
 	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Clan[PlayerInfo[params[1]][ClanID]][Wins] = params[2];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    FormatMSG(playerid, ABLUE, "You setted clan %s clan wins to '%d'!", Clan[PlayerInfo[params[1]][ClanID]][ClanName], params[2]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
 	}
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(params[0], "losts", true) == 0)
 	{
 	    if(PlayerInfo[params[1]][ClanID] == 0) return SendError(playerid, "This player are not in clan!");
 	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Clan[PlayerInfo[params[1]][ClanID]][Losts] = params[2];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    FormatMSG(playerid, ABLUE, "You setted clan %s clan losts to '%d'!", Clan[PlayerInfo[params[1]][ClanID]][ClanName], params[2]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
 	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:clan(playerid)
{
	new String[2048];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(String, "{05C81F}Fondator:\n\
					{FF0000}/settings {FFFFFF}- modifica diferite setari generale ale clanului.\n\n\
					{05C81F}Lideri:\n\
					{FF0000}/capture start {FFFFFF}- incepe un razboi de teritoriu unde este posibil.\n\
					{FF0000}/refreshall {FFFFFF}- reimprospateaza tuturor membrilor culoarea, armele si altele.\n\
					{FF0000}/teamwar {FFFFFF}- incepe un razboi pe echipe ({FF0000}tier 2{FFFFFF}).\n\n\
					{05C81F}Co-Lideri:\n\
					{FF0000}/cscreen {FFFFFF}- arata un mesaj pe ecran tuturor membrilor.\n\
					{FF0000}/invite {FFFFFF}- invita un jucator in clan.\n\
					{FF0000}/ckick {FFFFFF}- elimina un jucator din clan.\n\
					{FF0000}/setcskin {FFFFFF}- seteaza un skin preferential unui membru.\n\
					{FF0000}/setrank {FFFFFF}- seteaza rankul unui membru din clan.\n\
					{FF0000}/capture stop {FFFFFF}- opreste un razboi de teritoriu acolo unde este posibil.\n\n\
					{05C81F}Toti membrii:\n\
					{FF0000}/cinfo {FFFFFF}- informati personalizate despre un clan.\n\
					{FF0000}/cstats {FFFFFF}- urmareste-ti statisticile personale din clan.\n\
					{FF0000}/cm {FFFFFF}- vezi care sunt membrii online din clan.\n\
					{FF0000}/clanjobs {FFFFFF}- castiga diverse premii facand misiuni pentru clan.\n\
					{FF0000}/arena {FFFFFF}- arena de death match pentru membri din clanuri.\n\
					{FF0000}/lclan {FFFFFF}- paraseste clan-ul, actiune ireversibila.\n\
					{FF0000}!text {FFFFFF}- pentru a folosi chatul privat al clanului sau al aliatilor.\n\n\
					{05C81F}Comenzi aditionale:\n\
					{FF0000}/top {FFFFFF}- pentru a vedea cele mai bune clanuri, si nu numai.\n\n\
					{FFFFFF}Iti poti creea propriul clan, si poti lupta pentru suprematie folosind {FF0000}/CreateClan{FFFFFF}!\n\
					{FFFFFF}Cele mai bune clanuri pot fi vazute in {FF0000}/top {FFFFFF}sau online pe {FF0000}"SERVER_WEBSITE"/clans{FFFFFF}!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_EMPTY, MSGBOX, "Despre comenzile clanurilor", String, "Inchide", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:createclan(playerid)
{
	new String[2048];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][ClanID] != 0) return SendError(playerid, "You are in a Clan! Leave your current clan (/lclan) to create a clan!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][StatsNote] >= 4)
	{
		format(String, sizeof(String), "{FFFFFF}Salut {FF0000}%s{FFFFFF}!\n\n\
									    {FFFFFF}Ai decis sa iti creezi propriul clan!\n\
									    {FFFFFF}Iti vom prezenta cateva optiuni si informatii despre clan-uri!\n\n\
									    {FFFFFF}- Poti invita membrii in clan folosind comanda {FFFF00}/invite [Name/ID] {FFFFFF}incepand cu rank-ul de Co-Leader!\n\
									    {FFFFFF}- O sa poti sa faci duele intre clan-uri folosind comanda {FFFF00}/teamwar [ID Clan or ID Player] {FFFFFF} incepand de la rank-ul de Leader!\n\
									    {FFFFFF}- O sa poti sa incepi razboaie intre Clanuri cat si Clanuri folosind comanda {FFFF00}/capture {FFFFFF}incepand cu rank-ul de Co-Leader!\n\
									    {FFFFFF}Iar pentru alte detalii despre clanuri foloseste comanda {FF0000}/clan {FFFFFF}si incepe sa inveti despre clanuri!\n\n\
									    {FF0000}Introdu mai jos numele clan-ului pentru a continua:", PN(playerid));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_CREATECLAN, INPUT, "{FFFFFF}Create Clan{FF0000} - Alege numele", String, "Continua", "Inchide");
	}
	else return SendError(playerid, "You need to be 4/10 Stats Note to use this command!");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:clanjob(playerid)
{
    if(PlayerInfo[playerid][ClanID] == 0) return SendError(playerid, "You are not member of any clan!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new String[512];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, sizeof(String), "{FF0000}%s {FFFF00}- Clan (10 Points, 2 Captures, #10 Top)\n\n\
                                    {FFFF00}Momental nu sunt disponibile joburi pentru clanul tau or ai finalzat toate joburile!\n\
									{FFFF00}Te rugam sa astepti {FF0000}00:59:30 minute {FFFF00}pana cand joburile se vor re-activa iar!", PlayerInfo[playerid][ClanName]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_EMPTY, MSGBOX, "Clan Jobs", String, "Inchide", "");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:settings(ESS)
{
	if(PlayerInfo[playerid][ClanID] != 0)
	{
	    if(PlayerInfo[playerid][c_Rank] < 4) return SendError(playerid, "You are not Clan Owner to use this command!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    new String[512];
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(String, sizeof(String),
		"Option             \tDescription\n\
		{FF0000}Name        \t{FFFFFF}Change the name of your Clan\n\
		{FF0000}Skin        \t{FFFFFF}Change Clan skin\n\
		{FF0000}Color       \t{FFFFFF}Change Clan color\n\
		{FF0000}Weapons     \t{FFFFFF}Change weapon sets\n\
		{FF0000}Reset       \t{FFFFFF}Reset members\n\
		{FFFF00}Update Clan \t{FFFFFF}Update your clan to stage '{FF0000}Premium{FFFFFF}'!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_CLAN_SETTINGS, HEADERS, "{FF0000}Clan Settings", String, "Select", "Cancel");
		return true;
	}
	if(PlayerInfo[playerid][GangID] != 0)
	{
	    if(PlayerInfo[playerid][g_Rank] < 8) return SendError(playerid, "You are not Gang Owner to use this command!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    new String[512];
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(String, sizeof(String),
		"Option             \tDescription\n\
		{FF0000}Name        \t{FFFFFF}Change the name of your Gang\n\
		{FF0000}Skin        \t{FFFFFF}Change Gang skin\n\
		{FF0000}Color       \t{FFFFFF}Change Gang color\n\
		{FF0000}Weapons     \t{FFFFFF}Change weapon sets\n\
		{FF0000}Reset       \t{FFFFFF}Reset members");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_GSETTINGS, HEADERS, "{FF0000}Gang Settings", String, "Select", "Cancel");
		return true;
	}
    else return SendError(playerid, "You are not in Clan or Gang to use this command!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:deleteclan(playerid)
{
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 8);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new clanID = GetClanID(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(clanID != -1)
	{
		foreach(new i : Player)
	    {
			if(PlayerInfo[i][ClanID] == clanID)
			{
				new String[128]; eQuery[0] = EOS;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String, sizeof(String), "Administrator %s has been deleted clan %s!", PN(playerid), Clan[clanID][ClanName]);
				SCMALL(ABLUE, String);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    PlayerInfo[i][c_Rank] = 0, PlayerInfo[i][c_Kills] = 0, PlayerInfo[i][c_Deaths] = 0, PlayerInfo[i][c_Captures] = 0, PlayerInfo[i][c_Points] = 0, PlayerInfo[i][c_Skin] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				Clan[clanID][ClanDeaths] = 0, Clan[clanID][ClanCaptures] = 0, Clan[clanID][EXP] = 0, Clan[clanID][ClanKills] = 0, Clan[clanID][Skin] = 0, Clan[clanID][ClanPoints] = 0;
				Clan[clanID][ClanLevel] = 0, Clan[clanID][Losts] = 0, Clan[clanID][Wins] = 0, Clan[clanID][Capturing] = 0, Clan[clanID][MaxDeaths] = 0, Clan[clanID][TurfingClan] = 0;
				Clan[clanID][CaptureTime] = 0, Clan[clanID][IsAttacked] = 0, Clan[clanID][c_CaptureJoins] = 0, Clan[clanID][CapturingClan] = 0, Clan[clanID][ID] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				for(new l = 0; l < 7; l++) Clan[clanID][Weapon][l] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				for(new l = 0; l < 4; l++) Clan[clanID][ClanPos][l] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(Clan[clanID][Since], 30, "-1");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(Clan[clanID][ClanName], 30, "-1");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `ClanPoints` = '0', `ClanKills` = '0', `ClanDeaths` = '0', `ClanName` = 'None', `ClanCaptures` = '0', `ClanID` = '0' WHERE `ClanID` = '%d'", clanID);
			    mysql_tquery(SQL, eQuery, "", "");
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `Clans` WHERE `ID` = '%d'", clanID);
			    mysql_tquery(SQL, eQuery, "", "");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    DestroyDynamic3DTextLabel(ClanPickUp3D[clanID]), DestroyDynamicPickup(ClanPickUp[clanID]);
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    PlayerInfo[i][ClanID] = 0, SetPlayerSkin(i, 217), SpawnPlayer(i), RefreshColors(i), ResetPlayerWeapons(i);
			}
		}
	}
	else return SendError(playerid, "You are not in Clan PickUp to use this command!");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:alliance(ESS)
{
    new rParam[10], rParam2[10];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "You are not in any gang to use this command!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][g_Rank] < 8) return SendError(playerid, "You are not a gang owner of this gang!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "s[10]S()[20]", rParam, rParam2)) return SendUsage(playerid, "/alliance [start/join/info/stop]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(rParam, "start", true) == 0)
	{
	    if(GangInfo[PlayerInfo[playerid][GangID]][AllianceID] == 0)
	    {
	        new gID;
	    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(sscanf(rParam2, "d", gID)) return SendUsage(playerid, "/alliance start [GangID]");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(gID < 1 || gID > TotalGangs) return SendError(playerid, "Invalid Gang ID!");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(gID == PlayerInfo[playerid][GangID]) return SendError(playerid, "You cannot alliance with your gang!");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(GangInfo[gID][AllianceID] >= 1) return SendError(playerid, "This gang is already allied with any gang!");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    FormatMSG(playerid, ORANGE, "ALLIANCE-INFO:{FFFFFF} You has invited{FF0000} %s gang {FFFFFF}to make alliance with your gang{FF0000}!", GangInfo[gID][GangName]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    for(new d = 0; d < MAX_GANGS; d++)
			{
				if(GangInfo[d][AllianceInv] == PlayerInfo[playerid][GangID])
		    	{
					GangInfo[d][AllianceInv] = 0;
				}
		    }
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    GangInfo[gID][AllianceInv] = PlayerInfo[playerid][GangID];
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    foreach(new i: Player)
		    {
		        if(PlayerInfo[i][GangID] == gID)
		        {
		      		if(PlayerInfo[i][g_Rank] == 8)
		      		{
		      		    FormatMSG(i, ORANGE, "ALLIANCE-INFO:{FFFFFF} Gang{FF0000} %s{FFFFFF}has been invited your to make alliance! | Use {FF0000}/alliance join{FFFFFF} to accept{FF0000}!", GangInfo[PlayerInfo[playerid][GangID]][GangName]);
		      		}
		        }
		    }
	    }
	    else return SendError(playerid, "Your gang is already allied with any gang | Use /alliance stop to cancel the alliance!");
	}
	if(strcmp(rParam, "join", true) == 0)
	{
	    if(GangInfo[PlayerInfo[playerid][GangID]][AllianceID] == 0)
	    {
	        if(GangInfo[PlayerInfo[playerid][GangID]][AllianceInv] >= 1)
	        {
	            foreach(new i: Player)
	            {
	                if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID])
	                {
                 		GangInfo[PlayerInfo[playerid][GangID]][AllianceID] = GangInfo[PlayerInfo[playerid][GangID]][AllianceInv];
						FormatMSG(i, ORANGE, "ALLIANCE-INFO:{FF0000} %s gang {FFFFFF}is your new alliance{FF0000}!", GangInfo[GangInfo[PlayerInfo[playerid][GangID]][AllianceInv]][GangName]);
	                }
	                if(PlayerInfo[i][GangID] == GangInfo[PlayerInfo[playerid][GangID]][AllianceInv])
	                {
	                    GangInfo[GangInfo[PlayerInfo[playerid][GangID]][AllianceInv]][AllianceID] = PlayerInfo[playerid][GangID];
	                    FormatMSG(i, ORANGE, "ALLIANCE-INFO:{FF0000} %s gang {FFFFFF}is your new alliance{FF0000}!", GangInfo[PlayerInfo[playerid][GangID]][GangName]);
	                }
				}
				OnUpdate(1);
	        }
	        else return SendError(playerid, "Your gang has not invited to any alliance!");
	    }
	    else return SendError(playerid, "Your gang is already allied with any gang | Use /alliance stop to cancel the alliance!");
	}
	if(strcmp(rParam, "info", true) == 0)
	{
		if(GangInfo[PlayerInfo[playerid][GangID]][AllianceID] >= 1)
		{
		    FormatMSG(playerid, GREEN3, "ALLIANCE-INFO:{FFFFFF} Your gang alliance partener is:{FF0000} %s{FFFFFF}!", GangInfo[GangInfo[PlayerInfo[playerid][GangID]][AllianceID]][GangName]);
		}
		else return SendError(playerid, "Your gang is not allied with any gang | User /alliance start to start a alliance with any gang!");
	}
	if(strcmp(rParam, "stop", true) == 0)
	{
	    if(GangInfo[PlayerInfo[playerid][GangID]][AllianceID] >= 1)
		{
			foreach(new i: Player)
			{
			    if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID])
			    {
			        if(PlayerInfo[i][g_Rank] >= 8)
			        {
			            SCM(i, ORANGE, "ALLIANCE-INFO:{FFFFFF} Your gang alliance has been stopped{FF0000}!");
			        }
			    }
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			foreach(new i: Player)
			{
			    if(PlayerInfo[i][GangID] == GangInfo[PlayerInfo[playerid][GangID]][AllianceID])
			    {
			        if(PlayerInfo[i][g_Rank] >= 8)
			        {
			        	SCM(i, ORANGE, "ALLIANCE-INFO:{FFFFFF} Your gang alliance has been stopped{FF0000}!");
			        }
			    }
			}
			GangInfo[GangInfo[PlayerInfo[playerid][GangID]][AllianceID]][AllianceID] = 0;
			GangInfo[PlayerInfo[playerid][GangID]][AllianceID] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			OnUpdate(1);
		}
		else return SendError(playerid, "You cannot use this command if your gang is not allied with any gang!");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:battle(ESS)
{
    new clanID = GetClanID(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][God] == 1) return SendErrorEx(playerid, "WARNING! Disable GODMODE to use this command type (/god) and disable it!");
    if(PlayerInfo[playerid][FW] == 1) return SendErrorEx(playerid, "WARNING! Disable FIRE DEAGLE to use this command type (/fw) and disable it!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][ClanID] != 0)
    {
		if(clanID != -1)
		{
			if(Clan[PlayerInfo[playerid][ClanID]][ClanLevel] == 2)
			{
				CaptureClan(playerid, clanID);
			}
			else return SendError(playerid, "Your clan are not be are stage 'Premium' to use this command!");
		}
		else return SendError(playerid, "You are not in Clan PickUP to use this command!");
	}
	else return SendError(playerid, "You are not in Clan to use this command!");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:capture(ESS)
{
	if(sscanf(params, "s[24]", params[0])) return SendUsage(playerid, "/capture [start/join/info/stop]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][GangID] != 0)
	{
 		if(strcmp(params[0], "start", true) == 0)
		{
		    if(PlayerInfo[playerid][g_Rank] >= 7)
		    {
				if(IsPlayerInTerritory(playerid, Teritories[1][minx], Teritories[1][miny], Teritories[1][maxx], Teritories[1][maxy])) StartCapture(playerid, 1);
				else if(IsPlayerInTerritory(playerid, Teritories[2][minx], Teritories[2][miny], Teritories[2][maxx], Teritories[2][maxy])) StartCapture(playerid, 2);
				else if(IsPlayerInTerritory(playerid, Teritories[3][minx], Teritories[3][miny], Teritories[3][maxx], Teritories[3][maxy])) StartCapture(playerid, 3);
				else if(IsPlayerInTerritory(playerid, Teritories[4][minx], Teritories[4][miny], Teritories[4][maxx], Teritories[4][maxy])) StartCapture(playerid, 4);
				else if(IsPlayerInTerritory(playerid, Teritories[5][minx], Teritories[5][miny], Teritories[5][maxx], Teritories[5][maxy])) StartCapture(playerid, 5);
				else if(IsPlayerInTerritory(playerid, Teritories[6][minx], Teritories[6][miny], Teritories[6][maxx], Teritories[6][maxy])) StartCapture(playerid, 6);
				else return SendError(playerid, "You are not in gang teritory!");
			}
			else return SendError(playerid, "You are not leader in gang to use this command!");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(strcmp(params[0], "join", true) == 0)
		{
	     	if(IsPlayerInTerritory(playerid, Teritories[1][minx], Teritories[1][miny], Teritories[1][maxx], Teritories[1][maxy])) JoinCapture(playerid, 1);
			else if(IsPlayerInTerritory(playerid, Teritories[2][minx], Teritories[2][miny], Teritories[2][maxx], Teritories[2][maxy])) JoinCapture(playerid, 2);
			else if(IsPlayerInTerritory(playerid, Teritories[3][minx], Teritories[3][miny], Teritories[3][maxx], Teritories[3][maxy])) JoinCapture(playerid, 3);
			else if(IsPlayerInTerritory(playerid, Teritories[4][minx], Teritories[4][miny], Teritories[4][maxx], Teritories[4][maxy])) JoinCapture(playerid, 4);
			else if(IsPlayerInTerritory(playerid, Teritories[5][minx], Teritories[5][miny], Teritories[5][maxx], Teritories[5][maxy])) JoinCapture(playerid, 5);
			else if(IsPlayerInTerritory(playerid, Teritories[6][minx], Teritories[6][miny], Teritories[6][maxx], Teritories[6][maxy])) JoinCapture(playerid, 6);
			else return SendError(playerid, "You are not in gang teritory!");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(strcmp(params[0], "info", true) == 0)
		{
		    if(GangInfo[PlayerInfo[playerid][GangID]][CapturingGang] == 1)
		    {
		        new String[512];
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		        format(String, 512, "Gangul tau ataca un teritoriu al gang-ului: {FFFFFF}%s", GetGangName(GangInfo[PlayerInfo[playerid][GangID]][GangTurfe]));
				SCM(playerid, GREEN3, String);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				String[0] = 0;
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String, 512, "Membri alaturati: {FFFFFF}%d{33AA33}, Deaths: {FFFFFF}%d{FF0000}/%d{33AA33}, Timp ramas: {FF0000}%s", GangInfo[PlayerInfo[playerid][GangID]][CapturesJoins], GangInfo[PlayerInfo[playerid][GangID]][c_Deaths], GangInfo[PlayerInfo[playerid][GangID]][CapturesJoins]+1, TimeConvert(GangInfo[PlayerInfo[playerid][GangID]][CaptureTimeTurf]));
				SCM(playerid, GREEN3, String);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String, 512, "Daca gangul inamic face {FF0000}%d {33AA33}kills pe membrii alaturati, gangul tau va esua in a captura teritoriul!", GangInfo[PlayerInfo[playerid][GangID]][CapturesJoins]+1);
				SCM(playerid, GREEN3, String);
		    }
		    else if(GangInfo[PlayerInfo[playerid][GangID]][AttackBy] >= 1)
		    {
		        new String[512];
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    format(String, 512, "Un teritoriu de al gang-ului tau este atacat de gang-ul: {FFFFFF}%s", GetGangName(GangInfo[PlayerInfo[playerid][GangID]][AttackBy]));
				SCM(playerid, GREEN3, String);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String, 512, "Membri alaturati: {FFFFFF}%d{33AA33}, Deaths: {FFFFFF}%d{FF0000}/%d{33AA33}, Timp ramas: {FF0000}%s", GangInfo[GangInfo[PlayerInfo[playerid][GangID]][AttackBy]][CapturesJoins], GangInfo[GangInfo[PlayerInfo[playerid][GangID]][AttackBy]][c_Deaths], GangInfo[PlayerInfo[playerid][GangID]][CapturesJoins]+1, TimeConvert(GangInfo[GangInfo[PlayerInfo[playerid][GangID]][AttackBy]][CaptureTimeTurf]));
				SCM(playerid, GREEN3, String);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				format(String, 512, "Daca gangul tau face {FF0000}%d {33AA33}kills pe membrii din gang-ul inamic, gang ul tau va castiga in a captura teritoriul!", GangInfo[GangInfo[PlayerInfo[playerid][GangID]][AttackBy]][CapturesJoins]+1);
				SCM(playerid, GREEN3, String);
		    }
		    else return SendError(playerid, "You can't get details from capture if your gang is not in capture/attack mode!");
		}
	}
 	else return SendError(playerid, "You are not in Gang to use this command!");
 	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:clans(playerid)
{
	new Count, String[1048], String2[1024], String3[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_query(SQL, "SELECT * FROM `Clans` ORDER BY `Points` DESC");
	new total; cache_get_row_count(total);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(total == 0) return SendError(playerid, "No clans found in database!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	for(new i; i < total; i++)
	{
		new cName[30], ByPoints, GetLosts, GetWins, GetColor;
		CACHE(i, "Points", ByPoints);
		CACHE(i, "Losts", GetLosts);
		CACHE(i, "Wins", GetWins);
		CACHE(i, "Color", GetColor);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CONTENT(i, "Name", cName);
	 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	format(String2, sizeof(String2), "%s\n{%06x}%s\t%d\t%d\t%d/5", String2, GetColor >>> 8, cName, ByPoints, GetWins, GetLosts);
 		format(String, sizeof(String), "\tName\tPoints\tWins\tLosts\n%s", String2);
	 	Count++;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String3, sizeof(String3), "{FFFFFF}Show All Clans - {FF0000}%d {FFFFFF}Total Clans!", total);
	SPD(playerid, DIALOG_EMPTY, HEADERS, String3, String, "Close", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:arena(playerid)
{
    if(PlayerInfo[playerid][ClanID] == 0) return SendError(playerid, "You are not member of any clan!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new RandomSpawn = random(5);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    switch(RandomSpawn)
	{
    	case 0: SetPlayerPos(playerid, 476.4690,3550.9353,10.8377);
    	case 1: SetPlayerPos(playerid, 423.7073,3586.2461,10.8377);
    	case 2: SetPlayerPos(playerid, 445.7748,3605.4006,10.8377);
    	case 3: SetPlayerPos(playerid, 479.8489,3567.6089,10.8377);
    	case 4: SetPlayerPos(playerid, 435.1929,3586.5701,10.8377);
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    ResetPlayerWeapons(playerid);
    GivePlayerWeapon(playerid, Clan[PlayerInfo[playerid][ClanID]][Weapon][0], 9999);
    GivePlayerWeapon(playerid, Clan[PlayerInfo[playerid][ClanID]][Weapon][1], 9999);
    GivePlayerWeapon(playerid, Clan[PlayerInfo[playerid][ClanID]][Weapon][2], 9999);
    GivePlayerWeapon(playerid, Clan[PlayerInfo[playerid][ClanID]][Weapon][3], 9999);
    GivePlayerWeapon(playerid, Clan[PlayerInfo[playerid][ClanID]][Weapon][4], 9999);
    GivePlayerWeapon(playerid, Clan[PlayerInfo[playerid][ClanID]][Weapon][5], 9999);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	SetPlayerHealth(playerid, 100.0), SetPlayerVirtualWorld(playerid, 2333), SetPlayerArmour(playerid, 100.0);
  	PlayerInfo[playerid][ClanArena] = 1, PlayerInfo[playerid][God] = 0, PlayerInfo[playerid][InDM] = 1;
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:teamwar(playerid)
{
    if(PlayerInfo[playerid][ClanID] == 0) return SendError(playerid, "You are not member of any clan!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:clanspawn(playerid)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if(PlayerInfo[playerid][ClanID] == 0) return SendError(playerid, "You are not member of any clan!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Clan[PlayerInfo[playerid][ClanID]][ClanPos][0] != 0.0 && Clan[PlayerInfo[playerid][ClanID]][ClanPos][1] != 0.0) return SendError(playerid, "You can use this command just once you contact a founder for more details!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < MAX_SPAWN_ZONES; i++)
	if(IsPlayerInRangeOfPoint(playerid, 200.0, SpawnZones[i][sPosX], SpawnZones[i][sPosY], SpawnZones[i][sPosZ])) return ErrorSpawnSet(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_GANGS; i++)
	if(IsPlayerInRangeOfPoint(playerid, 200.0, GangInfo[i][GangX], GangInfo[i][GangY], GangInfo[i][GangZ])) return ErrorSpawnSet(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_CLANS; i++)
	if(IsPlayerInRangeOfPoint(playerid, 100.0, Clan[i][ClanPos][0], Clan[i][ClanPos][1], Clan[i][ClanPos][2])) return ErrorSpawnSet(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Clan[PlayerInfo[playerid][ClanID]][ClanLevel] == 2) return SendError(playerid, "Your clan stage is not Premium to use this command!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][c_Rank] > 4) return SendError(playerid, "You must to be a Owner to use this command!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "Clan Spawn - %s!", PlayerInfo[playerid][ClanName]);
	SPD(playerid, DIALOG_CLAN_SPAWN, MSGBOX, String, "{FFCC00}Do you want to take your clan's position here?\n{FF0000}Once you have added your position in this place, this command can no longer be irreversible!\n\nIf you have misplaced your position, contact a server founder and help you move your clan position!", "Set", "Cancel");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:refresh(ESS)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][ClanID] != 0)
	{
	    if(PlayerInfo[playerid][c_Rank] < 3) return SendError(playerid, "You need to be a Leader to use this command!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(sscanf(params, "u", params[0])) return SendUsage(playerid, "/refresh [ID/Name]");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  		if(!IsPlayerConnected(params[0])) return Error(playerid, 10);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[params[0]][ClanID] == PlayerInfo[playerid][ClanID])
		{
 			ResetPlayerWeapons(params[0]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GivePlayerWeapon(params[0], Clan[PlayerInfo[params[0]][ClanID]][Weapon][0], 9999);
			GivePlayerWeapon(params[0], Clan[PlayerInfo[params[0]][ClanID]][Weapon][1], 9999);
			GivePlayerWeapon(params[0], Clan[PlayerInfo[params[0]][ClanID]][Weapon][2], 9999);
			GivePlayerWeapon(params[0], Clan[PlayerInfo[params[0]][ClanID]][Weapon][3], 9999);
			GivePlayerWeapon(params[0], Clan[PlayerInfo[params[0]][ClanID]][Weapon][4], 9999);
			GivePlayerWeapon(params[0], Clan[PlayerInfo[params[0]][ClanID]][Weapon][5], 9999);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            format(String, sizeof(String), "~h~~w~You are refreshed by ~r~%s~w~!", PN(playerid));
			Announce(params[0], String, 5000, 4);
			return true;
		}
		else SendError(playerid, "This player are not member with you in clan!");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(PlayerInfo[playerid][GangID] != 0)
	{
	    if(PlayerInfo[playerid][g_Rank] < 7) return SendError(playerid, "You need to be a Leader to use this command!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(sscanf(params, "u", params[0])) return SendUsage(playerid, "/refresh [ID/Name]");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  		if(!IsPlayerConnected(params[0])) return Error(playerid, 10);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[params[0]][GangID] == PlayerInfo[playerid][GangID])
		{
		    ResetPlayerWeapons(params[0]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GivePlayerWeapon(params[0], GangInfo[PlayerInfo[params[0]][GangID]][GangWeapon1], 9999);
			GivePlayerWeapon(params[0], GangInfo[PlayerInfo[params[0]][GangID]][GangWeapon2], 9999);
			GivePlayerWeapon(params[0], GangInfo[PlayerInfo[params[0]][GangID]][GangWeapon3], 9999);
			GivePlayerWeapon(params[0], GangInfo[PlayerInfo[params[0]][GangID]][GangWeapon4], 9999);
			GivePlayerWeapon(params[0], GangInfo[PlayerInfo[params[0]][GangID]][GangWeapon5], 9999);
			GivePlayerWeapon(params[0], GangInfo[PlayerInfo[params[0]][GangID]][GangWeapon6], 9999);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            format(String, sizeof(String), "~h~~w~You are refreshed by ~r~%s~w~!", PN(playerid));
			Announce(params[0], String, 5000, 4);
			return true;
		}
		else SendError(playerid, "This player are not member with you in gang!");
	}
	else return SendError(playerid, "You are not in Clan or Gang to use this command!");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:setcskin(ESS)
{
    new String[128];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][c_Rank] < 2) return SendError(playerid, "You must to be a Leader to use this command!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "ui", params[0], params[1])) return SendUsage(playerid, "/setcskin [ID/Name] [Skin ID]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0])) return Error(playerid, 10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(params[1] < 1 || params[1] > 311) return SendError(playerid, "Invaild Skin!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][ClanID] != PlayerInfo[playerid][ClanID]) return SendError(playerid, "Player is not in your clan!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerSkin(params[0], params[1]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[params[0]][c_Skin] = params[1];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "Player %s setted your clan skin to %d", PN(playerid), params[1]);
	SCM(params[0], YELLOW, String);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "You setted %s clan skin to %d", PN(params[0]), params[1]);
	SCM(playerid, YELLOW, String);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	UpdatePlayer(PN(params[0]), "ClanSkin", params[1]);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:cstats(ESS) return cmd_cinfo(playerid, params);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:cinfo(ESS)
{
	if(!sscanf(params, "u", params[0]))
	{
	    if(IsPlayerConnected(params[0]) && PlayerInfo[params[0]][ClanID] != 0) return SPD(playerid, DIALOG_EMPTY, MSGBOX, "Player clan statistics!", ShowClanInfo(params[0]), "Close", "");
	    else return SendError(playerid, "This player is not connected or is not member in any Clan!");
	}
	else
	{
		if(PlayerInfo[playerid][ClanID] != 0) return SPD(playerid, DIALOG_EMPTY, MSGBOX, "Your clan statistics!", ShowClanInfo(playerid), "Close", "");
		else return SendError(playerid, "You are not member in any Clan!");
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:ckick(ESS)
{
	if(PlayerInfo[playerid][c_Rank] < 2) return SendError(playerid, "You need to be Co-Leader to use this command!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "us[56]", params[0], params[1])) return SendUsage(playerid, "/ckick [Name/ID] [Reason]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][ClanID] != PlayerInfo[playerid][ClanID]) return SendError(playerid, "The user is in other clan!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][c_Rank] > PlayerInfo[playerid][c_Rank]) return SendError(playerid, "You can't kick this player from clan!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[params[0]][c_Rank] == 4) return SendError(playerid, "You are not allowed to kick this player!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strlen(params[1]) < 2 || strlen(params[1]) > 56) return SendError(playerid, "Invalid reason size !");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID])
	    {
			format(eString, 512, "%s has been kicked from clan by %s. Reason: %s!", PN(params[0]), PN(playerid), params[1]);
		  	SCM(i, YELLOW, eString);
		}
	}
	return RemovePlayerFromClan(params[0]);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:refreshall(playerid)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][ClanID] != 0)
	{
		if(PlayerInfo[playerid][c_Rank] < 3) return SendError(playerid, "You need to be a Leader to use this command!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		foreach(new i: Player)
		{
			if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID])
			{
	 			ResetPlayerWeapons(playerid);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				GivePlayerWeapon(i, Clan[PlayerInfo[playerid][ClanID]][Weapon][0], 9999);
				GivePlayerWeapon(i, Clan[PlayerInfo[playerid][ClanID]][Weapon][1], 9999);
				GivePlayerWeapon(i, Clan[PlayerInfo[playerid][ClanID]][Weapon][2], 9999);
				GivePlayerWeapon(i, Clan[PlayerInfo[playerid][ClanID]][Weapon][3], 9999);
				GivePlayerWeapon(i, Clan[PlayerInfo[playerid][ClanID]][Weapon][4], 9999);
				GivePlayerWeapon(i, Clan[PlayerInfo[playerid][ClanID]][Weapon][5], 9999);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            format(String, sizeof(String), "~h~~w~You are refreshed by ~r~%s~w~!", PN(playerid));
				Announce(i, String, 5000, 4);
				return true;
			}
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(PlayerInfo[playerid][GangID] != 0)
	{
	    if(PlayerInfo[playerid][g_Rank] < 7) return SendError(playerid, "You need to be a Leader to use this command!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		foreach(new i: Player)
		{
		    if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID])
			{
			    ResetPlayerWeapons(i);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				GivePlayerWeapon(i, GangInfo[PlayerInfo[playerid][GangID]][GangWeapon1], 9999);
				GivePlayerWeapon(i, GangInfo[PlayerInfo[playerid][GangID]][GangWeapon2], 9999);
				GivePlayerWeapon(i, GangInfo[PlayerInfo[playerid][GangID]][GangWeapon3], 9999);
				GivePlayerWeapon(i, GangInfo[PlayerInfo[playerid][GangID]][GangWeapon4], 9999);
				GivePlayerWeapon(i, GangInfo[PlayerInfo[playerid][GangID]][GangWeapon5], 9999);
				GivePlayerWeapon(i, GangInfo[PlayerInfo[playerid][GangID]][GangWeapon6], 9999);
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            format(String, sizeof(String), "~h~~w~You are refreshed by ~r~%s~w~!", PN(playerid));
				Announce(i, String, 5000, 4);
				return true;
			}
		}
	}
	else return SendError(playerid, "You are not in Clan or Gang to use this command!");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:loot(playerid)
{
	new gangid = PlayerInfo[playerid][GangID], String[128]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new gangid2 = GetGangID(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(gangid2 != -1)
	{
	    if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "You are not member of any Gang!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	   	if(GangInfo[gangid][g_GPoints] == 0) return SendError(playerid, "No loot available for you right now! try again!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][g_Points] >= GangInfo[gangid][g_GPoints])
		{
			PlayerInfo[playerid][Money] += GangInfo[gangid][g_Money];
			PlayerInfo[playerid][Coins] += GangInfo[gangid][g_Coins];
			UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] + GangInfo[gangid][g_Gems]);
			PlayerInfo[playerid][Gems] += GangInfo[gangid][g_Gems];
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			FormatMSG(playerid, YELLOW, "You won this competition and you received $%d, %d Coins, %d Gems!", GangInfo[gangid][g_Money], GangInfo[gangid][g_Coins], GangInfo[gangid][g_Gems]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			GangInfo[gangid][g_Money] = 0;
			GangInfo[gangid][g_Coins] = 0;
			GangInfo[gangid][g_Gems] = 0;
			GangInfo[gangid][g_GPoints] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Gangs` SET `GangMoney` = '%d', `GangCoins` = '%d', `GangGems` = '%d', `GangLPoints` = '%d' WHERE `ID` = '%d'", GangInfo[gangid][g_Money], GangInfo[gangid][g_Coins], GangInfo[gangid][g_Gems], GangInfo[gangid][g_GPoints], gangid);
			mysql_tquery(SQL, eQuery, "", "");
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(String, sizeof(String), "{FF9900}Gang Loot\n{FFFFFF}Money: {FF0000}$%d{FFFFFF}, Coins: {FF0000}%d{FFFFFF}, Gems: {FF0000}%d\n{FFFFFF}/loot", GangInfo[gangid][g_Money], GangInfo[gangid][g_Coins], GangInfo[gangid][g_Gems]);
    		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			UpdateDynamic3DTextLabelText(Gang3D[gangid], ~1, String);
		}
		else return SendError(playerid, "No loot for you right now! Collect more GP for your gang and try again!");
	}
 	else return SendError(playerid, "You are not in a Gang Loot PickUP!"); return true;
}
//------------------------------------------------------------------------------
CMD:gloot(ESS)
{
    new gangid = PlayerInfo[playerid][GangID];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new String[1024], Float:X, Float:Y, Float:Z, gloot; GetPlayerPos(playerid, X, Y, Z); eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "You are not member of any Gang!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "iiii", GangInfo[gangid][g_Money], GangInfo[gangid][g_Coins], GangInfo[gangid][g_Gems], GangInfo[gangid][g_GPoints])) return SendUsage(playerid, "/gloot [Money] [Coins] [Gems] [Gang Points]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(GangInfo[gangid][g_Money] < 1 || GangInfo[gangid][g_Money] > 999999999) return SendError(playerid, "Invalid Cash Amount! (1 - 999.999.999)");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(GangInfo[gangid][g_Coins] < 1 || GangInfo[gangid][g_Coins] > 50000) return SendError(playerid, "Invalid Coins Amount (1 - 50.000)");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(GangInfo[gangid][g_Gems] < 1 || GangInfo[gangid][g_Gems] > 1000) return SendError(playerid, "Invalid Gems Amount! (1 - 100)");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(GangInfo[gangid][g_GPoints] < 1 || GangInfo[gangid][g_GPoints] > 10000) return SendError(playerid, "Invalid Gang Points Amount (1 - 10000)");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][Money] -= GangInfo[gangid][g_Money];
	PlayerInfo[playerid][Coins] -= GangInfo[gangid][g_Coins];
	UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] - GangInfo[gangid][g_Gems]);
	PlayerInfo[playerid][Gems] -= GangInfo[gangid][g_Gems];
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Gangs` SET `GangMoney` = '%d', `GangCoins` = '%d', `GangGems` = '%d', `GangLPoints` = '%d', `LPosX` = '%.2f', `LPosY` = '%.2f', `LPosZ` = '%.2f' WHERE `ID` = '%d'", GangInfo[gangid][g_Money], GangInfo[gangid][g_Coins], GangInfo[gangid][g_Gems], GangInfo[gangid][g_GPoints], X, Y, Z, gangid);
	mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	FormatMSG(playerid, YELLOW, "A loot added with %d Money, %d Coins, %d Gems, %d Gang Points!", GangInfo[gangid][g_Money], GangInfo[gangid][g_Coins], GangInfo[gangid][g_Gems], GangInfo[gangid][g_GPoints]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "{FF9900}Gang Loot\n{FFFFFF}Money: {FF0000}$%d{FFFFFF}, Coins: {FF0000}%d{FFFFFF}, Gems: {FF0000}%d\n{FFFFFF}/loot", GangInfo[playerid][g_Money], GangInfo[playerid][g_Coins], GangInfo[playerid][g_Gems]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Gang3D[gloot] = CreateDynamic3DTextLabel(String, ~1, X, Y, Z, 30);
    GangPickUP[gloot] = CreateDynamicPickup(1550, 1, X, Y, Z);
	return true;
}
CMD:editloot(ESS)
{
	if(PlayerInfo[playerid][RconType] < 2) return SendError(playerid, "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new JJ[10], Amount, String[1024], gangid = PlayerInfo[playerid][GangID], gangid2 = GetGangID(playerid); eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "You are not member of any Gang!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(gangid2 == -1) return SendError(playerid, "You are not in PickUP to edit gang loot!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "s[10]i", JJ, Amount)) return SendUsage(playerid, "/editloot [Money/Coins/Gems/Points] [Amount]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if(strcmp(JJ, "money", true) == 0)
	{
	   	if(Amount > PlayerInfo[playerid][Money]) return SendError(playerid, "You don't have enough money!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(Amount < 1 || Amount > 999999999) return SendError(playerid, "Invalid Cash Amount! (1 - 999.999.999)");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        PlayerInfo[playerid][Money] -= GangInfo[gangid][g_Money];
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        GangInfo[gangid][g_Money] = Amount;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Gangs` SET `GangMoney` = '%d' WHERE `ID` = '%d'", Amount, gangid);
		mysql_tquery(SQL, eQuery, "", "");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(JJ, "coins", true) == 0)
	{
	   	if(Amount > PlayerInfo[playerid][Coins]) return SendError(playerid, "You don't have enough coins!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(Amount < 1 || Amount > 50000) return SendError(playerid, "Invalid Coins Amount (1 - 50.000)");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        PlayerInfo[playerid][Coins] -= GangInfo[gangid][g_Coins];
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        GangInfo[gangid][g_Coins] = Amount;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Gangs` SET `GangCoins` = '%d' WHERE `ID` = '%d'", Amount, gangid);
		mysql_tquery(SQL, eQuery, "", "");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(JJ, "gems", true) == 0)
	{
	   	if(Amount > PlayerInfo[playerid][Money]) return SendError(playerid, "You don't have enough gems!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(Amount < 1 || Amount > 100) return SendError(playerid, "Invalid Cash Amount! (1 - 100)");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] - GangInfo[gangid][g_Gems]);
        PlayerInfo[playerid][Gems] -= GangInfo[gangid][g_Gems];
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        GangInfo[gangid][g_Gems] = Amount;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Gangs` SET `GangGems` = '%d' WHERE `ID` = '%d'", Amount, gangid);
		mysql_tquery(SQL, eQuery, "", "");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(JJ, "points", true) == 0)
	{
		if(Amount < 1 || Amount > 10000) return SendError(playerid, "Invalid Cash Amount! (1 - 10000)");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        GangInfo[gangid][g_GPoints] = Amount;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Gangs` SET `GangLPoints` = '%d' WHERE `ID` = '%d'", Amount, gangid);
		mysql_tquery(SQL, eQuery, "", "");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "{FF9900}Gang Loot\n{FFFFFF}Money: {FF0000}$%d{FFFFFF}, Coins: {FF0000}%d{FFFFFF}, Gems: {FF0000}%d\n{FFFFFF}/loot", GangInfo[gangid][g_Money], GangInfo[gangid][g_Coins], GangInfo[gangid][g_Gems]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	UpdateDynamic3DTextLabelText(Gang3D[gangid], ~1, String);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:setrank(ESS)
{
    new String[128], String2[128]; eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][ClanID] != 0)
	{
	    if(PlayerInfo[playerid][c_Rank] < 3) return SendError(playerid, "You need to be a Leader to use this command!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(sscanf(params, "u", SetPlayerClanRank)) return SendUsage(playerid, "/setrank [ID/Name]");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(!IsPlayerConnected(SetPlayerClanRank) || SetPlayerClanRank == playerid) return Error(playerid, 3);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[SetPlayerClanRank][ClanID] != PlayerInfo[playerid][ClanID]) return SendError(playerid, "This player is not in your clan!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[SetPlayerClanRank][c_Rank] > PlayerInfo[playerid][c_Rank]) return SendError(playerid, "You are not allowed to change this player rank!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[SetPlayerClanRank][c_Rank] == 4) return SendError(playerid, "You are not allowed to change this player rank!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(String, sizeof(String), "{00CC00}Set {FF0000}%s {00CC00}Rank!", PN(SetPlayerClanRank));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[playerid][c_Rank] >= 3) strcat(eString, "{FFFFFF}Member\n{FFFFFF}Co-Leader\n");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[playerid][c_Rank] >= 4) strcat(eString, "{FFFFFF}Leader");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SPD(playerid, DIALOG_CLAN_RANK, LIST, String, eString, "Select", "Cancel");
	    return true;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][GangID] != 0)
	{
		if(PlayerInfo[playerid][g_Rank] < 6) return SendError(playerid, "You need to be a gang co-leader to use this command!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(sscanf(params, "u", liPlayerSetRank)) return SendUsage(playerid, "/setrank [ID/Name]");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(!IsPlayerConnected(liPlayerSetRank)) return SendError(playerid, "Player is not connected or is yourself!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[liPlayerSetRank][GangID] != PlayerInfo[playerid][GangID]) return SendError(playerid, "This player is not in your gang!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[liPlayerSetRank][g_Rank] > PlayerInfo[playerid][g_Rank]) return SendError(playerid, "You are not allowed to change this player rank!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[liPlayerSetRank][g_Rank] == 8) return SendError(playerid, "You are not allowed to change this player rank!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(liPlayerSetRank == playerid) return SendError(playerid, "You are not allowed to change this player rank!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(String2, sizeof(String2), "{00CC00}Set{FF0000} %s{00CC00} Rank!", PN(liPlayerSetRank));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][g_Rank] >= 6)
		{
			strcat(eString, "{D1D1D1}Member Rank 1\n");
			strcat(eString, "{00CC00}Member Rank 2\n");
			strcat(eString, "{D1D1D1}Member Rank 3\n");
			strcat(eString, "{00CC00}Member Rank 4\n");
			strcat(eString, "{D1D1D1}Member Rank 5\n");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][g_Rank] >= 7) strcat(eString, "{00CC00}Co-Leader\n");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][g_Rank] >= 8)
		{
			strcat(eString, "{D1D1D1}Leader\n");
			strcat(eString, "{00CC00}Owner Access\n");
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_SETRANK, LIST, String2, eString, "Select", "Cancel");
		return true;
	}
	else return SendError(playerid, "You are not in Clan to use this command!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:cscreen(ESS)
{
	if(PlayerInfo[playerid][c_Rank] < 2) return SendError(playerid, "You need to have Co-Leader to use this command!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new Text[128]; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "s[128]", Text)) return SendUsage(playerid, "/cscreen [Text]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, 256, "~r~~h~%s~n~~w~%s", PN(playerid), Text);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID]) Announce(i, eString, 5000, 4);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:lclan(playerid)
{
    if(PlayerInfo[playerid][ClanID] == 0) return SendError(playerid, "You are not member of any clan!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new String[512];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(PlayerInfo[playerid][Language])
	{
	    case 1:
	    {
		     format(String, sizeof(String), "{FFFFFF}Buna{FF0000} %s{FFFFFF}!\n\
										     {FFFFFF}Esti sigur ca vrei sa parasesti Clan-ul{FF0000} %s{FFFFFF} ?\n\
										     \n\
										     {FFFFFF}Aceasta actiune este ireversibila, te poti intoarce doar cu invitatie!", PN(playerid), Clan[PlayerInfo[playerid][ClanID]][ClanName]);
		     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             SPD(playerid, DIALOG_LEAVE_CLAN, MSGBOX, "{FFFFFF}Leave Clan", String, "Nu", "Da");
	    }
	    case 2:
		{
             format(String, sizeof(String), "{FFFFFF}Hello{FF0000} %s{FFFFFF}!\n\
								   			 {FFFFFF}Are you sure that you want to leave{FF0000} %s{FFFFFF} clan ?\n\
								   			 \n\
								   			 {FFFFFF}This action is ireverssible, you can only return back by invite!", PN(playerid), Clan[PlayerInfo[playerid][ClanID]][ClanName]);
		     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             SPD(playerid, DIALOG_LEAVE_CLAN, MSGBOX, "{FFFFFF}Leave Clan", String, "No", "Yes");
	    }
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:cm(ESS)
{
	if(PlayerInfo[playerid][ClanID] == 0) return SendError(playerid, "You must be in a clan to use this command!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new String[128], CapturingStatus[24], Count; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i : Player)
	{
	    if(PlayerInfo[i][ClanID] == PlayerInfo[playerid][ClanID])
	    {
            if(PlayerInfo[i][c_Capturing] == 1) CapturingStatus = "{FF0000}(Capturing)";
	        else if(PlayerInfo[i][c_Capturing] == 0) CapturingStatus = "";
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(eString, sizeof(eString), "{67FF30}%s {FFFFFF}(%d) {00B7FF}%s %s\n%s", PN(i), i, GetPlayerClanRank(i), CapturingStatus, eString);
			Count++;
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "{67FF30}Online members: {00B7FF}%d", GetConnectedClanMembers(PlayerInfo[playerid][ClanID]));
	return SPD(playerid, DIALOG_CLAN_MEMBERS, LIST, String, eString, "Close", "All members");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Personal Car System - Commands
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:addveh(ESS)
{
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 8);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new model[30], modelid, cwner, Float:X, Float:Y, Float:Z, Float:angle;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "us[30]", cwner, model)) return SendUsage(playerid, "/addveh [ID/Name] [VehicleModel]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(cwner)) return Error(playerid, 10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	CountPlayerPersonalCars(cwner);
   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(CountPlayerPersonalCars(playerid) == 5) return SendError(playerid, "This player already have 5 personal cars can't buy anymore!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsNumeric(model)) modelid = strval(model);
	else modelid = GetVehicleModelIDFromName(model);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(modelid < 400 || modelid > 611) return SendError(playerid, "Invalid vehicle ID!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid, X, Y, Z), GetPlayerFacingAngle(playerid, angle),	X += floatmul(floatsin(-angle, degrees), 4.0), Y += floatmul(floatcos(-angle, degrees), 4.0);
	CreatePersonalCar2(modelid, cwner, X, Y, Z, angle);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AdminCMD(playerid, "ADD VEH");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, sizeof(eString), "You have successfully given %s a personal car (ID: %d)!", PN(cwner), modelid);
	SCM(playerid, ABLUE, eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "Administrator %s gave you a personal car (ID: %d)!", PN(playerid), modelid);
	SCM(cwner, ABLUE, eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	eLog[0] = EOS; format(eLog, sizeof(eLog), "RCON: %s has set %s a new personal car!", PN(playerid), PN(cwner)), SendRconLog(eLog);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:deleteveh(playerid)
{
    if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 8);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new vehicleid = GetPlayerVehicleID(playerid), count;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < MAX_VEH; i++)
    {
        if(Vehicles[i][vehicleData] == vehicleid)
        {
            DeletePersonalCar(playerid, i);
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			count++;
			break;
		}
    }
    if(count == 0) return SCM(playerid, RED, "Sorry, but you must be in a personal car to use this command!");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CalculateCarSpeed(playerid, mode = 1)
{
    new Float:Velocity[3];
    GetVehicleVelocity(GetPlayerVehicleID ( playerid ) , Velocity [ 0 ] , Velocity [ 1 ] , Velocity [ 2 ] ) ;
    return IsPlayerInAnyVehicle(playerid) ? floatround ( ( ( floatsqroot ( ( ( Velocity [ 0 ] * Velocity [ 0 ] ) + ( Velocity [ 1 ] * Velocity [ 1 ] ) + ( Velocity [ 2 ] * Velocity [ 2 ] ) ) ) * ( !mode ? 105.0 : 170.0 ) ) ) * 1 ) : 0;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CalculateKM()
{
	foreach(new i : Player)
	{
   	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
 		{
          	new vehicle = GetPlayerVehicleID(i), Query[256], carid = PlayerInfo[i][CarVCP];
          	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(Vehicles[carid][vehID] != -2 && carid != 0)
			{
                new spe = CalculateCarSpeed(i);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if(spe > 5 && GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicle)
				{
					Vehicles[carid][vehKM] += (spe * 0.27) / 100;
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					format(Query, sizeof(Query), "UPDATE `Vehicles` SET `KM` = '%f' WHERE `ID` = '%d'", Vehicles[carid][vehKM], carid);
					mysql_query(SQL, Query);
				}
			}
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock IsPlayerHavePersonalCars(playerid)
{
	new bool:found = false;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < MAX_VEH; i++)
    {
        if(!Vehicles[i][vehStatus]) continue;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(Vehicles[i][vehOwner] == PlayerInfo[playerid][AccID]) found = true;
    }
    if(found) return true;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    else return SendError(playerid, "You don't own any personal vehicles!");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function VehUpdate(accountID, varname[], amount)
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `PersonalCars` SET `%s` = '%d' WHERE `VehOwner` = '%d'", varname, amount, accountID);
	mysql_tquery(SQL, eQuery, "", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:mycar(playerid)
{
	if(PlayerInfo[playerid][InPersGarage] == 0)
	{
	    new bool:found = false;
		eString[0] = EOS;
		eString = "ID\tVehicle\tPremium\n";
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    for(new i = 0; i < MAX_VEH; i++)
	    {
	        if(!Vehicles[i][vehStatus]) continue;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			if(Vehicles[i][vehOwner] == PlayerInfo[playerid][AccID])
			{
	            found = true;
	            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	            format(eString, sizeof(eString), "%s{FFFFFF}#%d\t{FFE600}%s\t{00FF04}%s\n", eString, Vehicles[i][vehID], vNames[Vehicles[i][vehModel]-400], ShowInfoPlayerCarLevel(i));
	        }
	    }
	    if(found) SPD(playerid, PCar_D+3, HEADERS, "{FFFFFF}Select a vehicle to manage", eString, "Select", "Cancel");
	    else SendError(playerid, "You don't own any personal vehicles!");
	}
	else if(PlayerInfo[playerid][InPersGarage] == 1) ShowPersonalCarOptions(playerid, PlayerInfo[playerid][VehSelect]);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Stocks & Functions - Personal Cars System
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock AddVehEx(vehicleid, bool:removeold = false)
{
    if(removeold) DestroyVehicle(Vehicles[vehicleid][vehicleData]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Vehicles[vehicleid][vehicleData] = CreateVehicle(Vehicles[vehicleid][vehModel], Vehicles[vehicleid][vehPos][0], Vehicles[vehicleid][vehPos][1], Vehicles[vehicleid][vehPos][2], Vehicles[vehicleid][vehPos][3], Vehicles[vehicleid][vehColor][0], Vehicles[vehicleid][vehColor][1], 360000);
    SetVehicleNumberPlate(Vehicles[vehicleid][vehicleData], Vehicles[vehicleid][vehPlate]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    ChangeVehicleColor(Vehicles[vehicleid][vehicleData], Vehicles[vehicleid][vehColor][0], Vehicles[vehicleid][vehColor][1]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new a = 0; a < 6; a++)
    {
        if(strcmp(Vehicles[vehicleid][vehText1], "-1", true))
		{
			Vehicles[vehicleid][vehObject][a] = CreateObject(19329,
			Vehicles[vehicleid][VehObjectP1][0], Vehicles[vehicleid][VehObjectP1][1], Vehicles[vehicleid][VehObjectP1][2],
			Vehicles[vehicleid][VehObjectP1][3], Vehicles[vehicleid][VehObjectP1][4], Vehicles[vehicleid][VehObjectP1][5]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetObjectMaterialText(Vehicles[vehicleid][vehObject][a], Vehicles[vehicleid][vehText1], 0, 40, "Quartz MS", 25, 1, 0, 0, 1);
			AttachObjectToVehicle(Vehicles[vehicleid][vehObject][a], Vehicles[vehicleid][vehicleData], 0.0, 0.0, 1.0, 0.0, 0.0, 0.0);
		}
		if(strcmp(Vehicles[vehicleid][vehText2], "-1", true))
		{
			Vehicles[vehicleid][vehObject][a] = CreateObject(19329,
			Vehicles[vehicleid][VehObjectP2][0], Vehicles[vehicleid][VehObjectP2][1], Vehicles[vehicleid][VehObjectP2][2],
			Vehicles[vehicleid][VehObjectP2][3], Vehicles[vehicleid][VehObjectP2][4], Vehicles[vehicleid][VehObjectP2][5]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetObjectMaterialText(Vehicles[vehicleid][vehObject][a], Vehicles[vehicleid][vehText2], 0, 40, "Quartz MS", 25, 1, 0, 0, 1);
			AttachObjectToVehicle(Vehicles[vehicleid][vehObject][a], Vehicles[vehicleid][vehicleData], 0.0, 0.0, 1.0, 0.0, 0.0, 0.0);
		}
		if(strcmp(Vehicles[vehicleid][vehText3], "-1", true))
		{
			Vehicles[vehicleid][vehObject][a] = CreateObject(19329,
			Vehicles[vehicleid][VehObjectP3][0], Vehicles[vehicleid][VehObjectP3][1], Vehicles[vehicleid][VehObjectP3][2],
			Vehicles[vehicleid][VehObjectP3][3], Vehicles[vehicleid][VehObjectP3][4], Vehicles[vehicleid][VehObjectP3][5]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetObjectMaterialText(Vehicles[vehicleid][vehObject][a], Vehicles[vehicleid][vehText3], 0, 40, "Quartz MS", 25, 1, 0, 0, 1);
			AttachObjectToVehicle(Vehicles[vehicleid][vehObject][a], Vehicles[vehicleid][vehicleData], 0.0, 0.0, 1.0, 0.0, 0.0, 0.0);
		}
		if(strcmp(Vehicles[vehicleid][vehText4], "-1", true))
		{
			Vehicles[vehicleid][vehObject][a] = CreateObject(19329,
			Vehicles[vehicleid][VehObjectP4][0], Vehicles[vehicleid][VehObjectP4][1], Vehicles[vehicleid][VehObjectP4][2],
			Vehicles[vehicleid][VehObjectP4][3], Vehicles[vehicleid][VehObjectP4][4], Vehicles[vehicleid][VehObjectP4][5]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetObjectMaterialText(Vehicles[vehicleid][vehObject][a], Vehicles[vehicleid][vehText4], 0, 40, "Quartz MS", 25, 1, 0, 0, 1);
			AttachObjectToVehicle(Vehicles[vehicleid][vehObject][a], Vehicles[vehicleid][vehicleData], 0.0, 0.0, 1.0, 0.0, 0.0, 0.0);
		}
		if(strcmp(Vehicles[vehicleid][vehText5], "-1", true))
		{
			Vehicles[vehicleid][vehObject][a] = CreateObject(19329,
			Vehicles[vehicleid][VehObjectP5][0], Vehicles[vehicleid][VehObjectP5][1], Vehicles[vehicleid][VehObjectP5][2],
			Vehicles[vehicleid][VehObjectP5][3], Vehicles[vehicleid][VehObjectP5][4], Vehicles[vehicleid][VehObjectP5][5]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			SetObjectMaterialText(Vehicles[vehicleid][vehObject][a], Vehicles[vehicleid][vehText5], 0, 40, "Quartz MS", 25, 1, 0, 0, 1);
			AttachObjectToVehicle(Vehicles[vehicleid][vehObject][a], Vehicles[vehicleid][vehicleData], 0.0, 0.0, 1.0, 0.0, 0.0, 0.0);
		}
	}
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CreatePersonalCar1(vehicleid, bool:removeold = false)
{
    if(removeold) DestroyVehicle(Vehicles[vehicleid][vehicleData]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Vehicles[vehicleid][vehicleData] = CreateVehicle(Vehicles[vehicleid][vehModel], Vehicles[vehicleid][vehPos][0], Vehicles[vehicleid][vehPos][1], Vehicles[vehicleid][vehPos][2], Vehicles[vehicleid][vehPos][3], Vehicles[vehicleid][vehColor][0], Vehicles[vehicleid][vehColor][1], 360000);
    SetVehicleNumberPlate(Vehicles[vehicleid][vehicleData], Vehicles[vehicleid][vehPlate]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    ChangeVehicleColor(Vehicles[vehicleid][vehicleData], Vehicles[vehicleid][vehColor][0], Vehicles[vehicleid][vehColor][1]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(strcmp(Vehicles[vehicleid][vehText1], "-1", false))
	{
		Vehicles[vehicleid][vehObject][1] = CreateObject(19329,
		Vehicles[vehicleid][VehObjectP1][0], Vehicles[vehicleid][VehObjectP1][1], Vehicles[vehicleid][VehObjectP1][2],
		Vehicles[vehicleid][VehObjectP1][3], Vehicles[vehicleid][VehObjectP1][4], Vehicles[vehicleid][VehObjectP1][5]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetObjectMaterialText(Vehicles[vehicleid][vehObject][1], Vehicles[vehicleid][vehText1], 0, 40, "Quartz MS", Vehicles[vehicleid][VehTextSize][1], 1, 0xFFFFFFFF, 0, 1);
		AttachObjectToVehicle(Vehicles[vehicleid][vehObject][1], Vehicles[vehicleid][vehicleData], Vehicles[vehicleid][VehObjectP1][0], Vehicles[vehicleid][VehObjectP1][1], Vehicles[vehicleid][VehObjectP1][2],Vehicles[vehicleid][VehObjectP1][3], Vehicles[vehicleid][VehObjectP1][4], Vehicles[vehicleid][VehObjectP1][5]);
	}
	if(strcmp(Vehicles[vehicleid][vehText2], "-1", false))
	{
		Vehicles[vehicleid][vehObject][2] = CreateObject(19329,
		Vehicles[vehicleid][VehObjectP2][0], Vehicles[vehicleid][VehObjectP2][1], Vehicles[vehicleid][VehObjectP2][2],
		Vehicles[vehicleid][VehObjectP2][3], Vehicles[vehicleid][VehObjectP2][4], Vehicles[vehicleid][VehObjectP2][5]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetObjectMaterialText(Vehicles[vehicleid][vehObject][2], Vehicles[vehicleid][vehText2], 0, 40, "Quartz MS", Vehicles[vehicleid][VehTextSize][2], 1, 0xFFFFFFFF, 0, 1);
		AttachObjectToVehicle(Vehicles[vehicleid][vehObject][2], Vehicles[vehicleid][vehicleData], Vehicles[vehicleid][VehObjectP2][0], Vehicles[vehicleid][VehObjectP2][1], Vehicles[vehicleid][VehObjectP2][2],Vehicles[vehicleid][VehObjectP2][3], Vehicles[vehicleid][VehObjectP2][4], Vehicles[vehicleid][VehObjectP2][5]);
	}
	if(strcmp(Vehicles[vehicleid][vehText3], "-1", false))
	{
		Vehicles[vehicleid][vehObject][3] = CreateObject(19329,
		Vehicles[vehicleid][VehObjectP3][0], Vehicles[vehicleid][VehObjectP3][1], Vehicles[vehicleid][VehObjectP3][2],
		Vehicles[vehicleid][VehObjectP3][3], Vehicles[vehicleid][VehObjectP3][4], Vehicles[vehicleid][VehObjectP3][5]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetObjectMaterialText(Vehicles[vehicleid][vehObject][3], Vehicles[vehicleid][vehText3], 0, 40, "Quartz MS", Vehicles[vehicleid][VehTextSize][3], 1, 0xFFFFFFFF, 0, 1);
		AttachObjectToVehicle(Vehicles[vehicleid][vehObject][3], Vehicles[vehicleid][vehicleData], Vehicles[vehicleid][VehObjectP3][0], Vehicles[vehicleid][VehObjectP3][1], Vehicles[vehicleid][VehObjectP3][2],Vehicles[vehicleid][VehObjectP3][3], Vehicles[vehicleid][VehObjectP3][4], Vehicles[vehicleid][VehObjectP3][5]);
	}
	if(strcmp(Vehicles[vehicleid][vehText4], "-1", false))
	{
		Vehicles[vehicleid][vehObject][4] = CreateObject(19329,
		Vehicles[vehicleid][VehObjectP4][0], Vehicles[vehicleid][VehObjectP4][1], Vehicles[vehicleid][VehObjectP4][2],
		Vehicles[vehicleid][VehObjectP4][3], Vehicles[vehicleid][VehObjectP4][4], Vehicles[vehicleid][VehObjectP4][5]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetObjectMaterialText(Vehicles[vehicleid][vehObject][4], Vehicles[vehicleid][vehText4], 0, 40, "Quartz MS", Vehicles[vehicleid][VehTextSize][4], 1, 0xFFFFFFFF, 0, 1);
		AttachObjectToVehicle(Vehicles[vehicleid][vehObject][4], Vehicles[vehicleid][vehicleData], Vehicles[vehicleid][VehObjectP4][0], Vehicles[vehicleid][VehObjectP4][1], Vehicles[vehicleid][VehObjectP4][2],Vehicles[vehicleid][VehObjectP4][3], Vehicles[vehicleid][VehObjectP4][4], Vehicles[vehicleid][VehObjectP4][5]);
	}
	if(strcmp(Vehicles[vehicleid][vehText5], "-1", false))
	{
		Vehicles[vehicleid][vehObject][5] = CreateObject(19329,
		Vehicles[vehicleid][VehObjectP5][0], Vehicles[vehicleid][VehObjectP5][1], Vehicles[vehicleid][VehObjectP5][2],
		Vehicles[vehicleid][VehObjectP5][3], Vehicles[vehicleid][VehObjectP5][4], Vehicles[vehicleid][VehObjectP5][5]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetObjectMaterialText(Vehicles[vehicleid][vehObject][5], Vehicles[vehicleid][vehText5], 0, 40, "Quartz MS", Vehicles[vehicleid][VehTextSize][5], 1, 0xFFFFFFFF, 0, 1);
		AttachObjectToVehicle(Vehicles[vehicleid][vehObject][5], Vehicles[vehicleid][vehicleData], Vehicles[vehicleid][VehObjectP5][0], Vehicles[vehicleid][VehObjectP5][1], Vehicles[vehicleid][VehObjectP5][2],Vehicles[vehicleid][VehObjectP5][3], Vehicles[vehicleid][VehObjectP5][4], Vehicles[vehicleid][VehObjectP5][5]);
	}
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CreatePersonalCarEx(model, playerid, Float:x, Float:y, Float:z, Float:a)
{
    eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CountPlayerPersonalCars(playerid);
   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(CountPlayerPersonalCars(playerid) == 5) return SendError(playerid, "You already have 5 personal cars you can't buy anymore!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `PersonalCars` (`VehOwner`, `VehModel`, `VehPosX`, `VehPosY`, `VehPosZ`, `VehPosA`, `PersonalCar`) VALUES ('%d', '%d', '%f', '%f', '%f', '%f', '1')", PlayerInfo[playerid][AccID], model, x, y, z, a);
    mysql_tquery(SQL, eQuery, "OnSavedVehicleCreatedEx", "ddffff", model, playerid, x, y, z, a);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CreatePersonalCar2(model, playerid, Float:x, Float:y, Float:z, Float:a)
{
    eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CountPlayerPersonalCars(playerid);
   	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(CountPlayerPersonalCars(playerid) == 5) return SendError(playerid, "You already have 5 personal cars you can't buy anymore!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `PersonalCars` (`VehOwner`, `VehModel`, `VehPosX`, `VehPosY`, `VehPosZ`, `VehPosA`, `PersonalCar`) VALUES ('%d', '%d', '%f', '%f', '%f', '%f', '1')", PlayerInfo[playerid][AccID], model, x, y, z, a);
    mysql_tquery(SQL, eQuery, "OnSavedVehicleCreated", "ddffff", model, playerid, x, y, z, a);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CountPlayerPersonalCars(playerid)
{
    new Query[1024], variable;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(Query, sizeof(Query), "SELECT count(*) as `total` from `PersonalCars` where `VehOwner` = '%d'", PlayerInfo[playerid][AccID]);
    mysql_query(SQL, Query, true);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CACHE(0, "total", variable);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return variable;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ReloadPersonalCar(playerid, vehicleid)
{
    DestroyVehicle(Vehicles[vehicleid][vehicleData]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Vehicles[vehicleid][vehicleData] = CreateVehicle(Vehicles[vehicleid][vehModel], Vehicles[vehicleid][vehPos][0], Vehicles[vehicleid][vehPos][1], Vehicles[vehicleid][vehPos][2], Vehicles[vehicleid][vehPos][3], Vehicles[vehicleid][vehColor][0], Vehicles[vehicleid][vehColor][1], 360000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    ChangeVehicleColor(Vehicles[vehicleid][vehicleData], Vehicles[vehicleid][vehColor][0], Vehicles[vehicleid][vehColor][1]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetVehicleNumberPlate(Vehicles[vehicleid][vehicleData], Vehicles[vehicleid][vehPlate]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PutPlayerInVehicle(playerid, Vehicles[vehicleid][vehicleData], 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SavePersonalCars(vehicleid);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ParkPersonalCar(playerid, j, Float:x, Float:y, Float:z, Float:a, bool:remove)
{
	if(remove == true)
	{
 		Vehicles[j][vehPos][0] = x, Vehicles[j][vehPos][1] = y, Vehicles[j][vehPos][2] = z, Vehicles[j][vehPos][3] = a, ReloadPersonalCar(playerid, j);
 		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 		Announce(playerid, "~w~~h~Car spawn ~n~~g~~h~~h~changed!", 4000, 3);
	}
	else if(remove == false) ErrorSpawnForPersVehicle(playerid);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SaveVehicleMod(vehicleid)
{
    eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `PersonalCars` SET `mod0` = '%d', `mod1` = '%d', `mod2` = '%d', `mod3` = '%d', `mod4` = '%d', `mod5` = '%d', `mod6` = '%d', `mod7` = '%d', `mod8` = '%d', `mod9` = '%d', `mod10` = '%d', `mod11` = '%d', `mod12` = '%d', `mod13` = '%d' WHERE `ID` = '%d'",
	Vehicles[vehicleid][vehMod][0], Vehicles[vehicleid][vehMod][1], Vehicles[vehicleid][vehMod][2], Vehicles[vehicleid][vehMod][3], Vehicles[vehicleid][vehMod][4], Vehicles[vehicleid][vehMod][5],
	Vehicles[vehicleid][vehMod][6], Vehicles[vehicleid][vehMod][7], Vehicles[vehicleid][vehMod][8], Vehicles[vehicleid][vehMod][9], Vehicles[vehicleid][vehMod][10], Vehicles[vehicleid][vehMod][11],
	Vehicles[vehicleid][vehMod][12], Vehicles[vehicleid][vehMod][13], Vehicles[vehicleid][vehID]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_tquery(SQL, eQuery, "", "");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function SavePersonalCars(vehicleid)
{
	eQuery[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `PersonalCars` SET `VehOwner` = '%d', `VehPosX` = '%f', `VehPosY` = '%f', `VehPosZ` = '%f', `VehPosA` = '%f', `VehColor1` = '%d', `VehColor2` = '%d', `VehPlate` = '%s', `Level` = '%d' WHERE `ID` = '%d'", Vehicles[vehicleid][vehOwner], Vehicles[vehicleid][vehPos][0], Vehicles[vehicleid][vehPos][1], Vehicles[vehicleid][vehPos][2], Vehicles[vehicleid][vehPos][3], Vehicles[vehicleid][vehColor][0], Vehicles[vehicleid][vehColor][1], safeString(Vehicles[vehicleid][vehPlate]), Vehicles[vehicleid][vehLevel], Vehicles[vehicleid][vehID]);
	mysql_tquery(SQL, eQuery, "", "");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function RemovePersonalCar(i)
{
    DestroyVehicle(Vehicles[i][vehicleData]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Vehicles[i][vehStatus]          = false;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Vehicles[i][vehID]              = INVALID_VEHICLE_ID;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Vehicles[i][vehModel]           = -1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Vehicles[i][vehPos][0]          = 0.0;
    Vehicles[i][vehPos][1]          = 0.0;
    Vehicles[i][vehPos][2]          = 0.0;
    Vehicles[i][vehPos][3]          = 0.0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Vehicles[i][vehColor][0]        = -1;
    Vehicles[i][vehColor][1]        = -1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Vehicles[i][vehPersonal]        = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Vehicles[i][vehOwner]           = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ShowInfoPlayerCarLevel(i)
{
	new String[24];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Vehicles[i][vehLevel] == 0) String = "{FF0000}No";
	else if(Vehicles[i][vehLevel] == 1) String = "{00CC00}Yes";
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function SendMsgToAdmins(color, const string[])
{
	foreach(new i: Player) if(IsPlayerConnected(i)) if(PlayerInfo[i][LoggedIn] == 1) if(PlayerInfo[i][Level] >= 1) SCM(i, color, string);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CreateVehicleEx(modelid, Float:x, Float:y, Float:z, Float:angle, color1, color2, respawn_delay)
{
	new vehid = CreateVehicle(modelid, x, y, z, angle, color1, color2, respawn_delay);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetVehicleHealth(vehid, 1000);
	return vehid;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetJobQuestStatus(playerid)
{
    new String[1024]; eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][JobQuest] == 100)
	{
	    if(PlayerInfo[playerid][pVIP] == 2)
	    {
	        new GenerateKey = randomEx(1000000000, 9999999999);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        mysql_format(SQL, eQuery, sizeof(eQuery), "INSERT INTO `ShopKeys` (`Key`, `Item`, `Amount`) VALUES ('%d', '2', '2')", GenerateKey);
			mysql_tquery(SQL, eQuery, "", "");
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        PlayerInfo[playerid][Coins] += 5000, PlayerInfo[playerid][Money] += 100000000;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(String, sizeof(String), "{FFFF00}Congratulations {FF0000}%s{FFFF00}!\n\
			                                {FFFF00}You have solved all the requirements imposed by the server to complete your current jobs and you have been rewarded!\n\
			                                {FFFF00}You have received VIP Gold (Shopkey: %d), 5000 Coins and $100.000.000!\n\n\
			                                {FF9900}Stay with us for the new operation on this server!\n\
			                                {FF9900}Have fun!", PN(playerid), GenerateKey);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SPD(playerid, DIALOG_EMPTY, MSGBOX, "Job Quest Finished!", String, "Thanks", "");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[playerid][JobQuest] = -1;
	    }
	    else
	    {
		    PlayerInfo[playerid][pVIP] = 2, PlayerInfo[playerid][Coins] += 5000, PlayerInfo[playerid][Money] += 100000000;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(String, sizeof(String), "{FFFF00}Congratulations {FF0000}%s{FFFF00}!\n\
			                                {FFFF00}You have solved all the requirements imposed by the server to complete your current jobs and you have been rewarded!\n\
			                                {FFFF00}You have received VIP Gold, 5000 Coins and $100.000.000!\n\n\
			                                {FF9900}Stay with us for the new operation on this server!\n\
			                                {FF9900}Have fun!", PN(playerid));
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SPD(playerid, DIALOG_EMPTY, MSGBOX, "Job Quest Finished!", String, "Thanks", "");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[playerid][JobQuest] = -1;
		}
	}
	else
	{
	    if(PlayerInfo[playerid][JobQuest] == -1)
	    {
	        SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FF9900}Job Quest", "{FF9900}Ai finalizat deja toate joburile!\n{FF9900}Te rugam sa astept pana cand joburile se vor actualiza din nou\n{FF9900}Si vor incepe alte noi joburi de rezolvat cu noi premii!", "Back", "");
     	}
	    else
	    {
	    	SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FF9900}WIN VIP Gold", "{FF9900}Finalizeaza toate joburile si vei castiga VIP Gold Permanent!", "Back", "");
  		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Random TD Message
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function RandomAds()
{
    new TD_Random_Messages[][] =
	{
		"~y~~h~You wanna to view the best clans? Type ~r~~h~/top",
		"~y~~h~You wanna to be a ~r~~h~VIP ~y~~h~player? Type ~r~~h~/buyvip",
		"~y~~h~Do you like to do stunt? Type ~r~~h~/ss",
		"~y~~h~Wanna a race? Type ~r~~h~/race",
		"~y~~h~Watch the last server updates with ~r~~h~/news",
		"~y~~h~Wanna have fun? Try ~r~~h~/party",
		"~y~~h~Do you wanna make a clan? Type ~r~~h~/createclan",
		"~y~~h~Do you looking for challenges? Type ~r~~h~/minigames",
		"~y~~h~You have joined for first time at this server? Type ~r~~h~/help",
		"~y~~h~Want to base jump? Try ~r~~h~/SPlaces",
		"~y~~h~Do you like drifting? Type ~r~~h~/drifts",
		"~y~~h~Do you like playing? Type ~r~~h~/minigames",
		"~y~~h~Don't know the server commands? Use ~r~~h~/cmds",
		"~y~~h~Are you fan parkour? Try ~r~~h~/teles",
		"~y~~h~Use ~r~~h~/Anim ~y~~h~to see all animations of this server",
		"~y~~h~Wanna make a movie? Use ~r~~h~/hidetds",
		"~y~~h~Visit us on ~r~~h~"SERVER_WEBSITE"",
		"~y~~h~Want a higher rank? Read ~r~~h~/ranks",
		"~y~~h~Do you want a ~r~~h~speedboost~y~~h~? Type ~r~~h~/speed ~y~~h~to activate it",
		"~y~~h~Do you want a ~r~~h~VUP~y~~h~? Type ~r~~h~/vup ~y~~h~to activate it",
		"~y~~h~Have you seen a player that uses ~r~~h~codes ~y~~h~? ~r~~h~/report",
		"~y~~h~You are bored and do not know what to do? Type ~r~~h~/jobs",
		"~y~~h~You need a vehicle? Type ~r~~h~/V, /Car ~y~~h~or ~r~~h~/nrg"
	},
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TD_Random_Messages_RO[][] =
	{
		"~y~~h~Vrei sa te uiti la cele mai puternice clanuri? Scrie ~r~~h~/top",
		"~y~~h~Vrei sa fii un jucator ~r~~h~VIP ~y~~h~? Scrie ~r~~h~/buyvip",
		"~y~~h~Te plictisesti? Iubesti sa faci stunt? Incearca ~r~~h~/ss",
		"~y~~h~Iti plac intrecerile de curse? Scrie ~r~~h~/race",
		"~y~~h~Serverul este intotdeauna optimizat ~r~~h~/news",
		"~y~~h~Iti place sa dai party? Incearca ~r~~h~/party",
		"~y~~h~Creaza-ti propriul Clan chiar acum! ~r~~h~/createclan",
		"~y~~h~Ai intrat pentru prima oara pe server? Scrie ~r~~h~/ajutor",
		"~y~~h~Iti place parasutismul? Incearca ~r~~h~/SPlaces",
		"~y~~h~Iti place sa faci drifting? Scrie ~r~~h~/drifts",
		"~y~~h~Iti place sa te joci? Incearca ~r~~h~/minigames",
		"~y~~h~Esti nou, si nu stii comenzile? Scrie ~r~~h~/cmds",
		"~y~~h~Esti fan parkour? Incearca ~r~~h~/teles",
		"~y~~h~Foloseste ~r~~h~/anim ~y~~h~pentru a vedea toate animatiile serverului",
		"~y~~h~Vrei sa faci un filmulet despre server? Foloseste ~r~~h~/hidetds",
		"~y~~h~Viziteaza-ne si pe ~r~~h~"SERVER_WEBSITE"",
		"~y~~h~Vrei un rank mai mare? Citeste ~r~~h~/ranks",
		"~y~~h~Ai nevoie de ~r~~h~speedboost~y~~h~? Scrie ~r~~h~/speed ~y~~h~pentru activare",
		"~y~~h~Ai nevoie de ~r~~h~VUP~y~~h~? Scrie ~r~~h~/vup ~y~~h~pentru activare",
		"~y~~h~Ai vazut un player care foloseste ~r~~h~coduri~y~~h~? ~r~~h~/report",
		"~y~~h~Esti plictisit si nu sti ce sa faci? Scrie ~r~~h~/jobs",
		"~y~~h~Ai nevoie de un vehicul? Scrie ~r~~h~/V, /Car ~y~~h~sau ~r~~h~/nrg"
	};
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player)
	{
     	if(PlayerInfo[i][LoggedIn] == 1 && PlayerInfo[i][Spawned] == 1)
	    {
			if(Pont[i] == 0 && Pont2[i] == 0)
			{
			    if(PlayerInfo[i][Language] == 1)
			    {
					PlayerTextDrawSetString(i, TD_ADs, TD_Random_Messages_RO[random(sizeof(TD_Random_Messages_RO))]);
					//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerTextDrawShow(i, TD_ADs);
				}
				else if(PlayerInfo[i][Language] == 2)
				{
				    PlayerTextDrawSetString(i, TD_ADs, TD_Random_Messages[random(sizeof(TD_Random_Messages))]);
				    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					PlayerTextDrawShow(i, TD_ADs);
				}
			}
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Gold Pot
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function GoldPot()
{
	new String[256];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!GoldPotFound) SCMALL(YELLOW, "QUEST: {00CC00}No player found the goldpot wait for the next round!"), GoldPotFound = 1, ServerInfo[GoldPotStarted] = -1, DestroyPickup(ServerInfo[GoldPotPK]), GoldPot();
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(GoldPotFound)
	{
	    GoldPotFound = 0, ServerInfo[GoldPotStarted] = 1;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    new gprand = random(sizeof(GPSPAWN)), PrizeText[128], randomprize = random(8);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    switch(randomprize)
	    {
	        case 0: PrizeText = "1 Gems, 20 coins", GPRIZE[2] = 1, GPRIZE[1] = 20;
	        case 1: PrizeText = "2 Gems, 40 coins", GPRIZE[2] = 2, GPRIZE[1] = 40;
	        case 2: PrizeText = "$1.000.000, 40 coins", GPRIZE[0] = 1000000, GPRIZE[1] = 40;
	        case 3: PrizeText = "$700.000, 60 coins", GPRIZE[0] = 700000, GPRIZE[1] = 60;
	        case 4: PrizeText = "$500.000, 80 coins", GPRIZE[0] = 500000, GPRIZE[1] = 80;
	        case 5: PrizeText = "$200.000, 100 coins", GPRIZE[0] = 200000, GPRIZE[1] = 100;
	        case 6: PrizeText = "5 Gems, 60 coins", GPRIZE[2] = 5, GPRIZE[1] = 60;
	        case 7: PrizeText = "4 Gems, 80 coins", GPRIZE[2] = 4, GPRIZE[1] = 80;
	    }
		format(SGoldP, sizeof(SGoldP), "%s", PrizeText);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    GPPos[0] = GPSPAWN[gprand][GPXPOS];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    GPPos[1] = GPSPAWN[gprand][GPYPOS];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    GPPos[2] = GPSPAWN[gprand][GPZPOS];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(GoldPotLocation, sizeof(GoldPotLocation), "%s", GPSPAWN[gprand][GPPosition]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(String, sizeof(String), "QUEST: {00CC00}Find the goldpot worth {FFCC00}%s{00FF22}. {00CC00}Hint: {FF0000}%s!", PrizeText, GoldPotLocation);
        SCMALL(YELLOW, String);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ServerInfo[GoldPotPK] = CreatePickup(1550, 2, GPPos[0], GPPos[1], GPPos[2]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GOLDPOTTIMER = SetTimer("GoldPot", 800000, false);
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function QuestFinished(playerid)
{
	if(PlayerInfo[playerid][Quests] == 100)
	{
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerQuests(playerid)
{
	new jStr[128];
	format(jStr, sizeof(jStr), "{FF0000}%d{00EEFF}/100", PlayerInfo[playerid][Quests]);
	return jStr;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Spring Quest
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function GetUpFromSpringQuest(playerid)
{
    ApplyAnimation(playerid, "COP_AMBIENT", "Copbrowse_out", 4.1, 0, 1, 1, 1, 1, 1);
    SetTimerEx("GiveSpecialActionForQuest", 1000, false, "i", playerid);
}
function GiveSpecialActionForQuest(playerid)
{
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1, 1);
	SetPlayerAttachedObject(playerid, 0, 19636, 5, 0.029999, -0.074999, 0.111999, -79, 1.7, 18.1, 1, 1, 1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new Float:p[3];
	GetVehiclePos(PlayerInfo[playerid][SpringQuestVehicle], p[0], p[1], p[2]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerCheckpoint(playerid, p[0], p[1]-2, p[2], 1);
	PlayerInfo[playerid][InSpringQuest][1] = 1;
}
function RandomQuestToSelling(playerid)
{
    new rand = random(8);
	switch(rand)
	{
		case 0: SetPlayerCheckpoint(playerid, QUEST_SELLER_SHOP_1, 1);
		case 1: SetPlayerCheckpoint(playerid, QUEST_SELLER_SHOP_2, 1);
		case 2: SetPlayerCheckpoint(playerid, QUEST_SELLER_SHOP_3, 1);
		case 3: SetPlayerCheckpoint(playerid, QUEST_SELLER_SHOP_4, 1);
		case 4: SetPlayerCheckpoint(playerid, QUEST_SELLER_SHOP_5, 1);
		case 5: SetPlayerCheckpoint(playerid, QUEST_SELLER_SHOP_6, 1);
		case 6: SetPlayerCheckpoint(playerid, QUEST_SELLER_SHOP_7, 1);
		case 7: SetPlayerCheckpoint(playerid, QUEST_SELLER_SHOP_8, 1);
	}
}
function EnableQuest2(playerid) PlayerInfo[playerid][InSpringQuest][2] = 1;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:startquest(playerid)
{
    eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(IsPlayerInRangeOfPoint(playerid, 2, START_QUEST_ZONE))
    {
        SetPlayerCheckpoint(playerid, QUEST_WOOD_1, 1);
		PlayerInfo[playerid][InSpringQuest][0] = 1;
		PlayerInfo[playerid][SpringQuestVehicle] = CreateVehicle(422, SPRING_QUEST_TELEPORT, -1, -1, -1);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "{FFFFFF}Ti-a fost setat un checkpoint unde sa te duci.\n\
										  {FFFFFF}Tot o data, ti-am dat si un {FF0000}vehicul {FFFFFF}cu care sa-ti faci treaba!\n\
										  {FFFFFF}Urmeaza totul pas cu pas. Succes!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_EMPTY, MSGBOX, "Spring Quest", eString, "Ok", "");
	}
	else return SendError(playerid, "You are not in the quest zone to start quest!"); return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:quests(playerid)
{
	eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "#\tQuest Name\n\
									  #1\t{00CC00}Default Server Quest(/quest)\n\
									  #2\t{00CC00}Spring Quest");
	SPD(playerid, DIALOG_QUESTS, HEADERS, "Quests List", eString, "Teleport", "Close");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:quest(playerid) return cmd_goldpot(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:goldpot(playerid)
{
	new String[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!GoldPotFound) format(String, sizeof(String), "QUEST: {00CC00}GoldPot event is active. Please find the goldpot! Hint: {FF0000}%s{00CC00}!", GoldPotLocation);
	if(GoldPotFound) format(String, sizeof(String), "QUEST: {00CC00}The last GoldPot was found. Please wait next quest!");
	return SCM(playerid, YELLOW, String);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Protection Teleport and loading objects
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock LoadObjectsProtection(playerid)
{
    TogglePlayerControllable(playerid, false);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetTimerEx("ToggleTrueProtection", 1000, 0, "i", playerid);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ToggleTrueProtection(playerid)
{
	TogglePlayerControllable(playerid, true);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Special Vehicles
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SpecialCar1(playerid)
{
	DestroyVehObject(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid, S_Position[playerid][1], S_Position[playerid][2], S_Position[playerid][3]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][pCar] = CreateVehicle(411, S_Position[playerid][1], S_Position[playerid][2], S_Position[playerid][3], 0, 1, 1, 10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCar], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Info(playerid, "~w~~h~You spawned ~r~~h~Special Infernus", 5000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SpecialCar[playerid] = true;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Create & Attach - Vehicle Objects
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	InfernusTuning[playerid][0] = CreateDynamicObject(1163, 0, 0, -1000, 0, 0, 0);
	AttachDynamicObjectToVehicle(InfernusTuning[playerid][0], PlayerInfo[playerid][pCar], 0.000000,-2.400000,0.449999,0.000000,-0.000000,0.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	InfernusTuning[playerid][1] = CreateDynamicObject(1013,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(InfernusTuning[playerid][1], PlayerInfo[playerid][pCar], 0.000000,2.625000,-0.524999,0.000000,0.000000,0.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	InfernusTuning[playerid][2] = CreateDynamicObject(359,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(InfernusTuning[playerid][2], PlayerInfo[playerid][pCar], -0.449999,-0.075000,0.599999,0.000000,0.000000,89.099983);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	InfernusTuning[playerid][3] = CreateDynamicObject(359,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(InfernusTuning[playerid][3], PlayerInfo[playerid][pCar], 0.524999,-0.075000,0.599999,0.000000,0.000000,89.099983);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	InfernusTuning[playerid][4] = CreateDynamicObject(1840,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(InfernusTuning[playerid][4], PlayerInfo[playerid][pCar], 0.300000,-0.974999,0.075000,0.000000,86.399986,-89.099983);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	InfernusTuning[playerid][5] = CreateDynamicObject(1840,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(InfernusTuning[playerid][5], PlayerInfo[playerid][pCar], -0.300000,-0.974999,0.075000,0.000000,86.399986,-89.099983);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	InfernusTuning[playerid][6] = CreateDynamicObject(19314,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(InfernusTuning[playerid][6], PlayerInfo[playerid][pCar], 0.000000,2.700001,0.000000,91.799980,-72.900001,-16.200000);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SpecialCar2(playerid)
{
 	DestroyVehObject(playerid);
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid,S_Position[playerid][1],S_Position[playerid][2],S_Position[playerid][3]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][pCar] = CreateVehicle(562,S_Position[playerid][1],S_Position[playerid][2],S_Position[playerid][3],0,1,1,10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCar], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Info(playerid, "~w~~h~You spawned ~r~~h~Special Elegy", 5000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SpecialCar[playerid] = (true);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Elegy[playerid][0] = CreateDynamicObject(1115,0,0,-1000,0,0,0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AttachDynamicObjectToVehicle(Elegy[playerid][0], PlayerInfo[playerid][pCar], 0.000000,2.505001,-0.524999,-1.619997,0.000000,0.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Elegy[playerid][1] = CreateDynamicObject(1013,0,0,-1000,0,0,0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AttachDynamicObjectToVehicle(Elegy[playerid][1], PlayerInfo[playerid][pCar], 0.000000,2.445000,-0.329999,-3.239999,0.000000,0.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Elegy[playerid][2] = CreateDynamicObject(1001,0,0,-1000,0,0,0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AttachDynamicObjectToVehicle(Elegy[playerid][2], PlayerInfo[playerid][pCar], -0.015000,-2.160000,0.324999,0.000000,0.000000,0.000000);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SpecialCar3(playerid)
{
    DestroyVehObject(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid,S_Position[playerid][1],S_Position[playerid][2],S_Position[playerid][3]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][pCar] = CreateVehicle(550,S_Position[playerid][1],S_Position[playerid][2],S_Position[playerid][3],0,1,1,10);
	PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCar], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Info(playerid, "~w~~h~You spawned ~r~~h~Special Police", 5000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SpecialCar[playerid] = (true);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SunrisePol[playerid][0] = CreateDynamicObject(19420,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(SunrisePol[playerid][0], PlayerInfo[playerid][pCar], 0.000000,-0.640000,0.714999,0.000000,0.000000,0.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SunrisePol[playerid][1] = CreateDynamicObject(1163,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(SunrisePol[playerid][1], PlayerInfo[playerid][pCar], -0.009999,-2.520000,0.300000,0.000000,0.000000,0.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SunrisePol[playerid][2] = CreateDynamicObject(19280,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(SunrisePol[playerid][2], PlayerInfo[playerid][pCar], -0.859999,2.755001,-0.529999,0.000000,0.000000,0.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SunrisePol[playerid][3] = CreateDynamicObject(19280,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(SunrisePol[playerid][3], PlayerInfo[playerid][pCar], 0.854999,2.755001,-0.529999,0.000000,0.000000,0.000000);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SpecialCar4(playerid)
{
	DestroyVehObject(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid,S_Position[playerid][1],S_Position[playerid][2],S_Position[playerid][3]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][pCar] = CreateVehicle(543,S_Position[playerid][1],S_Position[playerid][2],S_Position[playerid][3],0,1,1,10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCar], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Info(playerid, "~w~~h~You spawned ~r~~h~Special Saddler", 5000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SpecialCar[playerid] = (true);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Saddler[playerid][0] = CreateDynamicObject(1019,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(Saddler[playerid][0], PlayerInfo[playerid][pCar], -0.514999,-1.800000,-0.479999,0.000000,0.000000,0.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Saddler[playerid][1] = CreateDynamicObject(1019,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(Saddler[playerid][1], PlayerInfo[playerid][pCar], 0.475000,-1.800000,-0.479999,0.000000,0.000000,0.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Saddler[playerid][2] = CreateDynamicObject(1841,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(Saddler[playerid][2], PlayerInfo[playerid][pCar], -0.714999,-0.954999,-0.010000,2.699999,2.699999,117.539955);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Saddler[playerid][3] = CreateDynamicObject(1841,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(Saddler[playerid][3], PlayerInfo[playerid][pCar], 0.649999,-0.934999,-0.010000,2.699999,2.699999,55.440010);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Saddler[playerid][4] = CreateDynamicObject(362,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(Saddler[playerid][4], PlayerInfo[playerid][pCar], 1.300000,0.674999,0.389999,5.399998,29.700002,93.959968);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Saddler[playerid][5] = CreateDynamicObject(362,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(Saddler[playerid][5], PlayerInfo[playerid][pCar], -1.115000,0.674999,0.389999,5.399998,29.700002,93.959968);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Saddler[playerid][6] = CreateDynamicObject(1013,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(Saddler[playerid][6], PlayerInfo[playerid][pCar], 0.000000,2.245000,-0.375000,0.000000,0.000000,0.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Saddler[playerid][7] = CreateDynamicObject(1115,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(Saddler[playerid][7], PlayerInfo[playerid][pCar], 0.000000,2.285001,-0.230000,7.560000,0.000000,0.000000);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SpecialCar5(playerid)
{
	DestroyVehObject(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid,S_Position[playerid][1],S_Position[playerid][2],S_Position[playerid][3]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][pCar] = CreateVehicle(413,S_Position[playerid][1],S_Position[playerid][2],S_Position[playerid][3],0,214,214,10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCar], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Info(playerid, "~w~~h~You spawned ~r~~h~Special Van", 5000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SpecialCar[playerid] = (true);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	BurritoTuning[playerid][0] = CreateDynamicObject(1014,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(BurritoTuning[playerid][0] , PlayerInfo[playerid][pCar], 0.000000,-2.435001,1.039999,0.000000,0.000000,0.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	BurritoTuning[playerid][1]  = CreateDynamicObject(1013,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(BurritoTuning[playerid][1] , PlayerInfo[playerid][pCar], 0.000000,2.600001,-0.689999,0.000000,0.000000,0.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	BurritoTuning[playerid][2]  = CreateDynamicObject(1840,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(BurritoTuning[playerid][2] , PlayerInfo[playerid][pCar], 0.469999,0.360000,0.545000,0.000000,0.000000,-83.699989);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	BurritoTuning[playerid][3]  = CreateDynamicObject(1840,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(BurritoTuning[playerid][3] , PlayerInfo[playerid][pCar], -0.415000,0.360000,0.535000,0.000000,0.000000,-83.699989);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	BurritoTuning[playerid][4]  = CreateDynamicObject(1100,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(BurritoTuning[playerid][4] , PlayerInfo[playerid][pCar], 0.000000,-0.270000,0.000000,0.000000,0.000000,0.000000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	BurritoTuning[playerid][5]  = CreateDynamicObject(1019,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(BurritoTuning[playerid][5] , PlayerInfo[playerid][pCar], 0.260000,-1.720000,-0.844999,0.719999,0.000000,21.780002);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SpecialCar6(playerid)
{
	DestroyVehObject(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid,S_Position[playerid][1],S_Position[playerid][2],S_Position[playerid][3]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][pCar] = CreateVehicle(560,S_Position[playerid][1],S_Position[playerid][2],S_Position[playerid][3],0,0,0,10);
	PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCar], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Info(playerid, "~w~~h~You spawned ~r~~h~Special Sultan", 5000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SpecialCar[playerid] = (true);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SultanTaxi[playerid][0] = CreateDynamicObject(19310,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(SultanTaxi[playerid][0], PlayerInfo[playerid][pCar], -0.004999,-0.699999,0.920000,0.000000,0.000000,-91.079978);
	SultanTaxi[playerid][1] = CreateDynamicObject(1019,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(SultanTaxi[playerid][1], PlayerInfo[playerid][pCar], -0.564999,-1.500000,-0.370000,0.000000,0.000000,0.000000);
	SultanTaxi[playerid][2] = CreateDynamicObject(1019,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(SultanTaxi[playerid][2], PlayerInfo[playerid][pCar], 0.549999,-1.500000,-0.370000,0.000000,0.000000,0.000000);
	SultanTaxi[playerid][3] = CreateDynamicObject(1148,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(SultanTaxi[playerid][3], PlayerInfo[playerid][pCar], 1.059999,-1.695000,0.014999,0.000000,0.000000,0.000000);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SpecialCar7(playerid)
{
	DestroyVehObject(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	GetPlayerPos(playerid,S_Position[playerid][1],S_Position[playerid][2],S_Position[playerid][3]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][pCar] = CreateVehicle(561,S_Position[playerid][1],S_Position[playerid][2],S_Position[playerid][3],0,222,222,10);
	PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCar], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Info(playerid, "~w~~h~You spawned ~r~~h~Special Stratum", 5000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SpecialCar[playerid] = (true);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	StratumTuning[playerid][0] = CreateDynamicObject(1840,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(StratumTuning[playerid][0], PlayerInfo[playerid][pCar], 0.649999,-1.885000,0.000000,0.000000,0.000000,89.099983);
	StratumTuning[playerid][1] = CreateDynamicObject(1840,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(StratumTuning[playerid][1], PlayerInfo[playerid][pCar], -0.639999,-1.885000,0.000000,0.000000,0.000000,89.099983);
	StratumTuning[playerid][2] = CreateDynamicObject(1019,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(StratumTuning[playerid][2], PlayerInfo[playerid][pCar], -0.524999,-1.800000,-0.539999,0.000000,0.000000,0.000000);
	StratumTuning[playerid][3] = CreateDynamicObject(1019,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(StratumTuning[playerid][3], PlayerInfo[playerid][pCar], 0.499999,-1.800000,-0.539999,0.000000,0.000000,0.000000);
	StratumTuning[playerid][4] = CreateDynamicObject(1001,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(StratumTuning[playerid][4], PlayerInfo[playerid][pCar], 0.000000,-2.175000,0.694999,0.000000,0.000000,0.000000);
	StratumTuning[playerid][5] = CreateDynamicObject(1013,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(StratumTuning[playerid][5], PlayerInfo[playerid][pCar], -0.015000,2.765001,-0.374999,0.000000,-180.899887,-0.359999);
	StratumTuning[playerid][6] = CreateDynamicObject(18646,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(StratumTuning[playerid][6], PlayerInfo[playerid][pCar], 0.599999,0.880000,0.339999,0.000000,0.000000,0.000000);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SpecialCar8(playerid)
{

	DestroyVehObject(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid, S_Position[playerid][1], S_Position[playerid][2], S_Position[playerid][3]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][pCar] = CreateVehicle(550, S_Position[playerid][1], S_Position[playerid][2], S_Position[playerid][3], 0, 1, 1, 10);
	PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCar], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Info(playerid, "~w~~h~You spawned ~r~~h~ESS BMW", 5000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SpecialCar[playerid] = (true);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Create & Attach - Vehicle Objects
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	BMWTunning[playerid][0] = CreateDynamicObject(2985, 0, 0, -1000, 0, 0, 0);
	BMWTunning[playerid][1] = CreateDynamicObject(18647, 0, 0, -1000, 0, 0, 0);
	BMWTunning[playerid][2] = CreateDynamicObject(18647, 0, 0, -1000, 0, 0, 0);
	BMWTunning[playerid][3] = CreateDynamicObject(1004, 0, 0, -1000, 0, 0, 0);
	BMWTunning[playerid][4] = CreateDynamicObject(1143, 0, 0, -1000, 0, 0, 0);
	BMWTunning[playerid][5] = CreateDynamicObject(1143, 0, 0, -1000, 0, 0, 0);
	BMWTunning[playerid][6] = CreateDynamicObject(1001, 0, 0, -1000, 0, 0, 0);
	BMWTunning[playerid][7] = CreateDynamicObject(359, 0, 0, -1000, 0, 0, 0);
	BMWTunning[playerid][8] = CreateDynamicObject(359, 0, 0, -1000, 0, 0, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AttachDynamicObjectToVehicle(BMWTunning[playerid][0], PlayerInfo[playerid][pCar], 0.00000, 1.79520, -0.57740,   0.00000, 0.00000, 90.00000);
	AttachDynamicObjectToVehicle(BMWTunning[playerid][1], PlayerInfo[playerid][pCar], 1.05290, -0.25670, -0.65430,   -0.04000, 0.00000, 0.00000);
	AttachDynamicObjectToVehicle(BMWTunning[playerid][2], PlayerInfo[playerid][pCar], -1.06710, -0.25670, -0.65430,   -0.04000, 0.00000, 0.00000);
	AttachDynamicObjectToVehicle(BMWTunning[playerid][3], PlayerInfo[playerid][pCar], 0.00000, 1.28360, 0.16440,   0.00000, 0.00000, 0.00000);
	AttachDynamicObjectToVehicle(BMWTunning[playerid][4], PlayerInfo[playerid][pCar], -0.70130, 2.17629, 0.09990,   -4.40000, 0.00000, 0.00000);
	AttachDynamicObjectToVehicle(BMWTunning[playerid][5], PlayerInfo[playerid][pCar], 0.70470, 2.16989, 0.09990,   -4.40000, 0.00000, 0.00000);
	AttachDynamicObjectToVehicle(BMWTunning[playerid][6], PlayerInfo[playerid][pCar], 0.00000, -2.63440, 0.12370,   0.00000, 0.00000, 0.00000);
	AttachDynamicObjectToVehicle(BMWTunning[playerid][7], PlayerInfo[playerid][pCar], 0.74910, -0.31820, 0.65880,   0.00000, 0.00000, 90.00000);
	AttachDynamicObjectToVehicle(BMWTunning[playerid][8], PlayerInfo[playerid][pCar], -0.67290, -0.31822, 0.65880,   0.00000, 0.00000, 90.00000);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SpecialCar9(playerid)
{
	DestroyVehObject(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid, S_Position[playerid][1], S_Position[playerid][2], S_Position[playerid][3]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][pCar] = CreateVehicle(470, S_Position[playerid][1], S_Position[playerid][2], S_Position[playerid][3], 0, 1, 1, 10);
	PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCar], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Info(playerid, "~w~~h~You spawned ~r~~h~HUMMER", 5000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SpecialCar[playerid] = (true);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Create & Attach - Vehicle Objects
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	HummerTunning[playerid][0] = CreateDynamicObject(2985, 0, 0, -1000, 0, 0, 0);
	HummerTunning[playerid][1] = CreateDynamicObject(2985, 0, 0, -1000, 0, 0, 0);
	HummerTunning[playerid][2] = CreateDynamicObject(1247, 0, 0, -1000, 0, 0, 0);
	HummerTunning[playerid][3] = CreateDynamicObject(1247, 0, 0, -1000, 0, 0, 0);
	HummerTunning[playerid][4] = CreateDynamicObject(359, 0, 0, -1000, 0, 0, 0);
	HummerTunning[playerid][5] = CreateDynamicObject(359, 0, 0, -1000, 0, 0, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AttachDynamicObjectToVehicle(HummerTunning[playerid][0], PlayerInfo[playerid][pCar], -0.37700, 1.03790, -0.18660,   0.00000, 0.00000, 90.00000);
	AttachDynamicObjectToVehicle(HummerTunning[playerid][1], PlayerInfo[playerid][pCar], 0.42774, 1.03792, -0.18660,   0.00000, 0.00000, 90.00000);
	AttachDynamicObjectToVehicle(HummerTunning[playerid][2], PlayerInfo[playerid][pCar], 1.14480, 0.89310, 0.12310,   0.00000, 0.00000, 90.00000);
	AttachDynamicObjectToVehicle(HummerTunning[playerid][3], PlayerInfo[playerid][pCar], -1.13820, 0.89310, 0.12310,   0.00000, 0.00000, 90.00000);
	AttachDynamicObjectToVehicle(HummerTunning[playerid][4], PlayerInfo[playerid][pCar], -0.86170, -0.43170, 1.02510,   0.00000, 0.00000, 90.00000);
	AttachDynamicObjectToVehicle(HummerTunning[playerid][5], PlayerInfo[playerid][pCar], 0.95530, -0.43170, 1.02510,   0.00000, 0.00000, 90.00000);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SpecialCar10(playerid)
{
	DestroyVehObject(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid, S_Position[playerid][1], S_Position[playerid][2], S_Position[playerid][3]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][pCar] = CreateVehicle(535, S_Position[playerid][1], S_Position[playerid][2], S_Position[playerid][3], 0, 1, 1, 10);
	PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCar], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Info(playerid, "~w~~h~You spawned ~r~~h~Machete", 5000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SpecialCar[playerid] = (true);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Create & Attach - Vehicle Objects
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	MacheteTunning[playerid][0] = CreateDynamicObject(18648, 0, 0, -1000, 0, 0, 0);
	MacheteTunning[playerid][1] = CreateDynamicObject(18648, 0, 0, -1000, 0, 0, 0);
	MacheteTunning[playerid][2] = CreateDynamicObject(2985, 0, 0, -1000, 0, 0, 0);
	MacheteTunning[playerid][3] = CreateDynamicObject(2985, 0, 0, -1000, 0, 0, 0);
	MacheteTunning[playerid][4] = CreateDynamicObject(19314, 0, 0, -1000, 0, 0, 0);
	MacheteTunning[playerid][5] = CreateDynamicObject(339, 0, 0, -1000, 0, 0, 0);
	MacheteTunning[playerid][6] = CreateDynamicObject(339, 0, 0, -1000, 0, 0, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AttachDynamicObjectToVehicle(MacheteTunning[playerid][0], PlayerInfo[playerid][pCar], 0.93380, -1.35230, 0.39810,   0.00000, 0.00000, 0.00000);
	AttachDynamicObjectToVehicle(MacheteTunning[playerid][1], PlayerInfo[playerid][pCar], -0.91420, -1.34630, 0.39810,   0.00000, 0.00000, 0.00000);
	AttachDynamicObjectToVehicle(MacheteTunning[playerid][2], PlayerInfo[playerid][pCar], -0.75550, 1.15700, -0.31330,   0.00000, 0.00000, 90.00000);
	AttachDynamicObjectToVehicle(MacheteTunning[playerid][3], PlayerInfo[playerid][pCar], 0.80650, 1.15700, -0.31330,   0.00000, 0.00000, 90.00000);
	AttachDynamicObjectToVehicle(MacheteTunning[playerid][4], PlayerInfo[playerid][pCar], 0.00000, 1.80950, 0.39600,   90.00000, 90.00000, 0.00000);
	AttachDynamicObjectToVehicle(MacheteTunning[playerid][5], PlayerInfo[playerid][pCar], -0.33410, 0.23080, 0.78300,   90.00000, 90.00000, 0.00000);
	AttachDynamicObjectToVehicle(MacheteTunning[playerid][6], PlayerInfo[playerid][pCar], 0.40190, 0.10280, 0.78300,   90.00000, 90.00000, 180.00000);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SpecialBus(playerid)
{
	DestroyVehObject(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid,S_Position[playerid][1],S_Position[playerid][2],S_Position[playerid][3]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][pCar] = CreateVehicle(431,S_Position[playerid][1],S_Position[playerid][2],S_Position[playerid][3],0,1,1,10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PutPlayerInVehicle(playerid, PlayerInfo[playerid][pCar], 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Info(playerid, "~w~~h~You spawned ~r~~h~Special Bus", 5000);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SpecialCar[playerid] = (true);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bpcar[playerid][0] = CreateDynamicObject(2985,0,0,-1000,0,0,0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	AttachDynamicObjectToVehicle(bpcar[playerid][0], PlayerInfo[playerid][pCar], -0.90071, 5.36883, 1.82490,  0.00000, 0.00000, 90.00000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bpcar[playerid][1] = CreateDynamicObject(2985,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(bpcar[playerid][1], PlayerInfo[playerid][pCar], 0.92830, 5.36880, 1.82490,   0.00000, 0.00000, 90.00000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bpcar[playerid][2] = CreateDynamicObject(19433,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(bpcar[playerid][2], PlayerInfo[playerid][pCar], 0.00000, 3.41570, 2.15270,   0.00000, 90.00000, 90.00000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bpcar[playerid][3] = CreateDynamicObject(19433,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(bpcar[playerid][3], PlayerInfo[playerid][pCar], 0.00000, -0.06600, 2.15270,   0.00000, 90.00000, 90.00000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bpcar[playerid][4] = CreateDynamicObject(3578,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(bpcar[playerid][4], PlayerInfo[playerid][pCar], 0.53340, -0.40790, 0.52380,   90.00000, 0.00000, 90.00000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bpcar[playerid][5] = CreateDynamicObject(3578,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(bpcar[playerid][5], PlayerInfo[playerid][pCar], -0.52282, -0.48299, 0.52380,   270.00000, 0.00000, 90.00000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bpcar[playerid][6] = CreateDynamicObject(3461,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(bpcar[playerid][6], PlayerInfo[playerid][pCar], -1.05973, -5.33132, 1.12920,   0.00000, 0.00000, 0.00000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bpcar[playerid][7] = CreateDynamicObject(3461,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(bpcar[playerid][7], PlayerInfo[playerid][pCar], 1.00530, -5.33130, 1.12920,   0.00000, 0.00000, 0.00000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bpcar[playerid][8] = CreateDynamicObject(19433,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(bpcar[playerid][8], PlayerInfo[playerid][pCar], 0.00000, -3.54730, 2.15270,   0.00000, 90.00000, 90.00000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bpcar[playerid][9] = CreateDynamicObject(18647,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(bpcar[playerid][9], PlayerInfo[playerid][pCar], -0.79200, 0.00000, 2.20600,   0.00000, 0.00000, 0.00000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bpcar[playerid][10] = CreateDynamicObject(18647,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(bpcar[playerid][10], PlayerInfo[playerid][pCar], 0.80600, 0.00000, 2.20600,   0.00000, 0.00000, 0.00000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bpcar[playerid][11] = CreateDynamicObject(3525,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(bpcar[playerid][11], PlayerInfo[playerid][pCar], -1.33070, 4.29790, 1.49980,   0.00000, 0.00000, 270.00000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bpcar[playerid][12] = CreateDynamicObject(3525,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(bpcar[playerid][12], PlayerInfo[playerid][pCar], 1.35530, 4.29790, 1.49980,   0.00000, 0.00000, 90.00000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bpcar[playerid][13] = CreateDynamicObject(1241,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(bpcar[playerid][13], PlayerInfo[playerid][pCar], 0.00000, 5.88230, -0.16200,   0.00000, 0.00000, 0.00000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bpcar[playerid][14] = CreateDynamicObject(1254,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(bpcar[playerid][14], PlayerInfo[playerid][pCar], -0.50731, 5.78491, -0.12738,   0.00000, 0.00000, 0.00000);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	bpcar[playerid][15] = CreateDynamicObject(1254,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(bpcar[playerid][15], PlayerInfo[playerid][pCar], 0.47870, 5.78490, -0.12740,   0.00000, 0.00000, 0.00000);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CarDeleter(vehicleid)
{
    foreach(new i : Player)
	{
        new Float:X, Float:Y, Float:Z;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    	if(IsPlayerInVehicle(i, vehicleid))
		{
    	    RemovePlayerFromVehicle(i);
    	    GetPlayerPos(i, X, Y, Z);
        	SetPlayerPos(i, X, Y+3, Z);
	    }
	    SetVehicleParamsForPlayer(vehicleid, i, 0, 1);
	}
    SetTimerEx("VehRes", 1500, 0, "i", vehicleid);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function VehRes(vehicleid) return DestroyVehicle(vehicleid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// On player connected session time on server (For Panel)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function SavePlayerSession()
{
	foreach(new i : Player)
	{
		new Hrs, Mins, Secs, String[128]; eQuery[0] = EOS;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SessionGameTime(i, Hrs, Mins, Secs);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(Hrs != 0)
		{
		    format(String, sizeof(String), "%d:%d hrs", Hrs, Mins);
		}
		else if(Mins != 0)
		{
		    format(String, sizeof(String), "%d:%d mins", Mins, Secs);
		}
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `TimePlayed` = '%s' WHERE `Name` = '%s' LIMIT 1", String, PN(i));
		mysql_tquery(SQL, eQuery, "", "");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CheckAFKTime(amount)
{
    new tmp[16], minutes = floatround(amount/60);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  	amount -= minutes*60;
  	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  	if(minutes <= 9) format(tmp, 16, "0%d", minutes);
  	else format(tmp, 16, "%d", minutes);
   	return tmp;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CheckPlayerAFK()
{
	new String[128]; eQuery[0] = EOS;
  	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  	foreach(new i : Player)
  	{
		GetPlayerPos(i, AFKPos[i][0], AFKPos[i][1], AFKPos[i][2]);
     	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     	if(AFKPos[i][0] == AFKPos[i][3] && AFKPos[i][1] == AFKPos[i][4] && AFKPos[i][2] == AFKPos[i][5])
		{
			AFK[i]++;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(AFK[i] > 59)
		 	{
				format(String, sizeof(String), "%s", CheckAFKTime(AFK[i]));
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `AFK` = '%s' WHERE `Name` = '%s' LIMIT 1", String, PN(i));
				mysql_tquery(SQL, eQuery, "", "");
		  	}
		}
		else
		{
			AFK[i] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `AFK` = '-1' WHERE `Name` = '%s' LIMIT 1", PN(i));
			mysql_tquery(SQL, eQuery, "", "");
		}
		AFKPos[i][3] = AFKPos[i][0], AFKPos[i][4] = AFKPos[i][1], AFKPos[i][5] = AFKPos[i][2];
  	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ESSBuster
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendBuster(playerid, type, reason[])
{
	// Type 1 == Kick
	// Type 2 == Mute
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(type == 1)
	{
	    format(eString, sizeof(eString), "ESSBuster: %s has been kicked reason: %s!", PN(playerid), reason);
	    SCMALL(RED, eString);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(eString, sizeof(eString), "~R~~H~Kick notification:~N~~Y~%s", reason);
	    Announce(playerid, eString, 10000, 3);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    TogglePlayerControllable(playerid, false);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetTimerEx("KickPlayer", 50, false, "i", playerid);
	}
	if(type == 2)
	{
	    format(eString, sizeof(eString), "ESSBuster: %s has been muted for 5 minutes reason: %s!", PN(playerid), reason);
	    SCMALL(RED, eString);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[playerid][Muted] = 1;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(eString, sizeof(eString), "~W~Muted 5 minutes for~R~~h~ reason~N~~Y~~H~%s", reason);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Announce(playerid, eString, 6000, 3);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(PlayerInfo[playerid][MutedByAdmin], 100, "Server");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Player To Point
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz, Float:tempposx, Float:tempposy, Float:tempposz;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		tempposx = (oldposx -x), tempposy = (oldposy -y), tempposz = (oldposz -z);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return true;
	}
	return false;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Functions
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ShowAllJob3D()
{
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Pizza Boy
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CreateDynamicPickup(1314, 23, 2088.6782, -1806.5980, 13.5469);
	CreateDynamic3DTextLabel("Pizza Boy\n{FFFFFF}Type {00FF22}/startwork {FFFFFF}to start work and start enjoying the experience!", YELLOW, 2088.6782, -1806.5980, 13.5469, 30);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Farmer Job
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CreateDynamicPickup(1314, 23, -382.7727, -1426.4601, 26.2678);
	CreateDynamic3DTextLabel("Farmer Job\n{FFFFFF}Type {00FF22}/startwork {FFFFFF}to start work and start enjoying the experience!", YELLOW, -382.7727, -1426.4601, 26.2678, 30);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Trucker Job
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CreateDynamicPickup(1314, 23, 76.4239, -222.3698, 1.5781);
	CreateDynamic3DTextLabel("Trucker Job\n{FFFFFF}Type {00FF22}/startwork {FFFFFF}to start work and start enjoying the experience!", YELLOW, 76.4239, -222.3698, 1.5781, 30);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Robbers of Cars Job
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CreateDynamicPickup(1314, 23, 1712.4908, -1544.3226, 13.5469);
	CreateDynamic3DTextLabel("Robber of Cars\n{FFFFFF}Type {00FF22}/startwork {FFFFFF}to start work and start enjoying the experience!", YELLOW, 1712.4908, -1544.3226, 13.5469, 30);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Hitman
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CreateDynamicPickup(1314, 23, 2278.7854, 2526.7324, 10.8203);
	CreateDynamic3DTextLabel("Hitman Job\n{FFFFFF}Type {00FF22}/startwork {FFFFFF}to start work and start enjoying the experience!", YELLOW, 2278.7854, 2526.7324, 10.8203, 30);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Stone Quarry Job
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CreateDynamicPickup(1314, 23, 816.9669, 856.8481, 12.7891);
	CreateDynamic3DTextLabel("Stone Quarry\n{FFFFFF}Type {00FF22}/startwork {FFFFFF}to start work and start enjoying the experience!", YELLOW, 816.9669, 856.8481, 12.7891, 30);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Taxi Job
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CreateDynamicPickup(1314, 23, 1743.1691, -1862.6074, 13.5761);
	CreateDynamic3DTextLabel("Taxi Job\n{FFFFFF}Type {00FF22}/startwork {FFFFFF}to start work and start enjoying the experience!", YELLOW, 1743.1691, -1862.6074, 13.5761, 30);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// Dealer
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	CreateDynamicPickup(1314, 23, -2110.6445, -486.5569, 35.5313);
	CreateDynamic3DTextLabel("Dealer\n{FFFFFF}Type {00FF22}/startwork {FFFFFF}to start work and start enjoying the experience!", YELLOW, -2110.6445, -486.5569, 35.5313, 30);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Dealer = CreateActor(28, -2109.7849, -486.1129, 35.5313, 123.1082);
    ApplyActorAnimation(Dealer, "DEALER", "DEALER_IDLE", 4.0, 0, 1, 1, 1, -1);
    CreateDynamic3DTextLabel("Dealer", YELLOW, -2109.7849, -486.1129, 35.5313, 30);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Glovo
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CreateDynamicPickup(1314, 23,-2476.0718, 756.7508, 35.1719);
	CreateDynamic3DTextLabel("Glovo\n{FFFFFF}Type {00FF22}/startwork {FFFFFF}to start work and start enjoying the experience!", YELLOW, -2476.0718, 756.7508, 35.1719, 30);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CheckIsPlayerInPizzaJobVehicle(playerid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
        SetTimerEx("CheckPizza", 30000, 0, "i", playerid);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SCM(playerid, YELLOW, "You left the job vehicle! Time remaing to enter back vehicle {FF0000}30 {FFFF00}secounds!");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CheckPizza(playerid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		DestroyVehicle(JobVehicle[playerid]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    DisablePlayerRaceCheckpoint(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    PlayerInfo[playerid][JobID] = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Announce(playerid, "~r~~h~Job failed!~n~~w~Type /jobs for more!", 5000, 3);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Dealer
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CheckDealer(playerid)
{
    Announce(playerid, "~r~~h~Se proceseaza tranzactia!~n~~w~Asteapta!", 4000, 4);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    TogglePlayerControllable(playerid, false);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetTimerEx("SuccesfullyTradeDealer", 5000, 0, "i", playerid);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function SuccesfullyTradeDealer(playerid)
{
	Announce(playerid, "~w~Ai vandut marfa!~n~~r~~h~Dute la urmatorul partener!", 5000, 4);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SCM(playerid, YELLOW, "* Tranzactia a fost efectuata! Du-te la urmatorul partener!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TogglePlayerControllable(playerid, true);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Jobs - Developed by Johnny
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:jobs(playerid)
{
	new Status[MAX_JOBS][123];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	new string[78]; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_JOBS; i++)
	{
	    format(string, sizeof(string), "You will completed %d/%d!", PlayerInfo[playerid][JobsFinishedCount], MAX_JOBS-1);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[playerid][JobFinished][i] == 1) Status[i] = "{00CC00}Finished";
		else if(PlayerInfo[playerid][JobFinished][i] == 0) Status[i] = "{FF0000}Waiting for finish";
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(eString, sizeof(eString), "Job Name\tDescription\tStatus\n\
		{00FF22}Pizza Boy\t{FFFF00}Deliver pizza at home and receive money\t%s\n\
	    {00FF22}Farmer\t{FFFF00}Start farm work and become a farmer and a merchant\t%s\n\
		{00FF22}Trucker\t{FFFF00}Start the trucking career and earn a lot of money\t%s\n\
		{00FF22}Robber of cars\t{FFFF00}Steal cars without being caught by the police and selling it further\t%s\n\
		{00FF22}Hitman\t{FFFF00}Begin your hitman career and show your experience\t%s\n\
		{00FF22}Stone Quarry\t{FFFF00}Start your field in the stone quarry\t%s\n\
		{00FF22}Taxi Job\t{FFFF00}Start your taxi career and become an expert\t%s\n\
		{00FF22}Dealer\t{FFFF00}Start illegal drug business but be careful not to get caught\t%s\n\
		{00FF22}Glovo\t{FFFF00}Start and delivery foods\t%s",
		Status[1], Status[2], Status[3], Status[4], Status[5], Status[6],
		Status[7], Status[8], Status[9]);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_JOBS, HEADERS, string, eString, "Select", "Close");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:startwork(playerid)
{
	if(PlayerInfo[playerid][JobID] != 0) return SendError(playerid, "You already have a job!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerToPoint(7.0, playerid, 2088.6782, -1806.5980, 13.5469)) // Pizza Job
    {
        new Float:p_Pos[4], randomh = random(MAX_HOUSES);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        GetPlayerPos(playerid, p_Pos[0], p_Pos[1], p_Pos[2]), GetPlayerFacingAngle(playerid, p_Pos[3]);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][JobID] = 1, SetPlayerSkin(playerid, 155);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SetPlayerCheckpoint(playerid, HouseInfo[randomh][HX], HouseInfo[randomh][HY], HouseInfo[randomh][HZ], 1.5);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(JobVehicle[playerid] != 0) DestroyVehicle(JobVehicle[playerid]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        JobVehicle[playerid] = AddStaticVehicleEx(448, p_Pos[0], p_Pos[1], p_Pos[2], p_Pos[3], 1, 1, -1);
        PutPlayerInVehicle(playerid, JobVehicle[playerid], 0);
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    else if(PlayerToPoint(7.0, playerid, -382.7727, -1426.4601, 26.2678)) // Farmer Job
    {
		PlayerInfo[playerid][JobID] = 2, FarmerCP[playerid] = 0, SetPlayerSkin(playerid, 202);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(JobVehicle[playerid] != 0) DestroyVehicle(JobVehicle[playerid]);
    	if(JobTrailer[playerid] != 0) DestroyVehicle(JobTrailer[playerid]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SetPlayerCheckpoint(playerid, -411.2075, -1306.6758, 29.1805, 1.5);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        JobVehicle[playerid] = AddStaticVehicleEx(531, -369.0342, -1440.2784, 25.6920, 88.0193, 1, 1, -1);
        JobTrailer[playerid] = AddStaticVehicleEx(610, -377.9718, -1454.0829, 25.2204, 0.0146, 1, 1, -1);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SPD(playerid, DIALOG_EMPTY, MSGBOX, "Farmer", "{FFFF00}Misiune:\n\n{FFFFFF}Du-te si incepe sa macini pamantul dupa o sa obtii faina si grau!\n{FFFFFF}Tractorul si remorca tractorului se afla in apropriere!\n\n{FFFF00}Odata ce ai terminat de arat si de macinat intoarcete inapoi la ferma!", "Continue", "");
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    else if(PlayerToPoint(7.0, playerid, 76.4239, -222.3698, 1.5781)) // Trucker Job
    {
        new String[512];
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][JobID] = 3, SetPlayerSkin(playerid, 170);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(JobVehicle[playerid] != 0) DestroyVehicle(JobVehicle[playerid]);
    	if(JobTrailer[playerid] != 0) DestroyVehicle(JobTrailer[playerid]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		JobVehicle[playerid] = AddStaticVehicleEx(515, 67.1857, -237.7764, 2.6027, 358.8532, 1, 1, -1);
        JobTrailer[playerid] = AddStaticVehicleEx(435, 64.9157, -283.4872, 2.2218, 356.4131, 1, 1, -1);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        format(String, sizeof(String), "Creek (LV)\nPilson Intersection (LV)\nBattery Point (SF)\nOcean Docks (LS)\nWhetstone (SF)\nFlint County (SF)\nDoherty (SF)\nPalisades (SF)\nBayside (SF)\nCommerce (LS)\nLas Payasadas (LV)\nLas Venturas Airport (LV)\nEast Los Santos (LS)\nLinden Side (LV)\nAngel Pine (SF)");
		SPD(playerid, DIALOG_TRUCKER, LIST, "Mission Selection", String, "Select", "");
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    else if(PlayerToPoint(7.0, playerid, 1712.4908, -1544.3226, 13.5469)) // Robber of Cars
    {
        new Rand = random(5);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][JobID] = 4, SetPlayerSkin(playerid, 115), RobberCP[playerid] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(JobVehicle[playerid] != 0) DestroyVehicle(JobVehicle[playerid]);
    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		JobVehicle[playerid] = AddStaticVehicleEx(579, 1713.6370, -1539.1157, 13.3422, 34.5929, 0, 0, -1);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        switch(Rand)
        {
            case 0:
            {
                SetPlayerCheckpoint(playerid, 2185.2554, 2004.3585, 10.6761, 1.5);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CarTheftID[playerid] = 411;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CarToTheft[playerid] = AddStaticVehicleEx(CarTheftID[playerid], 2185.2554, 2004.3585, 10.6761, 89.4809, 1, 1, -1);
            }
            case 1:
            {
                SetPlayerCheckpoint(playerid, -2422.5154, 320.0663, 34.8921, 1.5);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CarTheftID[playerid] = 411;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CarToTheft[playerid] = AddStaticVehicleEx(CarTheftID[playerid], -2422.5154, 320.0663, 34.8921, 153.6994, 1, 1, -1);
            }
            case 2:
            {
                SetPlayerCheckpoint(playerid, 2473.2600, -1698.3143, 13.3725, 1.5);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CarTheftID[playerid] = 411;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CarToTheft[playerid] = AddStaticVehicleEx(CarTheftID[playerid], 2473.2600, -1698.3143, 13.3725, 179.6863, 1, 1, -1);

            }
            case 3:
            {
                SetPlayerCheckpoint(playerid, -1496.6715, 945.0347, 7.0381, 1.5);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CarTheftID[playerid] = 411;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CarToTheft[playerid] = AddStaticVehicleEx(CarTheftID[playerid], -1496.6715, 945.0347, 7.0381, 89.3765, 1, 1, -1);
            }
            case 4:
            {
                SetPlayerCheckpoint(playerid, 2029.7020, 990.4767, 10.5456, 1.5);
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CarTheftID[playerid] = 411;
                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                CarToTheft[playerid] = AddStaticVehicleEx(CarTheftID[playerid], 2029.7020, 990.4767, 10.5456, 179.8794, 1, 1, -1);
            }
        }
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_EMPTY, MSGBOX, "Robber of Cars", "{FFFF00}Misiune:\n\n{FFFFFF}Du-te si fura masina si dupa care du-te si vinde-o la dealer-ul de pe piata neagra!\n{FFFFFF}Ti-am plasat un checkpoint pe harta catre masina!", "Continue", "");
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    else if(PlayerToPoint(7.0, playerid, 2278.7854, 2526.7324, 10.8203)) // Hitman
    {
		PlayerInfo[playerid][JobID] = 5, HitmanCP[playerid] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(JobVehicle[playerid] != 0) DestroyVehicle(JobVehicle[playerid]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		JobVehicle[playerid] = AddStaticVehicleEx(470, 2275.3643, 2533.5833, 10.8520, 180.3935, 1, 1, -1);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerCheckpoint(playerid, 213.7495, 1878.2188, 13.1406, 1.5);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_EMPTY, MSGBOX, "Hitman", "{FFFF00}Misiune:\n\n{FFFFFF}Un savant nebun este pe cale sa distruga umanitatea!\n{FFFFFF}Eliminal in cel mai scurt timp posibil\n\n{FFFFFF}Savantul se afla la Area 51!\n{FFFFFF}Ti-am pus un checkpoint pentru a-l gasi!", "Continue", "");
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    else if(PlayerToPoint(7.0, playerid, 816.9669, 856.8481, 12.7891)) // Stone Quarry Job
    {
		PlayerInfo[playerid][JobID] = 6, QuarryCP[playerid] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(JobVehicle[playerid] != 0) DestroyVehicle(JobVehicle[playerid]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		JobVehicle[playerid] = AddStaticVehicleEx(486, 838.7763, 854.6978, 12.9854, 110.8971, 1, 1, -1);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerCheckpoint(playerid, 782.6603, 835.0638, 6.0604, 1.5);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_EMPTY, MSGBOX, "Stone quarry", "{FFFF00}Misiune:\n\n{FFFFFF}Du-te si munceste jos si niveleaza drumul pentru ca excavatoarele sa isi faca treaba!\n{FFFFFF}Apoi du-te si strange piatra pentru ca muncitori sa lucreze cu ea\n\n{FFFFFF}Cand ai terminat de lucru intoarcete inapoi la biroul de informati!\n{FFFFFF}Ti-am pus un checkpointuri ca sa te poti descurca!", "Continue", "");
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    else if(PlayerToPoint(7.0, playerid, 1743.1691, -1862.6074, 13.5761)) // Taxi Job
    {
        PlayerInfo[playerid][JobID] = 7, TaxiCP[playerid] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(JobVehicle[playerid] != 0) DestroyVehicle(JobVehicle[playerid]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		JobVehicle[playerid] = AddStaticVehicleEx(420, 1729.7797, -1857.0642, 13.1770, 269.5253, 6, 6, -1);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerCheckpoint(playerid, 1781.5996, -1857.4937, 13.1908, 1.5);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_EMPTY, MSGBOX, "Taxi Job", "{FFFF00}Misiune:\n\n{FFFFFF}Ti-am pus niste checkpointuri pentru anumite destinati!\n{FFFFFF}Dute si completeaza-le apoi intoarcete inapoi pentru recompensa\n\n{FFFFFF}Nu incerca sa dai teapa la clienti!\n{FFFFFF}Si nu zgaria masina e noua!", "Continue", "");
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    else if(PlayerToPoint(7.0, playerid, -2110.6445, -486.5569, 35.5313)) // Dealer
    {
        PlayerInfo[playerid][JobID] = 8, DealerCP[playerid] = 0;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(JobVehicle[playerid] != 0) DestroyVehicle(JobVehicle[playerid]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		JobVehicle[playerid] = AddStaticVehicleEx(415, -2117.3643, -481.8899, 35.3016, 26.8112, 0, 0, -1);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerAttachedObject(playerid, 0, 1210, 6, 0.259532, -0.043030, -0.009978, 85.185333, 271.380615, 253.650283, 1.000000, 1.000000, 1.000000);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		DBuyer[playerid][0] = CreateActor(40, -1813.2169, -135.7824, 6.1463, 270.8891);
		SetPlayerCheckpoint(playerid, -1812.1257, -135.7296, 6.1435, 1.5);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_EMPTY, MSGBOX, "Dealer", "{FFFF00}Dealer:\n\n{FFFFFF}* Du-te si livreaza drogurile catre noi nostri parteneri!\n{FFFFFF}* Ti-am pus un checkpoint catre parteneri nostri, dar ai grija sunt extremi de periculosi!\n\n{FFFFFF}- Du-te fara arme o sa sporesti incredere, dar incearca sa fii foarte discret!\n\n{FFFFFF}Succes", "Continue", "");
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    else if(PlayerToPoint(7.0, playerid, -2476.0718, 756.7508, 35.1719)) // Glovo
    {
        PlayerInfo[playerid][JobID] = 9, GlovoCP[playerid] = 0;
        SetPlayerCheckpoint(playerid, -2455.3042, 735.7381, 35.0156, 3);
    }
    else return SendError(playerid, "You are not in Job PickUP or job location! Type /jobs to get a job!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i : Player)
	{
	    if(PlayerInfo[i][JobID] != 0)
	    {
			if(IsPlayerInAnyVehicle(i))
			{
		 		DisableRemoteVehicleCollisions(i, JobVehicle[i]);
			}
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:stopwork(playerid)
{
	if(PlayerInfo[playerid][JobID] == 0) return SendError(playerid, "You don't have a job! Use /jobs and select your favorite job!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(JobVehicle[playerid] != 0) DestroyVehicle(JobVehicle[playerid]);
    if(JobTrailer[playerid] != 0) DestroyVehicle(JobTrailer[playerid]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    DisablePlayerCheckpoint(playerid), JobVehicle[playerid] = 0, JobTrailer[playerid] = 0, PlayerInfo[playerid][JobID] = 0;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerSkin(playerid, 217), Info(playerid, "~r~~h~INFO: ~w~~h~Acum nu mai muncesti! Scrie /jobs pentru alte joburi!", 5000);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Clan System (Stocks)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CheckClans()
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new q = 0; q < MAX_CLANS; q++)
	{
	    if(Clan[q][Losts] >= 5)
	    {
	        foreach(new i : Player)
	        {
	        	if(PlayerInfo[i][ClanID] == q)
	        	{
	                PlayerInfo[i][c_Rank] = 0, PlayerInfo[i][c_Kills] = 0, PlayerInfo[i][c_Deaths] = 0, PlayerInfo[i][c_Captures] = 0, PlayerInfo[i][c_Points] = 0, PlayerInfo[i][c_Skin] = 0;
                    PlayerInfo[i][ClanID] = 0, SetPlayerSkin(i, 217), SpawnPlayer(i), RefreshColors(i), ResetPlayerWeapons(i);
				}
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Clan[q][ClanDeaths] = 0, Clan[q][ClanCaptures] = 0, Clan[q][EXP] = 0, Clan[q][ClanKills] = 0, Clan[q][Skin] = 0, Clan[q][ClanPoints] = 0;
			Clan[q][ClanLevel] = 0, Clan[q][Losts] = 0, Clan[q][Wins] = 0, Clan[q][Capturing] = 0, Clan[q][MaxDeaths] = 0, Clan[q][TurfingClan] = 0;
			Clan[q][CaptureTime] = 0, Clan[q][IsAttacked] = 0, Clan[q][c_CaptureJoins] = 0, Clan[q][CapturingClan] = 0, Clan[q][ID] = 0;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        DestroyDynamic3DTextLabel(ClanPickUp3D[q]), DestroyDynamicPickup(ClanPickUp[q]);
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `ClanPoints` = '0', `ClanKills` = '0', `ClanDeaths` = '0', `ClanName` = 'None', `ClanCaptures` = '0', `ClanEXP` = '0', `ClanRank` = '0', `ClanTotalP` = '0', `ClanID` = '0' WHERE `ClanID` = '%d'", q);
	    	mysql_tquery(SQL, eQuery, "", "");
	    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			mysql_format(SQL, eQuery, sizeof(eQuery), "DELETE FROM `Clans` WHERE `ID` = '%d'", q);
		    mysql_tquery(SQL, eQuery, "", "");
	    }
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SavePlayerClan(playerid)
{
    eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	UpdatePlayer(PN(playerid), "ClanID", PlayerInfo[playerid][ClanID]);
	UpdatePlayer(PN(playerid), "ClanPoints", PlayerInfo[playerid][c_Points]);
	UpdatePlayer(PN(playerid), "ClanKills", PlayerInfo[playerid][c_Kills]);
	UpdatePlayer(PN(playerid), "ClanRank", PlayerInfo[playerid][c_Rank]);
	UpdatePlayer(PN(playerid), "ClanDeaths", PlayerInfo[playerid][c_Deaths]);
	UpdatePlayer(PN(playerid), "ClanCaptures", PlayerInfo[playerid][c_Captures]);
	UpdatePlayer(PN(playerid), "ClanEXP", PlayerInfo[playerid][c_EXP]);
	UpdatePlayer(PN(playerid), "ClanTotalP", PlayerInfo[playerid][c_Total]);
	UpdatePlayer(PN(playerid), "ClanSkin", PlayerInfo[playerid][c_Skin]);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetClanID(playerid)
{
	for(new i = 1; i < MAX_CLANS; i++) if(IsPlayerInRangeOfPoint(playerid, 3.0, Clan[i][ClanPos][0], Clan[i][ClanPos][1], Clan[i][ClanPos][2])) return i;
	return -1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock UpdateClan3D()
{
    for(new i = 1; i < MAX_CLANS; i++)
	{
		new String[1024];
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(String, sizeof(String), "{FFFFFF}Territory of {FFFFFF}\"{%06x}%s{FFFFFF}\" clan!\n\
        								{FFFFFF}Clan type: %s {FFFFFF}with %s ratio and %d EXP!\n\
										{FFFFFF}Status %s {FFFFFF}and losts %s{FFFFFF}!\n\n\
										{FFFFFF}Type {FF9900}/battle {FFFFFF}to start the battle!", Clan[i][ClanColor] >>> 8, Clan[i][ClanName], ClanType(i), GetClanEXP(i), Clan[i][EXP], CheckStage(i), CheckLosts(i));
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		UpdateDynamic3DTextLabelText(ClanPickUp3D[i], ~1, String);
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CreateClanPickUp(clanid)
{
	new String[512];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, sizeof(String), "Territory of {FFFFFF}\"{%06x}%s{FFFFFF}\" clan!\n\
    								Clan type: %s {FFFFFF}with %s ratio and %d EXP!\n\
									Status %s {FFFFFF}and losts %s{FFFFFF}!\n\n\
									Type {FF9900}/battle {FFFFFF}to start the battle!", Clan[clanid][ClanColor] >>> 8, Clan[clanid][ClanName], ClanType(clanid), GetClanEXP(clanid), Clan[clanid][EXP], CheckStage(clanid), CheckLosts(clanid));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ClanPickUp3D[clanid] = CreateDynamic3DTextLabel(String, ~1, Clan[clanid][ClanPos][0], Clan[clanid][ClanPos][1], Clan[clanid][ClanPos][2], 30);
	ClanPickUp[clanid] = CreateDynamicPickup(1314, 23, Clan[clanid][ClanPos][0], Clan[clanid][ClanPos][1], Clan[clanid][ClanPos][2]);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ClanType(clanid)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(Clan[clanid][ClanLevel])
	{
		case 0: String = "None";
		case 1: String = "{FF9900}Standard";
		case 2: String = "{FF0000}Premium";
	}
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CheckLosts(clanid)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(Clan[clanid][Losts])
	{
		case 0: String = "0/5";
		case 1: String = "1/5";
		case 2: String = "2/5";
		case 3: String = "3/5";
	    case 4: String = "4/5";
		case 5: String = "5/5";
	}
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CheckStage(clanid)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(Clan[clanid][Losts])
	{
	    case 0: String = "{00CC00}GOOD";
		case 1: String = "{A6BA00}TOUCHED";
		case 2: String = "{FFA700}AFFECTED";
		case 3: String = "{FF4D00}DAMAGED";
		case 4: String = "{FF0000}CRITICAL";
		case 5: String = "{FF0000}REMOVE SOON";
	}
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CalculateClanTerritory(playerid)
{
	for(new i = 1; i < MAX_CLANS; i++)
	{
	    if(!IsPlayerInRangeOfPoint(playerid, 50.0, 0, 0, 0))
	    {
			if(IsPlayerInRangeOfPoint(playerid, 50.0, Clan[i][ClanPos][0], Clan[i][ClanPos][1], Clan[i][ClanPos][2])) return i;
		}
	}
	return -1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CaptureZoneSize(playerid)
{
	for(new i = 1; i < MAX_CLANS; i++) if(IsPlayerInRangeOfPoint(playerid, 5.0, Clan[i][ClanPos][0], Clan[i][ClanPos][1], Clan[i][ClanPos][2])) return i;
	return -1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CheckClanTers()
{
	foreach(new i : Player)
	{
		new String[256], String2[256], _capture = CaptureZoneSize(i), areaid = CalculateClanTerritory(i);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(areaid != -1)
	    {
	        if(PlayerInfo[i][c_Capturing] == 1)
	        {
	            if(_capture != -1)
	            {
	                //
	            }
	            else
	            {
	                ClanTers[areaid][turfing] = false, ClanTers[areaid][turfingby] = 0, Clan[areaid][ZoneLocked] = GetTickCount();
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                SCM(i, RED, "Fail capturing! Because you leaved zone the zone of /capture!");
	                //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	                PlayerInfo[i][c_Capturing] = 0;
	            }
	        }
			PlayerTextDrawColor(i, Terry1, Clan[areaid][ClanColor]);
		    PlayerTextDrawColor(i, Terry3, Clan[areaid][ClanColor]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(String, sizeof(String), "%s~W~~H~ controlled by", Clan[areaid][ClanName]);
		    PlayerTextDrawSetString(i, Terry3, String);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(String2, sizeof(String2), "~Y~%s", Clan[ClanTers[areaid][owner]][ClanName]);
		    PlayerTextDrawSetString(i, Terry4, String2);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerTextDrawShow(i, PlayerText:Terry1);
		    PlayerTextDrawShow(i, PlayerText:Terry2);
		    PlayerTextDrawShow(i, PlayerText:Terry3);
		    PlayerTextDrawShow(i, PlayerText:Terry4);
		}
		else
		{
		    PlayerTextDrawHide(i, PlayerText:Terry1);
		    PlayerTextDrawHide(i, PlayerText:Terry2);
		    PlayerTextDrawHide(i, PlayerText:Terry3);
		    PlayerTextDrawHide(i, PlayerText:Terry4);
		}
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function SetupAllClans()
{
 	new String[512], c_Since[30], c_Name[30], Rows, Fields, X;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < Rows; i++)
	{
 		CACHE(i, "ID", X);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CONTENT(i, "Name", c_Name);
		format(Clan[X][ClanName], 30, "%s", c_Name);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CONTENT(i, "Since", c_Since);
		format(Clan[X][Since], 30, "%s", c_Since);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "X", Clan[X][ClanPos][0]);
		FLOAT(i, "Y", Clan[X][ClanPos][1]);
		FLOAT(i, "Z", Clan[X][ClanPos][2]);
		FLOAT(i, "A", Clan[X][ClanPos][3]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CACHE(i, "W1", Clan[X][Weapon][0]);
		CACHE(i, "W2", Clan[X][Weapon][1]);
		CACHE(i, "W3", Clan[X][Weapon][2]);
		CACHE(i, "W4", Clan[X][Weapon][3]);
		CACHE(i, "W5", Clan[X][Weapon][4]);
		CACHE(i, "W6", Clan[X][Weapon][5]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CACHE(i, "Color", Clan[X][ClanColor]);
		CACHE(i, "Skin", Clan[X][Skin]);
		CACHE(i, "Level", Clan[X][ClanLevel]);
		CACHE(i, "EXP", Clan[X][EXP]);
		CACHE(i, "Losts", Clan[X][Losts]);
		CACHE(i, "Wins", Clan[X][Wins]);
		CACHE(i, "Captures", Clan[X][ClanCaptures]);
		CACHE(i, "Points", Clan[X][ClanPoints]);
		CACHE(i, "Owner", ClanTers[X][owner]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        Clan[X][CaptureTime] = CAPTURE_TIME;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        Clan[X][ZoneLocked] = 0;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(Clan[X][ClanPos][0] != 0 || Clan[X][ClanPos][1] != 0 || Clan[X][ClanPos][2] != 0 || Clan[X][ClanPos][3] != 0)
		{
		    format(String, sizeof(String), "Territory of {FFFFFF}\"{%06x}%s{FFFFFF}\" clan!\n\
	        								Clan type: %s {FFFFFF}with %s ratio and %d EXP!\n\
											Status %s {FFFFFF}and losts %s{FFFFFF}!\n\n\
											Type {FF9900}/battle {FFFFFF}to start the battle!", Clan[X][ClanColor] >>> 8, Clan[X][ClanName], ClanType(X), GetClanEXP(X), Clan[X][EXP], CheckStage(X), CheckLosts(X));
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			DestroyDynamicMapIcon(Clan[X][MapIcon]), Clan[X][MapIcon] = CreateDynamicMapIcon(Clan[X][ClanPos][0], Clan[X][ClanPos][1], Clan[X][ClanPos][2], 23, 500);
			ClanPickUp3D[X] = CreateDynamic3DTextLabel(String, ~1, Clan[X][ClanPos][0], Clan[X][ClanPos][1], Clan[X][ClanPos][2], 30.0);
			ClanPickUp[X] = CreateDynamicPickup(1314, 23, Clan[X][ClanPos][0], Clan[X][ClanPos][1], Clan[X][ClanPos][2]);
		}
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SetupPlayerForClan(playerid, clanid)
{
    new String[128], String2[16], c_Since[24], Count = 1;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, sizeof(String), "SELECT * FROM `Clans` WHERE `ID` = '%d'", clanid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_query(SQL, String);
	new rows; cache_get_row_count(rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i; i < rows; i++)
	{
	    for(new w = 0; w < 6; w++)
		{
		    format(String2, sizeof(String2), "W%d", Count);
		    CONTENT(i, String2, Clan[clanid][Weapon][w]);
		    Count++;
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CACHE(i, "Color", Clan[clanid][ClanColor]);
	    CACHE(i, "Skin", Clan[clanid][Skin]);
	    FLOAT(i, "X", Clan[clanid][ClanPos][0]);
	    FLOAT(i, "Y", Clan[clanid][ClanPos][1]);
	    FLOAT(i, "Z", Clan[clanid][ClanPos][2]);
	    FLOAT(i, "A", Clan[clanid][ClanPos][3]);
   		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CONTENT(i, "Since", c_Since);
		format(Clan[clanid][Since], 30, "%s", c_Since);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[playerid][c_Skin] != 0) SetPlayerSkin(playerid, PlayerInfo[playerid][c_Skin]);
		else SetPlayerSkin(playerid, Clan[clanid][Skin]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ResetPlayerWeapons(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		for(new w = 0; w < 6; w++) GivePlayerWeapon(playerid, Clan[clanid][Weapon][w], 9999);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerColor(playerid, Clan[clanid][ClanColor]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(Clan[clanid][ClanPos][0] != 0.0 && Clan[clanid][ClanPos][1] != 0.0)
		{
			SetPlayerPos(playerid, Clan[clanid][ClanPos][0], Clan[clanid][ClanPos][1], Clan[clanid][ClanPos][2]);
			SetPlayerFacingAngle(playerid, Clan[clanid][ClanPos][3]);
		}
		else SetPlayerRandomSpawn(playerid, false);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerEXP(playerid)
{
	new String[24];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][c_EXP] == 100) String = "100";
	else format(String, sizeof(String), "%d.0", PlayerInfo[playerid][c_EXP]);
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetClanEXP(clanid)
{
	new String[24];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Clan[clanid][EXP] == 100) String = "100";
	else format(String, sizeof(String), "%d.0", Clan[clanid][EXP]);
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ShowClanInfo(playerid)
{
	new sStr[1024], String[24];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "%s", Clan[PlayerInfo[playerid][ClanID]][Since]);
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CalculateClanPoints(PlayerInfo[playerid][ClanID]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(sStr, sizeof(sStr), "{FF0000}%s's {00FF22}Statistics\n\
						  		\n\
 						  		{00FF22}Clan {FF0000}%s {00FF22}(Created on date {FF0000}%s{00FF22})\n\
 						  		{00FF22}Season points {49FFFF}%d kills {00FF22}and {49FFFF}%d {00FF22}deaths\n\
							   	{00FF22}Member skills {49FFFF}%d points {00FF22}and {49FFFF}%d {00FF22}capture points\n\
							    {00FF22}EXP Ratio {FF0000}%s {00FF22}and {49FFFF}%d {00FF22}total\n\
								{00FF22}Rank {FF0000}%s\n\n\
								{00FF22}Overall points {FF0000}%d {00FF22}(Including points from other clan)\n\
								{00FF22}Type {FF0000}/cinfo [ID]{00FF22} or visit {FF0000}"SERVER_WEBSITE"/clans {00FF22}to see top players by clan points!",
 			  		 			PN(playerid),
			   					Clan[PlayerInfo[playerid][ClanID]][ClanName],
			   					String,
 				   				PlayerInfo[playerid][c_Kills],
								PlayerInfo[playerid][c_Deaths],
								PlayerInfo[playerid][c_Points],
								PlayerInfo[playerid][c_Captures],
								GetPlayerEXP(playerid),
								PlayerInfo[playerid][c_EXP],
								GetPlayerClanRank(playerid),
								PlayerInfo[playerid][c_Total]);
	return sStr;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Crate System (Abuzare - Scos de Ghost)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/*CMD:crates(playerid) return cmd_crate(playerid);
CMD:opencrate(playerid) return cmd_crate(playerid);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:crate(playerid)
{
	new String[1024];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "Crate\tInformation\tAmount\n\
 									{FF0000}Crate #1\t{FFCC00}Open a simple crate!\t{FFFFFF}%d\n\
								    {FF0000}Crate #2\t{FFCC00}Open a epic crate!\t{FFFFFF}%d\n\
									{FF0000}Crate #3\t{FFCC00}Open a rare crate!\t{FFFFFF}%d\n\
									{FF0000}Crate #4\t{FFCC00}Open a mythic crate!\t{FFFFFF}%d\n\
									{FF0000}Crate #5\t{FFCC00}Open a legendary crate!\t{FFFFFF}%d\n\
									{FF0000}Crate #6\t{FFCC00}Open a vehicle crate!\t{FFFFFF}%d", PlayerInfo[playerid][Crate][0], PlayerInfo[playerid][Crate][1], PlayerInfo[playerid][Crate][2], PlayerInfo[playerid][Crate][3],
																		  						  PlayerInfo[playerid][Crate][4], PlayerInfo[playerid][Crate][5]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_CRATE, HEADERS, "{FFFFFF}Open Crate - Type {FF0000}/BuyCrate {FFFFFF}to buy more crates!", String, "Select", "Cancel");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:buycrate(playerid)
{
	SPD(playerid, DIALOG_CRATE+1, HEADERS, "{FFFFFF}Buy Crate - Type {FF0000}/Crate {FFFFFF}to open Crate!", "Crate\tInformation\tPrice\n\
	                                        {FF0000}Crate #1\t{FFCC00}Buy a simple crate!\t{FFFFFF}250 Coins\n\
								            {FF0000}Crate #2\t{FFCC00}Buy a epic crate!\t{FFFFFF}1000 Coins\n\
							          	    {FF0000}Crate #3\t{FFCC00}Buy a rare crate!\t{FFFFFF}20 Gems\n\
										    {FF0000}Crate #4\t{FFCC00}Buy a mythic crate!\t{FFFFFF}40 Gems\n\
                                            {FF0000}Crate #5\t{FFCC00}Buy a legendary crate!\t{FFFFFF}100 Gems\n\
										  	{FF0000}Crate #6\t{FFCC00}Buy a vehicle crate!\t{FFFFFF}50 Gems", "Buy", "Cancel");
	return true;
}*/
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock OpenCrate(playerid, type)
{
	if(type == 1)
	{
	    Announce(playerid, "~w~Please wait...~n~~w~Opening ~r~~h~mystery box~w~!", 9000, 3);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SetTimerEx("Crate1", 10000, false, "i", playerid);
	}
	else if(type == 2)
	{
	    Announce(playerid, "~w~Please wait...~n~~w~Opening ~r~~h~epic crate~w~!", 9000, 3);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SetTimerEx("Crate2", 10000, false, "i", playerid);
	}
	else if(type == 3)
	{
	    Announce(playerid, "~w~Please wait...~n~~w~Opening ~r~~h~rare crate~w~!", 9000, 3);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SetTimerEx("Crate3", 10000, false, "i", playerid);
	}
	else if(type == 4)
	{
	    Announce(playerid, "~w~Please wait...~n~~w~Opening ~r~~h~mythic crate~w~!", 9000, 3);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SetTimerEx("Crate4", 10000, false, "i", playerid);
	}
	else if(type == 5)
	{
	    Announce(playerid, "~w~Please wait...~n~~w~Opening ~r~~h~legendary crate~w~!", 9000, 3);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SetTimerEx("Crate5", 10000, false, "i", playerid);
	}
	else if(type == 6)
	{
	    if(CountPlayerPersonalCars(playerid) == 5) return SendError(playerid, "You already have 5 personal cars you can't open this crate!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Announce(playerid, "~w~Please wait...~n~~w~Opening ~r~~h~vehicle crate~w~!", 9000, 3);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SetTimerEx("Crate6", 10000, false, "i", playerid);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Crate1(playerid)
{
	new rand1 = random(3), rand2 = random(10000000), ltext[128], String[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(rand1)
	{
	    case 0: PlayerInfo[playerid][Money] += rand2, GivePlayerMoney(playerid, rand2), format(ltext, sizeof(ltext), "You earned $%s!\nCongratulations!", FormatNumber(rand2));
	    case 1: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
	    case 2: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "%s", ltext);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FFFFFF}Mystery box - This is your gain!", String, "Close", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Crate2(playerid)
{
	new rand1 = random(4), rand2 = random(500), ltext[128], String[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(rand1)
	{
	    case 0: PlayerInfo[playerid][Coins] += rand2, format(ltext, sizeof(ltext), "{FFFFFF}You earned %s coins!\n{FFFFFF}Congratulations!", FormatNumber(rand2));
	    case 1: UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] + 5), PlayerInfo[playerid][Gems] += 5, format(ltext, sizeof(ltext), "{FFFFFF}You earned 5 Gems!\n{FFFFFF}Congratulations!");
	    case 2: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
	    case 3: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "%s", ltext);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FFFFFF}Mystery box - This is your gain!", String, "Close", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Crate3(playerid)
{
	new rand1 = random(5), ltext[128], String[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(rand1)
	{
     	case 0: UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] + 5), PlayerInfo[playerid][Gems] += 5, PlayerInfo[playerid][Coins] += 100, ltext = "{FFFFFF}You earned 5 gems, 100 coins!\n{FFFFFF}Congratulations!";
     	case 1: UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] + 10), PlayerInfo[playerid][Gems] += 10, PlayerInfo[playerid][Coins] += 200, ltext = "{FFFFFF}You earned 10 gems, 200 coins!\n{FFFFFF}Congratulations!";
     	case 2: UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] + 15), PlayerInfo[playerid][Gems] += 15, PlayerInfo[playerid][Coins] += 300, ltext = "{FFFFFF}You earned 15 gems, 300 coins!\n{FFFFFF}Congratulations!";
	    case 3: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
	    case 4: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "%s", ltext);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FFFFFF}Mystery box - This is your gain!", String, "Close", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Crate4(playerid)
{
	new rand1 = random(5), ltext[128], String[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(rand1)
	{
	    case 0: PlayerInfo[playerid][Kills] += 5000, PlayerInfo[playerid][Coins] += 500, ltext = "{FFFFFF}You earned 5000 Kills, 500 coins!\n{FFFFFF}Congratulations!";
     	case 1: UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] + 20), PlayerInfo[playerid][Gems] += 20, PlayerInfo[playerid][Coins] += 500, ltext = "{FFFFFF}You earned 20 gems, 500 coins!\n{FFFFFF}Congratulations!";
     	case 2: UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] + 30), PlayerInfo[playerid][Gems] += 30, PlayerInfo[playerid][Coins] += 800, ltext = "{FFFFFF}You earned 30 gems, 800 coins!\n{FFFFFF}Congratulations!";
     	case 3:
 		{
	 		UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] + 45);
	 		PlayerInfo[playerid][Gems] += 45;
	 		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[playerid][Coins] += 1000;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[playerid][Money] += 500000000, GivePlayerMoney(playerid, 500000000);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    ltext = "{FFFFFF}You earned 45 gems, 1000 coins, 500.000.000$!\n{FFFFFF}Congratulations!";
		}
	    case 4: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
	    case 5: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "%s", ltext);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FFFFFF}Mystery box - This is your gain!", String, "Close", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Crate5(playerid)
{
	new rand1 = random(9), ltext[128], String[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(rand1)
	{
	    case 0: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
	    case 1: PlayerInfo[playerid][StuntPoints] += 4000, PlayerInfo[playerid][RacePoints] += 2000, PlayerInfo[playerid][DriftPoints] += 10000, ltext = "{FFFFFF}You earned 4000 Stunt Points, 2000 Race Points, 10000 Drift!\n{FFFFFF}Congratulations!";
        case 2: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
 		case 3: UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] + 70), PlayerInfo[playerid][Gems] += 70, PlayerInfo[playerid][Coins] += 7000, ltext = "{FFFFFF}You earned 70 gems, 7000 coins!\n{FFFFFF}Congratulations!";
        case 4: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
		case 5: UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] + 80), PlayerInfo[playerid][Gems] += 80, PlayerInfo[playerid][Coins] += 1000, ltext = "{FFFFFF}You earned 80 gems, 1000 coins!\n{FFFFFF}Congratulations!";
     	case 6:
 		{
	 		UpdatePlayer(PN(playerid), "Gems", PlayerInfo[playerid][Gems] + 110);
	 		PlayerInfo[playerid][Gems] += 110;
	 		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[playerid][Coins] += 1000;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerInfo[playerid][Money] += 500000000, GivePlayerMoney(playerid, 500000000);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    ltext = "{FFFFFF}You earned 110 gems, 1000 coins, 500.000.000$!\n{FFFFFF}Congratulations!";
		}
	    case 7: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
	    case 8: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "%s", ltext);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FFFFFF}Mystery box - This is your gain!", String, "Close", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function Crate6(playerid)
{
	new rand1 = random(10), ltext[128], String[256];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new RandSpawn = random(18), Float:X, Float:Y, Float:Z, Float:A;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(RandSpawn)
	{
	    case 0: X = 1737.0809, Y = -1791.5774, Z = 13.2875, A = 358.9033;
		case 1: X = 1726.7152, Y = -1791.3782, Z = 13.0963, A = 358.9033;
		case 2: X = 1721.8317, Y = -1791.2842, Z = 13.2904, A = 358.9030;
		case 3: X = 1716.9169, Y = -1791.1912, Z = 13.2904, A = 358.9008;
		case 4: X = 1711.9493, Y = -1791.0999, Z = 13.3402, A = 358.9088;
		case 5: X = 1706.8989, Y = -1791.0035, Z = 13.3421, A = 358.9088;
		case 6: X = 1718.0107, Y = -1773.2775, Z = 13.3418, A = 179.8748;
		case 7: X = 1722.8286, Y = -1773.2874, Z = 13.2753, A = 179.8748;
		case 8: X = 1727.9730, Y = -1773.2961, Z = 13.2426, A = 179.8757;
		case 9: X = 1732.9337, Y = -1773.3071, Z = 13.2479, A = 179.8757;
		case 10: X = 1743.0720, Y = -1764.4464, Z = 13.3537, A = 359.7155;
		case 11: X = 1738.1965, Y = -1764.4253, Z = 13.2788, A = 359.7117;
		case 12: X = 1733.0536, Y = -1764.3995, Z = 13.2592, A = 359.7115;
		case 13: X = 1728.1704, Y = -1764.3746, Z = 13.2592, A = 359.7115;
		case 14: X = 1723.1757, Y = -1764.3518, Z = 13.2960, A = 359.7090;
		case 15: X = 1718.0435, Y = -1764.3263, Z = 13.3713, A = 359.7085;
		case 16: X = 1713.1592, Y = -1764.3020, Z = 13.4564, A = 359.7076;
		case 17: X = 1708.2347, Y = -1764.2773, Z = 13.5459, A = 359.7086;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(rand1)
	{
	    case 0: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
	    case 1: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
	    case 2: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
     	case 3: CreatePersonalCarEx(560, playerid, X, Y, Z, A), ltext = "{FFFFFF}You earned Sultan Vehicle!\n{FFFFFF}Congratulations!";
     	case 4: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
     	case 5: CreatePersonalCarEx(541, playerid, X, Y, Z, A), ltext = "{FFFFFF}You earned Bullet Vehicle!\n{FFFFFF}Congratulations!";
     	case 6: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
     	case 7: CreatePersonalCarEx(411, playerid, X, Y, Z, A), ltext = "{FFFFFF}You earned Infernus Vehicle!!\n{FFFFFF}Congratulations!";
	    case 8: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
	    case 9: ltext = "{FFFFFF}This box was unlucky!\n{FFFFFF}You did not win anything!";
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "%s", ltext);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FFFFFF}Mystery box - This is your gain!", String, "Close", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Account Protection (48 hours locked) by Johnny
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CalculateAccountLocked()
{
    eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Accounts` SET `AccLocked` = '0' WHERE `AccLocked` >= '0'");
    mysql_tquery(SQL, eQuery, "", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i : Player)
	{
	    if(PlayerInfo[i][AccLocked] == 0) return PlayerInfo[i][AccLocked] = 0;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		else if(PlayerInfo[i][AccLocked] != 0)
		{
			if(gettime() > PlayerInfo[i][AccLocked]) PlayerInfo[i][AccLocked] = 0;
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock AccountProtect(playerid)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "{FF0000}Scuze dar nu poti folosi aceasta comanda acum!\n{FF0000}Incearca din nou peste %d ore!", floatround(((PlayerInfo[playerid][AccLocked]-gettime())/3600))+1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FF0000}Account Locked!", String, "Close", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Gang System
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:gang(playerid)
{
    new String[128], String2[128], gString[2048];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][GangID] != 0) format(String2, sizeof(String2), "%s", GangInfo[PlayerInfo[playerid][GangID]][GangName]);
	else format(String2, sizeof(String2), "None");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(gString, "{FF0000}Owner Commands\n\
					{FFA500}/reset {00CC00}- This command resets the gang from scratch.\n\
 					{FFA500}/csetrank {00CC00}- with this command you can set leader/co-leader to a member.\n\
		   	  		{FFA500}/settings {00CC00}- Show settings of gangs (Skins, Spawn, Name, etc...)!\n\
					{FFA500}/refreshall {00CC00}- Refresh all gang members weapon / skin.\n\n\
			   	    {FF0000}Leader Commands\n\
			   	    {FFA500}/capture start {00CC00}- Start capture adverse gang.\n\
			   	    {FFA500}/capture stop {00CC00}- Stop capturing.\n\
					{FFA500}/setrank {00CC00}- With this command you can set to a player with your gang, his rank.\n\
					{FFA500}/gwarn {00CC00}- With this command you can warn a member if hi does a mistake.\n\
					{FFA500}/gwar {00CC00}- Start a beat between the gangs\n\
				    {FFA500}/gresetwarns {00CC00}- With this command you can reset gang warns to a player.\n\n\
					{FF0000}Co-Leader Commands\n\
					{FFA500}/refresh {00CC00}- Refresh player weapons or skin.\n\
			        {FFA500}/invite {00CC00}- With this command, you can invite a player in your gang.\n\
			        {FFA500}/gkick {00CC00}- Kicking a member out of your gang!\n\
	          		{FFA500}/gscreen {00CC00}- Use this command if you want to gave an announce for members in your gang.\n\n\
					{FF0000}Member Commands\n\
					{FFA500}/capture join {00CC00}- Join in capturing gang.\n\
					{FFA500}/capture info {00CC00}- View detalis of capturing.\n\
					{FFA500}/garena {00CC00}- Play deathmatch with another gangs.\n\
					{FFA500}/gminigun {00CC00}- Acces to Gang Minigun.\n\
			   	    {FFA500}/lgang {00CC00}- Leave from gang.\n\
			   	    {FFA500}/mine {00CC00}- Plant mine of teritory gang!\n\
			   	    {FFA500}/gstats {00CC00}- Show your gang statistics!\n\
			        {FFA500}/opengate(/og) {00CC00}- Opening your gang gate!\n\
 					{FFA500}/closegate(/cg) {00CC00}- Closing your gang gate!\n\
		 			{FFA500}!text {00CC00}- Talk in gang chat!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, 128, "Gang - {FFFFFF}Rank: {FF0000}%s {FFFFFF}in {FF0000}%s{FFFFFF}!", GetPlayerGangRank(playerid), String2);
	return SPD(playerid, DIALOG_EMPTY, MSGBOX, String, gString, "Ok", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:base(ESS)
{
	if(PlayerInfo[playerid][GangID] < 1) return SendError(playerid, "You need to be in any gang to use this command!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_query(SQL, "SELECT * FROM `Gangs` ORDER BY `ID`");
	new rows; cache_get_row_count(rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i; i < rows; i++)
	{
		new gName[64], GetColor;
		CACHE(i, "pGangColor", GetColor);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CONTENT(i, "GangName", gName);
	 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	format(eString, sizeof(eString), "%s\n{%06x}%s", eString, GetColor >>> 8, gName);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_BASE_TELEPORT, LIST, "Gang Bases", eString, "Teleport", "Close");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
CMD:gangs(playerid)
{
	new Count, String[1048], String2[1024], String3[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_query(SQL, "SELECT * FROM `Gangs` ORDER BY `GangPoints` DESC");
	new total; cache_get_row_count(total);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(total == 0) return SendError(playerid, "No gangs found in database!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	for(new i; i < total; i++)
	{
		new gName[64], ByPoints, GetCaptures, GetColor;
		CACHE(i, "GangPoints", ByPoints);
		CACHE(i, "GangCaptures", GetCaptures);
		CACHE(i, "pGangColor", GetColor);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CONTENT(i, "GangName", gName);
	 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	format(String2, sizeof(String2), "%s\n{%06x}%s\t%d\t%d", String2, GetColor >>> 8, gName, ByPoints, GetCaptures);
 		format(String, sizeof(String), "\tName\tPoints\tCaptures\n%s", String2);
	 	Count++;
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String3, sizeof(String3), "{FFFFFF}Show All Gangs - {FF0000}%d {FFFFFF}Total Gangs!", total);
	SPD(playerid, DIALOG_EMPTY, HEADERS, String3, String, "Close", "");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:gm(ESS)
{
	if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "You must be in a gang to use this command!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Gang_Rank_Name[20], dString[256], CapturingStatus[50], BRBStatus[50], II;
	aString[0] = EOS, eBigString[0] = EOS, eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(Player, i)
	{
	    if(PlayerInfo[playerid][GangID] == PlayerInfo[i][GangID])
	    {
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            if(PlayerInfo[i][Capturing] != 0)		  CapturingStatus = "{FF0000}(Capturing)";
	        else if(PlayerInfo[i][Capturing] == 0)	  CapturingStatus = "";
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        if(PlayerInfo[i][AFKBRB] >= 1)		      BRBStatus = "{EAFF00}(AFK)";
	        else if(PlayerInfo[i][AFKBRB] == 0)		  BRBStatus = "";
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        switch(PlayerInfo[i][g_Rank])
	        {
	    		case 1: Gang_Rank_Name = "Member Rank 1";
                case 2: Gang_Rank_Name = "Member Rank 2";
		        case 3: Gang_Rank_Name = "Member Rank 3";
		        case 4: Gang_Rank_Name = "Member Rank 4";
                case 5: Gang_Rank_Name = "Member Rank 5";
		        case 6: Gang_Rank_Name = "Co-Leader";
		        case 7: Gang_Rank_Name = "Leader";
		        case 8: Gang_Rank_Name = "Owner";
	        }
			format(eString, sizeof(eString), "{67FF30}%s {FFFFFF}(%d) {00B7FF}%s %s %s\n%s", PN(i), i, Gang_Rank_Name, CapturingStatus, BRBStatus, eString);
			II++;
		}
		if(GangInfo[PlayerInfo[i][GangID]][AllianceID] == PlayerInfo[playerid][GangID])
		{
		    format(eBigString, sizeof(eBigString), "{D1D1D1}%s {FFFFFF}(%d)\n%s", PN(i), i, eBigString);
		}
		format(aString, sizeof(aString), "%s\n%s", eString, eBigString);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(dString, sizeof(dString), "{67FF30}Online members - {00B7FF}%d {67FF30}& {00B7FF}%d {67FF30}Allies", GetConnectedGangMembers(PlayerInfo[playerid][GangID]), GetConnectedGangAllianceM(PlayerInfo[playerid][GangID]));
	return SPD(playerid, DIALOG_EMPTY, LIST, dString, aString, "Ok", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:garena(ESS)
{
	if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "You must be in a gang to use this command!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerCameraPos(playerid, -596.726379, 3256.491455, 67.280899);
    SetPlayerCameraLookAt(playerid, -592.848815, 3253.652587, 65.900619);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    TogglePlayerControllable(playerid, false);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerPos(playerid, -596.726379, 3256.491455, 63.280899);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerVirtualWorld(playerid, 13394);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerInterior(playerid, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][GarenaTimer] = SetTimerEx("SpawnPlayerAtGarena", 5000, false, "i", playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][InGarena] = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~G~~H~Gangs arena~N~~R~~H~Please wait", 3000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return true;
}
function SpawnPlayerAtGarena(playerid)
{
	if(PlayerInfo[playerid][InGarena] == 1)
	{
		new rPos = random(8), gID = PlayerInfo[playerid][GangID];
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		switch(rPos)
		{
		    case 0: SetPlayerPos(playerid, -389.2828,3187.1201,6.6195);
		    case 1: SetPlayerPos(playerid, -531.6813,3187.5732,6.6195);
		    case 2: SetPlayerPos(playerid, -516.4283,3096.9395,6.5723);
		    case 3: SetPlayerPos(playerid, -448.2926,3161.6553,6.5723);
		    case 4: SetPlayerPos(playerid, -376.9788,3010.4102,6.5987);
		    case 5: SetPlayerPos(playerid, -545.8058,3028.5015,6.5787);
		    case 6: SetPlayerPos(playerid, -582.9924,3088.0779,6.5723);
		    case 7: SetPlayerPos(playerid, -531.4685,3242.4290,6.5923);
		}
		TogglePlayerControllable(playerid, true);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetCameraBehindPlayer(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Announce(playerid, "~G~~H~Good luck!", 3000, 3);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ResetPlayerWeapons(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GivePlayerMultiWeapons(playerid, GangInfo[gID][GangWeapon1], 9999, GangInfo[gID][GangWeapon2], 9999, GangInfo[gID][GangWeapon3], 9999, GangInfo[gID][GangWeapon4], 9999, GangInfo[gID][GangWeapon5], 9999, GangInfo[gID][GangWeapon6], 9999);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		LoadObjectsProtection(playerid);
	}
	return true;
}
function ReturnPlayerToGarena(playerid)
{
    SetPlayerCameraPos(playerid, -596.726379, 3256.491455, 67.280899);
    SetPlayerCameraLookAt(playerid, -592.848815, 3253.652587, 65.900619);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    TogglePlayerControllable(playerid, false);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerPos(playerid, -596.726379, 3256.491455, 63.280899);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerVirtualWorld(playerid, 13394);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    SetPlayerInterior(playerid, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][GarenaTimer] = SetTimerEx("SpawnPlayerAtGarena", 5000, false, "i", playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][InGarena] = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~G~~H~Gangs arena~N~~R~~H~Please wait", 3000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
CMD:gscreen(ESS)
{
	if(PlayerInfo[playerid][g_Rank] < 6) return SendError(playerid, "You need to have Gang Co-Leader to use this command!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new Text[128]; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "s[128]", Text)) return SendUsage(playerid, "/gscreen [Text]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, 256, "~r~~h~%s~n~~b~'~w~%s~b~'", PN(playerid), Text);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID]) Announce(i, eString, 5000, 4);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ShowGangInfo(playerid, gID)
{
	new GangInfoTitle[1000]; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 1; i < TotalGangs+1; i++)
	{
		format(eString, sizeof(eString), "%s\n{%06x}%s{D1D1D1} - {00CC00}%d {D1D1D1}Points\n%s",
		eString, GangInfo[i][pGangColor] >>> 8, GangInfo[i][GangName], GangInfo[i][Points]);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(gID < 1 || gID > TotalGangs) return SPD(playerid, DIALOG_GANG, LIST, "{D1D1D1}Gangs", eString, "Select", "Close");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new string[258],string2[258],string3[258],string4[258],string5[258],string6[258],string7[258],string8[258],string9[258],string10[258],string11[258],string12[258],string13[258],string14[258],string15[258];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetGVarString("Description1", string, sizeof string, gID);
	GetGVarString("Description2", string2, sizeof string2, gID);
	GetGVarString("Description3", string3, sizeof string3, gID);
	GetGVarString("Description4", string4, sizeof string4, gID);
	GetGVarString("Description5", string5, sizeof string5, gID);
	GetGVarString("Description6", string6, sizeof string6, gID);
	GetGVarString("Description7", string7, sizeof string7, gID);
    GetGVarString("Description8", string8, sizeof string8, gID);
    GetGVarString("Description9", string9, sizeof string9, gID);
    GetGVarString("Description10", string10, sizeof string10, gID);
    GetGVarString("Description11", string11, sizeof string11, gID);
    GetGVarString("Description12", string12, sizeof string12, gID);
    GetGVarString("Description13", string13, sizeof string13, gID);
    GetGVarString("Description14", string14, sizeof string14, gID);
    GetGVarString("Description15", string15, sizeof string15, gID);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(GangInfoTitle, 1000, "{%06x}%s{D1D1D1}'s informations", GangInfo[gID][pGangColor] >>> 8, GangInfo[gID][GangName]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof eString, "%s%s\n\
									    %s\n\
									    %s\n\
									    %s\n\
										%s\n\
										%s\n\
										%s\n\
										%s\n\
										%s\n\
										%s\n\
										%s\n\
										%s\n\
										%s\n\
										%s\n\
										%s\n\n",eString,string,string2,string3,string4,string5,string6,string7,string8,string9,string10,string11,string12,string13,string14,string15);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][GangID] == gID && PlayerInfo[playerid][g_Rank] > 7)
	{
		SPD(playerid, DIALOG_GANG + 1, 0, GangInfoTitle, eString, "Description", "OK" );
	}
	else
	{
	    SPD(playerid, DIALOG_EMPTY, 0, GangInfoTitle, eString, "OK", "" );
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
CMD:ginfo(ESS)
{
	new iD;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "i", iD)) return ShowGangInfo(playerid, PlayerInfo[playerid][GangID]);
	else return ShowGangInfo(playerid, iD);
}
CMD:gstats(ESS)
{
	new liPlayer, caption[128]; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!sscanf(params, "u", liPlayer))
	{
        if(!IsPlayerConnected(liPlayer)) return Error(playerid, 10);
        //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[liPlayer][GangID] == 0) return SendError(playerid, "Player is not in any gang.");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(caption, sizeof(caption), "{FF0000}%s{00CC00}'s Gang statistics %s", PN(liPlayer), GetPlayerGangWarns(liPlayer));
		return SPD(playerid, DIALOG_EMPTY, MSGBOX, caption, ShowGangStats(liPlayer), "Ok", "");
	}
	else
	{
		if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "Your are not in any gang.");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		format(caption, sizeof(caption), "{FF0000}%s{00CC00}'s Gang statistics %s", PN(playerid), GetPlayerGangWarns(playerid));
		return SPD(playerid, DIALOG_EMPTY, MSGBOX, caption, ShowGangStats(playerid), "Ok", "");
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ReturnPlayerToGangWar(playerid)
{
    new Player = PlayerInfo[playerid][gWarPlayer];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][GangWarRank] == 1)
	{
	    SetPlayerInterior(playerid, PlayerInfo[playerid][gWarLocation][1]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][gWarLocation][2]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetPlayerPos(playerid, PlayerInfo[playerid][GwarLocPos][0], PlayerInfo[playerid][GwarLocPos][1], PlayerInfo[playerid][GwarLocPos][2]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		ResetPlayerWeapons(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GivePlayerMultiWeapons(playerid, PlayerInfo[playerid][gWarWeapons][0], 9999, PlayerInfo[playerid][gWarWeapons][1], 9999, PlayerInfo[playerid][gWarWeapons][2], 9999, PlayerInfo[playerid][gWarWeapons][3], 9999, PlayerInfo[playerid][gWarWeapons][4], 9999);
	}
	else if(PlayerInfo[playerid][GangWarRank] == 2)
	{
	    SetPlayerInterior(playerid, PlayerInfo[Player][gWarLocation][1]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetPlayerVirtualWorld(playerid, PlayerInfo[Player][gWarLocation][2]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetPlayerPos(playerid, PlayerInfo[Player][GwarLocPos][3], PlayerInfo[Player][GwarLocPos][4], PlayerInfo[Player][GwarLocPos][5]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    ResetPlayerWeapons(playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GivePlayerMultiWeapons(playerid, PlayerInfo[Player][gWarWeapons][0], 9999, PlayerInfo[Player][gWarWeapons][1], 9999, PlayerInfo[Player][gWarWeapons][2], 9999, PlayerInfo[Player][gWarWeapons][3], 9999, PlayerInfo[Player][gWarWeapons][4], 9999);
	}
}
function HidePlayerGangTextDraw(playerid)
{
    new Player = PlayerInfo[playerid][gWarPlayer];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerTextDrawHide(playerid, gWarText[0]);
    PlayerTextDrawHide(playerid, gWarText[1]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerTextDrawHide(Player, gWarText[0]);
    PlayerTextDrawHide(Player, gWarText[1]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return true;
}
function UpdateGangWarTextDraw(playerid)
{
    new Player = PlayerInfo[playerid][gWarPlayer], string[123], string2[123];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerTextDrawColor(playerid, gWarText[0], GangInfo[PlayerInfo[playerid][GangID]][pGangColor]);
    PlayerTextDrawColor(playerid, gWarText[1], GangInfo[PlayerInfo[Player][GangID]][pGangColor]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerTextDrawColor(Player, gWarText[0], GangInfo[PlayerInfo[playerid][GangID]][pGangColor]);
    PlayerTextDrawColor(Player, gWarText[1], GangInfo[PlayerInfo[Player][GangID]][pGangColor]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(string, sizeof(string), "%s: ~R~~H~%d", GangInfo[PlayerInfo[playerid][GangID]][GangName], PlayerInfo[playerid][gWarPoints]);
    format(string2, sizeof(string2), "%s: ~R~~H~%d", GangInfo[PlayerInfo[Player][GangID]][GangName], PlayerInfo[Player][gWarPoints]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerTextDrawSetString(playerid, gWarText[0], string);
	PlayerTextDrawSetString(playerid, gWarText[1], string2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerTextDrawSetString(Player, gWarText[0], string);
	PlayerTextDrawSetString(Player, gWarText[1], string2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerTextDrawShow(playerid, gWarText[0]);
	PlayerTextDrawShow(playerid, gWarText[1]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerTextDrawShow(Player, gWarText[0]);
	PlayerTextDrawShow(Player, gWarText[1]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
function ProgresToGangWar(playerid)
{
	new Player = PlayerInfo[playerid][gWarPlayer];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerInterior(playerid, PlayerInfo[Player][gWarLocation][1]);
	SetPlayerInterior(Player, PlayerInfo[Player][gWarLocation][1]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerVirtualWorld(playerid, PlayerInfo[Player][gWarLocation][2]);
	SetPlayerVirtualWorld(Player, PlayerInfo[Player][gWarLocation][2]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerPos(playerid, PlayerInfo[Player][GwarLocPos][3], PlayerInfo[Player][GwarLocPos][4], PlayerInfo[Player][GwarLocPos][5]);
	SetPlayerPos(Player, PlayerInfo[Player][GwarLocPos][0], PlayerInfo[Player][GwarLocPos][1], PlayerInfo[Player][GwarLocPos][2]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][InGangWar] = 1;
	PlayerInfo[Player][InGangWar] = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ResetPlayerWeapons(playerid);
	ResetPlayerWeapons(Player);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GivePlayerMultiWeapons(playerid, PlayerInfo[Player][gWarWeapons][0], 9999, PlayerInfo[Player][gWarWeapons][1], 9999, PlayerInfo[Player][gWarWeapons][2], 9999, PlayerInfo[Player][gWarWeapons][3], 9999, PlayerInfo[Player][gWarWeapons][4], 9999);
	GivePlayerMultiWeapons(Player, PlayerInfo[Player][gWarWeapons][0], 9999, PlayerInfo[Player][gWarWeapons][1], 9999, PlayerInfo[Player][gWarWeapons][2], 9999, PlayerInfo[Player][gWarWeapons][3], 9999, PlayerInfo[Player][gWarWeapons][4], 9999);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~G~~H~Success!", 3000, 3), Announce(Player, "~G~~H~Success!", 3000, 3);
	PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0), PlayerPlaySound(Player, 1057, 0.0, 0.0, 0.0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][gWarUpdateTimer] = SetTimerEx("UpdateGangWarTextDraw", 500, true, "i", playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
function InviteToGwar(playerid, Player)
{
	new string[543], string2[654];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(string, sizeof(string), "{00FF22}You have been invited {FF0000}%s {00FF22}to a gang war with you!\n\
									{00FF22}Gangs: {FFFF00}%s {00CC00}vs {FFFF00}%s{00FF22}!\n\
									{00FF22}Location: {FF0000}%s\n\
									{00FF22}Now you need to wait to accept your invitation!", PN(Player), GangInfo[PlayerInfo[Player][GangID]][GangName], GangInfo[PlayerInfo[playerid][GangID]][GangName], ShowGwarArenaName(playerid));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FFFFFF}Gang War {FF0000}- {FFFFFF}Invitation", string,"Ok", "");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(string2, sizeof(string2), "{00FF22}Hello {FF0000}%s{FFFFFF}!\n\n\
									  {FF0000}%s {00FF22}has been invited you to a gang war with he!\n\
									  {00FF22}Gangs: {FFFF00}%s{FF0000} vs{FFFF00} %s{00FF22}!\n\
									  {00FF22}Location: {FF0000}%s\n\
									  {FFFF00}Note: {00FF22}When you accept the invitation\n\
									  {00FF22}You need to wait 5 seconds to proced in the gang war!", PN(Player), PN(playerid), GangInfo[PlayerInfo[Player][GangID]][GangName], GangInfo[PlayerInfo[playerid][GangID]][GangName], ShowGwarArenaName(playerid));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(Player, DIALOG_GWAR + 2, MSGBOX, "{FFFFFF}Gang War {FF0000}- {FFFFFF}Invitation", string2, "Accept", "Decline");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[Player][gWarPlayer] = playerid;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][GangWarRank] = 1;
	PlayerInfo[Player][GangWarRank] = 2;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;

}
function SetGwarArenaIdentify(playerid, arenaid)
{
	if(arenaid == 1)
	{
		PlayerInfo[playerid][gWarLocation][0] = 1;
		PlayerInfo[playerid][gWarLocation][1] = 3;
		PlayerInfo[playerid][gWarLocation][2] = PlayerInfo[playerid][GangID] + arenaid + playerid;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][GwarLocPos][0] = 288.6105;
		PlayerInfo[playerid][GwarLocPos][1] = 169.4368;
		PlayerInfo[playerid][GwarLocPos][2] = 1007.1719;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][GwarLocPos][3] = 238.6872;
		PlayerInfo[playerid][GwarLocPos][4] = 141.0524;
		PlayerInfo[playerid][GwarLocPos][5] = 1003.0234;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_GWAR, HEADERS, ShowPlayerGwarPlayer(playerid), ShowPlayerGWarStatus(playerid), "Select", "Cancel");
	}
	else if(arenaid == 2)
	{
		PlayerInfo[playerid][gWarLocation][0] = 2;
		PlayerInfo[playerid][gWarLocation][1] = 1;
		PlayerInfo[playerid][gWarLocation][2] = PlayerInfo[playerid][GangID] + arenaid + playerid;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][GwarLocPos][0] = 2170.3474;
		PlayerInfo[playerid][GwarLocPos][1] = 1618.9030;
		PlayerInfo[playerid][GwarLocPos][2] = 999.9766;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][GwarLocPos][3] = 2220.1838;
		PlayerInfo[playerid][GwarLocPos][4] = 1551.8339;
		PlayerInfo[playerid][GwarLocPos][5] = 1004.7188;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_GWAR, HEADERS, ShowPlayerGwarPlayer(playerid), ShowPlayerGWarStatus(playerid), "Select", "Cancel");
	}
	else if(arenaid == 3)
	{
		PlayerInfo[playerid][gWarLocation][0] = 3;
		PlayerInfo[playerid][gWarLocation][1] = 18;
		PlayerInfo[playerid][gWarLocation][2] = PlayerInfo[playerid][GangID] + arenaid + playerid;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][GwarLocPos][0] = 1298.0981;
		PlayerInfo[playerid][GwarLocPos][1] = 5.1077;
		PlayerInfo[playerid][GwarLocPos][2] = 1001.0247;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		PlayerInfo[playerid][GwarLocPos][3] = 1251.5673;
		PlayerInfo[playerid][GwarLocPos][4] = -45.8259;
		PlayerInfo[playerid][GwarLocPos][5] = 1001.0294;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SPD(playerid, DIALOG_GWAR, HEADERS, ShowPlayerGwarPlayer(playerid), ShowPlayerGWarStatus(playerid), "Select", "Cancel");
	}
	return true;
}
stock ShowGwarArenaName(playerid)
{
	new arenaname[36];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][gWarLocation][0] == 0) arenaname = "Not selected";
	else if(PlayerInfo[playerid][gWarLocation][0] == 1) arenaname = "LV police HQ";
	else if(PlayerInfo[playerid][gWarLocation][0] == 2) arenaname = "Catigula's basement";
	else if(PlayerInfo[playerid][gWarLocation][0] == 3) arenaname = "Warehouse 2";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return arenaname;
}
function ResetGwarVariables(playerid)
{
	PlayerInfo[playerid][gWarPlayer] = -1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][gWarWeapons][0] = 0;
	PlayerInfo[playerid][gWarWeapons][1] = 0;
	PlayerInfo[playerid][gWarWeapons][2] = 0;
	PlayerInfo[playerid][gWarWeapons][3] = 0;
	PlayerInfo[playerid][gWarWeapons][4] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][gWarLocation][0] = 0;
	PlayerInfo[playerid][gWarLocation][1] = 0;
	PlayerInfo[playerid][gWarLocation][2] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][gWarPoints] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
stock ShowPlayerGWarStatus(playerid)
{
	new gwarstatus[232];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(gwarstatus, sizeof(gwarstatus), "Description\tStatus\n\
											{FF0000}Weapons\t{00FF22}Automatically\n\
											{FF0000}Arena\t{00FF22}%s\n\
											{FF0000}Invite\t{00FF22}%s", ShowGwarArenaName(playerid), PN(PlayerInfo[playerid][gWarPlayer]));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return gwarstatus;
}
stock ShowPlayerGwarPlayer(playerid)
{
	new gwarplayer[24];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(gwarplayer, sizeof(gwarplayer), "%s", PN(PlayerInfo[playerid][gWarPlayer]));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return gwarplayer;
}
CMD:gwar(ESS)
{
	new Player;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "You are not in any gang to use this command");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][g_Rank] < 7) return SendError(playerid, "You need to be Gang Leader to use this command!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "u", Player)) return SendUsage(playerid, "/gwar [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(Player) || Player == playerid) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[Player][g_Rank] < 7) return SendError(playerid, "This player is not Leader in his gang!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[Player][GangID] == PlayerInfo[playerid][GangID]) return SendError(playerid, "This player is in your gang!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInSpecialZone(Player) == 1) return SendError(playerid, "This player in a special zone!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][gWarPlayer] = Player;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][gWarLocation][0] = 0;
	PlayerInfo[playerid][gWarLocation][1] = 0;
	PlayerInfo[playerid][gWarLocation][2] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][gWarWeapons][0] = 24;
	PlayerInfo[playerid][gWarWeapons][1] = 25;
	PlayerInfo[playerid][gWarWeapons][2] = 31;
	PlayerInfo[playerid][gWarWeapons][3] = 33;
	PlayerInfo[playerid][gWarWeapons][4] = 34;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_GWAR, HEADERS, ShowPlayerGwarPlayer(playerid), ShowPlayerGWarStatus(playerid), "Select", "Cancel");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
CMD:gwarn(ESS)
{
	if(PlayerInfo[playerid][g_Rank] < 8) return SendError(playerid, "You need to be Gang Owner to use this command!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new Player, WarnType[5], lsReason[64]; eString[0] = EOS;
	new giid = PlayerInfo[playerid][GangID];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "us[10]S", Player, WarnType, lsReason)) return SendUsage(playerid, "/gwarn [ID/Name] [-1/1] [Reason(Optional)]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(Player) || Player == playerid) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[Player][GangID] == PlayerInfo[playerid][GangID])
	{
	    if(PlayerInfo[Player][g_Rank] > PlayerInfo[playerid][g_Rank]) return SendError(playerid, "You can't warn a higher rank member!");
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(WarnType, "-1", true) == 0)
	{
		if(PlayerInfo[Player][gWarnInGang][giid] != 0)
		{
		    PlayerInfo[Player][gWarnInGang][giid] --;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    foreach(new i: Player)
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(PlayerInfo[i][GangID] == giid)
		    {
			  format(eString, 512, "%s has been un-warnend in gang by %s, %d/5 warns!", PN(Player), PN(playerid), PlayerInfo[Player][gWarnInGang][giid]);
			  SCM(i, YELLOW, eString);
			}
		}
		else return SendError(playerid, "The player doesn't have warns in this gang!");
	}
	else if(strcmp(WarnType, "1", true) == 0)
	{
	    if(PlayerInfo[Player][gWarnInGang][giid] >= 4)
	    {
	        foreach(new i: Player)
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(PlayerInfo[Player][GangID] == giid)
		    {
		        if(PlayerInfo[Player][GangID] == giid)
		        {
			        if(PlayerInfo[Player][gWarnInGang][giid] == 5) return SendError(playerid, "This player already has been banned from this gang!");
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    	if(isnull(lsReason))
	    			{
					    format(eString, 512, "%s has been banned from the gang by %s, %d/5 warns!", PN(Player), PN(playerid), PlayerInfo[Player][gWarnInGang][giid]);
					    SCM(i, YELLOW, eString);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    RemovePlayerFromGang(Player);
					    PlayerInfo[Player][gWarnInGang][giid] = 5;
					}
					else
					{
					    format(eString, 512, "%s has been banned from the gang by %s, reason: %s, %d/5 warns!", PN(Player), PN(playerid), lsReason, PlayerInfo[Player][gWarnInGang][giid]);
					    SCM(i, YELLOW, eString);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    RemovePlayerFromGang(Player);
					    PlayerInfo[Player][gWarnInGang][giid] = 5;
					}
				}
				else
				{
				    if(PlayerInfo[Player][gWarnInGang][giid] == 5) return SendError(playerid, "This player already has been banned from this gang!");
			        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    	if(isnull(lsReason))
	    			{
					    format(eString, 512, "%s has been banned from the gang by %s, %d/5 warns!", PN(Player), PN(playerid), PlayerInfo[Player][gWarnInGang][giid]);
					    SCM(i, YELLOW, eString);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    PlayerInfo[Player][gWarnInGang][giid] = 5;
					}
					else
					{
					    format(eString, 512, "%s has been banned from the gang by %s, reason: %s, %d/5 warns!", PN(Player), PN(playerid), lsReason, PlayerInfo[Player][gWarnInGang][giid]);
					    SCM(i, YELLOW, eString);
					    //++++++++++++++++++++++++++++++++++++++++++++++++++++++
					    PlayerInfo[Player][gWarnInGang][giid] = 5;
					}
				}
			}
	    }
	    else
	    {
	    	PlayerInfo[Player][gWarnInGang][giid] ++;
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    foreach(new i: Player)
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(PlayerInfo[i][GangID] == giid)
		    {
		        if(isnull(lsReason))
    			{
				    format(eString, 512, "%s has been warnend in gang by %s, %d/5 warns!", PN(Player), PN(playerid), PlayerInfo[Player][gWarnInGang][giid]);
				    SCM(i, YELLOW, eString);
				}
				else
				{
				    format(eString, 512, "%s has been warnend in gang by %s, reason: %s, %d/5 warns!", PN(Player), PN(playerid), lsReason, PlayerInfo[Player][gWarnInGang][giid]);
				    SCM(i, YELLOW, eString);
				}
			}
	    }
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:gkick(ESS)
{
	if(PlayerInfo[playerid][g_Rank] < 6) return SendError(playerid, "You need to be Gang Co-Leader to use this command!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new Player, szReason[56]; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "us[56]", Player, szReason)) return
	SendUsage(playerid, "/gkick [ID/Name] [Reason]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(Player) || Player == playerid) return Error(playerid, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[Player][GangID] != PlayerInfo[playerid][GangID]) return
	SendError(playerid, "The user is in other gang!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[Player][g_Rank] > PlayerInfo[playerid][g_Rank]) return
	SendError(playerid, "You can't kick this player from gang!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[Player][g_Rank] == 8) return
	SendError(playerid, "You are not allowed to kick this player!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strlen(szReason) < 2 || strlen(szReason) > 56) return
	SendError(playerid, "Invalid reason size !");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player)
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID])
    {
	  format(eString, 512, "%s has been kicked from gang by %s. Reason: %s!", PN(Player), PN(playerid), szReason);
	  SCM(i, YELLOW, eString);
	}
	return RemovePlayerFromGang(Player);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:gtank(ESS)
{
    if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "You are not member of any gang!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][GangTank] < 1) return SendError(playerid, "You are not allowed to use this command! Ask an gang owner for access!");
	return CarSpawner(playerid, 432);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:giveaccess(ESS)
{
    if(PlayerInfo[playerid][g_Rank] < 8) return SendError(playerid, "You need to be Gang Owner to use this command!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "u", params[0])) return SendUsage(playerid, "/giveaccess [ID/Name]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(!IsPlayerConnected(params[0])) return Error(playerid, 10);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[params[0]][LoggedIn] == 0) return SendError(playerid, "Player must be registered and logged in!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[params[0]][GangID] != PlayerInfo[playerid][GangID]) return SendError(playerid, "The user is in other gang!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[params[0]][GangID] == 0) return SendError(playerid, "This player is not in a gang!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    switch(PlayerInfo[params[0]][GangTank])
    {
		case 0: return PlayerInfo[params[0]][GangTank] = 1, format(eString, sizeof(eString), "{66FF66}%s has given access to gang tank to %s!", PN(playerid), PN(params[0])), SendGangMessage(PlayerInfo[playerid][GangID], eString);
    	case 1: return PlayerInfo[params[0]][GangTank] = 0, format(eString, sizeof(eString), "{66FF66}%s has removed access to gang tank to %s!", PN(playerid), PN(params[0])), SendGangMessage(PlayerInfo[playerid][GangID], eString);
    }
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:lgang(playerid)
{
    if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "You are not member of any Gang!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new String[512];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(PlayerInfo[playerid][Language])
	{
	    case 1:
	    {
		     format(String, sizeof(String), "{00CC00}Buna{FF0000} %s{00CC00}!\n\
										     {00CC00}Esti sigur ca vrei sa parasesti gang-ul{FF0000} %s{00CC00} ?\n\
										     \n\
										     {FFFFFF}Aceasta actiune este ireversibila, te poti intoarce doar cu invitatie!", PN(playerid), GangInfo[PlayerInfo[playerid][GangID]][GangName]);
		     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             SPD(playerid, DIALOG_LGANG, MSGBOX, "{FF0000}Paraseste gang-ul", String, "Nu", "Da");
	    }
	    case 2:
		{
             format(String, sizeof(String), "{00CC00}Hello{FF0000} %s{00CC00}!\n\
								   			 {00CC00}Are you sure that you want to leave{FF0000} %s{00CC00} clan ?\n\
								   			 \n\
								   			 {FFFFFF}This action is ireverssible, you can only return back by invite!", PN(playerid), GangInfo[PlayerInfo[playerid][GangID]][GangName]);
		     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             SPD(playerid, DIALOG_LGANG, MSGBOX, "{FF0000}Leave gang", String, "No", "Yes");
	    }
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:setgskin(ESS)
{
    new liSkin, Player, String[124], String2[124];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][g_Rank] < 6) return SendError(playerid, "You need to be Gang Co-Leader to use this command!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "ui", Player, liSkin)) return SendUsage(playerid, "/setgskin [ID/Name] [Skin ID]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!IsPlayerConnected(Player)) return Error(playerid, 10);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(liSkin < 1 || liSkin > 311) return SendError(playerid, "Invaild Skin!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[Player][GangID] != PlayerInfo[playerid][GangID]) return SendError(playerid, "Player is not in your gang!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "%s has set your gang skin to %d!", PN(playerid), liSkin);
	SCM(Player, YELLOW, String);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String2, sizeof(String2), "You have set %s gang skin to %d!", PN(Player), liSkin);
	SCM(playerid, YELLOW, String2);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerSkin(Player, liSkin), PlayerInfo[Player][g_Skin] = liSkin;
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:reset(ESS)
{
	new reset[500];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][g_Rank] < 8) return SendError(playerid, "You don't have Owner rank or the gang is captured!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(reset, "Option                         \tDescription\n\
                 {FF0000}Reset Members            \t{FFFFFF}All members will be kicked from this gang\n\
                 {FF0000}Reset Co-Leaders         \t{FFFFFF}All co-leaders will be kicked from this gang\n\
                 {FF0000}Reset Leaders            \t{FFFFFF}All leaders will be kicked from this gang\n\
                 {FF0000}Reset All                \t{FFFFFF}All members, co-leaders and leaders will be kicked from this gang\n\
                 {FF0000}Custom Reset             \t{FFFFFF}Reset by gangpoints");
	return SPD(playerid, DIALOG_RESET, HEADERS, "{FF0000}Gang Reset", reset, "Select", "Close");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:repair(ESS)
{
    if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "You are not in any gang!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InRepair] == 5) return SendError(playerid, "You are already repair the gang gate!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new Float:x, Float:y, Float:z; GetPlayerPos(playerid, x, y, z);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_GANGS; i++)
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(IsPlayerInRangeOfPoint(playerid, 15.0, GateInfo[i][GatePos][1], GateInfo[i][GatePos][2], GateInfo[i][GatePos][3]))
	{
	    if(PlayerInfo[playerid][GangID] != GateInfo[i][GateGang]) return SendError(playerid, "You are not member in this gang!");
		if(GangInfo[i][Gate_Status] != 1) return SendError(playerid, "Your gate are not destroyed!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetTimerEx("RepairGate", 5000, false, "i", playerid), SetTimerEx("RepairGateTD", 999, false, "i", playerid);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    RPG = SetPlayerCheckpoint(playerid, x, y, z, 2.0), PlayerInfo[playerid][RPG2] = 1, PlayerInfo[playerid][InRepair] = 1, PlayerInfo[playerid][RepairTime] = 5;
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:ganglift(ESS)
{
    if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "You are not in any gang!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_GANGS; i++)
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(strcmp(params, "up", true) == 0)
	{
	  	if(IsPlayerInRangeOfPoint(playerid, 15.0, LiftInfo[i][LiftPosTo][1], LiftInfo[i][LiftPosTo][2], LiftInfo[i][LiftPosTo][3]))
	  	{
	    	if(PlayerInfo[playerid][GangID] == LiftInfo[i][LiftGang])
	    	{
				MoveDynamicObject(GangLift[i], LiftInfo[i][LiftPos][1], LiftInfo[i][LiftPos][2], LiftInfo[i][LiftPos][3], 6);
			}
			else return SendError(playerid, "You are not member in this gang!");
	  	}
	  	else if(IsPlayerInRangeOfPoint(playerid, 15.0, LiftInfo[i][LiftPos][1], LiftInfo[i][LiftPos][2], LiftInfo[i][LiftPos][3]))
	  	{
	    	if(PlayerInfo[playerid][GangID] == LiftInfo[i][LiftGang])
	    	{
				MoveDynamicObject(GangLift[i], LiftInfo[i][LiftPos][1], LiftInfo[i][LiftPos][2], LiftInfo[i][LiftPos][3], 6);
			}
			else return SendError(playerid, "You are not member in this gang!");
	  	}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(strcmp(params, "down", true) == 0)
	{
		if(IsPlayerInRangeOfPoint(playerid, 15.0, LiftInfo[i][LiftPos][1], LiftInfo[i][LiftPos][2], LiftInfo[i][LiftPos][3]))
	  	{
			if(PlayerInfo[playerid][GangID] == LiftInfo[i][LiftGang])
	    	{
				MoveDynamicObject(GangLift[i], LiftInfo[i][LiftPosTo][1], LiftInfo[i][LiftPosTo][2], LiftInfo[i][LiftPosTo][3], 6);
			}
			else return SendError(playerid, "You are not member in this gang!");
	  	}
	  	else if(IsPlayerInRangeOfPoint(playerid, 15.0, LiftInfo[i][LiftPosTo][1], LiftInfo[i][LiftPosTo][2], LiftInfo[i][LiftPosTo][3]))
	  	{
	    	if(PlayerInfo[playerid][GangID] == LiftInfo[i][LiftGang])
	    	{
				MoveDynamicObject(GangLift[i], LiftInfo[i][LiftPosTo][1], LiftInfo[i][LiftPosTo][2], LiftInfo[i][LiftPosTo][3], 6);
			}
   			else return SendError(playerid, "You are not member in this gang!");
	  	}
	}
	else return SendUsage(playerid, "/ganglift [Up / Down]"); return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CloseGate(gID)
{
    MoveDynamicObject(GangGate[gID], GateInfo[gID][GatePos][1], GateInfo[gID][GatePos][2], GateInfo[gID][GatePos][3], 9);
	return true;
}
CMD:g(ESS)
{
    if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "You are not in any gang!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_GANGS; i++)
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInRangeOfPoint(playerid, 15.0, GateInfo[i][GatePos][1], GateInfo[i][GatePos][2], GateInfo[i][GatePos][3]))
	{
	    if(GangInfo[i][Gate_Status] != 0) return SendError(playerid, "This gang gate is destroyed. If you are a member of this gang, type /repair!");
	    if(PlayerInfo[playerid][GangID] != GateInfo[i][GateGang] || PlayerInfo[playerid][GangID] == GangInfo[i][AllianceID]) return SendError(playerid, "You are not member in this gang!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		MoveDynamicObject(GangGate[i], GateInfo[i][GatePos][1], GateInfo[i][GatePos][2], GateInfo[i][GatePos][3]-10, 9);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetTimerEx("CloseGate", 4500, false, "i", i);
	}
	return true;
}
CMD:og(ESS)
{
    if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "You are not in any gang!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_GANGS; i++)
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInRangeOfPoint(playerid, 15.0, GateInfo[i][GatePos][1], GateInfo[i][GatePos][2], GateInfo[i][GatePos][3]))
	{
	    if(GangInfo[i][Gate_Status] != 0) return SendError(playerid, "This gang gate is destroyed. If you are a member of this gang, type /repair!");
	    if(PlayerInfo[playerid][GangID] != GateInfo[i][GateGang] || PlayerInfo[playerid][GangID] == GangInfo[i][AllianceID]) return SendError(playerid, "You are not member in this gang!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		MoveDynamicObject(GangGate[i], GateInfo[i][GatePos][1], GateInfo[i][GatePos][2], GateInfo[i][GatePos][3]-10, 9);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:cg(ESS)
{
    if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "You are not in any gang!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < MAX_GANGS; i++)
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInRangeOfPoint(playerid, 15.0, GateInfo[i][GatePos][1], GateInfo[i][GatePos][2], GateInfo[i][GatePos][3]))
	{
	    if(GangInfo[i][Gate_Status] != 0) return SendError(playerid, "This gang gate is destroyed. If you are a member of this gang, type /repair!");
	    if(PlayerInfo[playerid][GangID] != GateInfo[i][GateGang] || PlayerInfo[playerid][GangID] == GangInfo[i][AllianceID]) return SendError(playerid, "You are not member in this gang!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CloseGate(i);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:blow(ESS)
{
	if(PlayerInfo[playerid][GangID] == 0) return SendError(playerid, "You are not in any gang!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_GANGS; i++)
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(IsPlayerInRangeOfPoint(playerid, 15.0, GateInfo[i][GatePos][1], GateInfo[i][GatePos][2], GateInfo[i][GatePos][3]))
	{
	    if(PlayerInfo[playerid][GangID] == GangInfo[i][AllianceID]) return SendError(playerid, "You cannot destroy this gate if you are allied with this gang!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[playerid][GangID] == GateInfo[i][GateGang]) return SendError(playerid, "This gate are yours!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(GangInfo[i][Gate_Status] == 1) return SendError(playerid, "This gate has been already destroyed!");
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        if(PlayerInfo[playerid][C4] == 0) return SendError(playerid, "You don't have C4!");
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        Announce(playerid, "~W~~H~Planting...~N~~R~~H~Do not leave this area!", 9000, 3);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        SetTimerEx("PlantBombGate", 10000, false, "ii", playerid, i);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	}
	return true;
}
function PlantBombGate(playerid, gateID)
{
	new Float:p[3]; GetPlayerPos(playerid, p[0], p[1], p[2]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(IsPlayerInRangeOfPoint(playerid, 10.0, GateInfo[gateID][GatePos][1], GateInfo[gateID][GatePos][2], GateInfo[gateID][GatePos][3]))
	{
		Announce(playerid, "~G~~H~Planted!", 3000, 3);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GangBlowPickup[PlayerInfo[playerid][GangID]] = CreateDynamicPickup(1252, 23, p[0], p[1], p[2]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		SetTimerEx("DestroyGangGate", 5000, false, "ii", playerid, gateID);
	}
	else Announce(playerid, "~R~~H~Planting failed!", 3000, 3);
}
function DestroyGangGate(playerid, gateID)
{
	DestroyDynamicPickup(GangBlowPickup[PlayerInfo[playerid][GangID]]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DestroyDynamicObject(GangGate[gateID]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CreateExplosion(GateInfo[gateID][GatePos][1], GateInfo[gateID][GatePos][2], GateInfo[gateID][GatePos][3], 1, 5);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GangInfo[gateID][Gate_Status] = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][C4] -= 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][GangID] == gateID)
	    {
	        Announce(i, "~R~~H~Warning!~N~~W~~H~your gang gate~N~~W~~H~has been destroyed~R~~H~!", 3000, 3);
	    }
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Edit Gang
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:checkgid(ESS)
{
	new sstr[6], string[128], ggid;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 8);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new s = 0; s < TotalGangs; s++) if(IsPlayerInTerritory(playerid, Teritories[s][minx], Teritories[s][miny], Teritories[s][maxx], Teritories[s][maxy])) ggid = s;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(ggid == 0) format(sstr, sizeof(sstr), "None");
	if(ggid >= 1) format(sstr, sizeof(sstr), "%d", ggid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(string, sizeof(string), "This gang territory ID is: %s", sstr);
	SCM(playerid, USAGE, string);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
CMD:editgang(ESS)
{
	new string[123]; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 8);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "s[10]", params[0])) return SendUsage(playerid, "/editgang [Gang ID/Create(Note: If you want to check gang territory ID - Use /checkgid)]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if(OnGangEdit[playerid] == 0)
 	{
 	    if(strcmp(params[0], "create", true) == 0)
 	    {
 	        if(PlayerInfo[playerid][RconType] == 3)
		    {
			 	format(string, sizeof(string), "{FF0000}Edit{00CC00} new{FF0000} gang!");
			 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    strcat(eString, "Item\tDescription\n\
			                   {FF0000}Gang\t{FFFFFF}Create new gang");
			    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			    SPD(playerid, DIALOG_EDITGANG+1, HEADERS, string, eString, "Select", "Close");
			}
			else return Error(playerid, 8);
 	    }
	 	else
	 	{
	 	    if(strval(params[0]) < 1 || strval(params[0]) > TotalGangs) return SendError(playerid, "Invalid Gang ID!");
	 	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	    PlayerInfo[playerid][EditingGang] = strval(params[0]);
 			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		 	format(string, sizeof(string), "{FF0000}Edit{00CC00} %s's{FF0000} gang!", GangInfo[strval(params[0])][GangName]);
		 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    strcat(eString, "Item\tDescription\n\
       				       {FF0000}Checkpoint\t{FFFFFF}Add checkpoint\n\
		                   {FF0000}Pickups\t{FFFFFF}Add pickups\n\
		   				   {FF0000}Delete\t{FFFFFF}Delete gang variables\n\
						   {FF0000}Spawn\t{FFFFFF}Change spawn\n\
						   {FF0000}Car\t{FFFFFF}Add gang car (You need to be in a vehicle)\n\
						   {FF0000}House\t{FFFFFF}Edite house pickup position\n\
						   {FF0000}Territory\t{FFFFFF}Edit gang territory position\n\
						   {FF0000}Gate\t{FFFFFF}Edit gang gate position\n\
						   {FF0000}Loot\t{FFFFFF}Edit loot position\n\
						   {FF0000}Settings\t{FFFFFF}Gang world/interior settings\n\
						   {FF0000}Set base teleport\t{FFFFFF}Set the gang base teleport (/base)\n\
						   {FF0000}Camera\t{FFFFFF}Edit gang wait camera\n\
						   {FF0000}Delete gang\t{FFFFFF}Delete the gang permanently");
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    SPD(playerid, DIALOG_EDITGANG, HEADERS, string, eString, "Select", "Close");
		}
	}
	else return SendError(playerid, "You already editing this gang! Please finish and try again!");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Gang Settings System
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GateID(playerid)
{
	for(new i = 0; i < MAX_GANGS; i++) if(IsPlayerInRangeOfPoint(playerid, 15.0, GateInfo[i][GatePos][1], GateInfo[i][GatePos][2], GateInfo[i][GatePos][3])) return GateInfo[i][GateGang];
	return -1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:email(playerid)
{
	eString[0] = EOS;
	format(eString, sizeof(eString), "Your E-Mail is this: {FF0000}%s", PlayerInfo[playerid][EMail]);
	SCM(playerid, YELLOW, eString);
	return true;
}
CMD:gateinfo(playerid)
{
	if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 6);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(GateID(playerid) != -1) FormatMSG(playerid, YELLOW, "Gang Name: {FF0000}%s {FFFF00}Gate ID: {FF0000}%d{FFFF00}!", GangInfo[GateID(playerid)][GangName], GateID(playerid));
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else return SendError(playerid, "You are not in Gate CP to use this command!");
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Gang => Time of spawn at base!
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function GangSpawn(playerid)
{
	if(PlayerInfo[playerid][pVIP] == 2)
	{
	    GangCount[playerid] = 6;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetPVarInt(playerid, "Killed", 1);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    TogglePlayerControllable(playerid, true);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CountGangSpawn(playerid);
	}
	else
	{
	    GangCount[playerid] = 16;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SetPVarInt(playerid, "Killed", 1);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    TogglePlayerControllable(playerid, true);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CountGangSpawn(playerid);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CountGangSpawn(playerid)
{
	if(GangCount[playerid] > 0)
	{
	    new String[128], String2[128];
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    GangCount[playerid]--;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    for(new i = 0; i < MAX_GANGS; i++) if(gCameraPos[i][CameraGang] == PlayerInfo[playerid][GangID])
	    {
			SetPlayerCameraPos(playerid, gCameraPos[i][gCamPos][1], gCameraPos[i][gCamPos][2], gCameraPos[i][gCamPos][3]);
		    SetPlayerCameraLookAt(playerid, gCameraPos[i][gCamPosTo][1], gCameraPos[i][gCamPosTo][2], gCameraPos[i][gCamPosTo][3]);
		    TogglePlayerControllable(playerid, true);
		    SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][GangID] +100);
		    SetPlayerInterior(playerid, 0);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(String, sizeof(String), "~b~~h~~h~Te rugam sa astepti ~g~~h~%i ~b~~h~~h~secunde pentru a putea juca iar!", GangCount[playerid]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerTextDrawSetString(playerid, GangWait[3], String);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    format(String2, sizeof(String2), "%s", GangInfo[PlayerInfo[playerid][GangID]][GangName]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    PlayerTextDrawSetString(playerid, GangWait[2], String2);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerTextDrawColor(playerid, GangWait[2], GangInfo[PlayerInfo[playerid][GangID]][pGangColor]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    for(new a = 0; a < 5; a++) PlayerTextDrawShow(playerid, GangWait[a]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		    if(GangCount[playerid] == 0)
			{
			    for(new d = 0; d < 5; d++) PlayerTextDrawHide(playerid, GangWait[d]);
				GangCount[playerid] = 0, TogglePlayerControllable(playerid, false);
				SetPVarInt(playerid, "KilledByAnyGangs", 0);
				if(GetPVarInt(playerid, "Killed") == 1) SpawnPlayer(playerid);
				SetPlayerVirtualWorld(playerid, 0);
			}
		    else SetTimerEx("CountGangSpawn", 1000, false, "i", playerid);
		}
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Gang System (Stocks)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetGangName(gang)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(String, sizeof(String), "%s", GangInfo[gang][GangName]);
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerGangWarns(playerid)
{
	new String[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(PlayerInfo[playerid][gWarnInGang][PlayerInfo[playerid][GangID]] == 0) String = "";
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(PlayerInfo[playerid][gWarnInGang][PlayerInfo[playerid][GangID]] != 0) format(String, sizeof(String), "{00CC00}- {FF0000}%d/5{00CC00} warnings!", PlayerInfo[playerid][gWarnInGang][PlayerInfo[playerid][GangID]]);
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetPlayerGangRank(playerid)
{
	new RRank[128];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(PlayerInfo[playerid][g_Rank])
	{
	    case 0: RRank = "None";
	    case 1: RRank = "Member Rank 1";
	    case 2: RRank = "Member Rank 2";
	    case 3: RRank = "Member Rank 3";
	    case 4: RRank = "Member Rank 4";
	    case 5: RRank = "Member Rank 5";
	    case 6: RRank = "Co-Leader";
	    case 7: RRank = "Leader";
	    case 8: RRank = "Owner";
	}
	return RRank;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock CalculateGangPoints(playerid)
{
	PlayerInfo[playerid][g_Total] = (PlayerInfo[playerid][g_Points] + PlayerInfo[playerid][g_Kills] + PlayerInfo[playerid][g_Captures]);
	return PlayerInfo[playerid][g_Total];
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ShowGangStats(playerid)
{
    new gh, gm, gs, String[2048]; TotalGameTimeGang(playerid, gh, gm, gs);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CalculateGangPoints(PlayerInfo[playerid][GangID]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, sizeof(String), "\
	{00CC00}Gang: {FF0000}%s\n\
	{00CC00}Gang Rank: {FF0000}%s\n\
	{00CC00}Session Points: {FF0000}%d {00CC00}kills and {FF0000}%d {00CC00}capture points\n\
	{00CC00}Time in Gang: {FF0000}%d {00CC00}hrs, {FF0000}%d {00CC00}mins, {FF0000}%d {00CC00}secs\n\
	{00CC00}Total Gang Points: {FF0000}%d {00CC00}(From this gang)\n\
	{00CC00}Overall points: {FF0000}%d {00CC00}(including points from other gangs)\n\
	{00CC00}Member since: {FF0000}%s\n\
	{00CC00}Visit {FF0000}"SERVER_WEBSITE" {00CC00}to see top players by gang points!",
	GangInfo[PlayerInfo[playerid][GangID]][GangName], GetPlayerGangRank(playerid),
	PlayerInfo[playerid][g_Kills], PlayerInfo[playerid][g_Captures], gh, gm, gs,
	PlayerInfo[playerid][g_Points], PlayerInfo[playerid][g_Total], PlayerInfo[playerid][GangMemberSince]);
	return String;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendGangMessage(playerid, message[])
{
	foreach(Player, i) if(PlayerInfo[i][GangID] == playerid) SCM(i, GREEN, message);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GangMessageForGwarnAndLeave(playerid, message[])
{
	foreach(Player, i) if(PlayerInfo[i][GangID] == playerid) SCM(i, YELLOW, message);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendGangTeamKillMessage(playerid, message[])
{
	foreach(Player, i) if(PlayerInfo[i][GangID] == playerid) SCM(i, GREY2, message);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SendGangSetRank(playerid, message[])
{
	foreach(Player, i) if(PlayerInfo[i][GangID] == playerid) SCM(i, SETRANK, message);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SetupPlayerForGang(playerid, gID)
{
	GivePlayerMultiWeapons(playerid, GangInfo[gID][GangWeapon1], 9999, GangInfo[gID][GangWeapon2], 9999, GangInfo[gID][GangWeapon3], 9999, GangInfo[gID][GangWeapon4], 9999, GangInfo[gID][GangWeapon5], 9999, GangInfo[gID][GangWeapon6], 9999);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if(GangInfo[gID][GangX] != 0.0 && GangInfo[gID][GangY] != 0.0)
	{
		SetPlayerPos(playerid, GangInfo[gID][GangX], GangInfo[gID][GangY], GangInfo[gID][GangZ]);
		SetPlayerInterior(playerid, GangInfo[gID][GangInt]);
		SetPlayerVirtualWorld(playerid, GangInfo[gID][GangWorld]);
		SetPlayerFacingAngle(playerid, GangInfo[gID][GangA]);
		SetPlayerColor(playerid, GangInfo[gID][pGangColor]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		TogglePlayerControllable(playerid, false);
		SetTimerEx("ToggleTrue", 2000, 0, "i", playerid);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(PlayerInfo[playerid][g_Skin] >= 1) SetPlayerSkin(playerid, PlayerInfo[playerid][g_Skin]);
		else SetPlayerSkin(playerid, GangInfo[gID][pGangSkin]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(!strcmp(PlayerInfo[playerid][GangMemberSince], "Unknown")) {
		new date[3]; getdate(date[0], date[1], date[2]);
        format(PlayerInfo[playerid][GangMemberSince], 24, "%d %s, %d", date[2], GetMonth(), date[0]); }
	}
	else SetPlayerRandomSpawn(playerid, false);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock RemovePlayerFromGang(playerid)
{
	PlayerInfo[playerid][GangID] 	 = 0;
	PlayerInfo[playerid][g_Rank] 	 = 0;
	PlayerInfo[playerid][g_Kills]    = 0;
	PlayerInfo[playerid][g_Deaths]   = 0;
	PlayerInfo[playerid][g_Captures] = 0;
	PlayerInfo[playerid][g_Points]   = 0;
	PlayerInfo[playerid][OwnerAcces] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][g_Time][1] = 0;
	PlayerInfo[playerid][g_Time][2] = 0;
	PlayerInfo[playerid][g_Time][3] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerSkin(playerid, 217);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SpawnPlayer(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	RefreshColors(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ResetPlayerWeapons(playerid);
	format(PlayerInfo[playerid][GangMemberSince], 24, "Unknown");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock ShowZonesForPlayer(playerid)
{
	for (new i = 1; i < MAX_GANGS; i++) GangZoneShowForPlayer(playerid, Teritories[i][ID], GangInfo[Teritories[i][owner]][pGangColor]);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetConnectedGangMembers(gID)
{
	new M_Connected;
	foreach(Player, i) if(PlayerInfo[i][GangID] == gID) M_Connected++;
	return M_Connected;
}
stock GetConnectedGangAllianceM(gID)
{
    new M_Connected;
	foreach(Player, i) if(GangInfo[PlayerInfo[i][GangID]][AllianceID] == gID) M_Connected++;
	return M_Connected;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock GetGangPickupID(playerid)
{
	for (new i = 0; i < MAX_GANGPICKUPS; i++) if(IsPlayerInRangeOfPoint(playerid, 1.5, PickupInfo[i][PickupPos][1], PickupInfo[i][PickupPos][2], PickupInfo[i][PickupPos][3])) return i;
	return -1;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Gang System (Functions)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function RepairGateTD(playerid)
{
	format(eString, sizeof(eString), "~w~~h~Repair in: ~r~~h~%i", PlayerInfo[playerid][RepairTime]);
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function RepairGate(playerid)
{
    if(PlayerInfo[playerid][InRepair] != 1) return false;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < MAX_GANGS; i++)
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(IsPlayerInRangeOfPoint(playerid, 15.0, GateInfo[i][GatePos][1], GateInfo[i][GatePos][2], GateInfo[i][GatePos][3]))
	{
	    if(PlayerInfo[playerid][GangID] != GateInfo[i][GateGang]) return SendError(playerid, "You are not member in this gang!");
		if(GangInfo[i][Gate_Status] != 1) return SendError(playerid, "Your gate are not destroyed!");
	    GangGate[i] = CreateDynamicObject(GateInfo[i][GateObject], GateInfo[i][GatePos][1], GateInfo[i][GatePos][2], GateInfo[i][GatePos][3], GateInfo[i][rGatePos][1], GateInfo[i][rGatePos][2], GateInfo[i][rGatePos][3]);
		Announce(playerid, "~w~~h~Gates have been ~n~~g~~h~repaired~w~~h~!", 3000, 4);
		GangInfo[i][Gate_Status] = 0; PlayerInfo[playerid][RPG2] = 0, PlayerInfo[playerid][InRepair] = 0, DisablePlayerCheckpoint(playerid);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ShowTopGangs(playerid)
{
	new Field[30], pointS; eString[0] = EOS;
	new Rows, Fields;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for (new i = 0; i < Rows; i ++)
	{
		CONTENT(i, "GangName", Field);
		CACHE(i, "GangPoints", pointS);
 		format(eString, sizeof(eString), "%s{FF0000}%d. {AFAFAF}%s: {00CC00}%d {AFAFAF}Points\n", eString, i+1, Field, pointS);
	}
	format(eString, sizeof(eString), "%s\n{AFAFAF}Visit {FF0000}"SERVER_WEBSITE" {AFAFAF}for more.", eString);
	return SPD(playerid, DIALOG_EMPTY, MSGBOX, "{FFFFFF}Top {FF0000}7 {FFFFFF}Gangs", eString, "Ok", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function LoadSpawnZones()
{
    new tempstring[50], Rows, Fields, X;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for (new i = 0; i < Rows; i ++)
	{
	    CACHE(i, "ID", X);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CONTENT(i, "SpawnName", tempstring);
		format(SpawnZones[X][SpawnName], 50, "%s", tempstring);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    FLOAT(i, "X", SpawnZones[X][sPosX]);
	    FLOAT(i, "Y", SpawnZones[X][sPosY]);
	    FLOAT(i, "Z", SpawnZones[X][sPosZ]);
	    FLOAT(i, "A", SpawnZones[X][sPosA]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    FLOAT(i, "CpX", SpawnZones[X][CPX]);
	    FLOAT(i, "CpY", SpawnZones[X][CPY]);
	    FLOAT(i, "CpZ", SpawnZones[X][CPZ]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CACHE(i, "TeleportTo", SpawnZones[X][TeleportTo]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     	SpawnZone3D[X] = CreateDynamic3DTextLabel("{FFFF00}Spawn Zone\n{00FF22}Type {FF0000}/HM {00FF22}for free health & armour!\n{FFFF00}"SERVER_WEBSITE"", ~1, SpawnZones[X][sPosX], SpawnZones[X][sPosY], SpawnZones[X][sPosZ], 30);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    SpawnCheckPoint[X] = CPS_AddCheckpoint(SpawnZones[X][CPX], SpawnZones[X][CPY], SpawnZones[X][CPZ], 2.0, 30);
	}
	for (new a = 0; a < MAX_SPAWN_ZONES; a ++) { SpawnCP3D[a] = CreateDynamic3DTextLabel(SpawnZones[SpawnZones[a][TeleportTo]][SpawnName], YELLOW, SpawnZones[a][CPX], SpawnZones[a][CPY], SpawnZones[a][CPZ], 30.5); }
}
function LoadGangPickups()
{
    new Rows, Fields, X;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for (new i = 0; i < Rows; i ++)
	{
	    CACHE(i, "ID", X);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CACHE(i, "GangID", PickupInfo[X][PickupGangID]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CACHE(i, "PickupType", PickupInfo[X][PickupType]);
	    CACHE(i, "ModelID", PickupInfo[X][ModelID]);
	    CACHE(i, "WeaponID", PickupInfo[X][PickupWeaponID]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "PosX", PickupInfo[X][PickupPos][1]);
		FLOAT(i, "PosY", PickupInfo[X][PickupPos][2]);
		FLOAT(i, "PosZ", PickupInfo[X][PickupPos][3]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GangPickups[X] = CreateDynamicPickup(PickupInfo[X][ModelID], 1, PickupInfo[X][PickupPos][1], PickupInfo[X][PickupPos][2], PickupInfo[X][PickupPos][3]);
	}
	printf("Loaded %d Gang Pickups.", Rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function LoadGangCheckpoints()
{
    new Rows, Fields, X, tempstring[30];
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for (new i = 0; i < Rows; i ++)
	{
	    CACHE(i, "ID", X);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CACHE(i, "GangID", gCheckpointInfo[X][CheckpointGang]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CONTENT(i, "CheckpointText", tempstring);
		format(gCheckpointInfo[X][CheckpointText], 30, "%s", tempstring);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "CheckpointX", gCheckpointInfo[X][CheckpointX]);
		FLOAT(i, "CheckpointY", gCheckpointInfo[X][CheckpointY]);
		FLOAT(i, "CheckpointZ", gCheckpointInfo[X][CheckpointZ]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "ToX", gCheckpointInfo[X][ToX]);
		FLOAT(i, "ToY", gCheckpointInfo[X][ToY]);
		FLOAT(i, "ToZ", gCheckpointInfo[X][ToZ]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GangCheckpoints3D[X] = CreateDynamic3DTextLabel(tempstring, YELLOW, gCheckpointInfo[X][CheckpointX], gCheckpointInfo[X][CheckpointY], gCheckpointInfo[X][CheckpointZ], 45.0);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GangCheckpoints[X] = CPS_AddCheckpoint(gCheckpointInfo[X][CheckpointX], gCheckpointInfo[X][CheckpointY], gCheckpointInfo[X][CheckpointZ],1.0,7);
	}
	printf("Loaded %d Gang Teleport Checkpoints.", Rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function LoadGangGates()
{
    new Rows, Fields, X; eString[0] = EOS;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for (new i = 0; i < Rows; i ++)
	{
	    CACHE(i, "ID", X);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GateInfo[X][GateGang] = X;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CACHE(i, "GateObject", GateInfo[X][GateObject]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "GatePosX", GateInfo[X][GatePos][1]);
		FLOAT(i, "GatePosY", GateInfo[X][GatePos][2]);
		FLOAT(i, "GatePosZ", GateInfo[X][GatePos][3]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "rGatePosX", GateInfo[X][rGatePos][1]);
		FLOAT(i, "rGatePosY", GateInfo[X][rGatePos][2]);
		FLOAT(i, "rGatePosZ", GateInfo[X][rGatePos][3]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        Gang3DGate[GateInfo[X][GateGang]] = CreateDynamic3DTextLabel(""GANG_GATE_DESC"", ~1, GateInfo[X][GatePos][1], GateInfo[X][GatePos][2], GateInfo[X][GatePos][3], 30);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(GangInfo[GateInfo[X][GateGang]][Gate_Status] == 0) GangGate[X] = CreateDynamicObject(GateInfo[X][GateObject], GateInfo[X][GatePos][1], GateInfo[X][GatePos][2], GateInfo[X][GatePos][3], GateInfo[X][rGatePos][1], GateInfo[X][rGatePos][2], GateInfo[X][rGatePos][3]);
    }
	printf("Loaded %d Gang Gates.", Rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function LoadGangLifts()
{
    new Rows, Fields, X; eString[0] = EOS;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for (new i = 0; i < Rows; i ++)
	{
	    CACHE(i, "ID", X);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    LiftInfo[X][LiftGang] = X;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CACHE(i, "LiftObject", LiftInfo[X][LiftObject]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "LiftPosX", LiftInfo[X][LiftPos][1]);
		FLOAT(i, "LiftPosY", LiftInfo[X][LiftPos][2]);
		FLOAT(i, "LiftPosZ", LiftInfo[X][LiftPos][3]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "rLiftPosX", LiftInfo[X][rLiftPos][1]);
		FLOAT(i, "rLiftPosY", LiftInfo[X][rLiftPos][2]);
		FLOAT(i, "rLiftPosZ", LiftInfo[X][rLiftPos][3]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "LiftPosToX", LiftInfo[X][LiftPosTo][1]);
		FLOAT(i, "LiftPosToY", LiftInfo[X][LiftPosTo][2]);
		FLOAT(i, "LiftPosToZ", LiftInfo[X][LiftPosTo][3]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        CreateDynamic3DTextLabel("If you are in member this gang or in it's allied\n\
		                          use {FF0000}/ganglift up{FFFFFF} to go up and {FF0000}/ganglift down {FFFFFF}to go down!", ~1, LiftInfo[X][LiftPos][1], LiftInfo[X][LiftPos][2], LiftInfo[X][LiftPos][3], 30);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        CreateDynamic3DTextLabel("If you are in member this gang or in it's allied\n\
        				          use {FF0000}/ganglift up{FFFFFF} to go up and {FF0000}/ganglift down {FFFFFF}to go down!", ~1, LiftInfo[X][LiftPosTo][1], LiftInfo[X][LiftPosTo][2], LiftInfo[X][LiftPosTo][3], 30);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GangLift[X] = CreateDynamicObject(LiftInfo[X][LiftObject], LiftInfo[X][LiftPos][1], LiftInfo[X][LiftPos][2], LiftInfo[X][LiftPos][3], LiftInfo[X][rLiftPos][1], LiftInfo[X][rLiftPos][2], LiftInfo[X][rLiftPos][3]);
    }
	printf("Loaded %d Gang Lifts.", Rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function LoadGangCars()
{
    new Rows, Fields, X; eString[0] = EOS;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for (new i = 0; i < Rows; i ++)
	{
	    CACHE(i, "ID", X);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CACHE(i, "GangID", gCarInfo[X][CarGang]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CACHE(i, "VehModel", gCarInfo[X][vehModel]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "VehPosX", gCarInfo[X][gCarPos][1]);
		FLOAT(i, "VehPosY", gCarInfo[X][gCarPos][2]);
		FLOAT(i, "VehPosZ", gCarInfo[X][gCarPos][3]);
		FLOAT(i, "VehPosA", gCarInfo[X][gCarPos][4]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GangCar[X] = CreateVehicle(gCarInfo[X][vehModel], gCarInfo[X][gCarPos][1], gCarInfo[X][gCarPos][2], gCarInfo[X][gCarPos][3], gCarInfo[X][gCarPos][4], 0, 0, 360000);
    }
	printf("Loaded %d Gang Cars.", Rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function LoadGangCameraPos()
{
    new Rows, Fields, X; eString[0] = EOS;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for (new i = 0; i < Rows; i ++)
	{
	    CACHE(i, "ID", X);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    gCameraPos[X][CameraGang] = X;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "X", gCameraPos[X][gCamPos][1]);
		FLOAT(i, "Y", gCameraPos[X][gCamPos][2]);
		FLOAT(i, "Z", gCameraPos[X][gCamPos][3]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "XTo", gCameraPos[X][gCamPosTo][1]);
		FLOAT(i, "YTo", gCameraPos[X][gCamPosTo][2]);
		FLOAT(i, "ZTo", gCameraPos[X][gCamPosTo][3]);
    }
	printf("Loaded %d Gang Camera Pos.", Rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function LoadGangHouses()
{
    new Rows, Fields, X; eString[0] = EOS;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for (new i = 0; i < Rows; i ++)
	{
	    CACHE(i, "ID", X);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    gHouseInfo[X][HouseGang] = X;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CACHE(i, "HouseInteriorID", gHouseInfo[X][HouseInterior]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "HouseX", gHouseInfo[X][gHousePos][1]);
		FLOAT(i, "HouseY", gHouseInfo[X][gHousePos][2]);
		FLOAT(i, "HouseZ", gHouseInfo[X][gHousePos][3]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "HouseIntX", gHouseInfo[X][gHouseInt][1]);
		FLOAT(i, "HouseIntY", gHouseInfo[X][gHouseInt][2]);
		FLOAT(i, "HouseIntZ", gHouseInfo[X][gHouseInt][3]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GangHouse[X] = CreateDynamicPickup(1239, 1, gHouseInfo[X][gHousePos][1], gHouseInfo[X][gHousePos][2], gHouseInfo[X][gHousePos][3]);
		GangHouse3D[X] = CreateDynamic3DTextLabel("/enter\n{FFFFFF}Gang House", YELLOW, gHouseInfo[X][gHousePos][1], gHouseInfo[X][gHousePos][2], gHouseInfo[X][gHousePos][3], 30.0);
    }
	printf("Loaded %d Gang Houses.", Rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function LoadGangs()
{
    new Field[256], g_Name[30], X, Rows, String[224]; eString[0] = EOS;
	cache_get_row_count(Rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for (new i = 0; i < Rows; i++)
	{
		CACHE(i, "ID", X);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CONTENT(i, "GangName", g_Name);
		format(GangInfo[X][GangName], 30, "%s", g_Name);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CACHE(i, "GangKills", GangInfo[X][GangKills]);
		CACHE(i, "GangDeaths", GangInfo[X][GangDeaths]);
		CACHE(i, "GangCaptures", GangInfo[X][Captures]);
		CACHE(i, "GateStatus", GangInfo[X][Gate_Status]);
		CACHE(i, "pGangColor", GangInfo[X][pGangColor]);
		CACHE(i, "GangInterior", GangInfo[X][GangInt]);
		CACHE(i, "GangWorld", GangInfo[X][GangWorld]);
		CACHE(i, "GangSkin", GangInfo[X][pGangSkin]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "GangX", GangInfo[X][GangX]);
		FLOAT(i, "GangY", GangInfo[X][GangY]);
		FLOAT(i, "GangZ", GangInfo[X][GangZ]);
		FLOAT(i, "GangA", GangInfo[X][GangA]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "LootX", GangInfo[X][lPosX]);
		FLOAT(i, "LootY", GangInfo[X][lPosY]);
		FLOAT(i, "LootZ", GangInfo[X][lPosZ]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CACHE(i, "GangMoney", GangInfo[X][g_Money]);
		CACHE(i, "GangCoins", GangInfo[X][g_Coins]);
		CACHE(i, "GangGems", GangInfo[X][g_Gems]);
		CACHE(i, "GangLPoints", GangInfo[X][g_GPoints]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CACHE(i, "GangPoints", GangInfo[X][Points]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        CACHE(i, "GangWeapon1", GangInfo[X][GangWeapon1]);
        CACHE(i, "GangWeapon2", GangInfo[X][GangWeapon2]);
        CACHE(i, "GangWeapon3", GangInfo[X][GangWeapon3]);
        CACHE(i, "GangWeapon4", GangInfo[X][GangWeapon4]);
        CACHE(i, "GangWeapon5", GangInfo[X][GangWeapon5]);
        CACHE(i, "GangWeapon6", GangInfo[X][GangWeapon6]);
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        CACHE(i, "Alliance", GangInfo[X][AllianceID]);
        GangInfo[X][AllianceInv] = 0;
        GangInfo[X][CaptureTimeTurf] = 300;
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		new gIDset; CACHE(i, "ID", gIDset);
		CONTENT(i, "Description1", Field);
		SetGVarString("Description1", Field, gIDset);
		CONTENT(i, "Description2", Field);
		SetGVarString("Description2", Field, gIDset);
		CONTENT(i, "Description3", Field);
		SetGVarString("Description3", Field, gIDset);
		CONTENT(i, "Description4", Field);
		SetGVarString("Description4", Field, gIDset);
        CONTENT(i, "Description5", Field);
		SetGVarString("Description5", Field, gIDset);
		CONTENT(i, "Description6", Field);
		SetGVarString("Description6", Field, gIDset);
		CONTENT(i, "Description7", Field);
		SetGVarString("Description7", Field, gIDset);
		CONTENT(i, "Description8", Field);
		SetGVarString("Description8", Field, gIDset);
		CONTENT(i, "Description9", Field);
		SetGVarString("Description9", Field, gIDset);
		CONTENT(i, "Description10", Field);
		SetGVarString("Description10", Field, gIDset);
		CONTENT(i, "Description11", Field);
		SetGVarString("Description11", Field, gIDset);
		CONTENT(i, "Description12", Field);
		SetGVarString("Description12", Field, gIDset);
		CONTENT(i, "Description13", Field);
		SetGVarString("Description13", Field, gIDset);
		CONTENT(i, "Description14", Field);
		SetGVarString("Description14", Field, gIDset);
		CONTENT(i, "Description15", Field);
		SetGVarString("Description15", Field, gIDset);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        format(String, sizeof(String), "{FF9900}Gang Loot\n{FFFFFF}Money: {FF0000}$%d{FFFFFF}, Coins: {FF0000}%d{FFFFFF}, Gems: {FF0000}%d\n{FFFFFF}/loot", GangInfo[X][g_Money], GangInfo[X][g_Coins], GangInfo[X][g_Gems]);
        Gang3D[X] = CreateDynamic3DTextLabel(String, ~1, GangInfo[X][lPosX], GangInfo[X][lPosY], GangInfo[X][lPosZ], 100.0);
		GangPickUP[X] = CreateDynamicPickup(1550, 1, GangInfo[X][lPosX], GangInfo[X][lPosY], GangInfo[X][lPosZ]);
	}
	printf("Loaded %d Gangs.", Rows); TotalGangs = Rows+1; // +1 because at #define need totalgangs+1
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function LoadTeritories()
{
    new Rows, X;
	cache_get_row_count(Rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < Rows; i ++)
	{
	    CACHE(i, "ID", X);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		FLOAT(i, "GangTerMinX", Teritories[X][minx]);
		FLOAT(i, "GangTerMinY", Teritories[X][miny]);
		FLOAT(i, "GangTerMaxX", Teritories[X][maxx]);
		FLOAT(i, "GangTerMaxY", Teritories[X][maxy]);
		CACHE(i, "GangTerOwner", Teritories[X][owner]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Teritories[X][ID] = GangZoneCreate(Teritories[X][minx], Teritories[X][miny], Teritories[X][maxx], Teritories[X][maxy]);
		CreateDynamicRectangle(Teritories[X][minx], Teritories[X][miny], Teritories[X][maxx], Teritories[X][maxy]);
	}
	printf("Loaded %d Gang Teritories.", Rows);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Advanced Delete Gang System by Ghost
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function DeleteGang(gangid)
{
	FormatSQL("DELETE FROM `Gangs` WHERE `ID` = '%d'", gangid);
	FormatSQL("DELETE FROM `GangTers` WHERE `ID` = '%d'", gangid);
	FormatSQL("DELETE FROM `GangPickups` WHERE `GangID` = '%d'", gangid);
	FormatSQL("DELETE FROM `GangLiftes` WHERE `ID` = '%d'", gangid);
	FormatSQL("DELETE FROM `GangHouses` WHERE `ID` = '%d'", gangid);
	FormatSQL("DELETE FROM `GangGates` WHERE `ID` = '%d'", gangid);
	FormatSQL("DELETE FROM `GangCheckpoints` WHERE `GangID` = '%d'", gangid);
	FormatSQL("DELETE FROM `GangCars` `GangID` = '%d'", gangid);
	FormatSQL("DELETE FROM `GangCameraPos` WHERE `ID` = '%d'", gangid);
	FormatSQL("DELETE FROM `GangBases` WHERE `ID` = '%d'", gangid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) if(PlayerInfo[i][GangID] == gangid) SCM(i, ABLUE, "Your gang have been deleted by an admin!"), RemovePlayerFromGang(i);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Delete Gang Variables
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    DestroyDynamic3DTextLabel(Gang3D[gangid]);
    DestroyDynamicPickup(GangPickUP[gangid]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Delete Pickup Variables
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    DeletegPickups(gangid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Delete Checkpoint Variables
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    DeletegCheckpoints(gangid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Delete Gate Variables
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    DestroyDynamic3DTextLabel(Gang3DGate[gangid]);
    DestroyDynamicObject(GangGate[gangid]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // -> Delete Vehicle Variables
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    for(new i = 0; i < MAX_GANGCARS; i++) { if(gCarInfo[i][CarGang] == gangid) { DestroyVehicle(GangCar[i]); } }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Delete Teritories Variables
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GangZoneDestroy(Teritories[gangid][ID]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Delete House Variables
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	DestroyDynamicPickup(GangHouse[gangid]);
	DestroyDynamic3DTextLabel(GangHouse3D[gangid]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	TotalGangs = TotalGangs-1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    UpdateGangIDsID(gangid, gangid+1);
}
function UpdateGangIDsID(replacement, gangid) // -> Replace gang ID
{
	if(replacement < 1 || replacement > MAX_GANGS-1) return true;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	FormatSQL("UPDATE `Accounts` SET `GangID` = '%d' WHERE `GangID` = '%d'", replacement, gangid);
    FormatSQL("UPDATE `Gangs` SET `ID` = '%d' WHERE `ID` = '%d'", replacement, gangid);
    FormatSQL("UPDATE `GangTers` SET `ID` = '%d' WHERE `ID` = '%d'", replacement, gangid);
    FormatSQL("UPDATE `GangPickups` SET `GangID` = '%d' WHERE `GangID` = '%d'", replacement, gangid);
    FormatSQL("UPDATE `GangLiftes` SET `ID` = '%d' WHERE `ID` = '%d'", replacement, gangid);
    FormatSQL("UPDATE `GangHouses` SET `ID` = '%d' WHERE `ID` = '%d'", replacement, gangid);
    FormatSQL("UPDATE `GangGates` SET `ID` = '%d' WHERE `ID` = '%d'", replacement, gangid);
    FormatSQL("UPDATE `GangCheckpoints` SET `GangID` = '%d' WHERE `GangID` = '%d'", replacement, gangid);
    FormatSQL("UPDATE `GangCars` SET `GangID` = '%d' WHERE `GangID` = '%d'", replacement, gangid);
    FormatSQL("UPDATE `GangCameraPos` SET `ID` = '%d' WHERE `ID` = '%d'", replacement, gangid);
    FormatSQL("UPDATE `GangBases` SET `ID` = '%d' WHERE `ID` = '%d'", replacement, gangid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) if(PlayerInfo[i][GangID] == gangid) { PlayerInfo[i][GangID] = replacement; }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Update Gang Variables
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(GangInfo[replacement][GangName], 30, "%s", GangInfo[gangid][GangName]);
	GangInfo[replacement][GangKills] = GangInfo[gangid][GangKills];
	GangInfo[replacement][GangDeaths] = GangInfo[gangid][GangDeaths];
	GangInfo[replacement][Gate_Status] = GangInfo[gangid][Gate_Status];
	GangInfo[replacement][GangX] = GangInfo[gangid][GangX];
	GangInfo[replacement][GangY] = GangInfo[gangid][GangY];
	GangInfo[replacement][GangZ] = GangInfo[gangid][GangZ];
	GangInfo[replacement][GangA] = GangInfo[gangid][GangA];
	GangInfo[replacement][Points] = GangInfo[gangid][Points];
	GangInfo[replacement][GangWeapon1] = GangInfo[gangid][GangWeapon1];
	GangInfo[replacement][GangWeapon2] = GangInfo[gangid][GangWeapon2];
	GangInfo[replacement][GangWeapon3] = GangInfo[gangid][GangWeapon3];
	GangInfo[replacement][GangWeapon4] = GangInfo[gangid][GangWeapon4];
	GangInfo[replacement][GangWeapon5] = GangInfo[gangid][GangWeapon5];
	GangInfo[replacement][GangWeapon6] = GangInfo[gangid][GangWeapon6];
	GangInfo[replacement][CapturingGang] = GangInfo[gangid][CapturingGang];
	GangInfo[replacement][JoinedToCapture] = GangInfo[gangid][JoinedToCapture];
	GangInfo[replacement][GmInCapture] = GangInfo[gangid][GmInCapture];
	GangInfo[replacement][DeathsInCapture] = GangInfo[gangid][DeathsInCapture];
	GangInfo[replacement][GangCoolDown] = GangInfo[gangid][GangCoolDown];
	GangInfo[replacement][GangInt] = GangInfo[gangid][GangInt];
	GangInfo[replacement][pGangSkin] = GangInfo[gangid][pGangSkin];
	GangInfo[replacement][pGangColor] = GangInfo[gangid][pGangColor];
	GangInfo[replacement][Captures] = GangInfo[gangid][Captures];
	GangInfo[replacement][GangWorld] = GangInfo[gangid][GangWorld];
	GangInfo[replacement][c_Deaths] = GangInfo[gangid][c_Deaths];
	GangInfo[replacement][CaptureTimeTurf] = GangInfo[gangid][CaptureTimeTurf];
	GangInfo[replacement][g_Money] = GangInfo[gangid][g_Money];
	GangInfo[replacement][g_Coins] = GangInfo[gangid][g_Coins];
	GangInfo[replacement][g_Gems] = GangInfo[gangid][g_Gems];
	GangInfo[replacement][g_GPoints] = GangInfo[gangid][g_GPoints];
	GangInfo[replacement][lPosX] = GangInfo[gangid][lPosX];
	GangInfo[replacement][lPosY] = GangInfo[gangid][lPosY];
	GangInfo[replacement][lPosZ] = GangInfo[gangid][lPosZ];
	GangInfo[replacement][AllianceID] = GangInfo[gangid][AllianceID];
	GangInfo[replacement][AllianceInv] = GangInfo[gangid][AllianceInv];
	GangInfo[replacement][GangTurfe] = GangInfo[gangid][GangTurfe];
	GangInfo[replacement][AreaidTurf] = GangInfo[gangid][AreaidTurf];
	GangInfo[replacement][AttackBy] = GangInfo[gangid][AttackBy];
	GangInfo[replacement][CaptureTimeRestriction] = GangInfo[gangid][CaptureTimeRestriction];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Update Pickup Variables
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_GANGPICKUPS; i++) { if(PickupInfo[i][PickupGangID] == gangid) { PickupInfo[i][PickupGangID] = replacement; } }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Update Checkpoint Variables
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_GANGCHECKPOINTS; i++) { if(gCheckpointInfo[i][CheckpointGang] == gangid) { gCheckpointInfo[i][CheckpointGang] = replacement; } }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Update Gate Variables
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_GANGS; i++) { if(GateInfo[i][GateGang] == gangid) { GateInfo[i][GateGang] = replacement; } }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Update Vehicles Variables
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_GANGCARS; i++) { if(gCarInfo[i][CarGang] == gangid) { gCarInfo[i][CarGang] = replacement; } }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Update Camera Pos Variables
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_GANGS; i++) { if(gCameraPos[i][CameraGang] == gangid) { gCameraPos[i][CameraGang] = replacement; } }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Update Teritories Variables
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_GANGS; i++) { if(Teritories[i][ID] == gangid)
	{
		Teritories[i][ID] = replacement;
		Teritories[i][owner]-= 1;
		if(Teritories[i][turfingby] >= 1) Teritories[i][turfingby]-= 1;
	} }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	// -> Update House Variables
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for(new i = 0; i < MAX_GANGS; i++) { if(gHouseInfo[i][HouseGang] == gangid) { gHouseInfo[i][HouseGang] = replacement; } }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	UpdateGangIDsID(replacement+1, gangid+1);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CreateGangPickup(gangid, type, modelid, weaponid, Float:x, Float:y, Float:z)
{
	new X = cache_insert_id();
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PickupInfo[X][PickupGangID] = gangid;
    PickupInfo[X][PickupType] = type;
    PickupInfo[X][ModelID] = modelid;
    PickupInfo[X][PickupWeaponID] = weaponid;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PickupInfo[X][PickupPos][1] 	= x;
    PickupInfo[X][PickupPos][2] 	= y;
    PickupInfo[X][PickupPos][3] 	= z;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GangPickups[X] = CreateDynamicPickup(modelid, 1, x, y, z);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CreateGangCar(playerid, gangid, vehicleid, model, Float:x, Float:y, Float:z, Float:angle)
{
    new X = cache_insert_id();
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    gCarInfo[X][CarGang] = gangid;
    gCarInfo[X][vehModel] = model;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    gCarInfo[X][gCarPos][1] = x;
    gCarInfo[X][gCarPos][2] = y;
    gCarInfo[X][gCarPos][3] = z;
    gCarInfo[X][gCarPos][4] = angle;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][pCar] = 0;
    DestroyVehicle(vehicleid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GangCar[X] = CreateVehicle(model, x, y, z, angle, 0, 0, 360000);
    PutPlayerInVehicle(playerid, vehicleid, 0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function EditeGangHousePickup(gangid, Float:x, Float:y, Float:z)
{
    gHouseInfo[gangid][gHousePos][1] = x;
    gHouseInfo[gangid][gHousePos][2] = y;
    gHouseInfo[gangid][gHousePos][3] = z;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    DestroyDynamicPickup(GangHouse[gangid]);
    DestroyDynamic3DTextLabel(GangHouse3D[gangid]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GangHouse[gangid] = CreateDynamicPickup(1239, 1, x, y, z);
    GangHouse3D[gangid] = CreateDynamic3DTextLabel("/enter\n{FFFFFF}Gang House", YELLOW, x, y, z, 30.0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function EditingGangTerritory(playerid)
{
	new Float:undefined;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GetPlayerPos(playerid, NewTerryPos[playerid][2], NewTerryPos[playerid][3], undefined);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Teritories[OnTerryEdit[playerid]][minx] = NewTerryPos[playerid][0];
	Teritories[OnTerryEdit[playerid]][miny] = NewTerryPos[playerid][1];
	Teritories[OnTerryEdit[playerid]][maxx] = NewTerryPos[playerid][2];
	Teritories[OnTerryEdit[playerid]][maxy] = NewTerryPos[playerid][3];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GangZoneDestroy(Teritories[OnTerryEdit[playerid]][ID]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Teritories[OnTerryEdit[playerid]][ID] = GangZoneCreate(Teritories[OnTerryEdit[playerid]][minx], Teritories[OnTerryEdit[playerid]][miny], Teritories[OnTerryEdit[playerid]][maxx], Teritories[OnTerryEdit[playerid]][maxy]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GangZoneHideForAll(Teritories[OnTerryEdit[playerid]][ID]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	GangZoneShowForAll(Teritories[OnTerryEdit[playerid]][ID], GangInfo[Teritories[OnTerryEdit[playerid]][owner]][pGangColor]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function EditeGangLootPickup(gID, Float:x, Float:y, Float:z)
{
	new String[224];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GangInfo[gID][lPosX] = x;
    GangInfo[gID][lPosY] = y;
    GangInfo[gID][lPosZ] = z;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    DestroyDynamic3DTextLabel(Gang3D[gID]);
    DestroyDynamicPickup(GangPickUP[gID]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(String, sizeof(String), "{FF9900}Gang Loot\n{FFFFFF}Money: {FF0000}$%d{FFFFFF}, Coins: {FF0000}%d{FFFFFF}, Gems: {FF0000}%d\n{FFFFFF}/loot", GangInfo[gID][g_Money], GangInfo[gID][g_Coins], GangInfo[gID][g_Gems]);
    Gang3D[gID] = CreateDynamic3DTextLabel(String, ~1, GangInfo[gID][lPosX], GangInfo[gID][lPosY], GangInfo[gID][lPosZ], 100.0);
	GangPickUP[gID] = CreateDynamicPickup(1550, 1, GangInfo[gID][lPosX], GangInfo[gID][lPosY], GangInfo[gID][lPosZ]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
function DeletegCheckpoints(gID)
{
    for(new i = 0; i < MAX_GANGCHECKPOINTS; i++)
    {
        if(gCheckpointInfo[i][CheckpointGang] == gID)
        {
            gCheckpointInfo[i][CheckpointX] = -1;
            gCheckpointInfo[i][CheckpointY] = -1;
            gCheckpointInfo[i][CheckpointZ] = -1;
	    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			gCheckpointInfo[i][ToX] = -1;
			gCheckpointInfo[i][ToY] = -1;
			gCheckpointInfo[i][ToZ] = -1;
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			DestroyDynamic3DTextLabel(GangCheckpoints3D[i]);
			CPS_RemoveCheckpoint(GangCheckpoints[i]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			gCheckpointInfo[i][CheckpointGang] = 0;
    	}
    }
    return true;
}
function DeletegPickups(gID)
{
    for(new i = 0; i < MAX_GANGPICKUPS; i++)
    {
		if(PickupInfo[i][PickupGangID] == gID)
		{
	        foreach(new a: Player)
			{
			    if(PlayerInfo[a][GangID] == gID)
			    {
			   		PlayerInfo[a][GangPickupTimer][i] = 0;
			   		KillTimer(PlayerInfo[a][GangTimerSet]);
			   	}
			}
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			DestroyDynamicPickup(GangPickups[i]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PickupInfo[i][PickupPos][1] = 0;
			PickupInfo[i][PickupPos][2] = 0;
			PickupInfo[i][PickupPos][3] = 0;
		}
    }
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ResetGMembers(playerid, gID)
{
	new members; eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new j; cache_get_row_count(j);
    for(new i; i<j; i++)
	{
		 members++;
		 break;
    }
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(eString, sizeof(eString), "~g~~h~~h~%d ~y~gang members ~n~~y~were kicked out of this gang!", members);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Announce(playerid, eString, 9000, 3), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function checkGangVehicle(playerid, vehicleid)
{
     new Float:x, Float:y, Float:z;
     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     if(PlayerInfo[playerid][GangID] == gCarInfo[vehicleid][CarGang] || PlayerInfo[playerid][RconType] >= 2) return true;
     //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 else GetPlayerPos(playerid, x, y, z), SetPlayerPos(playerid, x, y, z+5), Announce(playerid, "~R~~H~You are not in this gang~N~~R~~H~to use this vehicle!", 4000, 3);
	 //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ShowTopGangsByCaptures(playerid)
{
	new Rows, Fields, Field[25], gcaptureS; eString[0] = EOS;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Rows)
	{
		for(new i = 0; i < Rows; i++)
		{
		    CONTENT(i, "GangName", Field);
		    CACHE(i, "GangCaptures", gcaptureS);
		    format(eString, sizeof(eString), "%s{06B000}%d. {B9C9BF}%s:{FF0000} %d territories\n", eString, i+1, Field, gcaptureS);
		}
	}
	format(eString, sizeof(eString), "{CAFF91}Top 10 Gangs by Territories!\n\n%s\n{CAFF91}Most respected gangs from this server are here!\n\
	{CAFF91}Is a honor to be in a gang from this list!\n\
	{CAFF91}To see a full list of gangs, visit our website{FF0000} "SERVER_WEBSITE"", eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SPD(playerid, DIALOG_EMPTY, MSGBOX, "{F3FF70}Top 10 Gangs!", eString, "Ok", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ShowTopGangsByPoints(playerid)
{
	new Rows, Fields, Field[25], gpointS; eString[0] = EOS;
	cache_get_row_count(Rows);
	cache_get_field_count(Fields);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Rows)
	{
		for(new i = 0; i < Rows; i++)
		{
		    CONTENT(i, "GangName", Field);
		    CACHE(i, "GangPoints", gpointS);
		    format(eString, sizeof(eString), "%s{06B000}%d. {B9C9BF}%s:{FF0000} %d points\n", eString, i+1, Field, gpointS);
		}
	}
	format(eString, sizeof(eString), "{CAFF91}Top 10 Gangs by Points!\n\n%s\n{CAFF91}Most respected gangs from this server are here!\n\
	{CAFF91}Is a honor to be in a gang from this list!\n\
	{CAFF91}To see a full list of gangs, visit our website{FF0000} "SERVER_WEBSITE"", eString);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return SPD(playerid, DIALOG_EMPTY, MSGBOX, "{F3FF70}Top 10 Gangs!", eString, "Ok", "");
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function JoinCapture(playerid, gID)
{
 	if(PlayerInfo[playerid][Capturing] == 1) return SendError(playerid, "You already joined to capturing this gang!");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(GangInfo[PlayerInfo[playerid][GangID]][CapturingGang] == 1)
	{
	    GangInfo[PlayerInfo[playerid][GangID]][CapturesJoins]++;
	    PlayerInfo[playerid][Capturing] = 1;
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    Announce(playerid, "~y~You have joined to capturing~N~~R~~H~now start killing players!", 6000, 3);
	}
	else return SendError(playerid, "Your gang doesn't capture any territory!");
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function StartCapture(playerid, gID)
{
	eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if((gettime() - GangInfo[PlayerInfo[playerid][GangID]][CaptureTimeRestriction]) < 1200)
	{
	    new string[569];
	    format(string, sizeof(string), "You can't capture a new territory if your gang was lost in the last capture! Wait 20 mins - Time course: %s mins", TimeConvert((gettime() - GangInfo[PlayerInfo[playerid][GangID]][CaptureTimeRestriction])));
	    return SCM(playerid, RED, string);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(GetConnectedGangMembers(Teritories[gID][owner]) < 1) return SendError(playerid, "This territory must have 1 connected player to start capture!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Teritories[Teritories[gID][owner]][turfingby] >= 1) return SendError(playerid, "This territory now are in capture/attack mode. Try again later!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(Teritories[PlayerInfo[playerid][GangID]][owner] != PlayerInfo[playerid][GangID]) {
	if(gID != PlayerInfo[playerid][GangID]) return SendError(playerid, "You can't capture a territory when your gang territory is not captured by your gang!"); }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	if(Teritories[gID][owner] == PlayerInfo[playerid][GangID]) return SendError(playerid, "This teritory is already captured by your gang!");
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(GangInfo[PlayerInfo[playerid][GangID]][CapturingGang] == 1) return SendError(playerid, "Your gang are already capturing a gang");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(GangInfo[gID][Gate_Status] == 0) {
	if(gID != PlayerInfo[playerid][GangID]) return SendError(playerid, "The gate must be destroyed before start capturing! | Use /blow to destroy!"); }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][Capturing] = 1;
	PlayerInfo[playerid][CaptureStarter] = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GangInfo[PlayerInfo[playerid][GangID]][CapturesJoins]++;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	GangInfo[PlayerInfo[playerid][GangID]][GangTurfe] = Teritories[gID][owner];
 	GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf] = gID;
 	Teritories[gID][turfingby] = PlayerInfo[playerid][GangID];
	GangInfo[Teritories[gID][owner]][AttackBy] = PlayerInfo[playerid][GangID];
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	GangInfo[PlayerInfo[playerid][GangID]][CapturingGang] = 1;
 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    GangZoneFlashForAll(Teritories[gID][ID], GangInfo[PlayerInfo[playerid][GangID]][pGangColor]);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    ProgresTurfing(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID])
	    {
	        new String[128];
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	        format(String, sizeof(String), "~R~~H~Territory was started by~N~~G~~H~%s~N~~Y~/capture info~N~~Y~/capture join", PN(playerid));
	        Announce(i, String, 8000, 3);
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(PlayerInfo[i][GangID] == Teritories[gID][owner])
	    {
	        format(eString, sizeof(eString), "~R~~H~Your territory is~R~~H~ under attack by~N~~W~%s~N~~Y~/capture info", GangInfo[PlayerInfo[playerid][GangID]][GangName]);
            Announce(i, eString, 8000, 3);
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function ProgresTurfing(playerid)
{
    if(GangInfo[PlayerInfo[playerid][GangID]][c_Deaths] == GangInfo[PlayerInfo[playerid][GangID]][CapturesJoins]+1) 
    {
        KillTimer(PlayerInfo[playerid][GangCaptureTimer]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  		foreach(new i: Player)
	    {
		    if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID])
			{
		  		Announce(i, "~R~~H~Capture failed~N~~Y~max deaths have been reached!", 8000, 3);
		  		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				PlayerInfo[i][Capturing] = 0;
				PlayerTextDrawHide(i, PlayerText:CaptureTD[1]);
				PlayerTextDrawHide(i, PlayerText:CaptureTD[3]);
			}
			else if(PlayerInfo[i][GangID] == GangInfo[PlayerInfo[playerid][GangID]][GangTurfe])
			{
			 	Announce(i, "~G~~H~Your gang defense~N~~Y~was successfully!", 8000, 3);
			 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			 	PlayerTextDrawHide(i, PlayerText:CaptureTD[2]);
			 	PlayerTextDrawHide(i, PlayerText:CaptureTD[3]);
			}
		}
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		GangInfo[PlayerInfo[playerid][GangID]][CaptureTimeRestriction] = gettime();
		GangInfo[GangInfo[PlayerInfo[playerid][GangID]][GangTurfe]][AttackBy] = 0;
		Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][owner] = GangInfo[PlayerInfo[playerid][GangID]][GangTurfe];
		GangZoneStopFlashForAll(Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][ID]);
  		GangZoneHideForAll(Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][ID]);
		GangZoneShowForAll(Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][ID], GangInfo[GangInfo[PlayerInfo[playerid][GangID]][GangTurfe]][pGangColor]);
		Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][turfingby] = 0;
		GangInfo[PlayerInfo[playerid][GangID]][CapturesJoins] = 0;
		GangInfo[PlayerInfo[playerid][GangID]][CaptureTimeTurf] = 300;
		GangInfo[PlayerInfo[playerid][GangID]][c_Deaths] = 0;
		Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][turfingby] = 0;
		GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf] = 0;
		GangInfo[PlayerInfo[playerid][GangID]][CapturingGang] = 0;
		GangInfo[PlayerInfo[playerid][GangID]][GangTurfe] = 0;
		PlayerInfo[playerid][CaptureStarter] = 0;
		OnUpdate(2);
    }
    else
    {
		GangInfo[PlayerInfo[playerid][GangID]][CaptureTimeTurf]--;
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		if(GangInfo[PlayerInfo[playerid][GangID]][CaptureTimeTurf] == 0)
		{
		    KillTimer(PlayerInfo[playerid][GangCaptureTimer]);
		    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    	foreach(new i: Player)
	    	{
	      		if(PlayerInfo[i][GangID] == GangInfo[PlayerInfo[playerid][GangID]][GangTurfe])
				{
					Announce(i, "~R~~H~Your territory lost~N~~Y~at defense!", 8000, 3);
					PlayerTextDrawHide(i, PlayerText:CaptureTD[2]);
					PlayerTextDrawHide(i, PlayerText:CaptureTD[3]);
				}
		  		else if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID])
	   			{
		            Announce(i, "~G~~H~Your gang won the territory~N~~Y~+5 GP & 10 Capture points!", 8000, 3);
		            PlayerTextDrawHide(i, PlayerText:CaptureTD[1]);
		            PlayerTextDrawHide(i, PlayerText:CaptureTD[3]);
		            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
           	 		if(PlayerInfo[i][Capturing] == 1)
		            {
             			PlayerInfo[i][g_Captures] += 15, PlayerInfo[i][g_Points] += 15, PlayerInfo[i][Capturing] = 0;
		                //++++++++++++++++++++++++++++++++++++++++++++++++++++++
                		GangInfo[PlayerInfo[playerid][GangID]][Captures]++;
                		//++++++++++++++++++++++++++++++++++++++++++++++++++++++
						GangInfo[PlayerInfo[playerid][GangID]][Points]+=10;
		            }
				}
	    	}
	    	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    	GangInfo[GangInfo[PlayerInfo[playerid][GangID]][GangTurfe]][CaptureTimeRestriction] = gettime();
	    	GangInfo[GangInfo[PlayerInfo[playerid][GangID]][GangTurfe]][AttackBy] = 0;
			Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][owner] = PlayerInfo[playerid][GangID];
	    	GangZoneStopFlashForAll(Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][ID]);
	       	GangZoneHideForAll(Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][ID]);
			GangZoneShowForAll(Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][ID], GangInfo[PlayerInfo[playerid][GangID]][pGangColor]);
			Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][turfingby] = 0;
			GangInfo[PlayerInfo[playerid][GangID]][CapturesJoins] = 0;
			GangInfo[PlayerInfo[playerid][GangID]][CaptureTimeTurf] = 300;
			GangInfo[PlayerInfo[playerid][GangID]][c_Deaths] = 0;
			GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf] = 0;
			GangInfo[PlayerInfo[playerid][GangID]][CapturingGang] = 0;
			GangInfo[PlayerInfo[playerid][GangID]][GangTurfe] = 0;
			PlayerInfo[playerid][CaptureStarter] = 0;
			OnUpdate(2);
		}
		if(PlayerInfo[playerid][Capturing] == 1)
		{
			GangZoneFlashForAll(Teritories[GangInfo[PlayerInfo[playerid][GangID]][AreaidTurf]][ID], GangInfo[PlayerInfo[playerid][GangID]][pGangColor]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			PlayerInfo[playerid][GangCaptureTimer] = SetTimerEx("ProgresTurfing", 999, 0, "i", playerid);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			foreach(new i: Player)
			{
			    if(PlayerInfo[i][GangID] == PlayerInfo[playerid][GangID])
				{
					PlayerTextDrawShow(i, PlayerText:CaptureTD[1]);
					PlayerTextDrawShow(i, PlayerText:CaptureTD[3]);
				}
			    else if(PlayerInfo[i][GangID] == GangInfo[PlayerInfo[playerid][GangID]][GangTurfe])
				{
					PlayerTextDrawShow(i, PlayerText:CaptureTD[2]);
					PlayerTextDrawShow(i, PlayerText:CaptureTD[3]);
				}
			}
		}
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function OnUpdate(type)
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(type == 1)
	{
		for(new gID = 0; gID < TotalGangs; gID++)
		{
			mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Gangs` SET `GangName` = '%s',`GangKills` = '%d',`GangDeaths` = '%d',`pGangColor` = '%d', `GangInterior` = '%d', `GangWorld` = '%d'", GangInfo[gID][GangName], GangInfo[gID][GangKills], GangInfo[gID][GangDeaths], GangInfo[gID][pGangColor], GangInfo[gID][GangWorld], GangInfo[gID][GangInt]);
			mysql_format(SQL, eQuery, sizeof(eQuery), "%s,`GangX` = '%.3f',`GangY` = '%.3f',`GangZ` = '%.3f',`GangA` = '%.3f'", eQuery, GangInfo[gID][GangX], GangInfo[gID][GangY], GangInfo[gID][GangZ], GangInfo[gID][GangA]);
			mysql_format(SQL, eQuery, sizeof(eQuery), "%s,`GangPoints` = '%d',`GangCaptures` = '%d',`GateStatus` = '%d',`GangSkin` = '%d',`Alliance` = '%d'", eQuery, GangInfo[gID][Points], GangInfo[gID][Captures], GangInfo[gID][Gate_Status], GangInfo[gID][pGangSkin], GangInfo[gID][AllianceID]);
			mysql_format(SQL, eQuery, sizeof(eQuery), "%s,`GangWeapon1` = '%d',`GangWeapon2` = '%d',`GangWeapon3` = '%d',`GangWeapon4` = '%d',`GangWeapon5` = '%d',`GangWeapon6` = '%d' WHERE `ID` = '%d'", eQuery, GangInfo[gID][GangWeapon1], GangInfo[gID][GangWeapon2], GangInfo[gID][GangWeapon3], GangInfo[gID][GangWeapon4], GangInfo[gID][GangWeapon5], GangInfo[gID][GangWeapon6], gID);
			mysql_tquery(SQL, eQuery, "", "");
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(type == 2)
	{
		for(new gID = 0; gID < TotalGangs; gID++)
		{
			mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `GangTers` SET `GangTerMinX` = '%f', `GangTerMinY` = '%f', `GangTerMaxX` = '%f', `GangTerMaxY` = '%f', `GangTerOwner` = '%d' WHERE `ID` = '%d'", Teritories[gID][minx], Teritories[gID][miny], Teritories[gID][maxx], Teritories[gID][maxy], Teritories[gID][owner], gID);
			mysql_tquery(SQL, eQuery, "", "");
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(type == 3) SaveClans();
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(type == 4)
	{
	    new y, m, d; getdate(y, m, d);
	    new hour, minute, second; gettime(hour, minute, second);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `ServerCFG` SET `UpdateData` = '%d.%d.%d', `UpdateTime` = '%d:%d', `HostnameChanger` = '%d', `AntiVersionOutData` = '%d'", d, m, y, hour, minute, ServerInfo[ServerHNC], ServerInfo[AntiVersionOutData]);
	    mysql_tquery(SQL, eQuery, "", "");
		foreach(new i: Player) SavePlayer(i);
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(type == 5)
	{
	    for(new gateID = 0; gateID < TotalGangs; gateID++)
		{
			mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `GangGates` SET `GatePosX` = '%f',`GatePosY` = '%f',`GatePosZ` = '%f',`rGatePosX` = '%f', `rGatePosY` = '%f', `rGatePosZ` = '%f' WHERE `ID` = '%d'",
			GateInfo[gateID][GatePos][1], GateInfo[gateID][GatePos][2], GateInfo[gateID][GatePos][3], GateInfo[gateID][rGatePos][1], GateInfo[gateID][rGatePos][2], GateInfo[gateID][rGatePos][3], gateID);
			mysql_tquery(SQL, eQuery, "", "");
		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	else if(type == 6)
	{
	    for(new i = 0; i < TotalGangs; i++)
		{
			mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `GangCameraPos` SET `X` = '%f',`Y` = '%f',`Z` = '%f',`XTo` = '%f', `YTo` = '%f', `ZTo` = '%f' WHERE `ID` = '%d'",
			gCameraPos[i][gCamPos][1], gCameraPos[i][gCamPos][2], gCameraPos[i][gCamPos][3], gCameraPos[i][gCamPosTo][1], gCameraPos[i][gCamPosTo][2], gCameraPos[i][gCamPosTo][3], i);
			mysql_tquery(SQL, eQuery, "", "");
		}
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Santaland Edition
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:santaland(ESS)
{
    if(GetChristmasFuncAvailable() == 0) return false;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    TPlayer(playerid, "Santaland", "santaland", -497.4211,3561.1484,5.7700,90.0000, true);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerVirtualWorld(playerid, 2019), ResetPlayerWeapons(playerid);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][God] = 0, PlayerInfo[playerid][InSantaLand] = 1;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerAttachedObject(playerid, 0, 19065, 2, 0.121128, 0.023578, 0.001139, 222.540847, 90.773872, 211.130859, 1.098305, 1.122310, 1.106640); // SantaHat
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~W~~H~HoHoHo~N~~Y~Merry~R~~H~ Christmas~Y~!", 6000, 4);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	strcat(eString, "{FFFFFF}Bun venit pe{FF0000} Taramul lui Mos Craciun{FFFFFF}!\n");
	strcat(eString, "{FFFFFF}Viziteaza tot tinutul pentru a descoperii multe jocuri interesante pe care Mos Craciun le-a pregatit pentru tine!\n");
	strcat(eString, "\n");
	strcat(eString, "{FFEE00}Vrei sa asculti colinde de craciuni ?\n");
	strcat(eString, "{FFFFFF}Daca ai o conexiune slaba la internet, alege sa nu asculti!\n");
	strcat(eString, "{FFFFFF}Aceste melodii iti pot creea lag daca ai o conexiune slaba.\n");
	strcat(eString, "{FFFFFF}Apasa 'Asculta' pentru a asculta, sau 'Inchide' pentru a continua fara colinde.\n");
	strcat(eString, "\n");
	strcat(eString, ""SERVER_NAME"{FFFFFF} iti ureaza sarbatori fericite!");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, DIALOG_SANTALAND, MSGBOX, "{FFFFFF}Ho Ho Ho...{FFEE00} Sarbatori fericite{FFFFFF}!", eString, "Inchide", "Asculta");
 	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:snow(ESS)
{
    if(GetChristmasFuncAvailable() == 0) return false;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(PlayerInfo[playerid][InSantaLand] == 1)
    {
    	if(!snowOn{playerid})
      	{
        	CreateSnow(playerid);
        	Announce(playerid, "~y~Snow~w~~H~ Enabled~y~!", 6000, 4);
      	}
      	else
      	{
        	DeleteSnow(playerid);
        	Announce(playerid, "~y~Snow~r~~H~ Disabled~y~!", 6000, 4);
      	}
    }
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CMD:carol(ESS)
{
    if(GetChristmasFuncAvailable() == 0) return false;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(IsPlayerInRangeOfPoint(playerid, 1, SANTA_HOUSE1)) RandomPrizeCarol(playerid, 0);
    else if(IsPlayerInRangeOfPoint(playerid, 1, SANTA_HOUSE2)) RandomPrizeCarol(playerid, 1);
    else if(IsPlayerInRangeOfPoint(playerid, 1, SANTA_HOUSE3)) RandomPrizeCarol(playerid, 2);
    else if(IsPlayerInRangeOfPoint(playerid, 1, SANTA_HOUSE4)) RandomPrizeCarol(playerid, 3);
    else if(IsPlayerInRangeOfPoint(playerid, 1, SANTA_HOUSE5)) RandomPrizeCarol(playerid, 4);
    else if(IsPlayerInRangeOfPoint(playerid, 1, SANTA_HOUSE6)) RandomPrizeCarol(playerid, 5);
    else if(IsPlayerInRangeOfPoint(playerid, 1, SANTA_HOUSE7)) RandomPrizeCarol(playerid, 6);
    else if(IsPlayerInRangeOfPoint(playerid, 1, SANTA_HOUSE8)) RandomPrizeCarol(playerid, 7);
    else if(IsPlayerInRangeOfPoint(playerid, 1, SANTA_HOUSE9)) RandomPrizeCarol(playerid, 8);
    else if(IsPlayerInRangeOfPoint(playerid, 1, SANTA_HOUSE10)) RandomPrizeCarol(playerid, 9);
    else if(IsPlayerInRangeOfPoint(playerid, 1, SANTA_HOUSE11)) RandomPrizeCarol(playerid, 10);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Race System
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public LoadRaceDetails()
{
	new edStr[1024], rName[30];
	for(new rID = 0; rID < 21; rID++)
	{
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CACHE(rID, "ID", Races[rID][ID]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CONTENT(rID, "Name", rName);
		format(Races[Races[rID][ID]][Name], 30, "%s", rName);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		CACHE(rID, "Vehicle", Races[Races[rID][ID]][Vehicle]);
		CACHE(rID, "TotalCP", Races[Races[rID][ID]][TotalCP]);
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 	FLOAT(rID, "PosX_0", RaceVehCoords[Races[rID][ID]][0][0]);
	  	FLOAT(rID, "PosY_0", RaceVehCoords[Races[rID][ID]][0][1]);
	   	FLOAT(rID, "PosZ_0", RaceVehCoords[Races[rID][ID]][0][2]);
	    FLOAT(rID, "Angle_0",RaceVehCoords[Races[rID][ID]][0][3]);
	    FLOAT(rID, "PosX_1", RaceVehCoords[Races[rID][ID]][1][0]);
	    FLOAT(rID, "PosY_1", RaceVehCoords[Races[rID][ID]][1][1]);
	    FLOAT(rID, "PosZ_1", RaceVehCoords[Races[rID][ID]][1][2]);
	    FLOAT(rID, "Angle_1",RaceVehCoords[Races[rID][ID]][1][3]);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    format(edStr, 512, "{FF0000}Race %s\n{FFFFFF}Type {FF0000}/race %d {FFFFFF}to try this race!", Races[Races[rID][ID]][Name], Races[rID][ID]);
	    Create3DTextLabel(edStr, LIME, RaceVehCoords[Races[rID][ID]][0][0], RaceVehCoords[Races[rID][ID]][0][1], RaceVehCoords[Races[rID][ID]][0][2], 100, 0, 0);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    CreateDynamicMapIcon(RaceVehCoords[Races[rID][ID]][0][0], RaceVehCoords[Races[rID][ID]][0][1], RaceVehCoords[Races[rID][ID]][0][2], 53, 0, 0, 0, -1, 150.0);
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public SetupRace(playerid, rID)
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Races[rID][Position] = 0, Races[rID][FinishCount] = 0, Races[rID][JoinCount] = 0;
	Races[rID][CountAmount] = COUNT_RACE, Races[rID][RaceTime] = MAX_RACE_TIME;
	Races[rID][RaceBusy] = 1, Races[rID][CountTimer] = SetTimerEx("CountTillRace", 999, true, "i", rID);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for (new x2 = 0; x2 < 2; x2++) PlayersCount[rID-1][x2] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "SELECT `CPX`,`CPY`,`CPZ` FROM `RacesCP` WHERE `Race` = %d", rID);
	mysql_tquery(SQL, eQuery, "LoadRaceCheckpoints", "i", rID);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetupRaceForPlayer(playerid, rID);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	CheckRacesOnlinePTimer = SetTimerEx("CheckRacesOnlineP", 1000, true, "i", rID);
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public LoadRaceCheckpoints(rID)
{
	new loop_x;
	for(loop_x = 0; loop_x < Races[rID][TotalCP]; loop_x++)
	{
	    FLOAT(loop_x, "CPX", CPCoords[rID][loop_x][0]);
	    FLOAT(loop_x, "CPY", CPCoords[rID][loop_x][1]);
	    FLOAT(loop_x, "CPZ", CPCoords[rID][loop_x][2]);
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function OnRaceTDUpdate(playerid, rID)
{
    new string1[100], string2[100], string3[100], string4[100], string5[100];
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(string1, sizeof string1, "Race players: ~R~~H~%d", Races[rID][JoinCount]);
    PlayerTextDrawSetString(playerid, RaceTD[2], string1);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(string2, sizeof string2, "Checkpoint: ~R~~H~%d~W~~H~/~Y~~H~%d", CPProgress[rID][playerid], Races[rID][TotalCP]);
    PlayerTextDrawSetString(playerid, RaceTD[3], string2);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(string3, sizeof string3, "Record: ~R~~H~%s~W~~H~ minutes", Races[rID][Record]);
    PlayerTextDrawSetString(playerid, RaceTD[4], string3);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(string4, sizeof string4, "~Y~~H~%s (/race %d)", Races[rID][Name], rID);
    PlayerTextDrawSetString(playerid, RaceTD[5], string4);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    format(string5, sizeof string5, "Race time: ~R~~H~%s", TimeConvert(Races[rID][RaceTime]));
    PlayerTextDrawSetString(playerid, RaceTD[6], string5);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(!IsPlayerInAnyVehicle(playerid)) PutPlayerInVehicle(playerid, CreatedRaceVeh[rID][playerid], 0);
}
function CheckRacesOnlineP(rID) if(Races[rID][JoinCount] == 0) StopRace(rID), KillTimer(CheckRacesOnlinePTimer);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
SetupRaceForPlayer(playerid, rID)
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 	PlayerInfo[playerid][InRace] = rID;
	Joined[rID][playerid] = 1;
	CPProgress[rID][playerid] = 0;
	CPCoords[rID][playerid][3] = 0;
	TogglePlayerControllable(playerid, false);
	SetPlayerArmedWeapon(playerid, 0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(IsOdd(playerid)) Races[rID][Index] = 1;
	else Races[rID][Index] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Announce(playerid, "~w~~h~Race~R~~H~ starting~W~~H~ soon~n~~Y~~H~Please wait a few seconds!", 5000, 3);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	PlayerInfo[playerid][SpeedB] = 0, PlayerInfo[playerid][VUP] = 0, PlayerInfo[playerid][SpeedSize] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Races` SET `Status` = '1' WHERE `ID` = '%d'", rID);
    mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Races[rID][JoinCount]++;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    RaceTDShow(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    PlayerInfo[playerid][RaceTextdraw] = SetTimerEx("OnRaceTDUpdate", 300, true, "ii", playerid, rID);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(Races[rID][Index])
	{
		case 0:
		{
		    if(PlayersCount[rID][0] != 1)
			{
		   		CreatedRaceVeh[rID][playerid] = CreateVehicle(Races[rID][Vehicle], RaceVehCoords[rID][0][0], RaceVehCoords[rID][0][1], RaceVehCoords[rID][0][2]+2, RaceVehCoords[rID][0][3], random(126), random(126), (60 * 60));
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SetPlayerPos(playerid, RaceVehCoords[rID][0][0], RaceVehCoords[rID][0][1], RaceVehCoords[rID][0][2]+2), SetPlayerFacingAngle(playerid, RaceVehCoords[rID][0][3]), PutPlayerInVehicle(playerid, CreatedRaceVeh[rID][playerid], 0), PlayersCount[rID][0] = 1;
		    }
		    else if(PlayersCount[rID][0] == 1)
		    {
		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				RaceVehCoords[rID][0][0] -= (6 * floatsin(-RaceVehCoords[rID][0][3], degrees)), RaceVehCoords[rID][0][1] -= (6 * floatcos(-RaceVehCoords[rID][0][3], degrees));
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				CreatedRaceVeh[rID][playerid] = CreateVehicle(Races[rID][Vehicle], RaceVehCoords[rID][0][0], RaceVehCoords[rID][0][1], RaceVehCoords[rID][0][2]+2, RaceVehCoords[rID][0][3], random(126), random(126), (60 * 60));
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SetPlayerPos(playerid, RaceVehCoords[rID][0][0], RaceVehCoords[rID][0][1], RaceVehCoords[rID][0][2]+2), SetPlayerFacingAngle(playerid, RaceVehCoords[rID][0][3]), PutPlayerInVehicle(playerid, CreatedRaceVeh[rID][playerid], 0);
			}
		}
		case 1:
 		{
 		    if(PlayersCount[rID][1] != 1)
			{
		   		CreatedRaceVeh[rID][playerid] = CreateVehicle(Races[rID][Vehicle], RaceVehCoords[rID][1][0], RaceVehCoords[rID][1][1], RaceVehCoords[rID][1][2]+2, RaceVehCoords[rID][1][3], random(126), random(126), (60 * 60));
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SetPlayerPos(playerid, RaceVehCoords[rID][1][0], RaceVehCoords[rID][1][1], RaceVehCoords[rID][1][2]+2), SetPlayerFacingAngle(playerid, RaceVehCoords[rID][1][3]), PutPlayerInVehicle(playerid, CreatedRaceVeh[rID][playerid], 0), PlayersCount[rID][1] = 1;
		    }
 		    else if(PlayersCount[rID][1] == 1)
 		    {
 		        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				RaceVehCoords[rID][1][0] -= (6 * floatsin(-RaceVehCoords[rID][1][3], degrees)), RaceVehCoords[rID][1][1] -= (6 * floatcos(-RaceVehCoords[rID][1][3], degrees));
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				CreatedRaceVeh[rID][playerid] = CreateVehicle(Races[rID][Vehicle], RaceVehCoords[rID][1][0], RaceVehCoords[rID][1][1], RaceVehCoords[rID][1][2]+2, RaceVehCoords[rID][1][3], random(126), random(126), (60 * 60));
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				SetPlayerPos(playerid, RaceVehCoords[rID][1][0], RaceVehCoords[rID][1][1], RaceVehCoords[rID][1][2]+2), SetPlayerFacingAngle(playerid, RaceVehCoords[rID][1][3]), PutPlayerInVehicle(playerid, CreatedRaceVeh[rID][playerid], 0);
				//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    		}
 		}
	}
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SetPlayerVirtualWorld(playerid, rID+6969), SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerVirtualWorld(playerid));
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
SetCP(playerid, rID, PrevCP, NextCP, MaxCP)
{
	rID = PlayerInfo[playerid][InRace];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(NextCP == MaxCP) SetPlayerRaceCheckpoint(playerid, 1, CPCoords[rID][PrevCP][0], CPCoords[rID][PrevCP][1], CPCoords[rID][PrevCP][2], CPCoords[rID][NextCP][0], CPCoords[rID][NextCP][1], CPCoords[rID][NextCP][2], 12.0);
	else     			SetPlayerRaceCheckpoint(playerid, 0, CPCoords[rID][PrevCP][0], CPCoords[rID][PrevCP][1], CPCoords[rID][PrevCP][2], CPCoords[rID][NextCP][0], CPCoords[rID][NextCP][1], CPCoords[rID][NextCP][2], 12.0);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public CountTillRace(rID)
{
	new Str50[500];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	switch(Races[rID][CountAmount])
	{
 		case 0: StartRace(rID);
	    case 1..5:
	    {
	        new edStr[512];
	        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			format(edStr, 369, "~r~~h~%d", Races[rID][CountAmount]);
			//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			foreach(new i: Player) { if(Joined[rID][i] != 0) Announce(i, edStr, 999, 5), PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); }
	    }
	    case 30: format(Str50, 369, "RACE: {FF0000}%s{0095FF} has started! Type {FF0000}/race %d{0095FF} to join!", Races[rID][Name], rID), SCMALL(ORANGE, Str50);
	}
	return Races[rID][CountAmount]--;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public StartRace(rID)
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) { if (PlayerInfo[i][InRace] == rID) SetCP(i, rID, CPProgress[rID][i], CPProgress[rID][i]+1, Races[rID][TotalCP]), TogglePlayerControllable(i, true), PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0), Announce(i, "~r~~h~GO! ~y~~h~GO! ~b~~h~GO!", 2000, 5), SetCameraBehindPlayer(i); }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Races` SET `Status` = '2' WHERE `ID` = '%d'", rID);
    mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Races[rID][rCounter] = SetTimerEx("RaceCounter", 1000, 1, "i", rID);
	Races[rID][RaceTick] = GetTickCount(), Races[rID][RaceStarted] = rID;
	KillTimer(Races[rID][CountTimer]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public StopRace(rID)
{
	eQuery[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) { if(Joined[rID][i] != 0) RaceTDHide(i); }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	KillTimer(Races[rID][rCounter]), Races[rID][RaceStarted] = 0, Races[rID][RaceStarted2] = 0, Races[rID][RaceTick] = 0, Races[rID][RaceBusy] = 0, Races[rID][JoinCount] = 0, Races[rID][FinishCount] = 0;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	mysql_format(SQL, eQuery, sizeof(eQuery), "UPDATE `Races` SET `Status` = '0' WHERE `ID` = '%d'", rID);
    mysql_tquery(SQL, eQuery, "", "");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	foreach(new i: Player) { if ( PlayerInfo[i][InRace] == rID) DisablePlayerRaceCheckpoint(i),DestroyVehicle(CreatedRaceVeh[rID][i]), Joined[rID][i] = 0, CPProgress[rID][i] = 0, PlayerInfo[i][InRace] = 0, SetPlayerVirtualWorld(i, 0); }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public RaceCounter(rID)
{
	if(Races[rID][RaceStarted] != 0) Races[rID][RaceTime]--;
	else if(Races[rID][RaceTime] <= 0) StopRace(rID);
	return true;
}
public ShowRaceList(playerid)
{
	new RaceName[56], RaceRecord[10], RaceStatusID, RaceID, RaceStatusRank[70], Rows, Fields;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    new RaceDialog[3000] = "Command \tDescription \tStatus\n";
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    cache_get_row_count(Rows);
	cache_get_field_count(Fields);
    for(new i = 0; i < Rows; i++)
    {
          CONTENT(i, "Name", RaceName);
          CACHE(i, "Status", RaceStatusID);
          CACHE(i, "ID", RaceID);
          //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		  if(RaceStatusID == 0) RaceStatusRank = "{0099FF}Not started";
		  else if(RaceStatusID == 1) RaceStatusRank = "{FFA600}Waiting players";
		  else if(RaceStatusID == 2) RaceStatusRank = "{FF0000}Started";
          //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
          format(RaceDialog, sizeof(RaceDialog), "%s{FFFF00}/race %d \t{00CC00}%s \t{FFFFFF}%s\n", RaceDialog, RaceID, RaceName, RaceStatusRank, RaceRecord);
    }
    SPD(playerid, Race_D, HEADERS, "Races", RaceDialog, "Teleport", "Close");
    return true;
}
CMD:race(ESS)
{
	new rID;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!sscanf(params, "i", rID))
	{
        if(Races[rID][RaceStarted] != 0) return SCM(playerid, RED, "ERROR: There's a race currently!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(rID < 1 || rID > 21) return SCM( playerid, RED, "ERROR: Invalid ID!");
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    if(Races[rID][RaceBusy] == 0)
	    {
			if(IsPlayerInAnyVehicle(playerid)) return RemovePlayerFromVehicle(playerid), SetTimerEx("SetupRace", 500, 0, "ei", playerid, rID);
	   		else SetupRace(playerid, rID);
	    }
	    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	    else if(Races[rID][RaceBusy] == 1)
	    {
	   		if(IsPlayerInAnyVehicle(playerid)) return RemovePlayerFromVehicle(playerid), SetTimerEx("SetupRaceForPlayer", 500, 0, "ei", playerid, rID);
	   		else SetupRaceForPlayer(playerid, rID);
	    }
	}
	else mysql_tquery(SQL, "SELECT * FROM `Races`", "ShowRaceList", "i", playerid);
    return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Taxi Job
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CheckUndeTaxi(playerid)
{
	new Float:p[3]; GetPlayerPos(PlayerInfo[playerid][TaxiAcceptedFor], p[0], p[1], p[2]);
	SetPlayerCheckpoint(playerid, p[0], p[1], p[2], 3);
}
CMD:taxi(ESS)
{
	new rParam[10], rParam2[10];
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(sscanf(params, "s[10]S()[20]", rParam, rParam2)) return SendUsage(playerid, "/taxi [Call/Accept/Leave]");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(strcmp(rParam, "call", true) == 0)
	{
	    if(PlayerInfo[playerid][TaxiReuquested] == 1) return SendError2(playerid, "Ai chemat deja un TAXI! Te rugam sa astepti pana cand va venii sa te ia!", "You was invited a TAXI! Please wait here!");
		for(new i; i < MAX_PLAYERS; i++) FormatMSG(i, RED, "%s{FFFFFF} a chemat un {FFFF00}TAXI.{FFFFFF} Foloseste {FF0000}/taxi accept %d{FFFFFF} pentru ai raspunde!", PN(playerid), playerid);
		PlayerInfo[playerid][TaxiReuquested] = 1;
	}
	if(strcmp(rParam, "accept", true) == 0)
	{
	    if(sscanf(rParam2, "u", params[0])) return SendUsage(playerid, "/taxi accept [ID/Name]");
	    if(!IsPlayerConnected(params[0])) return Error(playerid, 3);
	    if(PlayerInfo[playerid][TaxiAcceptedFor] != -1) return SendError2(playerid, "Deja ai acceptat cererea de taxi! Daca vrei sa parasesti foloseste /taxi leave", "You already accepted the taxi request! Use /taxi leave if you want to leave!");
	    if(PlayerInfo[params[0]][TaxiLiber] == 1) return SendError2(playerid, "Acest taxi request a fost acceptat de cineva!", "This taxi request are already have been accepted by anyone!");
	    if(PlayerInfo[params[0]][TaxiReuquested] == 0) return SendError2(playerid, "Acest player nu a chemat recent nici un TAXI!", "This player doesn't invited any taxi's recently!");
	    else
	    {
	        SpawnVehicle(playerid, 420);
	        FormatMSG(params[0], RED, "%s{FFFFFF} a acceptat carerea ta de {FFFF00}TAXI.{FFFFFF} Te rugam sa astepti aici!", PN(playerid));
	        PlayerInfo[params[0]][TaxiLiber] = 1;
	        PlayerInfo[playerid][TaxiAcceptedFor] = params[0];
	        PlayerInfo[playerid][TaxiUnderTimer] = SetTimerEx("CheckUndeTaxi", 1000, true, "i", playerid);
	    }
	}
	if(strcmp(rParam, "leave", true) == 0)
	{
	    if(PlayerInfo[playerid][TaxiReuquested] == 1)
	    {
	        for(new i; i < MAX_PLAYERS; i++) if(PlayerInfo[i][TaxiAcceptedFor] == playerid)
	        {
	            SCM(playerid, RED, "SUCCES:{FFFFFF} ai iesit din job-ul {FFFF00}taxi{FFFFFF}.");
	            FormatMSG(i, RED, "%s{FFFFFF} a iesit de la taxi, asadar nu mai esti in taxi request!", PN(playerid));
	            PlayerInfo[i][TaxiAcceptedFor] = -1;
				PlayerInfo[i][TaxiLiber] = 0;
	            DeleteVehicle(i);
	        }
	        PlayerInfo[playerid][TaxiReuquested] = 0;
	    }
	    else if(PlayerInfo[playerid][TaxiAcceptedFor] != -1)
	    {
	        SCM(playerid, RED, "SUCCES:{FFFFFF} ai iesit din job-ul {FFFF00}taxi{FFFFFF}.");
			PlayerInfo[PlayerInfo[playerid][TaxiAcceptedFor]][TaxiLiber] = 0;
	        DeleteVehicle(playerid);
	        PlayerInfo[PlayerInfo[playerid][TaxiAcceptedFor]][TaxiReuquested] = 0;
	        FormatMSG(PlayerInfo[playerid][TaxiAcceptedFor], RED, "%s{FFFFFF} a anulat cererea ta de {FFFF00}TAXI.{FFFFFF} Foloseste{FF0000} /taxi call{FFFFFF} pentru a chema un nou taxi!", PN(playerid));
	        PlayerInfo[playerid][TaxiAcceptedFor] = -1;
			KillTimer(PlayerInfo[playerid][TaxiUnderTimer]);
   			DisablePlayerCheckpoint(playerid);
	    }
	    else return SendError2(playerid, "Nu ai chemat/acceptat nimanui un request de taxi! Pentru mai multe, foloseste /taxi!", "You doesn't invited/accepted any taxi request! For more details, use /taxi!");
	}
	return true;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// -> Create Teleport System
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
function CheckTeleportCMDInfo(playerid)
{
	new itemString1[28], itemString2[28]; eString[0] = EOS;
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(!TeleportCmd[playerid][0]) { itemString1 = "{FF0000}None"; }
	else { format(itemString1, sizeof(itemString1), "{00CC00}%s", TeleportCmd[playerid][0]); }
	if(!TeleportName[playerid][0]) { itemString2 = "{FF0000}None"; }
	else { format(itemString2, sizeof(itemString2), "{00CC00}%s", TeleportName[playerid][0]); }
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	format(eString, sizeof(eString), "\
	Name\tValue\n\
	{FFFFFF}Command\t{FF0000}%s\n\
	{FFFFFF}Name\t{FF0000}%s\n\
	{FFFFFF}Set\t{00CC00}Current Location",
	itemString1[0], itemString2[0]);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	SPD(playerid, TELEPORT_CREATE_D, HEADERS, "{FFFFFF}Create - {FF0000}Teleport{FFFFFF}!", eString, "Select", "Close");
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
CMD:createteleport(ESS)
{
	if(PlayerInfo[playerid][RconType] < 1) return Error(playerid, 8);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    CheckTeleportCMDInfo(playerid);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	return true;
}
CMD:deleteteleport(ESS)
{
	if(PlayerInfo[playerid][RconType] < 2) return Error(playerid, 8);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if(sscanf(params, "s[20]", params[0])) return SendUsage(playerid, "/deleteteleport [Teleport CMD]");
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    eString[0] = EOS;
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    mysql_format(SQL, eString, sizeof(eString), "SELECT * FROM `ServerTeleports` WHERE `TeleportCMD` = '%s'", params[0]);
    mysql_query(SQL, eString);
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	new total; cache_get_row_count(total);
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if(total != 0)
	{
	    mysql_format(SQL, eString, sizeof(eString), "DELETE FROM `ServerTeleports` WHERE `TeleportCMD` = '%s'", params[0]);
	    mysql_tquery(SQL, eString, "", "");
	    format(eString, sizeof(eString), "Teleport {FF0000}%s{FFFFFF} has been removed!", params[0]);
	    SCM(playerid, WHITE, eString);
	}
	else return SendError(playerid, "This teleport CMD don't exist!");
	return true;
}
#if defined Footer
|______________________________________________________________________________|
|																			   |
|   Empire Super Stunt - All rights reserved. (c)2017 - 2020. End Of Script.   |
|______________________________________________________________________________|
#endif
